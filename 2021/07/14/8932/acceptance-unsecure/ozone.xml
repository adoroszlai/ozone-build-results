<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210714 23:16:47.116" rpa="false" schemaversion="2">
<suite id="s1" name="ozone">
<suite id="s1-s1" name="Ozone-Lib" source="/opt/hadoop/smoketest/ozone-lib">
<suite id="s1-s1-s1" name="Shell Tests" source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot">
<test id="s1-s1-s1-t1" name="Bucket Exists should not if No Such Volume">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:42.235" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:45.548" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:38:45.548" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210714 22:38:42.231" endtime="20210714 22:38:45.548"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:38:45.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:38:45.548" endtime="20210714 22:38:45.549"/>
</kw>
<msg timestamp="20210714 22:38:45.550" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20210714 22:38:42.231" endtime="20210714 22:38:45.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:45.550" endtime="20210714 22:38:45.550"/>
</kw>
<status status="PASS" starttime="20210714 22:38:42.230" endtime="20210714 22:38:45.550"/>
</test>
<test id="s1-s1-s1-t2" name="Bucket Exists should not if No Such Bucket">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:45.554" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:48.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:38:48.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:38:45.552" endtime="20210714 22:38:48.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:48.325" level="INFO"/>
<status status="PASS" starttime="20210714 22:38:48.324" endtime="20210714 22:38:48.325"/>
</kw>
<status status="PASS" starttime="20210714 22:38:45.552" endtime="20210714 22:38:48.325"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:48.328" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:51.106" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:38:51.107" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210714 22:38:48.326" endtime="20210714 22:38:51.107"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:38:51.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:38:51.107" endtime="20210714 22:38:51.108"/>
</kw>
<msg timestamp="20210714 22:38:51.108" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20210714 22:38:48.325" endtime="20210714 22:38:51.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:51.108" endtime="20210714 22:38:51.109"/>
</kw>
<status status="PASS" starttime="20210714 22:38:45.551" endtime="20210714 22:38:51.109"/>
</test>
<test id="s1-s1-s1-t3" name="Bucket Exists">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:51.113" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:53.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:38:53.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:38:51.111" endtime="20210714 22:38:53.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:53.956" level="INFO"/>
<status status="PASS" starttime="20210714 22:38:53.956" endtime="20210714 22:38:53.956"/>
</kw>
<status status="PASS" starttime="20210714 22:38:51.110" endtime="20210714 22:38:53.956"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:53.959" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:56.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:38:56.906" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versionin...</msg>
<status status="PASS" starttime="20210714 22:38:53.957" endtime="20210714 22:38:56.906"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:38:56.907" endtime="20210714 22:38:56.907"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:38:56.908" endtime="20210714 22:38:56.908"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:38:56.908" endtime="20210714 22:38:56.908"/>
</kw>
<msg timestamp="20210714 22:38:56.908" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:38:53.957" endtime="20210714 22:38:56.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${TRUE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:56.909" endtime="20210714 22:38:56.909"/>
</kw>
<status status="PASS" starttime="20210714 22:38:51.109" endtime="20210714 22:38:56.909"/>
</test>
<test id="s1-s1-s1-t4" name="Bucket Exists should not if No Such OM service">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:56.924" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:11.966" level="INFO">${rc} = 124</msg>
<msg timestamp="20210714 22:39:11.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:38:56.918" endtime="20210714 22:39:11.967"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:39:11.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:11.967" endtime="20210714 22:39:11.968"/>
</kw>
<msg timestamp="20210714 22:39:11.968" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20210714 22:38:56.918" endtime="20210714 22:39:11.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:39:11.968" endtime="20210714 22:39:11.969"/>
</kw>
<status status="PASS" starttime="20210714 22:38:56.911" endtime="20210714 22:39:11.969"/>
</test>
<test id="s1-s1-s1-t5" name="Key Should Match Local File">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:11.974" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:18.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:18.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:11.972" endtime="20210714 22:39:18.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:18.845" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:18.844" endtime="20210714 22:39:18.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:18.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:18.845" endtime="20210714 22:39:18.845"/>
</kw>
<status status="PASS" starttime="20210714 22:39:11.972" endtime="20210714 22:39:18.846"/>
</kw>
<msg timestamp="20210714 22:39:18.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:11.971" endtime="20210714 22:39:18.846"/>
</kw>
<status status="PASS" starttime="20210714 22:39:11.971" endtime="20210714 22:39:18.846"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:39:18.848" level="INFO">${postfix} = 90602</msg>
<status status="PASS" starttime="20210714 22:39:18.847" endtime="20210714 22:39:18.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:39:18.848" level="INFO">${tmpfile} = /tmp/tempkey-90602</msg>
<status status="PASS" starttime="20210714 22:39:18.848" endtime="20210714 22:39:18.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:18.851" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-90602 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:24.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:24.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:18.850" endtime="20210714 22:39:24.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:24.940" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:24.939" endtime="20210714 22:39:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:24.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:24.940" endtime="20210714 22:39:24.940"/>
</kw>
<status status="PASS" starttime="20210714 22:39:18.849" endtime="20210714 22:39:24.941"/>
</kw>
<msg timestamp="20210714 22:39:24.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:18.849" endtime="20210714 22:39:24.941"/>
</kw>
<status status="PASS" starttime="20210714 22:39:18.848" endtime="20210714 22:39:24.941"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210714 22:39:24.943" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-90602 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:24.945" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210714 22:39:24.941" endtime="20210714 22:39:24.945"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:24.948" level="INFO">Running command 'rm -f /tmp/tempkey-90602 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:24.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:24.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:24.947" endtime="20210714 22:39:24.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:24.951" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:24.951" endtime="20210714 22:39:24.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:24.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:24.951" endtime="20210714 22:39:24.952"/>
</kw>
<status status="PASS" starttime="20210714 22:39:24.946" endtime="20210714 22:39:24.952"/>
</kw>
<msg timestamp="20210714 22:39:24.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:24.946" endtime="20210714 22:39:24.952"/>
</kw>
<status status="PASS" starttime="20210714 22:39:24.945" endtime="20210714 22:39:24.952"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:39:24.953" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210714 22:39:24.952" endtime="20210714 22:39:24.953"/>
</kw>
<msg timestamp="20210714 22:39:24.953" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210714 22:39:18.847" endtime="20210714 22:39:24.953"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210714 22:39:24.953" endtime="20210714 22:39:24.954"/>
</kw>
<status status="PASS" starttime="20210714 22:39:18.846" endtime="20210714 22:39:24.954"/>
</kw>
<status status="PASS" starttime="20210714 22:39:11.970" endtime="20210714 22:39:24.954"/>
</test>
<test id="s1-s1-s1-t6" name="Compare Key With Local File with Different File">
<kw name="Create Random File" library="os">
<var>${random_file}</var>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:39:24.956" level="INFO">${postfix} = 09060</msg>
<status status="PASS" starttime="20210714 22:39:24.955" endtime="20210714 22:39:24.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:39:24.956" level="INFO">${tmpfile} = /tmp/tempfile-09060</msg>
<status status="PASS" starttime="20210714 22:39:24.956" endtime="20210714 22:39:24.956"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20210714 22:39:24.957" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-09060"&gt;/tmp/tempfile-09060&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20210714 22:39:24.956" endtime="20210714 22:39:24.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>"Random string"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:39:24.957" level="INFO">${content} = "Random string"</msg>
<status status="PASS" starttime="20210714 22:39:24.957" endtime="20210714 22:39:24.957"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>${tmpfile}</arg>
<arg>${content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20210714 22:39:24.958" level="INFO" html="true">Created file '&lt;a href="file:///tmp/tempfile-09060"&gt;/tmp/tempfile-09060&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 22:39:24.957" endtime="20210714 22:39:24.958"/>
</kw>
<msg timestamp="20210714 22:39:24.958" level="INFO">${random_file} = /tmp/tempfile-09060</msg>
<status status="PASS" starttime="20210714 22:39:24.955" endtime="20210714 22:39:24.958"/>
</kw>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:39:24.959" level="INFO">${postfix} = 50844</msg>
<status status="PASS" starttime="20210714 22:39:24.959" endtime="20210714 22:39:24.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:39:24.959" level="INFO">${tmpfile} = /tmp/tempkey-50844</msg>
<status status="PASS" starttime="20210714 22:39:24.959" endtime="20210714 22:39:24.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:24.964" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-50844 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:29.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:29.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:24.961" endtime="20210714 22:39:29.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:29.559" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:29.558" endtime="20210714 22:39:29.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:29.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:29.559" endtime="20210714 22:39:29.559"/>
</kw>
<status status="PASS" starttime="20210714 22:39:24.960" endtime="20210714 22:39:29.560"/>
</kw>
<msg timestamp="20210714 22:39:29.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:24.960" endtime="20210714 22:39:29.560"/>
</kw>
<status status="PASS" starttime="20210714 22:39:24.959" endtime="20210714 22:39:29.560"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210714 22:39:29.562" level="INFO">Running command 'diff -q /tmp/tempfile-09060 /tmp/tempkey-50844 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:29.564" level="INFO">${rc} = 1</msg>
<status status="PASS" starttime="20210714 22:39:29.560" endtime="20210714 22:39:29.564"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:29.568" level="INFO">Running command 'rm -f /tmp/tempkey-50844 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:29.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:29.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:29.566" endtime="20210714 22:39:29.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:29.571" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:29.570" endtime="20210714 22:39:29.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:29.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:29.571" endtime="20210714 22:39:29.571"/>
</kw>
<status status="PASS" starttime="20210714 22:39:29.566" endtime="20210714 22:39:29.571"/>
</kw>
<msg timestamp="20210714 22:39:29.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:29.565" endtime="20210714 22:39:29.572"/>
</kw>
<status status="PASS" starttime="20210714 22:39:29.564" endtime="20210714 22:39:29.572"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:39:29.572" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20210714 22:39:29.572" endtime="20210714 22:39:29.572"/>
</kw>
<msg timestamp="20210714 22:39:29.573" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20210714 22:39:24.958" endtime="20210714 22:39:29.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:39:29.573" endtime="20210714 22:39:29.573"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${random_file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20210714 22:39:29.574" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-09060"&gt;/tmp/tempfile-09060&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 22:39:29.573" endtime="20210714 22:39:29.574"/>
</kw>
<status status="PASS" starttime="20210714 22:39:24.954" endtime="20210714 22:39:29.574"/>
</test>
<test id="s1-s1-s1-t7" name="Compare Key With Local File if File Does Not Exist">
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:39:29.576" level="INFO">${postfix} = 27583</msg>
<status status="PASS" starttime="20210714 22:39:29.575" endtime="20210714 22:39:29.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:39:29.576" level="INFO">${tmpfile} = /tmp/tempkey-27583</msg>
<status status="PASS" starttime="20210714 22:39:29.576" endtime="20210714 22:39:29.576"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:29.579" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-27583 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:34.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:34.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:29.578" endtime="20210714 22:39:34.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:34.234" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:34.233" endtime="20210714 22:39:34.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:34.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:34.234" endtime="20210714 22:39:34.235"/>
</kw>
<status status="PASS" starttime="20210714 22:39:29.577" endtime="20210714 22:39:34.235"/>
</kw>
<msg timestamp="20210714 22:39:34.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:29.577" endtime="20210714 22:39:34.235"/>
</kw>
<status status="PASS" starttime="20210714 22:39:29.576" endtime="20210714 22:39:34.235"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210714 22:39:34.237" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-27583 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:34.239" level="INFO">${rc} = 2</msg>
<status status="PASS" starttime="20210714 22:39:34.235" endtime="20210714 22:39:34.239"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:34.243" level="INFO">Running command 'rm -f /tmp/tempkey-27583 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:34.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:34.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:39:34.241" endtime="20210714 22:39:34.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:34.245" level="INFO"/>
<status status="PASS" starttime="20210714 22:39:34.245" endtime="20210714 22:39:34.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:34.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:34.246" endtime="20210714 22:39:34.246"/>
</kw>
<status status="PASS" starttime="20210714 22:39:34.241" endtime="20210714 22:39:34.246"/>
</kw>
<msg timestamp="20210714 22:39:34.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:34.240" endtime="20210714 22:39:34.246"/>
</kw>
<status status="PASS" starttime="20210714 22:39:34.240" endtime="20210714 22:39:34.247"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:39:34.247" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20210714 22:39:34.247" endtime="20210714 22:39:34.247"/>
</kw>
<msg timestamp="20210714 22:39:34.248" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20210714 22:39:29.575" endtime="20210714 22:39:34.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:39:34.248" endtime="20210714 22:39:34.248"/>
</kw>
<status status="PASS" starttime="20210714 22:39:29.574" endtime="20210714 22:39:34.248"/>
</test>
<status status="PASS" starttime="20210714 22:38:42.206" endtime="20210714 22:39:34.250"/>
</suite>
<status status="PASS" starttime="20210714 22:38:42.183" endtime="20210714 22:39:34.252"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/cli">
<suite id="s1-s2-s1" name="Classpath" source="/opt/hadoop/smoketest/cli/classpath.robot">
<kw name="Find Jars Dir" library="shell" type="SETUP">
<kw name="Execute" library="os">
<var>${dir}</var>
<arg>ozone envvars | grep 'HDDS_LIB_JARS_DIR' | cut -f2 -d= | sed -e "s/'//g" -e 's/"//g'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:17.339" level="INFO">Running command 'ozone envvars | grep 'HDDS_LIB_JARS_DIR' | cut -f2 -d= | sed -e "s/'//g" -e 's/"//g' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:17.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:17.375" level="INFO">${output} = /opt/hadoop/share/ozone/lib</msg>
<status status="PASS" starttime="20210714 23:01:17.336" endtime="20210714 23:01:17.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:17.376" level="INFO">/opt/hadoop/share/ozone/lib</msg>
<status status="PASS" starttime="20210714 23:01:17.376" endtime="20210714 23:01:17.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:17.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:17.376" endtime="20210714 23:01:17.377"/>
</kw>
<status status="PASS" starttime="20210714 23:01:17.335" endtime="20210714 23:01:17.377"/>
</kw>
<msg timestamp="20210714 23:01:17.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:17.335" endtime="20210714 23:01:17.377"/>
</kw>
<msg timestamp="20210714 23:01:17.377" level="INFO">${dir} = /opt/hadoop/share/ozone/lib</msg>
<status status="PASS" starttime="20210714 23:01:17.335" endtime="20210714 23:01:17.377"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HDDS_LIB_JARS_DIR</arg>
<arg>${dir}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:17.378" level="INFO">Environment variable 'HDDS_LIB_JARS_DIR' set to value '/opt/hadoop/share/ozone/lib'.</msg>
<status status="PASS" starttime="20210714 23:01:17.377" endtime="20210714 23:01:17.378"/>
</kw>
<status status="PASS" starttime="20210714 23:01:17.334" endtime="20210714 23:01:17.378"/>
</kw>
<test id="s1-s2-s1-t1" name="Ignores HADOOP_CLASSPATH if OZONE_CLASSPATH is set">
<kw name="Create File" library="OperatingSystem" type="SETUP">
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20210714 23:01:17.380" level="INFO" html="true">Created file '&lt;a href="file:///opt/hadoop/share/ozone/lib/hadoop-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/hadoop-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 23:01:17.379" endtime="20210714 23:01:17.380"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CLASSPATH</arg>
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:17.380" level="INFO">Environment variable 'HADOOP_CLASSPATH' set to value '/opt/hadoop/share/ozone/lib/hadoop-classpath.jar'.</msg>
<status status="PASS" starttime="20210714 23:01:17.380" endtime="20210714 23:01:17.380"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CLASSPATH</arg>
<arg>${EMPTY}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:17.381" level="INFO">Environment variable 'OZONE_CLASSPATH' set to value ''.</msg>
<status status="PASS" starttime="20210714 23:01:17.380" endtime="20210714 23:01:17.381"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone classpath ozone-insight</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:17.384" level="INFO">Running command 'ozone classpath ozone-insight 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:17.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:17.807" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1....</msg>
<status status="PASS" starttime="20210714 23:01:17.383" endtime="20210714 23:01:17.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:17.808" level="INFO">/etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-annotations-2.12.1.jar:/opt/hadoop/share/ozone/lib/slf4j-log4j12-1.7.30.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/sqlite-jdbc-3.25.2.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/log4j-api-2.13.3.jar:/opt/hadoop/share/ozone/lib/istack-commons-runtime-3.0.5.jar:/opt/hadoop/share/ozone/lib/commons-validator-1.6.jar:/opt/hadoop/share/ozone/lib/bcpkix-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/hdds-server-framework-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-security-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-core-1.0.1.jar:/opt/hadoop/share/ozone/lib/rocksdbjni-6.20.3.jar:/opt/hadoop/share/ozone/lib/picocli-4.4.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-server-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:/opt/hadoop/share/ozone/lib/ratis-client-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/okhttp-4.9.0.jar:/opt/hadoop/share/ozone/lib/ratis-metrics-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jsr305-3.0.0.jar:/opt/hadoop/share/ozone/lib/j2objc-annotations-1.3.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-server-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/htrace-core4-4.1.0-incubating.jar:/opt/hadoop/share/ozone/lib/javassist-3.21.0-GA.jar:/opt/hadoop/share/ozone/lib/jaxb-api-2.3.0.jar:/opt/hadoop/share/ozone/lib/kerb-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/commons-io-2.8.0.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-common-1.4.31.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-guava-1.1.1.jar:/opt/hadoop/share/ozone/lib/checker-qual-3.8.0.jar:/opt/hadoop/share/ozone/lib/commons-logging-1.2.jar:/opt/hadoop/share/ozone/lib/kerby-xdr-1.0.1.jar:/opt/hadoop/share/ozone/lib/hdds-server-scm-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/netty-buffer-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/txw2-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-datatype-jsr310-2.12.1.jar:/opt/hadoop/share/ozone/lib/httpcore-4.4.13.jar:/opt/hadoop/share/ozone/lib/opentracing-tracerresolver-0.1.8.jar:/opt/hadoop/share/ozone/lib/aspectjweaver-1.8.9.jar:/opt/hadoop/share/ozone/lib/commons-net-3.6.jar:/opt/hadoop/share/ozone/lib/hdds-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/libthrift-0.14.1.jar:/opt/hadoop/share/ozone/lib/snakeyaml-1.26.jar:/opt/hadoop/share/ozone/lib/stax-ex-1.7.8.jar:/opt/hadoop/share/ozone/lib/error_prone_annotations-2.2.0.jar:/opt/hadoop/share/ozone/lib/ratis-server-api-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/httpclient-4.5.13.jar:/opt/hadoop/share/ozone/lib/kerby-config-1.0.1.jar:/opt/hadoop/share/ozone/lib/jaeger-client-1.6.0.jar:/opt/hadoop/share/ozone/lib/metrics-core-3.2.4.jar:/opt/hadoop/share/ozone/lib/kerby-pkix-1.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.7.0-a398b19-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-webapp-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/activation-1.1.1.jar:/opt/hadoop/share/ozone/lib/jsr311-api-1.1.1.jar:/opt/hadoop/share/ozone/lib/netty-codec-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/commons-beanutils-1.9.4.jar:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-server-1.0.1.jar:/opt/hadoop/share/ozone/lib/javax.servlet-api-3.1.0.jar:/opt/hadoop/share/ozone/lib/ratis-proto-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/guava-30.1.1-jre.jar:/opt/hadoop/share/ozone/lib/jetty-server-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/jetty-util-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/kerb-client-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-core-2.12.1.jar:/opt/hadoop/share/ozone/lib/netty-transport-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/netty-common-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/disruptor-3.4.2.jar:/opt/hadoop/share/ozone/lib/reflections-0.9.11.jar:/opt/hadoop/share/ozone/lib/log4j-core-2.13.3.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-3.3.1.jar:/opt/hadoop/share/ozone/lib/annotations-13.0.jar:/opt/hadoop/share/ozone/lib/jackson-databind-2.12.1.jar:/opt/hadoop/share/ozone/lib/simpleclient_common-0.7.0.jar:/opt/hadoop/share/ozone/lib/hadoop-common-3.3.1.jar:/opt/hadoop/share/ozone/lib/dnsjava-2.1.7.jar:/opt/hadoop/share/ozone/lib/jaeger-thrift-1.6.0.jar:/opt/hadoop/share/ozone/lib/bcprov-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/commons-configuration2-2.1.1.jar:/opt/hadoop/share/ozone/lib/metainf-services-1.8.jar:/opt/hadoop/share/ozone/lib/json-smart-2.3.jar:/opt/hadoop/share/ozone/lib/token-provider-1.0.1.jar:/opt/hadoop/share/ozone/lib/log4j-1.2.17.jar:/opt/hadoop/share/ozone/lib/commons-daemon-1.0.13.jar:/opt/hadoop/share/ozone/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/hadoop/share/ozone/lib/aspectjrt-1.8.9.jar:/opt/hadoop/share/ozone/lib/jaeger-tracerresolver-1.6.0.jar:/opt/hadoop/share/ozone/lib/ozone-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-lang3-3.7.jar:/opt/hadoop/share/ozone/lib/hdds-tools-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-util-ajax-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/accessors-smart-1.2.jar:/opt/hadoop/share/ozone/lib/re2j-1.1.jar:/opt/hadoop/share/ozone/lib/jetty-io-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/jetty-xml-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/commons-math3-3.1.1.jar:/opt/hadoop/share/ozone/lib/simpleclient_dropwizard-0.7.0.jar:/opt/hadoop/share/ozone/lib/simpleclient-0.7.0.jar:/opt/hadoop/share/ozone/lib/ozone-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ratis-server-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/asm-5.0.4.jar:/opt/hadoop/share/ozone/lib/kerby-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/failureaccess-1.0.1.jar:/opt/hadoop/share/ozone/lib/okio-2.8.0.jar:/opt/hadoop/share/ozone/lib/ratis-common-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-config-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jsp-api-2.1.jar:/opt/hadoop/share/ozone/lib/jsch-0.1.54.jar:/opt/hadoop/share/ozone/lib/jakarta.activation-api-1.2.1.jar:/opt/hadoop/share/ozone/lib/slf4j-api-1.7.30.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-client-3.3.1.jar:/opt/hadoop/share/ozone/lib/nimbus-jose-jwt-7.9.jar:/opt/hadoop/share/ozone/lib/commons-codec-1.11.jar:/opt/hadoop/share/ozone/lib/commons-pool2-2.6.0.jar:/opt/hadoop/share/ozone/lib/gson-2.2.4.jar:/opt/hadoop/share/ozone/lib/netty-handler-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/opentracing-api-0.33.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jcip-annotations-1.0-1.jar:/opt/hadoop/share/ozone/lib/kerb-admin-1.0.1.jar:/opt/hadoop/share/ozone/lib/netty-resolver-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-1.4.31.jar:/opt/hadoop/share/ozone/lib/opentracing-noop-0.33.0.jar:/opt/hadoop/share/ozone/lib/jersey-core-1.19.jar:/opt/hadoop/share/ozone/lib/jaxb-runtime-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-grpc-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/opentracing-util-0.33.0.jar:/opt/hadoop/share/ozone/lib/ratis-tools-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-interface-storage-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/snappy-java-1.1.8.2.jar:/opt/hadoop/share/ozone/lib/commons-cli-1.2.jar:/opt/hadoop/share/ozone/lib/woodstox-core-5.0.3.jar:/opt/hadoop/share/ozone/lib/javax.annotation-api-1.2.jar:/opt/hadoop/share/ozone/lib/jetty-servlet-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/ozone-manager-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerby-asn1-1.0.1.jar:/opt/hadoop/share/ozone/lib/hadoop-annotations-3.3.1.jar:/opt/hadoop/share/ozone/lib/hdds-container-service-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/stax2-api-3.1.4.jar:/opt/hadoop/share/ozone/lib/commons-collections-3.2.2.jar:/opt/hadoop/share/ozone/lib/commons-digester-1.8.1.jar:/opt/hadoop/share/ozone/lib/jaeger-core-1.6.0.jar:/opt/hadoop/share/ozone/lib/commons-text-1.4.jar:/opt/hadoop/share/ozone/lib/jersey-servlet-1.19.jar:/opt/hadoop/share/ozone/lib/hadoop-auth-3.3.1.jar:/opt/hadoop/share/ozone/lib/kerb-identity-1.0.1.jar:/opt/hadoop/share/ozone/lib/FastInfoset-1.2.13.jar:/opt/hadoop/share/ozone/lib/ratis-netty-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-common-1.0.1.jar:/opt/hadoop/share/ozone/lib/jersey-server-1.19.jar:/opt/hadoop/share/ozone/lib/commons-compress-1.20.jar:/opt/hadoop/share/ozone/lib/kerb-crypto-1.0.1.jar:/opt/hadoop/share/ozone/lib/jetty-http-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/web:/opt/hadoop/share/ozone/lib/ozone-insight-1.2.0-SNAPSHOT.jar</msg>
<status status="PASS" starttime="20210714 23:01:17.807" endtime="20210714 23:01:17.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:17.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:17.808" endtime="20210714 23:01:17.809"/>
</kw>
<status status="PASS" starttime="20210714 23:01:17.382" endtime="20210714 23:01:17.809"/>
</kw>
<msg timestamp="20210714 23:01:17.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:17.382" endtime="20210714 23:01:17.809"/>
</kw>
<msg timestamp="20210714 23:01:17.810" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1....</msg>
<status status="PASS" starttime="20210714 23:01:17.381" endtime="20210714 23:01:17.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>hdds-interface</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:17.810" endtime="20210714 23:01:17.810"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:17.810" endtime="20210714 23:01:17.811"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20210714 23:01:17.811" level="INFO" html="true">Removed file '&lt;a href="file:///opt/hadoop/share/ozone/lib/hadoop-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/hadoop-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 23:01:17.811" endtime="20210714 23:01:17.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:17.378" endtime="20210714 23:01:17.811"/>
</test>
<test id="s1-s2-s1-t2" name="Picks up items from OZONE_CLASSPATH">
<kw name="Create File" library="OperatingSystem" type="SETUP">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20210714 23:01:17.813" level="INFO" html="true">Created file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 23:01:17.813" endtime="20210714 23:01:17.813"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CLASSPATH</arg>
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:17.814" level="INFO">Environment variable 'OZONE_CLASSPATH' set to value '/opt/hadoop/share/ozone/lib/ozone-classpath.jar'.</msg>
<status status="PASS" starttime="20210714 23:01:17.814" endtime="20210714 23:01:17.814"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone classpath ozone-insight</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:17.817" level="INFO">Running command 'ozone classpath ozone-insight 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.240" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1....</msg>
<status status="PASS" starttime="20210714 23:01:17.815" endtime="20210714 23:01:18.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.242" level="INFO">/etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-annotations-2.12.1.jar:/opt/hadoop/share/ozone/lib/slf4j-log4j12-1.7.30.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/sqlite-jdbc-3.25.2.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/log4j-api-2.13.3.jar:/opt/hadoop/share/ozone/lib/istack-commons-runtime-3.0.5.jar:/opt/hadoop/share/ozone/lib/commons-validator-1.6.jar:/opt/hadoop/share/ozone/lib/bcpkix-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/hdds-server-framework-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-security-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-core-1.0.1.jar:/opt/hadoop/share/ozone/lib/rocksdbjni-6.20.3.jar:/opt/hadoop/share/ozone/lib/picocli-4.4.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-server-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:/opt/hadoop/share/ozone/lib/ratis-client-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/okhttp-4.9.0.jar:/opt/hadoop/share/ozone/lib/ratis-metrics-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jsr305-3.0.0.jar:/opt/hadoop/share/ozone/lib/j2objc-annotations-1.3.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-server-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/htrace-core4-4.1.0-incubating.jar:/opt/hadoop/share/ozone/lib/javassist-3.21.0-GA.jar:/opt/hadoop/share/ozone/lib/jaxb-api-2.3.0.jar:/opt/hadoop/share/ozone/lib/kerb-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/commons-io-2.8.0.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-common-1.4.31.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-guava-1.1.1.jar:/opt/hadoop/share/ozone/lib/checker-qual-3.8.0.jar:/opt/hadoop/share/ozone/lib/commons-logging-1.2.jar:/opt/hadoop/share/ozone/lib/kerby-xdr-1.0.1.jar:/opt/hadoop/share/ozone/lib/hdds-server-scm-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/netty-buffer-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/txw2-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-datatype-jsr310-2.12.1.jar:/opt/hadoop/share/ozone/lib/httpcore-4.4.13.jar:/opt/hadoop/share/ozone/lib/opentracing-tracerresolver-0.1.8.jar:/opt/hadoop/share/ozone/lib/aspectjweaver-1.8.9.jar:/opt/hadoop/share/ozone/lib/commons-net-3.6.jar:/opt/hadoop/share/ozone/lib/hdds-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/libthrift-0.14.1.jar:/opt/hadoop/share/ozone/lib/snakeyaml-1.26.jar:/opt/hadoop/share/ozone/lib/stax-ex-1.7.8.jar:/opt/hadoop/share/ozone/lib/error_prone_annotations-2.2.0.jar:/opt/hadoop/share/ozone/lib/ratis-server-api-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/httpclient-4.5.13.jar:/opt/hadoop/share/ozone/lib/kerby-config-1.0.1.jar:/opt/hadoop/share/ozone/lib/jaeger-client-1.6.0.jar:/opt/hadoop/share/ozone/lib/metrics-core-3.2.4.jar:/opt/hadoop/share/ozone/lib/kerby-pkix-1.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.7.0-a398b19-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-webapp-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/activation-1.1.1.jar:/opt/hadoop/share/ozone/lib/jsr311-api-1.1.1.jar:/opt/hadoop/share/ozone/lib/netty-codec-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/commons-beanutils-1.9.4.jar:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-server-1.0.1.jar:/opt/hadoop/share/ozone/lib/javax.servlet-api-3.1.0.jar:/opt/hadoop/share/ozone/lib/ratis-proto-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/guava-30.1.1-jre.jar:/opt/hadoop/share/ozone/lib/jetty-server-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/jetty-util-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/kerb-client-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-core-2.12.1.jar:/opt/hadoop/share/ozone/lib/netty-transport-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/netty-common-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/disruptor-3.4.2.jar:/opt/hadoop/share/ozone/lib/reflections-0.9.11.jar:/opt/hadoop/share/ozone/lib/log4j-core-2.13.3.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-3.3.1.jar:/opt/hadoop/share/ozone/lib/annotations-13.0.jar:/opt/hadoop/share/ozone/lib/jackson-databind-2.12.1.jar:/opt/hadoop/share/ozone/lib/simpleclient_common-0.7.0.jar:/opt/hadoop/share/ozone/lib/hadoop-common-3.3.1.jar:/opt/hadoop/share/ozone/lib/dnsjava-2.1.7.jar:/opt/hadoop/share/ozone/lib/jaeger-thrift-1.6.0.jar:/opt/hadoop/share/ozone/lib/bcprov-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/commons-configuration2-2.1.1.jar:/opt/hadoop/share/ozone/lib/metainf-services-1.8.jar:/opt/hadoop/share/ozone/lib/json-smart-2.3.jar:/opt/hadoop/share/ozone/lib/token-provider-1.0.1.jar:/opt/hadoop/share/ozone/lib/log4j-1.2.17.jar:/opt/hadoop/share/ozone/lib/commons-daemon-1.0.13.jar:/opt/hadoop/share/ozone/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/hadoop/share/ozone/lib/aspectjrt-1.8.9.jar:/opt/hadoop/share/ozone/lib/jaeger-tracerresolver-1.6.0.jar:/opt/hadoop/share/ozone/lib/ozone-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-lang3-3.7.jar:/opt/hadoop/share/ozone/lib/hdds-tools-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-util-ajax-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/accessors-smart-1.2.jar:/opt/hadoop/share/ozone/lib/re2j-1.1.jar:/opt/hadoop/share/ozone/lib/jetty-io-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/jetty-xml-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/commons-math3-3.1.1.jar:/opt/hadoop/share/ozone/lib/simpleclient_dropwizard-0.7.0.jar:/opt/hadoop/share/ozone/lib/simpleclient-0.7.0.jar:/opt/hadoop/share/ozone/lib/ozone-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ratis-server-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/asm-5.0.4.jar:/opt/hadoop/share/ozone/lib/kerby-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/failureaccess-1.0.1.jar:/opt/hadoop/share/ozone/lib/okio-2.8.0.jar:/opt/hadoop/share/ozone/lib/ratis-common-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-config-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jsp-api-2.1.jar:/opt/hadoop/share/ozone/lib/jsch-0.1.54.jar:/opt/hadoop/share/ozone/lib/jakarta.activation-api-1.2.1.jar:/opt/hadoop/share/ozone/lib/slf4j-api-1.7.30.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-client-3.3.1.jar:/opt/hadoop/share/ozone/lib/nimbus-jose-jwt-7.9.jar:/opt/hadoop/share/ozone/lib/commons-codec-1.11.jar:/opt/hadoop/share/ozone/lib/commons-pool2-2.6.0.jar:/opt/hadoop/share/ozone/lib/gson-2.2.4.jar:/opt/hadoop/share/ozone/lib/netty-handler-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/opentracing-api-0.33.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jcip-annotations-1.0-1.jar:/opt/hadoop/share/ozone/lib/kerb-admin-1.0.1.jar:/opt/hadoop/share/ozone/lib/netty-resolver-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-1.4.31.jar:/opt/hadoop/share/ozone/lib/opentracing-noop-0.33.0.jar:/opt/hadoop/share/ozone/lib/jersey-core-1.19.jar:/opt/hadoop/share/ozone/lib/jaxb-runtime-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-grpc-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/opentracing-util-0.33.0.jar:/opt/hadoop/share/ozone/lib/ratis-tools-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-interface-storage-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/snappy-java-1.1.8.2.jar:/opt/hadoop/share/ozone/lib/commons-cli-1.2.jar:/opt/hadoop/share/ozone/lib/woodstox-core-5.0.3.jar:/opt/hadoop/share/ozone/lib/javax.annotation-api-1.2.jar:/opt/hadoop/share/ozone/lib/jetty-servlet-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/ozone-manager-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerby-asn1-1.0.1.jar:/opt/hadoop/share/ozone/lib/hadoop-annotations-3.3.1.jar:/opt/hadoop/share/ozone/lib/hdds-container-service-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/stax2-api-3.1.4.jar:/opt/hadoop/share/ozone/lib/commons-collections-3.2.2.jar:/opt/hadoop/share/ozone/lib/commons-digester-1.8.1.jar:/opt/hadoop/share/ozone/lib/jaeger-core-1.6.0.jar:/opt/hadoop/share/ozone/lib/commons-text-1.4.jar:/opt/hadoop/share/ozone/lib/jersey-servlet-1.19.jar:/opt/hadoop/share/ozone/lib/hadoop-auth-3.3.1.jar:/opt/hadoop/share/ozone/lib/kerb-identity-1.0.1.jar:/opt/hadoop/share/ozone/lib/FastInfoset-1.2.13.jar:/opt/hadoop/share/ozone/lib/ratis-netty-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-common-1.0.1.jar:/opt/hadoop/share/ozone/lib/jersey-server-1.19.jar:/opt/hadoop/share/ozone/lib/commons-compress-1.20.jar:/opt/hadoop/share/ozone/lib/kerb-crypto-1.0.1.jar:/opt/hadoop/share/ozone/lib/jetty-http-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/web:/opt/hadoop/share/ozone/lib/ozone-insight-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-classpath.jar</msg>
<status status="PASS" starttime="20210714 23:01:18.241" endtime="20210714 23:01:18.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.242" endtime="20210714 23:01:18.243"/>
</kw>
<status status="PASS" starttime="20210714 23:01:17.815" endtime="20210714 23:01:18.243"/>
</kw>
<msg timestamp="20210714 23:01:18.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:17.815" endtime="20210714 23:01:18.243"/>
</kw>
<msg timestamp="20210714 23:01:18.243" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1....</msg>
<status status="PASS" starttime="20210714 23:01:17.814" endtime="20210714 23:01:18.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.244" endtime="20210714 23:01:18.244"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20210714 23:01:18.245" level="INFO" html="true">Removed file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 23:01:18.244" endtime="20210714 23:01:18.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:17.812" endtime="20210714 23:01:18.245"/>
</test>
<test id="s1-s2-s1-t3" name="Adds optional dir entries">
<kw name="Create File" library="OperatingSystem" type="SETUP">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-insight/optional.jar</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20210714 23:01:18.247" level="INFO" html="true">Created file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-insight/optional.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-insight/optional.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 23:01:18.246" endtime="20210714 23:01:18.247"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CLASSPATH</arg>
<arg>${EMPTY}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.248" level="INFO">Environment variable 'OZONE_CLASSPATH' set to value ''.</msg>
<status status="PASS" starttime="20210714 23:01:18.248" endtime="20210714 23:01:18.249"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone classpath ozone-insight</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:18.252" level="INFO">Running command 'ozone classpath ozone-insight 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.672" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1....</msg>
<status status="PASS" starttime="20210714 23:01:18.250" endtime="20210714 23:01:18.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.673" level="INFO">/etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-annotations-2.12.1.jar:/opt/hadoop/share/ozone/lib/slf4j-log4j12-1.7.30.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/sqlite-jdbc-3.25.2.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/log4j-api-2.13.3.jar:/opt/hadoop/share/ozone/lib/istack-commons-runtime-3.0.5.jar:/opt/hadoop/share/ozone/lib/commons-validator-1.6.jar:/opt/hadoop/share/ozone/lib/bcpkix-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/hdds-server-framework-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-security-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-core-1.0.1.jar:/opt/hadoop/share/ozone/lib/rocksdbjni-6.20.3.jar:/opt/hadoop/share/ozone/lib/picocli-4.4.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-server-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:/opt/hadoop/share/ozone/lib/ratis-client-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/okhttp-4.9.0.jar:/opt/hadoop/share/ozone/lib/ratis-metrics-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jsr305-3.0.0.jar:/opt/hadoop/share/ozone/lib/j2objc-annotations-1.3.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-server-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/htrace-core4-4.1.0-incubating.jar:/opt/hadoop/share/ozone/lib/javassist-3.21.0-GA.jar:/opt/hadoop/share/ozone/lib/jaxb-api-2.3.0.jar:/opt/hadoop/share/ozone/lib/kerb-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/commons-io-2.8.0.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-common-1.4.31.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-guava-1.1.1.jar:/opt/hadoop/share/ozone/lib/checker-qual-3.8.0.jar:/opt/hadoop/share/ozone/lib/commons-logging-1.2.jar:/opt/hadoop/share/ozone/lib/kerby-xdr-1.0.1.jar:/opt/hadoop/share/ozone/lib/hdds-server-scm-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/netty-buffer-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/txw2-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-datatype-jsr310-2.12.1.jar:/opt/hadoop/share/ozone/lib/httpcore-4.4.13.jar:/opt/hadoop/share/ozone/lib/opentracing-tracerresolver-0.1.8.jar:/opt/hadoop/share/ozone/lib/aspectjweaver-1.8.9.jar:/opt/hadoop/share/ozone/lib/commons-net-3.6.jar:/opt/hadoop/share/ozone/lib/hdds-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/libthrift-0.14.1.jar:/opt/hadoop/share/ozone/lib/snakeyaml-1.26.jar:/opt/hadoop/share/ozone/lib/stax-ex-1.7.8.jar:/opt/hadoop/share/ozone/lib/error_prone_annotations-2.2.0.jar:/opt/hadoop/share/ozone/lib/ratis-server-api-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/httpclient-4.5.13.jar:/opt/hadoop/share/ozone/lib/kerby-config-1.0.1.jar:/opt/hadoop/share/ozone/lib/jaeger-client-1.6.0.jar:/opt/hadoop/share/ozone/lib/metrics-core-3.2.4.jar:/opt/hadoop/share/ozone/lib/kerby-pkix-1.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.7.0-a398b19-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-webapp-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/activation-1.1.1.jar:/opt/hadoop/share/ozone/lib/jsr311-api-1.1.1.jar:/opt/hadoop/share/ozone/lib/netty-codec-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/commons-beanutils-1.9.4.jar:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-server-1.0.1.jar:/opt/hadoop/share/ozone/lib/javax.servlet-api-3.1.0.jar:/opt/hadoop/share/ozone/lib/ratis-proto-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/guava-30.1.1-jre.jar:/opt/hadoop/share/ozone/lib/jetty-server-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/jetty-util-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/kerb-client-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-core-2.12.1.jar:/opt/hadoop/share/ozone/lib/netty-transport-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/netty-common-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/disruptor-3.4.2.jar:/opt/hadoop/share/ozone/lib/reflections-0.9.11.jar:/opt/hadoop/share/ozone/lib/log4j-core-2.13.3.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-3.3.1.jar:/opt/hadoop/share/ozone/lib/annotations-13.0.jar:/opt/hadoop/share/ozone/lib/jackson-databind-2.12.1.jar:/opt/hadoop/share/ozone/lib/simpleclient_common-0.7.0.jar:/opt/hadoop/share/ozone/lib/hadoop-common-3.3.1.jar:/opt/hadoop/share/ozone/lib/dnsjava-2.1.7.jar:/opt/hadoop/share/ozone/lib/jaeger-thrift-1.6.0.jar:/opt/hadoop/share/ozone/lib/bcprov-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/commons-configuration2-2.1.1.jar:/opt/hadoop/share/ozone/lib/metainf-services-1.8.jar:/opt/hadoop/share/ozone/lib/json-smart-2.3.jar:/opt/hadoop/share/ozone/lib/token-provider-1.0.1.jar:/opt/hadoop/share/ozone/lib/log4j-1.2.17.jar:/opt/hadoop/share/ozone/lib/commons-daemon-1.0.13.jar:/opt/hadoop/share/ozone/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/hadoop/share/ozone/lib/aspectjrt-1.8.9.jar:/opt/hadoop/share/ozone/lib/jaeger-tracerresolver-1.6.0.jar:/opt/hadoop/share/ozone/lib/ozone-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-lang3-3.7.jar:/opt/hadoop/share/ozone/lib/hdds-tools-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jetty-util-ajax-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/accessors-smart-1.2.jar:/opt/hadoop/share/ozone/lib/re2j-1.1.jar:/opt/hadoop/share/ozone/lib/jetty-io-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/jetty-xml-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/commons-math3-3.1.1.jar:/opt/hadoop/share/ozone/lib/simpleclient_dropwizard-0.7.0.jar:/opt/hadoop/share/ozone/lib/simpleclient-0.7.0.jar:/opt/hadoop/share/ozone/lib/ozone-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ratis-server-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/asm-5.0.4.jar:/opt/hadoop/share/ozone/lib/kerby-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/failureaccess-1.0.1.jar:/opt/hadoop/share/ozone/lib/okio-2.8.0.jar:/opt/hadoop/share/ozone/lib/ratis-common-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-config-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jsp-api-2.1.jar:/opt/hadoop/share/ozone/lib/jsch-0.1.54.jar:/opt/hadoop/share/ozone/lib/jakarta.activation-api-1.2.1.jar:/opt/hadoop/share/ozone/lib/slf4j-api-1.7.30.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-client-3.3.1.jar:/opt/hadoop/share/ozone/lib/nimbus-jose-jwt-7.9.jar:/opt/hadoop/share/ozone/lib/commons-codec-1.11.jar:/opt/hadoop/share/ozone/lib/commons-pool2-2.6.0.jar:/opt/hadoop/share/ozone/lib/gson-2.2.4.jar:/opt/hadoop/share/ozone/lib/netty-handler-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/opentracing-api-0.33.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-client-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jcip-annotations-1.0-1.jar:/opt/hadoop/share/ozone/lib/kerb-admin-1.0.1.jar:/opt/hadoop/share/ozone/lib/netty-resolver-4.1.63.Final.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-1.4.31.jar:/opt/hadoop/share/ozone/lib/opentracing-noop-0.33.0.jar:/opt/hadoop/share/ozone/lib/jersey-core-1.19.jar:/opt/hadoop/share/ozone/lib/jaxb-runtime-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-grpc-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/opentracing-util-0.33.0.jar:/opt/hadoop/share/ozone/lib/ratis-tools-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-interface-storage-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/snappy-java-1.1.8.2.jar:/opt/hadoop/share/ozone/lib/commons-cli-1.2.jar:/opt/hadoop/share/ozone/lib/woodstox-core-5.0.3.jar:/opt/hadoop/share/ozone/lib/javax.annotation-api-1.2.jar:/opt/hadoop/share/ozone/lib/jetty-servlet-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/lib/ozone-manager-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerby-asn1-1.0.1.jar:/opt/hadoop/share/ozone/lib/hadoop-annotations-3.3.1.jar:/opt/hadoop/share/ozone/lib/hdds-container-service-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/stax2-api-3.1.4.jar:/opt/hadoop/share/ozone/lib/commons-collections-3.2.2.jar:/opt/hadoop/share/ozone/lib/commons-digester-1.8.1.jar:/opt/hadoop/share/ozone/lib/jaeger-core-1.6.0.jar:/opt/hadoop/share/ozone/lib/commons-text-1.4.jar:/opt/hadoop/share/ozone/lib/jersey-servlet-1.19.jar:/opt/hadoop/share/ozone/lib/hadoop-auth-3.3.1.jar:/opt/hadoop/share/ozone/lib/kerb-identity-1.0.1.jar:/opt/hadoop/share/ozone/lib/FastInfoset-1.2.13.jar:/opt/hadoop/share/ozone/lib/ratis-netty-2.1.0-ff8aa66-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-common-1.0.1.jar:/opt/hadoop/share/ozone/lib/jersey-server-1.19.jar:/opt/hadoop/share/ozone/lib/commons-compress-1.20.jar:/opt/hadoop/share/ozone/lib/kerb-crypto-1.0.1.jar:/opt/hadoop/share/ozone/lib/jetty-http-9.4.35.v20201120.jar:/opt/hadoop/share/ozone/web:/opt/hadoop/share/ozone/lib/ozone-insight-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-insight/optional.jar</msg>
<status status="PASS" starttime="20210714 23:01:18.672" endtime="20210714 23:01:18.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.673" endtime="20210714 23:01:18.674"/>
</kw>
<status status="PASS" starttime="20210714 23:01:18.250" endtime="20210714 23:01:18.674"/>
</kw>
<msg timestamp="20210714 23:01:18.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:18.249" endtime="20210714 23:01:18.674"/>
</kw>
<msg timestamp="20210714 23:01:18.674" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.2.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/kerb-simplekdc-1.0.1....</msg>
<status status="PASS" starttime="20210714 23:01:18.249" endtime="20210714 23:01:18.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>%{HDDS_LIB_JARS_DIR}/ozone-insight/optional.jar</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.675" endtime="20210714 23:01:18.675"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-insight/optional.jar</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20210714 23:01:18.676" level="INFO" html="true">Removed file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-insight/optional.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-insight/optional.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210714 23:01:18.675" endtime="20210714 23:01:18.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:18.246" endtime="20210714 23:01:18.676"/>
</test>
<doc>Test ozone classpath command</doc>
<status status="PASS" starttime="20210714 23:01:17.311" endtime="20210714 23:01:18.677"/>
</suite>
<suite id="s1-s2-s2" name="Envvars" source="/opt/hadoop/smoketest/cli/envvars.robot">
<test id="s1-s2-s2-t1" name="Ignores deprecated vars if new ones are set">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/usr/local/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.688" level="INFO">Environment variable 'HADOOP_HOME' set to value '/usr/local/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.687" endtime="20210714 23:01:18.688"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<arg>${OZONE_HOME}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.688" level="INFO">Environment variable 'OZONE_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.688" endtime="20210714 23:01:18.688"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<arg>/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.688" level="INFO">Environment variable 'HADOOP_CONF_DIR' set to value '/etc/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.688" endtime="20210714 23:01:18.689"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<arg>${OZONE_HOME}/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.689" level="INFO">Environment variable 'OZONE_CONF_DIR' set to value '/opt/hadoop/etc/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.689" endtime="20210714 23:01:18.689"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:18.692" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.722" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.690" endtime="20210714 23:01:18.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.723" level="INFO">JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.722" endtime="20210714 23:01:18.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.723" endtime="20210714 23:01:18.724"/>
</kw>
<status status="PASS" starttime="20210714 23:01:18.690" endtime="20210714 23:01:18.724"/>
</kw>
<msg timestamp="20210714 23:01:18.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:18.690" endtime="20210714 23:01:18.724"/>
</kw>
<msg timestamp="20210714 23:01:18.724" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.689" endtime="20210714 23:01:18.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='${OZONE_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.724" endtime="20210714 23:01:18.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='${OZONE_HOME}/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.725" endtime="20210714 23:01:18.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='${OZONE_HOME}/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.726" endtime="20210714 23:01:18.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='${OZONE_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.726" endtime="20210714 23:01:18.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.727" endtime="20210714 23:01:18.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.727" endtime="20210714 23:01:18.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:18.687" endtime="20210714 23:01:18.728"/>
</test>
<test id="s1-s2-s2-t2" name="Find valid dirs">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/usr/local/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.729" level="INFO">Environment variable 'HADOOP_HOME' set to value '/usr/local/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.729" endtime="20210714 23:01:18.730"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.730" level="INFO">Environment variable 'HADOOP_CONF_DIR' deleted.</msg>
<status status="PASS" starttime="20210714 23:01:18.730" endtime="20210714 23:01:18.730"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_LIBEXEC_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.730" level="INFO">Environment variable 'HADOOP_LIBEXEC_DIR' does not exist.</msg>
<status status="PASS" starttime="20210714 23:01:18.730" endtime="20210714 23:01:18.730"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.731" level="INFO">Environment variable 'OZONE_HOME' deleted.</msg>
<status status="PASS" starttime="20210714 23:01:18.731" endtime="20210714 23:01:18.731"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.731" level="INFO">Environment variable 'OZONE_CONF_DIR' deleted.</msg>
<status status="PASS" starttime="20210714 23:01:18.731" endtime="20210714 23:01:18.731"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_LIBEXEC_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.732" level="INFO">Environment variable 'OZONE_LIBEXEC_DIR' does not exist.</msg>
<status status="PASS" starttime="20210714 23:01:18.731" endtime="20210714 23:01:18.732"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:18.735" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.769" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_...</msg>
<status status="PASS" starttime="20210714 23:01:18.733" endtime="20210714 23:01:18.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.770" level="INFO">WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.769" endtime="20210714 23:01:18.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.770" endtime="20210714 23:01:18.771"/>
</kw>
<status status="PASS" starttime="20210714 23:01:18.732" endtime="20210714 23:01:18.771"/>
</kw>
<msg timestamp="20210714 23:01:18.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:18.732" endtime="20210714 23:01:18.771"/>
</kw>
<msg timestamp="20210714 23:01:18.771" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_...</msg>
<status status="PASS" starttime="20210714 23:01:18.732" endtime="20210714 23:01:18.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='/opt/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.771" endtime="20210714 23:01:18.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='${OZONE_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.772" endtime="20210714 23:01:18.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.772" endtime="20210714 23:01:18.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.773" endtime="20210714 23:01:18.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.773" endtime="20210714 23:01:18.774"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: OZONE_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.774" endtime="20210714 23:01:18.774"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.774" endtime="20210714 23:01:18.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:18.728" endtime="20210714 23:01:18.775"/>
</test>
<test id="s1-s2-s2-t3" name="Picks up deprecated vars if valid">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/opt/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.777" level="INFO">Environment variable 'HADOOP_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.776" endtime="20210714 23:01:18.777"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_LIBEXEC_DIR</arg>
<arg>%{HADOOP_HOME}/libexec</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.777" level="INFO">Environment variable 'HADOOP_LIBEXEC_DIR' set to value '/opt/hadoop/libexec'.</msg>
<status status="PASS" starttime="20210714 23:01:18.777" endtime="20210714 23:01:18.777"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<arg>/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.778" level="INFO">Environment variable 'HADOOP_CONF_DIR' set to value '/etc/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.777" endtime="20210714 23:01:18.778"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.778" level="INFO">Environment variable 'OZONE_HOME' does not exist.</msg>
<status status="PASS" starttime="20210714 23:01:18.778" endtime="20210714 23:01:18.778"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.778" level="INFO">Environment variable 'OZONE_CONF_DIR' does not exist.</msg>
<status status="PASS" starttime="20210714 23:01:18.778" endtime="20210714 23:01:18.778"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:18.781" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.811" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
WARNING: HADOOP_LIBEXEC_DIR has been deprecated by OZONE_LIBEXEC_DIR.
WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
JAVA_HOME=...</msg>
<status status="PASS" starttime="20210714 23:01:18.780" endtime="20210714 23:01:18.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.812" level="INFO">WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
WARNING: HADOOP_LIBEXEC_DIR has been deprecated by OZONE_LIBEXEC_DIR.
WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.812" endtime="20210714 23:01:18.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.812" endtime="20210714 23:01:18.813"/>
</kw>
<status status="PASS" starttime="20210714 23:01:18.779" endtime="20210714 23:01:18.813"/>
</kw>
<msg timestamp="20210714 23:01:18.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:18.779" endtime="20210714 23:01:18.813"/>
</kw>
<msg timestamp="20210714 23:01:18.813" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
WARNING: HADOOP_LIBEXEC_DIR has been deprecated by OZONE_LIBEXEC_DIR.
WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
JAVA_HOME=...</msg>
<status status="PASS" starttime="20210714 23:01:18.779" endtime="20210714 23:01:18.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='%{HADOOP_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.814" endtime="20210714 23:01:18.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='%{HADOOP_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.814" endtime="20210714 23:01:18.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.815" endtime="20210714 23:01:18.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='%{HADOOP_HOME}/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.815" endtime="20210714 23:01:18.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.816" endtime="20210714 23:01:18.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.816" endtime="20210714 23:01:18.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:18.776" endtime="20210714 23:01:18.817"/>
</test>
<test id="s1-s2-s2-t4" name="Warning for deprecated vars can be suppressed">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_DEPRECATION_WARNING</arg>
<arg>false</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.818" level="INFO">Environment variable 'OZONE_DEPRECATION_WARNING' set to value 'false'.</msg>
<status status="PASS" starttime="20210714 23:01:18.818" endtime="20210714 23:01:18.818"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/opt/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.819" level="INFO">Environment variable 'HADOOP_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.819" endtime="20210714 23:01:18.819"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_LIBEXEC_DIR</arg>
<arg>%{HADOOP_HOME}/libexec</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.819" level="INFO">Environment variable 'HADOOP_LIBEXEC_DIR' set to value '/opt/hadoop/libexec'.</msg>
<status status="PASS" starttime="20210714 23:01:18.819" endtime="20210714 23:01:18.819"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<arg>/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.820" level="INFO">Environment variable 'HADOOP_CONF_DIR' set to value '/etc/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.819" endtime="20210714 23:01:18.820"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.820" level="INFO">Environment variable 'OZONE_HOME' does not exist.</msg>
<status status="PASS" starttime="20210714 23:01:18.820" endtime="20210714 23:01:18.820"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.821" level="INFO">Environment variable 'OZONE_CONF_DIR' does not exist.</msg>
<status status="PASS" starttime="20210714 23:01:18.821" endtime="20210714 23:01:18.821"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:18.824" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.854" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.822" endtime="20210714 23:01:18.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.855" level="INFO">JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.854" endtime="20210714 23:01:18.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.855" endtime="20210714 23:01:18.855"/>
</kw>
<status status="PASS" starttime="20210714 23:01:18.822" endtime="20210714 23:01:18.856"/>
</kw>
<msg timestamp="20210714 23:01:18.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:18.821" endtime="20210714 23:01:18.856"/>
</kw>
<msg timestamp="20210714 23:01:18.856" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.821" endtime="20210714 23:01:18.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='%{HADOOP_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.856" endtime="20210714 23:01:18.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='%{HADOOP_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.857" endtime="20210714 23:01:18.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.857" endtime="20210714 23:01:18.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='%{HADOOP_HOME}/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.858" endtime="20210714 23:01:18.858"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.858" endtime="20210714 23:01:18.859"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.859" endtime="20210714 23:01:18.859"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:18.817" endtime="20210714 23:01:18.859"/>
</test>
<test id="s1-s2-s2-t5" name="Works with only OZONE_HOME defined">
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.861" level="INFO">Environment variable 'HADOOP_HOME' deleted.</msg>
<status status="PASS" starttime="20210714 23:01:18.861" endtime="20210714 23:01:18.861"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210714 23:01:18.862" level="INFO">Environment variable 'HADOOP_CONF_DIR' deleted.</msg>
<status status="PASS" starttime="20210714 23:01:18.861" endtime="20210714 23:01:18.862"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<arg>${OZONE_HOME}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210714 23:01:18.862" level="INFO">Environment variable 'OZONE_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20210714 23:01:18.862" endtime="20210714 23:01:18.862"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:18.865" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:18.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:18.895" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.863" endtime="20210714 23:01:18.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:18.896" level="INFO">JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.895" endtime="20210714 23:01:18.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:18.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:18.896" endtime="20210714 23:01:18.897"/>
</kw>
<status status="PASS" starttime="20210714 23:01:18.863" endtime="20210714 23:01:18.897"/>
</kw>
<msg timestamp="20210714 23:01:18.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:18.863" endtime="20210714 23:01:18.897"/>
</kw>
<msg timestamp="20210714 23:01:18.897" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20210714 23:01:18.862" endtime="20210714 23:01:18.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='${OZONE_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.898" endtime="20210714 23:01:18.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='${OZONE_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.898" endtime="20210714 23:01:18.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='${OZONE_HOME}/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.899" endtime="20210714 23:01:18.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.899" endtime="20210714 23:01:18.900"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:18.900" endtime="20210714 23:01:18.900"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:18.860" endtime="20210714 23:01:18.901"/>
</test>
<doc>Test ozone envvars command</doc>
<status status="PASS" starttime="20210714 23:01:18.679" endtime="20210714 23:01:18.901"/>
</suite>
<status status="PASS" starttime="20210714 23:01:17.289" endtime="20210714 23:01:18.903"/>
</suite>
<suite id="s1-s3" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s3-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s3-s1-t1" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:22.714" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:24.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:24.512" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20210714 23:01:22.710" endtime="20210714 23:01:24.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:24.513" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  om                  Ozone Manager specific admin operations
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20210714 23:01:24.512" endtime="20210714 23:01:24.513"/>
</kw>
<msg timestamp="20210714 23:01:24.514" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20210714 23:01:22.710" endtime="20210714 23:01:24.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.514" endtime="20210714 23:01:24.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.514" endtime="20210714 23:01:24.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.515" endtime="20210714 23:01:24.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.515" endtime="20210714 23:01:24.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.516" endtime="20210714 23:01:24.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.516" endtime="20210714 23:01:24.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.516" endtime="20210714 23:01:24.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:24.517" endtime="20210714 23:01:24.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:22.709" endtime="20210714 23:01:24.517"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20210714 23:01:22.687" endtime="20210714 23:01:24.519"/>
</suite>
<suite id="s1-s3-s2" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:01:24.526" endtime="20210714 23:01:24.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:24.529" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:29.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:29.912" level="INFO">${output} = 2021-07-14 23:01:26,162 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:26,261 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:01:24.527" endtime="20210714 23:01:29.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:29.913" level="INFO">2021-07-14 23:01:26,162 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:26,261 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:01:26,261 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:01:26,439 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container
2021-07-14 23:01:26,452 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:27,453 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:28,143 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-14 23:01:28,355 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:01:28,356 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8AAB227716E7-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:01:28,357 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 23:01:28,453 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:29,454 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:01:29,553 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1397.293378, max=1397.293378, mean=1397.293378, stddev=0.0, median=1397.293378, p75=1397.293378, p95=1397.293378, p98=1397.293378, p99=1397.293378, p999=1397.293378, mean_rate=0.48925048483304223, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:01:29,553 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-14 23:01:29,553 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:01:29,553 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:01:29.913" endtime="20210714 23:01:29.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:29.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:29.914" endtime="20210714 23:01:29.914"/>
</kw>
<status status="PASS" starttime="20210714 23:01:24.527" endtime="20210714 23:01:29.915"/>
</kw>
<msg timestamp="20210714 23:01:29.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:24.526" endtime="20210714 23:01:29.915"/>
</kw>
<status status="PASS" starttime="20210714 23:01:24.526" endtime="20210714 23:01:29.915"/>
</kw>
<status status="PASS" starttime="20210714 23:01:24.525" endtime="20210714 23:01:29.915"/>
</kw>
<test id="s1-s3-s2-t1" name="Create container">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:29.920" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:34.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:34.464" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created.</msg>
<status status="PASS" starttime="20210714 23:01:29.918" endtime="20210714 23:01:34.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:34.465" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created.</msg>
<status status="PASS" starttime="20210714 23:01:34.465" endtime="20210714 23:01:34.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:34.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:34.466" endtime="20210714 23:01:34.466"/>
</kw>
<status status="PASS" starttime="20210714 23:01:29.917" endtime="20210714 23:01:34.466"/>
</kw>
<msg timestamp="20210714 23:01:34.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:29.917" endtime="20210714 23:01:34.467"/>
</kw>
<msg timestamp="20210714 23:01:34.467" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created.</msg>
<status status="PASS" starttime="20210714 23:01:29.916" endtime="20210714 23:01:34.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:34.467" endtime="20210714 23:01:34.468"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:34.471" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:34.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:34.473" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20210714 23:01:34.469" endtime="20210714 23:01:34.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:34.474" level="INFO">5</msg>
<status status="PASS" starttime="20210714 23:01:34.474" endtime="20210714 23:01:34.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:34.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:34.475" endtime="20210714 23:01:34.475"/>
</kw>
<status status="PASS" starttime="20210714 23:01:34.468" endtime="20210714 23:01:34.475"/>
</kw>
<msg timestamp="20210714 23:01:34.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:34.468" endtime="20210714 23:01:34.475"/>
</kw>
<msg timestamp="20210714 23:01:34.476" level="INFO">${container} = 5</msg>
<status status="PASS" starttime="20210714 23:01:34.468" endtime="20210714 23:01:34.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:01:34.476" level="INFO">${CONTAINER} = 5</msg>
<status status="PASS" starttime="20210714 23:01:34.476" endtime="20210714 23:01:34.476"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:29.915" endtime="20210714 23:01:34.477"/>
</test>
<test id="s1-s3-s2-t2" name="List containers">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:34.481" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:37.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:37.234" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 299441430,
  "numberOfKeys" : 231,
  "lastUsed" : "2021-07-14T23...</msg>
<status status="PASS" starttime="20210714 23:01:34.479" endtime="20210714 23:01:37.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:37.235" level="INFO">{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 299441430,
  "numberOfKeys" : 231,
  "lastUsed" : "2021-07-14T23:01:37.019Z",
  "stateEnterTime" : "2021-07-14T22:39:14.757Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 15,
  "sequenceId" : 1001,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 5125,
  "numberOfKeys" : 5,
  "lastUsed" : "2021-07-14T23:01:37.019Z",
  "stateEnterTime" : "2021-07-14T23:00:23.909Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 10,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-14T23:01:37.019Z",
  "stateEnterTime" : "2021-07-14T23:00:23.912Z",
  "owner" : "om1",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 2050,
  "numberOfKeys" : 2,
  "lastUsed" : "2021-07-14T23:01:37.019Z",
  "stateEnterTime" : "2021-07-14T23:00:23.939Z",
  "owner" : "om1",
  "containerID" : 4,
  "deleteTransactionId" : 0,
  "sequenceId" : 4,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-14T23:01:37.020Z",
  "stateEnterTime" : "2021-07-14T23:01:32.429Z",
  "owner" : "OZONE",
  "containerID" : 5,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}</msg>
<status status="PASS" starttime="20210714 23:01:37.235" endtime="20210714 23:01:37.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:37.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:37.236" endtime="20210714 23:01:37.236"/>
</kw>
<status status="PASS" starttime="20210714 23:01:34.479" endtime="20210714 23:01:37.237"/>
</kw>
<msg timestamp="20210714 23:01:37.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:34.478" endtime="20210714 23:01:37.237"/>
</kw>
<msg timestamp="20210714 23:01:37.237" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 299441430,
  "numberOfKeys" : 231,
  "lastUsed" : "2021-07-14T23...</msg>
<status status="PASS" starttime="20210714 23:01:34.478" endtime="20210714 23:01:37.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:37.237" endtime="20210714 23:01:37.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:34.477" endtime="20210714 23:01:37.238"/>
</test>
<test id="s1-s3-s2-t3" name="List containers with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:37.242" level="INFO">Running command 'ozone admin container list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:39.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:39.716" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 299441430,
  "numberOfKeys" : 231,
  "lastUsed" : "2021-07-14T23...</msg>
<status status="PASS" starttime="20210714 23:01:37.240" endtime="20210714 23:01:39.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:39.717" level="INFO">{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 299441430,
  "numberOfKeys" : 231,
  "lastUsed" : "2021-07-14T23:01:39.569Z",
  "stateEnterTime" : "2021-07-14T22:39:14.757Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 15,
  "sequenceId" : 1001,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 5125,
  "numberOfKeys" : 5,
  "lastUsed" : "2021-07-14T23:01:39.569Z",
  "stateEnterTime" : "2021-07-14T23:00:23.909Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 10,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-14T23:01:39.569Z",
  "stateEnterTime" : "2021-07-14T23:00:23.912Z",
  "owner" : "om1",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 2050,
  "numberOfKeys" : 2,
  "lastUsed" : "2021-07-14T23:01:39.569Z",
  "stateEnterTime" : "2021-07-14T23:00:23.939Z",
  "owner" : "om1",
  "containerID" : 4,
  "deleteTransactionId" : 0,
  "sequenceId" : 4,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-14T23:01:39.570Z",
  "stateEnterTime" : "2021-07-14T23:01:32.429Z",
  "owner" : "OZONE",
  "containerID" : 5,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}</msg>
<status status="PASS" starttime="20210714 23:01:39.716" endtime="20210714 23:01:39.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:39.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:39.717" endtime="20210714 23:01:39.718"/>
</kw>
<status status="PASS" starttime="20210714 23:01:37.240" endtime="20210714 23:01:39.718"/>
</kw>
<msg timestamp="20210714 23:01:39.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:37.239" endtime="20210714 23:01:39.718"/>
</kw>
<msg timestamp="20210714 23:01:39.719" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 299441430,
  "numberOfKeys" : 231,
  "lastUsed" : "2021-07-14T23...</msg>
<status status="PASS" starttime="20210714 23:01:37.239" endtime="20210714 23:01:39.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:39.719" endtime="20210714 23:01:39.719"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:37.238" endtime="20210714 23:01:39.719"/>
</test>
<test id="s1-s3-s2-t4" name="List containers with container state">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:39.724" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:42.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:42.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:01:39.722" endtime="20210714 23:01:42.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:42.259" level="INFO"/>
<status status="PASS" starttime="20210714 23:01:42.258" endtime="20210714 23:01:42.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:42.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:42.259" endtime="20210714 23:01:42.259"/>
</kw>
<status status="PASS" starttime="20210714 23:01:39.721" endtime="20210714 23:01:42.260"/>
</kw>
<msg timestamp="20210714 23:01:42.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:39.721" endtime="20210714 23:01:42.260"/>
</kw>
<msg timestamp="20210714 23:01:42.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:01:39.721" endtime="20210714 23:01:42.260"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:42.260" endtime="20210714 23:01:42.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:39.720" endtime="20210714 23:01:42.261"/>
</test>
<test id="s1-s3-s2-t5" name="Container info">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:42.265" level="INFO">Running command 'ozone admin container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:45.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:45.046" level="INFO">${output} = Container id: 5
Pipeline id: afe6f075-846f-4977-99dc-bbd6e0362a89
Container State: OPEN
Datanodes: [cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:01:42.263" endtime="20210714 23:01:45.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:45.048" level="INFO">Container id: 5
Pipeline id: afe6f075-846f-4977-99dc-bbd6e0362a89
Container State: OPEN
Datanodes: [cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:01:45.047" endtime="20210714 23:01:45.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:45.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:45.048" endtime="20210714 23:01:45.048"/>
</kw>
<status status="PASS" starttime="20210714 23:01:42.263" endtime="20210714 23:01:45.049"/>
</kw>
<msg timestamp="20210714 23:01:45.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:42.263" endtime="20210714 23:01:45.049"/>
</kw>
<msg timestamp="20210714 23:01:45.049" level="INFO">${output} = Container id: 5
Pipeline id: afe6f075-846f-4977-99dc-bbd6e0362a89
Container State: OPEN
Datanodes: [cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:01:42.262" endtime="20210714 23:01:45.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:45.049" endtime="20210714 23:01:45.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:45.050" endtime="20210714 23:01:45.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:45.050" endtime="20210714 23:01:45.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:42.261" endtime="20210714 23:01:45.051"/>
</test>
<test id="s1-s3-s2-t6" name="Verbose container info">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:45.055" level="INFO">Running command 'ozone admin --verbose container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:47.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:47.665" level="INFO">${output} = Container id: 5
Pipeline Info: Pipeline[ Id: afe6f075-846f-4977-99dc-bbd6e0362a89, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION...</msg>
<status status="PASS" starttime="20210714 23:01:45.053" endtime="20210714 23:01:47.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:47.666" level="INFO">Container id: 5
Pipeline Info: Pipeline[ Id: afe6f075-846f-4977-99dc-bbd6e0362a89, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:01:32.426Z[UTC]]
Container State: OPEN
Datanodes: [cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:01:47.666" endtime="20210714 23:01:47.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:47.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:47.667" endtime="20210714 23:01:47.667"/>
</kw>
<status status="PASS" starttime="20210714 23:01:45.053" endtime="20210714 23:01:47.667"/>
</kw>
<msg timestamp="20210714 23:01:47.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:45.053" endtime="20210714 23:01:47.668"/>
</kw>
<msg timestamp="20210714 23:01:47.668" level="INFO">${output} = Container id: 5
Pipeline Info: Pipeline[ Id: afe6f075-846f-4977-99dc-bbd6e0362a89, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION...</msg>
<status status="PASS" starttime="20210714 23:01:45.052" endtime="20210714 23:01:47.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:47.668" endtime="20210714 23:01:47.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:45.051" endtime="20210714 23:01:47.669"/>
</test>
<test id="s1-s3-s2-t7" name="Close container">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:47.673" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:50.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:50.507" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20210714 23:01:47.671" endtime="20210714 23:01:50.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:50.508" level="INFO">1</msg>
<status status="PASS" starttime="20210714 23:01:50.507" endtime="20210714 23:01:50.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:50.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:50.508" endtime="20210714 23:01:50.509"/>
</kw>
<status status="PASS" starttime="20210714 23:01:47.671" endtime="20210714 23:01:50.509"/>
</kw>
<msg timestamp="20210714 23:01:50.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:47.670" endtime="20210714 23:01:50.509"/>
</kw>
<msg timestamp="20210714 23:01:50.509" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20210714 23:01:47.670" endtime="20210714 23:01:50.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:50.513" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:53.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:53.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:01:50.511" endtime="20210714 23:01:53.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:53.291" level="INFO"/>
<status status="PASS" starttime="20210714 23:01:53.291" endtime="20210714 23:01:53.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:53.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:53.292" endtime="20210714 23:01:53.292"/>
</kw>
<status status="PASS" starttime="20210714 23:01:50.510" endtime="20210714 23:01:53.292"/>
</kw>
<msg timestamp="20210714 23:01:53.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:50.510" endtime="20210714 23:01:53.293"/>
</kw>
<status status="PASS" starttime="20210714 23:01:50.510" endtime="20210714 23:01:53.293"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:53.296" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:56.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:56.024" level="INFO">${output} = Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f8...</msg>
<status status="PASS" starttime="20210714 23:01:53.294" endtime="20210714 23:01:56.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:56.025" level="INFO">Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default,
1d246d39-45a9-41b8-968c-00af7f92fe3d/ozone_datanode_1.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:01:56.024" endtime="20210714 23:01:56.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:56.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:56.025" endtime="20210714 23:01:56.026"/>
</kw>
<status status="PASS" starttime="20210714 23:01:53.294" endtime="20210714 23:01:56.026"/>
</kw>
<msg timestamp="20210714 23:01:56.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:53.293" endtime="20210714 23:01:56.026"/>
</kw>
<msg timestamp="20210714 23:01:56.026" level="INFO">${output} = Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f8...</msg>
<status status="PASS" starttime="20210714 23:01:53.293" endtime="20210714 23:01:56.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:56.026" endtime="20210714 23:01:56.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:56.031" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:58.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:58.630" level="INFO">${output} = Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f8...</msg>
<status status="PASS" starttime="20210714 23:01:56.029" endtime="20210714 23:01:58.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:58.632" level="INFO">Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default,
1d246d39-45a9-41b8-968c-00af7f92fe3d/ozone_datanode_1.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:01:58.631" endtime="20210714 23:01:58.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:58.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:58.632" endtime="20210714 23:01:58.632"/>
</kw>
<status status="PASS" starttime="20210714 23:01:56.029" endtime="20210714 23:01:58.633"/>
</kw>
<msg timestamp="20210714 23:01:58.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:56.028" endtime="20210714 23:01:58.633"/>
</kw>
<msg timestamp="20210714 23:01:58.633" level="INFO">${output} = Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f8...</msg>
<status status="PASS" starttime="20210714 23:01:56.028" endtime="20210714 23:01:58.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210714 23:01:58.634" level="FAIL">'Container id: 1
Pipeline id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef
Container State: CLOSING
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default,
1d246d39-45a9-41b8-968c-00af7f92fe3d/ozone_datanode_1.ozone_default]' does not contain 'CLOSED'</msg>
<status status="FAIL" starttime="20210714 23:01:58.633" endtime="20210714 23:01:58.634"/>
</kw>
<status status="FAIL" starttime="20210714 23:01:56.027" endtime="20210714 23:01:58.634"/>
</kw>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:08.639" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:11.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:11.382" level="INFO">${output} = Container id: 1
Pipeline id: ff2f7c0b-04fb-4184-b3b6-c3d663d336dd
Container State: CLOSED
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f83...</msg>
<status status="PASS" starttime="20210714 23:02:08.637" endtime="20210714 23:02:11.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:11.383" level="INFO">Container id: 1
Pipeline id: ff2f7c0b-04fb-4184-b3b6-c3d663d336dd
Container State: CLOSED
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f835ee027b/ozone_datanode_2.ozone_default,
1d246d39-45a9-41b8-968c-00af7f92fe3d/ozone_datanode_1.ozone_default]</msg>
<status status="PASS" starttime="20210714 23:02:11.383" endtime="20210714 23:02:11.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:11.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:11.384" endtime="20210714 23:02:11.384"/>
</kw>
<status status="PASS" starttime="20210714 23:02:08.636" endtime="20210714 23:02:11.384"/>
</kw>
<msg timestamp="20210714 23:02:11.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:08.636" endtime="20210714 23:02:11.385"/>
</kw>
<msg timestamp="20210714 23:02:11.385" level="INFO">${output} = Container id: 1
Pipeline id: ff2f7c0b-04fb-4184-b3b6-c3d663d336dd
Container State: CLOSED
Datanodes: [f860c5c9-cd39-4309-8b28-e605a9bbf515/ozone_datanode_3.ozone_default,
cda2af38-6970-415e-9399-a5f83...</msg>
<status status="PASS" starttime="20210714 23:02:08.635" endtime="20210714 23:02:11.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:11.385" endtime="20210714 23:02:11.385"/>
</kw>
<status status="PASS" starttime="20210714 23:02:08.634" endtime="20210714 23:02:11.386"/>
</kw>
<status status="PASS" starttime="20210714 23:01:56.027" endtime="20210714 23:02:11.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:47.669" endtime="20210714 23:02:11.386"/>
</test>
<test id="s1-s3-s2-t8" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:11.389" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:13.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:02:13.250" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20210714 23:02:11.388" endtime="20210714 23:02:13.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:13.252" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  delete  Delete container
  create  Create container
  close   close container</msg>
<status status="PASS" starttime="20210714 23:02:13.251" endtime="20210714 23:02:13.252"/>
</kw>
<msg timestamp="20210714 23:02:13.252" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20210714 23:02:11.387" endtime="20210714 23:02:13.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:13.252" endtime="20210714 23:02:13.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:13.253" endtime="20210714 23:02:13.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:13.253" endtime="20210714 23:02:13.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>delete</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:13.254" endtime="20210714 23:02:13.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:13.254" endtime="20210714 23:02:13.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:13.255" endtime="20210714 23:02:13.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:11.386" endtime="20210714 23:02:13.255"/>
</test>
<test id="s1-s3-s2-t9" name="Cannot close container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20210714 23:02:13.258" level="INFO">Execution passed with message:
Skip privilege check in unsecure cluster</msg>
<status status="PASS" starttime="20210714 23:02:13.257" endtime="20210714 23:02:13.258"/>
</kw>
<status status="PASS" starttime="20210714 23:02:13.257" endtime="20210714 23:02:13.258"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:13.256" endtime="20210714 23:02:13.258">Skip privilege check in unsecure cluster</status>
</test>
<test id="s1-s3-s2-t10" name="Cannot create container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20210714 23:02:13.260" level="INFO">Execution passed with message:
Skip privilege check in unsecure cluster</msg>
<status status="PASS" starttime="20210714 23:02:13.260" endtime="20210714 23:02:13.260"/>
</kw>
<status status="PASS" starttime="20210714 23:02:13.259" endtime="20210714 23:02:13.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:13.259" endtime="20210714 23:02:13.260">Skip privilege check in unsecure cluster</status>
</test>
<test id="s1-s3-s2-t11" name="Cannot delete container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container delete "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20210714 23:02:13.262" level="INFO">Execution passed with message:
Skip privilege check in unsecure cluster</msg>
<status status="PASS" starttime="20210714 23:02:13.262" endtime="20210714 23:02:13.262"/>
</kw>
<status status="PASS" starttime="20210714 23:02:13.261" endtime="20210714 23:02:13.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:13.261" endtime="20210714 23:02:13.262">Skip privilege check in unsecure cluster</status>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20210714 23:01:24.520" endtime="20210714 23:02:13.263"/>
</suite>
<suite id="s1-s3-s3" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s3-s3-t1" name="List datanodes">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:13.274" level="INFO">Running command 'ozone admin datanode list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:15.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:15.926" level="INFO">${output} = Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da5...</msg>
<status status="PASS" starttime="20210714 23:02:13.272" endtime="20210714 23:02:15.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:15.927" level="INFO">Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da53-46e3-83f0-dca1a0ac44ef/RATIS/THREE/RATIS/OPEN/Leader
afe6f075-846f-4977-99dc-bbd6e0362a89/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
f1ffd87e-5811-4a36-abbd-cf6015f302d7/RATIS/ONE/RATIS/OPEN/Leader

Datanode: f860c5c9-cd39-4309-8b28-e605a9bbf515 (/default-rack/172.18.0.8/ozone_datanode_3.ozone_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
0986964a-0b62-40b1-b3bd-08e8d9fc332f/RATIS/ONE/RATIS/OPEN/Leader
69d32a9a-da53-46e3-83f0-dca1a0ac44ef/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 1d246d39-45a9-41b8-968c-00af7f92fe3d (/default-rack/172.18.0.4/ozone_datanode_1.ozone_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da53-46e3-83f0-dca1a0ac44ef/RATIS/THREE/RATIS/OPEN/Follower
93958489-7566-4731-b77d-f1ff3590d6c5/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210714 23:02:15.926" endtime="20210714 23:02:15.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:15.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:15.927" endtime="20210714 23:02:15.928"/>
</kw>
<status status="PASS" starttime="20210714 23:02:13.272" endtime="20210714 23:02:15.928"/>
</kw>
<msg timestamp="20210714 23:02:15.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:13.271" endtime="20210714 23:02:15.928"/>
</kw>
<msg timestamp="20210714 23:02:15.929" level="INFO">${output} = Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da5...</msg>
<status status="PASS" starttime="20210714 23:02:13.271" endtime="20210714 23:02:15.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:15.929" endtime="20210714 23:02:15.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:15.929" endtime="20210714 23:02:15.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:13.271" endtime="20210714 23:02:15.930"/>
</test>
<test id="s1-s3-s3-t2" name="Filter list by UUID">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:15.934" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:18.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:18.614" level="INFO">${output} = cda2af38-6970-415e-9399-a5f835ee027b</msg>
<status status="PASS" starttime="20210714 23:02:15.932" endtime="20210714 23:02:18.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:18.615" level="INFO">cda2af38-6970-415e-9399-a5f835ee027b</msg>
<status status="PASS" starttime="20210714 23:02:18.614" endtime="20210714 23:02:18.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:18.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:18.615" endtime="20210714 23:02:18.616"/>
</kw>
<status status="PASS" starttime="20210714 23:02:15.932" endtime="20210714 23:02:18.616"/>
</kw>
<msg timestamp="20210714 23:02:18.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:15.932" endtime="20210714 23:02:18.616"/>
</kw>
<msg timestamp="20210714 23:02:18.616" level="INFO">${uuid} = cda2af38-6970-415e-9399-a5f835ee027b</msg>
<status status="PASS" starttime="20210714 23:02:15.931" endtime="20210714 23:02:18.616"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:18.619" level="INFO">Running command 'ozone admin datanode list --id "cda2af38-6970-415e-9399-a5f835ee027b" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:21.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:21.380" level="INFO">${output} = Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da5...</msg>
<status status="PASS" starttime="20210714 23:02:18.618" endtime="20210714 23:02:21.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:21.381" level="INFO">Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da53-46e3-83f0-dca1a0ac44ef/RATIS/THREE/RATIS/OPEN/Leader
afe6f075-846f-4977-99dc-bbd6e0362a89/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
f1ffd87e-5811-4a36-abbd-cf6015f302d7/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210714 23:02:21.381" endtime="20210714 23:02:21.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:21.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:21.382" endtime="20210714 23:02:21.382"/>
</kw>
<status status="PASS" starttime="20210714 23:02:18.617" endtime="20210714 23:02:21.382"/>
</kw>
<msg timestamp="20210714 23:02:21.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:18.617" endtime="20210714 23:02:21.383"/>
</kw>
<msg timestamp="20210714 23:02:21.383" level="INFO">${output} = Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
69d32a9a-da5...</msg>
<status status="PASS" starttime="20210714 23:02:18.616" endtime="20210714 23:02:21.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:21.383" endtime="20210714 23:02:21.383"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210714 23:02:21.384" level="INFO">1 out of 7 lines matched</msg>
<msg timestamp="20210714 23:02:21.384" level="INFO">${datanodes} = Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines)</msg>
<status status="PASS" starttime="20210714 23:02:21.384" endtime="20210714 23:02:21.384"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210714 23:02:21.385" level="INFO">1 lines returned</msg>
<msg timestamp="20210714 23:02:21.385" level="INFO">@{lines} = [ Datanode: cda2af38-6970-415e-9399-a5f835ee027b (/default-rack/172.18.0.7/ozone_datanode_2.ozone_default/3 pipelines) ]</msg>
<status status="PASS" starttime="20210714 23:02:21.385" endtime="20210714 23:02:21.385"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210714 23:02:21.385" level="INFO">Length is 1</msg>
<msg timestamp="20210714 23:02:21.386" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20210714 23:02:21.385" endtime="20210714 23:02:21.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:21.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:21.386" endtime="20210714 23:02:21.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:15.930" endtime="20210714 23:02:21.386"/>
</test>
<test id="s1-s3-s3-t3" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:21.390" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:23.218" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:02:23.218" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210714 23:02:21.388" endtime="20210714 23:02:23.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:23.220" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20210714 23:02:23.219" endtime="20210714 23:02:23.220"/>
</kw>
<msg timestamp="20210714 23:02:23.220" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210714 23:02:21.388" endtime="20210714 23:02:23.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:23.220" endtime="20210714 23:02:23.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:23.221" endtime="20210714 23:02:23.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:21.387" endtime="20210714 23:02:23.221"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20210714 23:02:13.265" endtime="20210714 23:02:23.222"/>
</suite>
<suite id="s1-s3-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:02:23.229" endtime="20210714 23:02:23.229"/>
</kw>
<test id="s1-s3-s4-t1" name="Create pipeline">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:23.234" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:25.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:25.882" level="INFO">${output} = PipelineID=fe35bfc1-94e7-445a-bd83-602cdf519c7c is created. Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone...</msg>
<status status="PASS" starttime="20210714 23:02:23.232" endtime="20210714 23:02:25.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:25.883" level="INFO">PipelineID=fe35bfc1-94e7-445a-bd83-602cdf519c7c is created. Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]</msg>
<status status="PASS" starttime="20210714 23:02:25.882" endtime="20210714 23:02:25.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:25.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:25.883" endtime="20210714 23:02:25.884"/>
</kw>
<status status="PASS" starttime="20210714 23:02:23.231" endtime="20210714 23:02:25.884"/>
</kw>
<msg timestamp="20210714 23:02:25.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:23.231" endtime="20210714 23:02:25.884"/>
</kw>
<msg timestamp="20210714 23:02:25.884" level="INFO">${output} = PipelineID=fe35bfc1-94e7-445a-bd83-602cdf519c7c is created. Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone...</msg>
<status status="PASS" starttime="20210714 23:02:23.230" endtime="20210714 23:02:25.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:25.885" endtime="20210714 23:02:25.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:25.885" endtime="20210714 23:02:25.885"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:25.889" level="INFO">Running command 'echo "PipelineID=fe35bfc1-94e7-445a-bd83-602cdf519c7c is created. Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:25.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:25.892" level="INFO">${output} = fe35bfc1-94e7-445a-bd83-602cdf519c7c</msg>
<status status="PASS" starttime="20210714 23:02:25.887" endtime="20210714 23:02:25.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:25.893" level="INFO">fe35bfc1-94e7-445a-bd83-602cdf519c7c</msg>
<status status="PASS" starttime="20210714 23:02:25.892" endtime="20210714 23:02:25.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:25.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:25.893" endtime="20210714 23:02:25.894"/>
</kw>
<status status="PASS" starttime="20210714 23:02:25.886" endtime="20210714 23:02:25.894"/>
</kw>
<msg timestamp="20210714 23:02:25.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:25.886" endtime="20210714 23:02:25.894"/>
</kw>
<msg timestamp="20210714 23:02:25.894" level="INFO">${pipeline} = fe35bfc1-94e7-445a-bd83-602cdf519c7c</msg>
<status status="PASS" starttime="20210714 23:02:25.885" endtime="20210714 23:02:25.895"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:02:25.895" level="INFO">${PIPELINE} = fe35bfc1-94e7-445a-bd83-602cdf519c7c</msg>
<status status="PASS" starttime="20210714 23:02:25.895" endtime="20210714 23:02:25.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:23.230" endtime="20210714 23:02:25.895"/>
</test>
<test id="s1-s3-s4-t2" name="List pipelines">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:25.900" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:28.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:28.667" level="INFO">${output} = Pipeline[ Id: 0986964a-0b62-40b1-b3bd-08e8d9fc332f, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:25.898" endtime="20210714 23:02:28.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:28.668" level="INFO">Pipeline[ Id: 0986964a-0b62-40b1-b3bd-08e8d9fc332f, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:f860c5c9-cd39-4309-8b28-e605a9bbf515, CreationTimestamp2021-07-14T22:38:24.644Z[UTC]]
Pipeline[ Id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cda2af38-6970-415e-9399-a5f835ee027b, CreationTimestamp2021-07-14T22:38:25.620Z[UTC]]
Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]
Pipeline[ Id: 93958489-7566-4731-b77d-f1ff3590d6c5, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:1d246d39-45a9-41b8-968c-00af7f92fe3d, CreationTimestamp2021-07-14T22:38:25.578Z[UTC]]
Pipeline[ Id: afe6f075-846f-4977-99dc-bbd6e0362a89, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:01:32.426Z[UTC]]
Pipeline[ Id: f1ffd87e-5811-4a36-abbd-cf6015f302d7, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cda2af38-6970-415e-9399-a5f835ee027b, CreationTimestamp2021-07-14T22:38:24.255Z[UTC]]</msg>
<status status="PASS" starttime="20210714 23:02:28.667" endtime="20210714 23:02:28.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:28.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:28.668" endtime="20210714 23:02:28.669"/>
</kw>
<status status="PASS" starttime="20210714 23:02:25.898" endtime="20210714 23:02:28.669"/>
</kw>
<msg timestamp="20210714 23:02:28.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:25.898" endtime="20210714 23:02:28.669"/>
</kw>
<msg timestamp="20210714 23:02:28.669" level="INFO">${output} = Pipeline[ Id: 0986964a-0b62-40b1-b3bd-08e8d9fc332f, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:25.897" endtime="20210714 23:02:28.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:28.670" endtime="20210714 23:02:28.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:25.896" endtime="20210714 23:02:28.670"/>
</test>
<test id="s1-s3-s4-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:28.675" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:31.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:31.432" level="INFO">${output} = Pipeline[ Id: 0986964a-0b62-40b1-b3bd-08e8d9fc332f, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:28.673" endtime="20210714 23:02:31.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:31.433" level="INFO">Pipeline[ Id: 0986964a-0b62-40b1-b3bd-08e8d9fc332f, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:f860c5c9-cd39-4309-8b28-e605a9bbf515, CreationTimestamp2021-07-14T22:38:24.644Z[UTC]]
Pipeline[ Id: 69d32a9a-da53-46e3-83f0-dca1a0ac44ef, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cda2af38-6970-415e-9399-a5f835ee027b, CreationTimestamp2021-07-14T22:38:25.620Z[UTC]]
Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]
Pipeline[ Id: 93958489-7566-4731-b77d-f1ff3590d6c5, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:1d246d39-45a9-41b8-968c-00af7f92fe3d, CreationTimestamp2021-07-14T22:38:25.578Z[UTC]]
Pipeline[ Id: afe6f075-846f-4977-99dc-bbd6e0362a89, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:01:32.426Z[UTC]]
Pipeline[ Id: f1ffd87e-5811-4a36-abbd-cf6015f302d7, Nodes: cda2af38-6970-415e-9399-a5f835ee027b{ip: 172.18.0.7, host: ozone_datanode_2.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cda2af38-6970-415e-9399-a5f835ee027b, CreationTimestamp2021-07-14T22:38:24.255Z[UTC]]</msg>
<status status="PASS" starttime="20210714 23:02:31.432" endtime="20210714 23:02:31.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:31.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:31.433" endtime="20210714 23:02:31.434"/>
</kw>
<status status="PASS" starttime="20210714 23:02:28.672" endtime="20210714 23:02:31.434"/>
</kw>
<msg timestamp="20210714 23:02:31.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:28.672" endtime="20210714 23:02:31.434"/>
</kw>
<msg timestamp="20210714 23:02:31.435" level="INFO">${output} = Pipeline[ Id: 0986964a-0b62-40b1-b3bd-08e8d9fc332f, Nodes: f860c5c9-cd39-4309-8b28-e605a9bbf515{ip: 172.18.0.8, host: ozone_datanode_3.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:28.671" endtime="20210714 23:02:31.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:31.435" endtime="20210714 23:02:31.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:28.671" endtime="20210714 23:02:31.436"/>
</test>
<test id="s1-s3-s4-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:31.442" level="INFO">Running command 'ozone admin pipeline deactivate "fe35bfc1-94e7-445a-bd83-602cdf519c7c" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:34.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:34.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:02:31.439" endtime="20210714 23:02:34.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:34.068" level="INFO"/>
<status status="PASS" starttime="20210714 23:02:34.068" endtime="20210714 23:02:34.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:34.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:34.069" endtime="20210714 23:02:34.069"/>
</kw>
<status status="PASS" starttime="20210714 23:02:31.439" endtime="20210714 23:02:34.069"/>
</kw>
<msg timestamp="20210714 23:02:34.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:31.438" endtime="20210714 23:02:34.070"/>
</kw>
<status status="PASS" starttime="20210714 23:02:31.437" endtime="20210714 23:02:34.070"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:34.073" level="INFO">Running command 'ozone admin pipeline list | grep "fe35bfc1-94e7-445a-bd83-602cdf519c7c" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:37.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:37.037" level="INFO">${output} = Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:34.071" endtime="20210714 23:02:37.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:37.038" level="INFO">Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]</msg>
<status status="PASS" starttime="20210714 23:02:37.037" endtime="20210714 23:02:37.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:37.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:37.038" endtime="20210714 23:02:37.039"/>
</kw>
<status status="PASS" starttime="20210714 23:02:34.071" endtime="20210714 23:02:37.039"/>
</kw>
<msg timestamp="20210714 23:02:37.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:34.071" endtime="20210714 23:02:37.039"/>
</kw>
<msg timestamp="20210714 23:02:37.039" level="INFO">${output} = Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:34.070" endtime="20210714 23:02:37.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:37.039" endtime="20210714 23:02:37.040"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:31.437" endtime="20210714 23:02:37.040"/>
</test>
<test id="s1-s3-s4-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:37.045" level="INFO">Running command 'ozone admin pipeline activate "fe35bfc1-94e7-445a-bd83-602cdf519c7c" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:39.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:39.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:02:37.043" endtime="20210714 23:02:39.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:39.689" level="INFO"/>
<status status="PASS" starttime="20210714 23:02:39.688" endtime="20210714 23:02:39.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:39.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:39.689" endtime="20210714 23:02:39.690"/>
</kw>
<status status="PASS" starttime="20210714 23:02:37.042" endtime="20210714 23:02:39.690"/>
</kw>
<msg timestamp="20210714 23:02:39.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:37.042" endtime="20210714 23:02:39.690"/>
</kw>
<status status="PASS" starttime="20210714 23:02:37.042" endtime="20210714 23:02:39.690"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:39.694" level="INFO">Running command 'ozone admin pipeline list | grep "fe35bfc1-94e7-445a-bd83-602cdf519c7c" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:42.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:42.509" level="INFO">${output} = Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:39.692" endtime="20210714 23:02:42.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:42.510" level="INFO">Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]</msg>
<status status="PASS" starttime="20210714 23:02:42.509" endtime="20210714 23:02:42.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:42.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:42.510" endtime="20210714 23:02:42.511"/>
</kw>
<status status="PASS" starttime="20210714 23:02:39.691" endtime="20210714 23:02:42.511"/>
</kw>
<msg timestamp="20210714 23:02:42.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:39.691" endtime="20210714 23:02:42.511"/>
</kw>
<msg timestamp="20210714 23:02:42.511" level="INFO">${output} = Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:39.691" endtime="20210714 23:02:42.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:42.512" endtime="20210714 23:02:42.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:37.041" endtime="20210714 23:02:42.512"/>
</test>
<test id="s1-s3-s4-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:42.518" level="INFO">Running command 'ozone admin pipeline close "fe35bfc1-94e7-445a-bd83-602cdf519c7c" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:45.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:45.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:02:42.516" endtime="20210714 23:02:45.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:45.160" level="INFO"/>
<status status="PASS" starttime="20210714 23:02:45.160" endtime="20210714 23:02:45.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:45.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:45.161" endtime="20210714 23:02:45.161"/>
</kw>
<status status="PASS" starttime="20210714 23:02:42.515" endtime="20210714 23:02:45.162"/>
</kw>
<msg timestamp="20210714 23:02:45.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:42.515" endtime="20210714 23:02:45.162"/>
</kw>
<status status="PASS" starttime="20210714 23:02:42.514" endtime="20210714 23:02:45.162"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:45.165" level="INFO">Running command 'ozone admin pipeline list | grep "fe35bfc1-94e7-445a-bd83-602cdf519c7c" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:47.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:47.860" level="INFO">${output} = Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:45.163" endtime="20210714 23:02:47.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:47.861" level="INFO">Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2021-07-14T23:02:25.594Z[UTC]]</msg>
<status status="PASS" starttime="20210714 23:02:47.861" endtime="20210714 23:02:47.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:47.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:47.862" endtime="20210714 23:02:47.862"/>
</kw>
<status status="PASS" starttime="20210714 23:02:45.163" endtime="20210714 23:02:47.863"/>
</kw>
<msg timestamp="20210714 23:02:47.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:45.163" endtime="20210714 23:02:47.863"/>
</kw>
<msg timestamp="20210714 23:02:47.863" level="INFO">${output} = Pipeline[ Id: fe35bfc1-94e7-445a-bd83-602cdf519c7c, Nodes: 1d246d39-45a9-41b8-968c-00af7f92fe3d{ip: 172.18.0.4, host: ozone_datanode_1.ozone_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=...</msg>
<status status="PASS" starttime="20210714 23:02:45.162" endtime="20210714 23:02:47.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:47.866" endtime="20210714 23:02:47.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:42.513" endtime="20210714 23:02:47.867"/>
</test>
<test id="s1-s3-s4-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:47.871" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:49.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:02:49.665" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210714 23:02:47.869" endtime="20210714 23:02:49.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:49.666" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20210714 23:02:49.665" endtime="20210714 23:02:49.666"/>
</kw>
<msg timestamp="20210714 23:02:49.666" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210714 23:02:47.869" endtime="20210714 23:02:49.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:49.666" endtime="20210714 23:02:49.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:49.667" endtime="20210714 23:02:49.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:49.667" endtime="20210714 23:02:49.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:49.668" endtime="20210714 23:02:49.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:49.668" endtime="20210714 23:02:49.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:47.868" endtime="20210714 23:02:49.669"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20210714 23:02:23.224" endtime="20210714 23:02:49.670"/>
</suite>
<suite id="s1-s3-s5" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:02:49.677" endtime="20210714 23:02:49.678"/>
</kw>
<test id="s1-s3-s5-t1" name="Check replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:49.681" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:52.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:52.387" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210714 23:02:49.679" endtime="20210714 23:02:52.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:52.388" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210714 23:02:52.387" endtime="20210714 23:02:52.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:52.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:52.388" endtime="20210714 23:02:52.388"/>
</kw>
<status status="PASS" starttime="20210714 23:02:49.679" endtime="20210714 23:02:52.389"/>
</kw>
<msg timestamp="20210714 23:02:52.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:49.679" endtime="20210714 23:02:52.389"/>
</kw>
<msg timestamp="20210714 23:02:52.389" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210714 23:02:49.678" endtime="20210714 23:02:52.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:52.389" endtime="20210714 23:02:52.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:52.390" endtime="20210714 23:02:52.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:49.678" endtime="20210714 23:02:52.390"/>
</test>
<test id="s1-s3-s5-t2" name="Check replicationmanager with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:52.395" level="INFO">Running command 'ozone admin replicationmanager status --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:54.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:54.949" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210714 23:02:52.393" endtime="20210714 23:02:54.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:54.950" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210714 23:02:54.949" endtime="20210714 23:02:54.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:54.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:54.950" endtime="20210714 23:02:54.951"/>
</kw>
<status status="PASS" starttime="20210714 23:02:52.392" endtime="20210714 23:02:54.951"/>
</kw>
<msg timestamp="20210714 23:02:54.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:52.392" endtime="20210714 23:02:54.951"/>
</kw>
<msg timestamp="20210714 23:02:54.952" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210714 23:02:52.392" endtime="20210714 23:02:54.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:54.952" endtime="20210714 23:02:54.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:54.952" endtime="20210714 23:02:54.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:52.391" endtime="20210714 23:02:54.953"/>
</test>
<test id="s1-s3-s5-t3" name="Stop replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:54.957" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:02:57.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:02:57.659" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210714 23:02:54.956" endtime="20210714 23:02:57.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:02:57.661" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210714 23:02:57.660" endtime="20210714 23:02:57.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:02:57.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:02:57.661" endtime="20210714 23:02:57.662"/>
</kw>
<status status="PASS" starttime="20210714 23:02:54.955" endtime="20210714 23:02:57.662"/>
</kw>
<msg timestamp="20210714 23:02:57.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:54.955" endtime="20210714 23:02:57.662"/>
</kw>
<msg timestamp="20210714 23:02:57.662" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210714 23:02:54.955" endtime="20210714 23:02:57.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:02:57.663" endtime="20210714 23:02:57.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:02:57.666" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:00.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:00.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:02:57.665" endtime="20210714 23:03:00.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:00.343" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:00.342" endtime="20210714 23:03:00.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:00.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:00.343" endtime="20210714 23:03:00.344"/>
</kw>
<status status="PASS" starttime="20210714 23:02:57.664" endtime="20210714 23:03:00.344"/>
</kw>
<msg timestamp="20210714 23:03:00.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:02:57.664" endtime="20210714 23:03:00.344"/>
</kw>
<status status="PASS" starttime="20210714 23:02:57.663" endtime="20210714 23:03:00.344"/>
</kw>
<status status="PASS" starttime="20210714 23:02:57.663" endtime="20210714 23:03:00.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:02:54.954" endtime="20210714 23:03:00.345"/>
</test>
<test id="s1-s3-s5-t4" name="Start replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:00.349" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:03.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:03.054" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210714 23:03:00.347" endtime="20210714 23:03:03.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:03.056" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210714 23:03:03.055" endtime="20210714 23:03:03.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:03.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:03.056" endtime="20210714 23:03:03.057"/>
</kw>
<status status="PASS" starttime="20210714 23:03:00.347" endtime="20210714 23:03:03.057"/>
</kw>
<msg timestamp="20210714 23:03:03.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:00.347" endtime="20210714 23:03:03.057"/>
</kw>
<msg timestamp="20210714 23:03:03.058" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210714 23:03:00.346" endtime="20210714 23:03:03.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:03.058" endtime="20210714 23:03:03.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:03.062" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:05.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:05.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:03.060" endtime="20210714 23:03:05.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:05.603" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:05.602" endtime="20210714 23:03:05.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:05.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:05.603" endtime="20210714 23:03:05.604"/>
</kw>
<status status="PASS" starttime="20210714 23:03:03.060" endtime="20210714 23:03:05.604"/>
</kw>
<msg timestamp="20210714 23:03:05.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:03.059" endtime="20210714 23:03:05.604"/>
</kw>
<status status="PASS" starttime="20210714 23:03:03.059" endtime="20210714 23:03:05.605"/>
</kw>
<status status="PASS" starttime="20210714 23:03:03.058" endtime="20210714 23:03:05.605"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:00.345" endtime="20210714 23:03:05.605"/>
</test>
<test id="s1-s3-s5-t5" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:05.608" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:07.508" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:03:07.508" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20210714 23:03:05.607" endtime="20210714 23:03:07.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:07.509" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20210714 23:03:07.508" endtime="20210714 23:03:07.509"/>
</kw>
<msg timestamp="20210714 23:03:07.509" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20210714 23:03:05.606" endtime="20210714 23:03:07.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:07.510" endtime="20210714 23:03:07.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:07.510" endtime="20210714 23:03:07.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:07.510" endtime="20210714 23:03:07.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:07.511" endtime="20210714 23:03:07.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:05.605" endtime="20210714 23:03:07.511"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20210714 23:02:49.672" endtime="20210714 23:03:07.513"/>
</suite>
<suite id="s1-s3-s6" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s3-s6-t1" name="Check safemode">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:07.524" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:10.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:10.004" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:07.522" endtime="20210714 23:03:10.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:10.005" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:10.005" endtime="20210714 23:03:10.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:10.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:10.006" endtime="20210714 23:03:10.006"/>
</kw>
<status status="PASS" starttime="20210714 23:03:07.521" endtime="20210714 23:03:10.007"/>
</kw>
<msg timestamp="20210714 23:03:10.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:07.521" endtime="20210714 23:03:10.007"/>
</kw>
<msg timestamp="20210714 23:03:10.007" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:07.520" endtime="20210714 23:03:10.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:10.007" endtime="20210714 23:03:10.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:07.520" endtime="20210714 23:03:10.008"/>
</test>
<test id="s1-s3-s6-t2" name="Check safemode with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:10.012" level="INFO">Running command 'ozone admin safemode status --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:12.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:12.654" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:10.010" endtime="20210714 23:03:12.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:12.655" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:12.654" endtime="20210714 23:03:12.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:12.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:12.655" endtime="20210714 23:03:12.656"/>
</kw>
<status status="PASS" starttime="20210714 23:03:10.010" endtime="20210714 23:03:12.656"/>
</kw>
<msg timestamp="20210714 23:03:12.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:10.010" endtime="20210714 23:03:12.656"/>
</kw>
<msg timestamp="20210714 23:03:12.657" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:10.009" endtime="20210714 23:03:12.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:12.657" endtime="20210714 23:03:12.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:10.008" endtime="20210714 23:03:12.657"/>
</test>
<test id="s1-s3-s6-t3" name="Wait for safemode exit">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:12.662" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:15.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:15.271" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:12.660" endtime="20210714 23:03:15.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:15.273" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:15.272" endtime="20210714 23:03:15.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:15.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:15.273" endtime="20210714 23:03:15.273"/>
</kw>
<status status="PASS" starttime="20210714 23:03:12.660" endtime="20210714 23:03:15.274"/>
</kw>
<msg timestamp="20210714 23:03:15.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:12.659" endtime="20210714 23:03:15.274"/>
</kw>
<msg timestamp="20210714 23:03:15.274" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:12.659" endtime="20210714 23:03:15.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:15.274" endtime="20210714 23:03:15.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:12.658" endtime="20210714 23:03:15.275"/>
</test>
<test id="s1-s3-s6-t4" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:15.279" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:17.142" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:03:17.142" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20210714 23:03:15.277" endtime="20210714 23:03:17.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:17.143" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20210714 23:03:17.142" endtime="20210714 23:03:17.143"/>
</kw>
<msg timestamp="20210714 23:03:17.144" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20210714 23:03:15.277" endtime="20210714 23:03:17.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:17.144" endtime="20210714 23:03:17.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:17.145" endtime="20210714 23:03:17.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:17.145" endtime="20210714 23:03:17.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:17.146" endtime="20210714 23:03:17.146"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:15.276" endtime="20210714 23:03:17.146"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20210714 23:03:07.515" endtime="20210714 23:03:17.147"/>
</suite>
<suite id="s1-s3-s7" name="Scmha" source="/opt/hadoop/smoketest/admincli/scmha.robot">
<test id="s1-s3-s7-t1" name="Run scm roles">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:17.158" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:19.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:19.864" level="INFO">${output} = [c82d63df9571:9894]</msg>
<status status="PASS" starttime="20210714 23:03:17.156" endtime="20210714 23:03:19.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:19.865" level="INFO">[c82d63df9571:9894]</msg>
<status status="PASS" starttime="20210714 23:03:19.864" endtime="20210714 23:03:19.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:19.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:19.865" endtime="20210714 23:03:19.866"/>
</kw>
<status status="PASS" starttime="20210714 23:03:17.155" endtime="20210714 23:03:19.866"/>
</kw>
<msg timestamp="20210714 23:03:19.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:17.155" endtime="20210714 23:03:19.867"/>
</kw>
<msg timestamp="20210714 23:03:19.867" level="INFO">${output} = [c82d63df9571:9894]</msg>
<status status="PASS" starttime="20210714 23:03:17.155" endtime="20210714 23:03:19.867"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:03:19.867" endtime="20210714 23:03:19.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:17.154" endtime="20210714 23:03:19.868"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210714 23:03:17.149" endtime="20210714 23:03:19.869"/>
</suite>
<status status="PASS" starttime="20210714 23:01:22.664" endtime="20210714 23:03:19.872"/>
</suite>
<suite id="s1-s4" name="ozonefs-simple-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:03:23.736" level="INFO">${random} = 56145</msg>
<status status="PASS" starttime="20210714 23:03:23.736" endtime="20210714 23:03:23.736"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:03:23.737" level="INFO">${BUCKET} = 56145-bucket1-ofs</msg>
<status status="PASS" starttime="20210714 23:03:23.737" endtime="20210714 23:03:23.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:03:23.738" level="INFO">${BUCKET2} = 56145-bucket2-ofs</msg>
<status status="PASS" starttime="20210714 23:03:23.737" endtime="20210714 23:03:23.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:03:23.738" level="INFO">${BUCKET_IN_VOL2} = 56145-bucket3-ofs</msg>
<status status="PASS" starttime="20210714 23:03:23.738" endtime="20210714 23:03:23.739"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:03:23.742" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:03:23.742" endtime="20210714 23:03:23.742"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:03:23.743" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:03:23.742" endtime="20210714 23:03:23.743"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.741" endtime="20210714 23:03:23.743"/>
</kw>
<msg timestamp="20210714 23:03:23.743" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:03:23.740" endtime="20210714 23:03:23.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:03:23.745" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20210714 23:03:23.745" endtime="20210714 23:03:23.745"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:03:23.745" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20210714 23:03:23.745" endtime="20210714 23:03:23.745"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.744" endtime="20210714 23:03:23.746"/>
</kw>
<msg timestamp="20210714 23:03:23.746" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20210714 23:03:23.743" endtime="20210714 23:03:23.746"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.740" endtime="20210714 23:03:23.746"/>
</kw>
<msg timestamp="20210714 23:03:23.746" level="INFO">${url} = ofs://om/fstest1/56145-bucket1-ofs/</msg>
<status status="PASS" starttime="20210714 23:03:23.739" endtime="20210714 23:03:23.746"/>
</kw>
<msg timestamp="20210714 23:03:23.746" level="INFO">${BASE_URL} = ofs://om/fstest1/56145-bucket1-ofs/</msg>
<status status="PASS" starttime="20210714 23:03:23.739" endtime="20210714 23:03:23.746"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:03:23.747" level="INFO">${BASE_URL} = ofs://om/fstest1/56145-bucket1-ofs/</msg>
<status status="PASS" starttime="20210714 23:03:23.747" endtime="20210714 23:03:23.747"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:03:23.749" level="INFO">${DEEP_URL} = ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20210714 23:03:23.747" endtime="20210714 23:03:23.749"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.736" endtime="20210714 23:03:23.749"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:23.753" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:26.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:26.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:23.749" endtime="20210714 23:03:26.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:26.534" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:26.534" endtime="20210714 23:03:26.534"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.749" endtime="20210714 23:03:26.535"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:26.537" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:29.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:29.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:26.535" endtime="20210714 23:03:29.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:29.241" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:29.241" endtime="20210714 23:03:29.241"/>
</kw>
<status status="PASS" starttime="20210714 23:03:26.535" endtime="20210714 23:03:29.242"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.749" endtime="20210714 23:03:29.242"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:29.246" level="INFO">Running command 'ozone sh bucket create fstest1/56145-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:31.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:31.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:29.244" endtime="20210714 23:03:31.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:31.867" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:31.867" endtime="20210714 23:03:31.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:31.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:31.868" endtime="20210714 23:03:31.868"/>
</kw>
<status status="PASS" starttime="20210714 23:03:29.244" endtime="20210714 23:03:31.868"/>
</kw>
<msg timestamp="20210714 23:03:31.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:29.243" endtime="20210714 23:03:31.868"/>
</kw>
<status status="PASS" starttime="20210714 23:03:29.243" endtime="20210714 23:03:31.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:31.874" level="INFO">Running command 'ozone sh bucket create fstest1/56145-bucket2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:34.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:34.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:31.870" endtime="20210714 23:03:34.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:34.685" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:34.684" endtime="20210714 23:03:34.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:34.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:34.685" endtime="20210714 23:03:34.686"/>
</kw>
<status status="PASS" starttime="20210714 23:03:31.870" endtime="20210714 23:03:34.686"/>
</kw>
<msg timestamp="20210714 23:03:34.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:31.869" endtime="20210714 23:03:34.686"/>
</kw>
<status status="PASS" starttime="20210714 23:03:31.869" endtime="20210714 23:03:34.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:34.689" level="INFO">Running command 'ozone sh bucket create fstest2/56145-bucket3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:37.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:37.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:34.688" endtime="20210714 23:03:37.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:37.534" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:37.534" endtime="20210714 23:03:37.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:37.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:37.535" endtime="20210714 23:03:37.535"/>
</kw>
<status status="PASS" starttime="20210714 23:03:34.687" endtime="20210714 23:03:37.535"/>
</kw>
<msg timestamp="20210714 23:03:37.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:34.687" endtime="20210714 23:03:37.535"/>
</kw>
<status status="PASS" starttime="20210714 23:03:34.686" endtime="20210714 23:03:37.536"/>
</kw>
<status status="PASS" starttime="20210714 23:03:29.242" endtime="20210714 23:03:37.536"/>
</kw>
<status status="PASS" starttime="20210714 23:03:29.242" endtime="20210714 23:03:37.536"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:37.539" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:40.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:40.335" level="INFO">${output} = {
  "metadata" : { },
  "name" : "legacy",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:56:00....</msg>
<status status="PASS" starttime="20210714 23:03:37.537" endtime="20210714 23:03:40.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:40.336" level="INFO">{
  "metadata" : { },
  "name" : "legacy",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:56:00.604Z",
  "modificationTime" : "2021-07-14T22:56:00.604Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "orkuc",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-07-14T22:54:12.746Z",
  "modificationTime" : "2021-07-14T22:54:12.746Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-67053",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.867Z",
  "modificationTime" : "2021-07-14T22:39:40.867Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-07-14T22:38:48.114Z",
  "modificationTime" : "2021-07-14T22:38:48.114Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "64520-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:47:39.123Z",
  "modificationTime" : "2021-07-14T22:47:55.945Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-43755",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.895Z",
  "modificationTime" : "2021-07-14T22:39:40.895Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-00555",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.887Z",
  "modificationTime" : "2021-07-14T22:39:40.887Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-31119",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:00:23.830Z",
  "modificationTime" : "2021-07-14T23:00:23.830Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 20,
  "creationTime" : "2021-07-14T22:38:34.672Z",
  "modificationTime" : "2021-07-14T22:38:34.672Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-91161",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.905Z",
  "modificationTime" : "2021-07-14T22:39:40.905Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:03:29.182Z",
  "modificationTime" : "2021-07-14T23:03:29.182Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:03:26.424Z",
  "modificationTime" : "2021-07-14T23:03:26.424Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "83319-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:40:45.747Z",
  "modificationTime" : "2021-07-14T22:40:45.747Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-85828",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.914Z",
  "modificationTime" : "2021-07-14T22:39:40.914Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "83319-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-07-14T22:40:48.648Z",
  "modificationTime" : "2021-07-14T22:40:48.648Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210714 23:03:40.336" endtime="20210714 23:03:40.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:40.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:40.336" endtime="20210714 23:03:40.337"/>
</kw>
<status status="PASS" starttime="20210714 23:03:37.537" endtime="20210714 23:03:40.338"/>
</kw>
<msg timestamp="20210714 23:03:40.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:37.537" endtime="20210714 23:03:40.338"/>
</kw>
<msg timestamp="20210714 23:03:40.338" level="INFO">${result} = {
  "metadata" : { },
  "name" : "legacy",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:56:00....</msg>
<status status="PASS" starttime="20210714 23:03:37.536" endtime="20210714 23:03:40.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:40.338" endtime="20210714 23:03:40.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:40.339" endtime="20210714 23:03:40.339"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:03:40.339" endtime="20210714 23:03:40.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:40.343" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:43.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:43.275" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210714 23:03:40.341" endtime="20210714 23:03:43.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:43.276" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:03:31.801Z",
  "modificationTime" : "2021-07-14T23:03:31.801Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:03:34.542Z",
  "modificationTime" : "2021-07-14T23:03:34.542Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210714 23:03:43.275" endtime="20210714 23:03:43.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:43.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:43.276" endtime="20210714 23:03:43.276"/>
</kw>
<status status="PASS" starttime="20210714 23:03:40.340" endtime="20210714 23:03:43.277"/>
</kw>
<msg timestamp="20210714 23:03:43.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:40.340" endtime="20210714 23:03:43.277"/>
</kw>
<msg timestamp="20210714 23:03:43.277" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210714 23:03:40.340" endtime="20210714 23:03:43.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:43.277" endtime="20210714 23:03:43.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:43.278" endtime="20210714 23:03:43.278"/>
</kw>
<status status="PASS" starttime="20210714 23:03:37.536" endtime="20210714 23:03:43.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:43.279" level="INFO">Completed setup for ofs tests with buckets in fstest1/56145-bucket1-ofs using FS base URL: ofs://om/fstest1/56145-bucket1-ofs/</msg>
<status status="PASS" starttime="20210714 23:03:43.278" endtime="20210714 23:03:43.279"/>
</kw>
<status status="PASS" starttime="20210714 23:03:23.736" endtime="20210714 23:03:43.279"/>
</kw>
<test id="s1-s4-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:03:43.284" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:03:43.284" endtime="20210714 23:03:43.285"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:03:43.285" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:03:43.285" endtime="20210714 23:03:43.285"/>
</kw>
<status status="PASS" starttime="20210714 23:03:43.284" endtime="20210714 23:03:43.286"/>
</kw>
<msg timestamp="20210714 23:03:43.286" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:03:43.283" endtime="20210714 23:03:43.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 23:03:43.287" endtime="20210714 23:03:43.288"/>
</kw>
<msg timestamp="20210714 23:03:43.288" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 23:03:43.286" endtime="20210714 23:03:43.288"/>
</kw>
<status status="PASS" starttime="20210714 23:03:43.282" endtime="20210714 23:03:43.288"/>
</kw>
<msg timestamp="20210714 23:03:43.288" level="INFO">${url} = ofs://om/fstest1/56145-bucket1-ofs</msg>
<status status="PASS" starttime="20210714 23:03:43.281" endtime="20210714 23:03:43.288"/>
</kw>
<msg timestamp="20210714 23:03:43.289" level="INFO">${root} = ofs://om/fstest1/56145-bucket1-ofs</msg>
<status status="PASS" starttime="20210714 23:03:43.280" endtime="20210714 23:03:43.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:43.292" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/56145-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:46.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:46.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:43.290" endtime="20210714 23:03:46.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:46.327" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:46.327" endtime="20210714 23:03:46.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:46.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:46.328" endtime="20210714 23:03:46.328"/>
</kw>
<status status="PASS" starttime="20210714 23:03:43.289" endtime="20210714 23:03:46.328"/>
</kw>
<msg timestamp="20210714 23:03:46.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:43.289" endtime="20210714 23:03:46.329"/>
</kw>
<status status="PASS" starttime="20210714 23:03:43.289" endtime="20210714 23:03:46.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:43.279" endtime="20210714 23:03:46.329"/>
</test>
<test id="s1-s4-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:03:46.335" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:03:46.334" endtime="20210714 23:03:46.335"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:03:46.335" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:03:46.335" endtime="20210714 23:03:46.335"/>
</kw>
<status status="PASS" starttime="20210714 23:03:46.334" endtime="20210714 23:03:46.336"/>
</kw>
<msg timestamp="20210714 23:03:46.336" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:03:46.333" endtime="20210714 23:03:46.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 23:03:46.337" endtime="20210714 23:03:46.338"/>
</kw>
<msg timestamp="20210714 23:03:46.338" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 23:03:46.336" endtime="20210714 23:03:46.338"/>
</kw>
<status status="PASS" starttime="20210714 23:03:46.332" endtime="20210714 23:03:46.338"/>
</kw>
<msg timestamp="20210714 23:03:46.338" level="INFO">${url} = ofs://om/no-such-volume/56145-bucket1-ofs</msg>
<status status="PASS" starttime="20210714 23:03:46.331" endtime="20210714 23:03:46.338"/>
</kw>
<msg timestamp="20210714 23:03:46.339" level="INFO">${url} = ofs://om/no-such-volume/56145-bucket1-ofs</msg>
<status status="PASS" starttime="20210714 23:03:46.330" endtime="20210714 23:03:46.339"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:46.341" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/56145-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:49.131" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:03:49.131" level="INFO">${output} = ls: `ofs://om/no-such-volume/56145-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:03:46.339" endtime="20210714 23:03:49.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:49.132" level="INFO">ls: `ofs://om/no-such-volume/56145-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:03:49.131" endtime="20210714 23:03:49.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:49.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:49.132" endtime="20210714 23:03:49.133"/>
</kw>
<msg timestamp="20210714 23:03:49.133" level="INFO">${result} = ls: `ofs://om/no-such-volume/56145-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:03:46.339" endtime="20210714 23:03:49.133"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:03:49.133" endtime="20210714 23:03:49.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:46.329" endtime="20210714 23:03:49.134"/>
</test>
<test id="s1-s4-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:03:49.140" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:03:49.140" endtime="20210714 23:03:49.140"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:03:49.141" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:03:49.140" endtime="20210714 23:03:49.141"/>
</kw>
<status status="PASS" starttime="20210714 23:03:49.139" endtime="20210714 23:03:49.141"/>
</kw>
<msg timestamp="20210714 23:03:49.141" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:03:49.138" endtime="20210714 23:03:49.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 23:03:49.143" endtime="20210714 23:03:49.143"/>
</kw>
<msg timestamp="20210714 23:03:49.144" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 23:03:49.142" endtime="20210714 23:03:49.144"/>
</kw>
<status status="PASS" starttime="20210714 23:03:49.138" endtime="20210714 23:03:49.144"/>
</kw>
<msg timestamp="20210714 23:03:49.144" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210714 23:03:49.137" endtime="20210714 23:03:49.144"/>
</kw>
<msg timestamp="20210714 23:03:49.144" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210714 23:03:49.136" endtime="20210714 23:03:49.144"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:49.147" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:51.769" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:03:51.769" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:03:49.145" endtime="20210714 23:03:51.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:51.770" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:03:51.769" endtime="20210714 23:03:51.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:51.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:51.770" endtime="20210714 23:03:51.771"/>
</kw>
<msg timestamp="20210714 23:03:51.771" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:03:49.144" endtime="20210714 23:03:51.771"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:03:51.771" endtime="20210714 23:03:51.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:49.135" endtime="20210714 23:03:51.772"/>
</test>
<test id="s1-s4-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:51.777" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:54.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:54.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:03:51.775" endtime="20210714 23:03:54.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:54.681" level="INFO"/>
<status status="PASS" starttime="20210714 23:03:54.680" endtime="20210714 23:03:54.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:54.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:54.681" endtime="20210714 23:03:54.681"/>
</kw>
<status status="PASS" starttime="20210714 23:03:51.775" endtime="20210714 23:03:54.682"/>
</kw>
<msg timestamp="20210714 23:03:54.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:51.774" endtime="20210714 23:03:54.682"/>
</kw>
<status status="PASS" starttime="20210714 23:03:51.774" endtime="20210714 23:03:54.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:54.686" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:03:57.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:03:57.539" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210714 23:03:54.684" endtime="20210714 23:03:57.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:03:57.540" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210714 23:03:57.540" endtime="20210714 23:03:57.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:03:57.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:03:57.541" endtime="20210714 23:03:57.541"/>
</kw>
<status status="PASS" starttime="20210714 23:03:54.683" endtime="20210714 23:03:57.541"/>
</kw>
<msg timestamp="20210714 23:03:57.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:54.683" endtime="20210714 23:03:57.542"/>
</kw>
<msg timestamp="20210714 23:03:57.542" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210714 23:03:54.682" endtime="20210714 23:03:57.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:03:57.542" endtime="20210714 23:03:57.543"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:51.773" endtime="20210714 23:03:57.543"/>
</test>
<test id="s1-s4-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:03:57.547" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:02.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:02.011" level="INFO">${output} = 2021-07-14 23:04:00,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:00,588 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:03:57.545" endtime="20210714 23:04:02.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:02.013" level="INFO">2021-07-14 23:04:00,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:00,588 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:04:00,589 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:04:00,814 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:04:00,814 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1B8B54A26459-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:04:00,817 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:04:02.012" endtime="20210714 23:04:02.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:02.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:02.013" endtime="20210714 23:04:02.013"/>
</kw>
<status status="PASS" starttime="20210714 23:03:57.545" endtime="20210714 23:04:02.014"/>
</kw>
<msg timestamp="20210714 23:04:02.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:03:57.545" endtime="20210714 23:04:02.014"/>
</kw>
<status status="PASS" starttime="20210714 23:03:57.544" endtime="20210714 23:04:02.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:02.017" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:04.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:04.931" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:02.015" endtime="20210714 23:04:04.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:04.932" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:04.931" endtime="20210714 23:04:04.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:04.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:04.932" endtime="20210714 23:04:04.933"/>
</kw>
<status status="PASS" starttime="20210714 23:04:02.015" endtime="20210714 23:04:04.933"/>
</kw>
<msg timestamp="20210714 23:04:04.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:02.015" endtime="20210714 23:04:04.933"/>
</kw>
<msg timestamp="20210714 23:04:04.934" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:02.014" endtime="20210714 23:04:04.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:04.934" endtime="20210714 23:04:04.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:04.938" level="INFO">Running command 'ozone sh key info fstest1/56145-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:07.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:07.937" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210714 23:04:04.936" endtime="20210714 23:04:07.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:07.938" level="INFO">3</msg>
<status status="PASS" starttime="20210714 23:04:07.938" endtime="20210714 23:04:07.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:07.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:07.939" endtime="20210714 23:04:07.939"/>
</kw>
<status status="PASS" starttime="20210714 23:04:04.935" endtime="20210714 23:04:07.939"/>
</kw>
<msg timestamp="20210714 23:04:07.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:04.935" endtime="20210714 23:04:07.940"/>
</kw>
<msg timestamp="20210714 23:04:07.940" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210714 23:04:04.934" endtime="20210714 23:04:07.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:04:07.940" endtime="20210714 23:04:07.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:03:57.543" endtime="20210714 23:04:07.941"/>
</test>
<test id="s1-s4-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:07.945" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:12.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:12.389" level="INFO">${output} = 2021-07-14 23:04:10,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:11,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:04:07.943" endtime="20210714 23:04:12.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:12.390" level="INFO">2021-07-14 23:04:10,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:11,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:04:11,009 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:04:11,254 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:04:11,255 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B4D9A09A408D-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:04:11,257 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:04:12.389" endtime="20210714 23:04:12.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:12.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:12.390" endtime="20210714 23:04:12.391"/>
</kw>
<status status="PASS" starttime="20210714 23:04:07.943" endtime="20210714 23:04:12.391"/>
</kw>
<msg timestamp="20210714 23:04:12.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:07.942" endtime="20210714 23:04:12.391"/>
</kw>
<status status="PASS" starttime="20210714 23:04:07.942" endtime="20210714 23:04:12.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:12.395" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:15.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:15.312" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:12.393" endtime="20210714 23:04:15.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:15.313" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:15.313" endtime="20210714 23:04:15.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:15.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:15.314" endtime="20210714 23:04:15.314"/>
</kw>
<status status="PASS" starttime="20210714 23:04:12.392" endtime="20210714 23:04:15.314"/>
</kw>
<msg timestamp="20210714 23:04:15.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:12.392" endtime="20210714 23:04:15.315"/>
</kw>
<msg timestamp="20210714 23:04:15.315" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:12.392" endtime="20210714 23:04:15.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:15.315" endtime="20210714 23:04:15.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:07.941" endtime="20210714 23:04:15.316"/>
</test>
<test id="s1-s4-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:15.320" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:18.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:18.424" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fste...</msg>
<status status="PASS" starttime="20210714 23:04:15.318" endtime="20210714 23:04:18.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:18.425" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:18.425" endtime="20210714 23:04:18.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:18.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:18.426" endtime="20210714 23:04:18.426"/>
</kw>
<status status="PASS" starttime="20210714 23:04:15.318" endtime="20210714 23:04:18.426"/>
</kw>
<msg timestamp="20210714 23:04:18.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:15.317" endtime="20210714 23:04:18.427"/>
</kw>
<msg timestamp="20210714 23:04:18.427" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fste...</msg>
<status status="PASS" starttime="20210714 23:04:15.317" endtime="20210714 23:04:18.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:18.427" endtime="20210714 23:04:18.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:18.427" endtime="20210714 23:04:18.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:15.316" endtime="20210714 23:04:18.428"/>
</test>
<test id="s1-s4-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:18.433" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:21.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:21.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:04:18.431" endtime="20210714 23:04:21.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:21.380" level="INFO"/>
<status status="PASS" starttime="20210714 23:04:21.379" endtime="20210714 23:04:21.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:21.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:21.380" endtime="20210714 23:04:21.381"/>
</kw>
<status status="PASS" starttime="20210714 23:04:18.430" endtime="20210714 23:04:21.381"/>
</kw>
<msg timestamp="20210714 23:04:21.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:18.430" endtime="20210714 23:04:21.381"/>
</kw>
<status status="PASS" starttime="20210714 23:04:18.429" endtime="20210714 23:04:21.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:21.385" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:24.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:24.440" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:21.383" endtime="20210714 23:04:24.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:24.441" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:24.441" endtime="20210714 23:04:24.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:24.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:24.442" endtime="20210714 23:04:24.442"/>
</kw>
<status status="PASS" starttime="20210714 23:04:21.382" endtime="20210714 23:04:24.443"/>
</kw>
<msg timestamp="20210714 23:04:24.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:21.382" endtime="20210714 23:04:24.443"/>
</kw>
<msg timestamp="20210714 23:04:24.443" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:21.381" endtime="20210714 23:04:24.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:24.443" endtime="20210714 23:04:24.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:24.444" endtime="20210714 23:04:24.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:18.429" endtime="20210714 23:04:24.444"/>
</test>
<test id="s1-s4-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:24.450" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:27.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:27.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:04:24.448" endtime="20210714 23:04:27.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:27.279" level="INFO"/>
<status status="PASS" starttime="20210714 23:04:27.277" endtime="20210714 23:04:27.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:27.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:27.279" endtime="20210714 23:04:27.279"/>
</kw>
<status status="PASS" starttime="20210714 23:04:24.447" endtime="20210714 23:04:27.280"/>
</kw>
<msg timestamp="20210714 23:04:27.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:24.447" endtime="20210714 23:04:27.280"/>
</kw>
<status status="PASS" starttime="20210714 23:04:24.447" endtime="20210714 23:04:27.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:27.283" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:31.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:31.631" level="INFO">${output} = 2021-07-14 23:04:30,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:30,168 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:04:27.281" endtime="20210714 23:04:31.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:31.633" level="INFO">2021-07-14 23:04:30,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:30,168 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:04:30,168 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:04:30,991 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:04:30,992 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-213465288C3C-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:04:30,993 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:04:31.632" endtime="20210714 23:04:31.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:31.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:31.633" endtime="20210714 23:04:31.633"/>
</kw>
<status status="PASS" starttime="20210714 23:04:27.281" endtime="20210714 23:04:31.634"/>
</kw>
<msg timestamp="20210714 23:04:31.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:27.281" endtime="20210714 23:04:31.634"/>
</kw>
<status status="PASS" starttime="20210714 23:04:27.280" endtime="20210714 23:04:31.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:31.638" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:34.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:34.722" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:31.636" endtime="20210714 23:04:34.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:34.723" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:34.722" endtime="20210714 23:04:34.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:34.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:34.723" endtime="20210714 23:04:34.724"/>
</kw>
<status status="PASS" starttime="20210714 23:04:31.635" endtime="20210714 23:04:34.724"/>
</kw>
<msg timestamp="20210714 23:04:34.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:31.635" endtime="20210714 23:04:34.724"/>
</kw>
<msg timestamp="20210714 23:04:34.724" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:31.634" endtime="20210714 23:04:34.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:34.725" endtime="20210714 23:04:34.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:34.728" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:37.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:37.629" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:34.726" endtime="20210714 23:04:37.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:37.631" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:37.630" endtime="20210714 23:04:37.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:37.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:37.631" endtime="20210714 23:04:37.631"/>
</kw>
<status status="PASS" starttime="20210714 23:04:34.726" endtime="20210714 23:04:37.632"/>
</kw>
<msg timestamp="20210714 23:04:37.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:34.726" endtime="20210714 23:04:37.632"/>
</kw>
<msg timestamp="20210714 23:04:37.632" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:34.725" endtime="20210714 23:04:37.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:37.632" endtime="20210714 23:04:37.633"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:37.633" endtime="20210714 23:04:37.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:24.446" endtime="20210714 23:04:37.633"/>
</test>
<test id="s1-s4-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:37.638" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:41.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:41.674" level="INFO">${output} = 2021-07-14 23:04:40,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:40,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:04:37.636" endtime="20210714 23:04:41.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:41.675" level="INFO">2021-07-14 23:04:40,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:04:40,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:04:40,581 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210714 23:04:41.674" endtime="20210714 23:04:41.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:41.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:41.676" endtime="20210714 23:04:41.676"/>
</kw>
<status status="PASS" starttime="20210714 23:04:37.635" endtime="20210714 23:04:41.676"/>
</kw>
<msg timestamp="20210714 23:04:41.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:37.635" endtime="20210714 23:04:41.677"/>
</kw>
<status status="PASS" starttime="20210714 23:04:37.635" endtime="20210714 23:04:41.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:37.634" endtime="20210714 23:04:41.678"/>
</test>
<test id="s1-s4-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:41.683" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:44.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:44.595" level="INFO">${output} = Deleted ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:41.681" endtime="20210714 23:04:44.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:44.596" level="INFO">Deleted ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:04:44.596" endtime="20210714 23:04:44.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:44.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:44.597" endtime="20210714 23:04:44.597"/>
</kw>
<status status="PASS" starttime="20210714 23:04:41.680" endtime="20210714 23:04:44.597"/>
</kw>
<msg timestamp="20210714 23:04:44.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:41.680" endtime="20210714 23:04:44.598"/>
</kw>
<status status="PASS" starttime="20210714 23:04:41.679" endtime="20210714 23:04:44.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:44.601" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:47.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:47.535" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:04:44.599" endtime="20210714 23:04:47.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:47.536" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:04:47.535" endtime="20210714 23:04:47.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:47.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:47.536" endtime="20210714 23:04:47.537"/>
</kw>
<status status="PASS" starttime="20210714 23:04:44.599" endtime="20210714 23:04:47.537"/>
</kw>
<msg timestamp="20210714 23:04:47.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:44.599" endtime="20210714 23:04:47.537"/>
</kw>
<msg timestamp="20210714 23:04:47.537" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:04:44.598" endtime="20210714 23:04:47.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:47.538" endtime="20210714 23:04:47.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:41.679" endtime="20210714 23:04:47.538"/>
</test>
<test id="s1-s4-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:47.543" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:50.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:50.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:04:47.541" endtime="20210714 23:04:50.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:50.517" level="INFO"/>
<status status="PASS" starttime="20210714 23:04:50.516" endtime="20210714 23:04:50.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:50.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:50.517" endtime="20210714 23:04:50.517"/>
</kw>
<status status="PASS" starttime="20210714 23:04:47.540" endtime="20210714 23:04:50.518"/>
</kw>
<msg timestamp="20210714 23:04:50.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:47.540" endtime="20210714 23:04:50.518"/>
</kw>
<msg timestamp="20210714 23:04:50.518" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:04:47.540" endtime="20210714 23:04:50.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:50.523" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:53.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:53.493" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:50.521" endtime="20210714 23:04:53.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:53.494" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:53.493" endtime="20210714 23:04:53.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:53.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:53.494" endtime="20210714 23:04:53.495"/>
</kw>
<status status="PASS" starttime="20210714 23:04:50.519" endtime="20210714 23:04:53.495"/>
</kw>
<msg timestamp="20210714 23:04:53.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:50.519" endtime="20210714 23:04:53.495"/>
</kw>
<msg timestamp="20210714 23:04:53.495" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:04:50.518" endtime="20210714 23:04:53.495"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:53.496" endtime="20210714 23:04:53.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:47.539" endtime="20210714 23:04:53.496"/>
</test>
<test id="s1-s4-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:53.500" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:56.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:56.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:04:53.499" endtime="20210714 23:04:56.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:56.204" level="INFO"/>
<status status="PASS" starttime="20210714 23:04:56.203" endtime="20210714 23:04:56.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:56.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:56.204" endtime="20210714 23:04:56.205"/>
</kw>
<status status="PASS" starttime="20210714 23:04:53.498" endtime="20210714 23:04:56.205"/>
</kw>
<msg timestamp="20210714 23:04:56.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:53.498" endtime="20210714 23:04:56.205"/>
</kw>
<status status="PASS" starttime="20210714 23:04:53.497" endtime="20210714 23:04:56.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:56.209" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:04:59.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:04:59.168" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:04:56.207" endtime="20210714 23:04:59.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:04:59.169" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:04:59.168" endtime="20210714 23:04:59.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:04:59.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:04:59.169" endtime="20210714 23:04:59.170"/>
</kw>
<status status="PASS" starttime="20210714 23:04:56.206" endtime="20210714 23:04:59.170"/>
</kw>
<msg timestamp="20210714 23:04:59.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:56.206" endtime="20210714 23:04:59.170"/>
</kw>
<msg timestamp="20210714 23:04:59.170" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:04:56.205" endtime="20210714 23:04:59.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:04:59.171" endtime="20210714 23:04:59.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:53.497" endtime="20210714 23:04:59.171"/>
</test>
<test id="s1-s4-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:04:59.176" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:01.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:01.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:04:59.173" endtime="20210714 23:05:01.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:01.996" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:01.996" endtime="20210714 23:05:01.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:01.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:01.996" endtime="20210714 23:05:01.997"/>
</kw>
<status status="PASS" starttime="20210714 23:04:59.173" endtime="20210714 23:05:01.997"/>
</kw>
<msg timestamp="20210714 23:05:01.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:04:59.173" endtime="20210714 23:05:01.997"/>
</kw>
<status status="PASS" starttime="20210714 23:04:59.172" endtime="20210714 23:05:01.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:02.001" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:04.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:04.797" level="INFO">${output} = 2021-07-14 23:05:04,548 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:05:04,631 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:05:01.999" endtime="20210714 23:05:04.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:04.798" level="INFO">2021-07-14 23:05:04,548 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:05:04,631 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210714 23:05:04.797" endtime="20210714 23:05:04.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:04.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:04.798" endtime="20210714 23:05:04.799"/>
</kw>
<status status="PASS" starttime="20210714 23:05:01.999" endtime="20210714 23:05:04.799"/>
</kw>
<msg timestamp="20210714 23:05:04.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:01.998" endtime="20210714 23:05:04.799"/>
</kw>
<status status="PASS" starttime="20210714 23:05:01.998" endtime="20210714 23:05:04.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:04.803" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/56145-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:07.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:07.546" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/ha...</msg>
<status status="PASS" starttime="20210714 23:05:04.801" endtime="20210714 23:05:07.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:07.548" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1/56145-bucket1-ofs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:03 ofs://om/fstest1/56145-bucket1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:03 ofs://om/fstest1/56145-bucket1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:03 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:04 ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:05:07.547" endtime="20210714 23:05:07.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:07.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:07.548" endtime="20210714 23:05:07.548"/>
</kw>
<status status="PASS" starttime="20210714 23:05:04.800" endtime="20210714 23:05:07.549"/>
</kw>
<msg timestamp="20210714 23:05:07.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:04.800" endtime="20210714 23:05:07.549"/>
</kw>
<msg timestamp="20210714 23:05:07.549" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/.Trash/ha...</msg>
<status status="PASS" starttime="20210714 23:05:04.799" endtime="20210714 23:05:07.549"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:05:07.549" endtime="20210714 23:05:07.550"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210714 23:05:07.550" endtime="20210714 23:05:07.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:05:07.550" endtime="20210714 23:05:07.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:04:59.172" endtime="20210714 23:05:07.551"/>
</test>
<test id="s1-s4-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:07.555" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:10.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:10.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:07.553" endtime="20210714 23:05:10.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:10.402" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:10.401" endtime="20210714 23:05:10.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:10.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:10.402" endtime="20210714 23:05:10.402"/>
</kw>
<status status="PASS" starttime="20210714 23:05:07.553" endtime="20210714 23:05:10.403"/>
</kw>
<msg timestamp="20210714 23:05:10.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:07.553" endtime="20210714 23:05:10.403"/>
</kw>
<status status="PASS" starttime="20210714 23:05:07.552" endtime="20210714 23:05:10.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:10.406" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:13.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:13.040" level="INFO">${output} = Deleted ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:05:10.405" endtime="20210714 23:05:13.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:13.041" level="INFO">Deleted ofs://om/fstest1/56145-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:05:13.041" endtime="20210714 23:05:13.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:13.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:13.042" endtime="20210714 23:05:13.042"/>
</kw>
<status status="PASS" starttime="20210714 23:05:10.404" endtime="20210714 23:05:13.042"/>
</kw>
<msg timestamp="20210714 23:05:13.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:10.404" endtime="20210714 23:05:13.043"/>
</kw>
<status status="PASS" starttime="20210714 23:05:10.403" endtime="20210714 23:05:13.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:13.046" level="INFO">Running command 'ozone sh key list fstest1/56145-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:16.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:16.055" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/
.Trash/hadoop/Curren...</msg>
<status status="PASS" starttime="20210714 23:05:13.045" endtime="20210714 23:05:16.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:16.056" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs/dir/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:05:16.056" endtime="20210714 23:05:16.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:16.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:16.057" endtime="20210714 23:05:16.057"/>
</kw>
<status status="PASS" starttime="20210714 23:05:13.044" endtime="20210714 23:05:16.057"/>
</kw>
<msg timestamp="20210714 23:05:16.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:13.043" endtime="20210714 23:05:16.058"/>
</kw>
<msg timestamp="20210714 23:05:16.058" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/
.Trash/hadoop/Current/fstest1/56145-bucket1-ofs/test/
.Trash/hadoop/Curren...</msg>
<status status="PASS" starttime="20210714 23:05:13.043" endtime="20210714 23:05:16.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:05:16.058" endtime="20210714 23:05:16.059"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:05:07.551" endtime="20210714 23:05:16.059"/>
</test>
<test id="s1-s4-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:16.063" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:16.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:16.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:16.061" endtime="20210714 23:05:16.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:16.067" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:16.066" endtime="20210714 23:05:16.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:16.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:16.067" endtime="20210714 23:05:16.068"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.061" endtime="20210714 23:05:16.068"/>
</kw>
<msg timestamp="20210714 23:05:16.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:16.061" endtime="20210714 23:05:16.068"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.060" endtime="20210714 23:05:16.068"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:16.071" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:16.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:16.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:16.069" endtime="20210714 23:05:16.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:16.075" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:16.074" endtime="20210714 23:05:16.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:16.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:16.075" endtime="20210714 23:05:16.075"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.069" endtime="20210714 23:05:16.075"/>
</kw>
<msg timestamp="20210714 23:05:16.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:16.069" endtime="20210714 23:05:16.076"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.068" endtime="20210714 23:05:16.076"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:16.079" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:16.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:16.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:16.077" endtime="20210714 23:05:16.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:16.083" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:16.082" endtime="20210714 23:05:16.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:16.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:16.083" endtime="20210714 23:05:16.084"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.077" endtime="20210714 23:05:16.084"/>
</kw>
<msg timestamp="20210714 23:05:16.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:16.076" endtime="20210714 23:05:16.084"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.076" endtime="20210714 23:05:16.084"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:16.088" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/56145-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:19.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:19.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:16.086" endtime="20210714 23:05:19.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:19.016" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:19.015" endtime="20210714 23:05:19.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:19.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:19.016" endtime="20210714 23:05:19.016"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.085" endtime="20210714 23:05:19.017"/>
</kw>
<msg timestamp="20210714 23:05:19.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:16.085" endtime="20210714 23:05:19.017"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.084" endtime="20210714 23:05:19.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:19.021" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/56145-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:23.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:23.422" level="INFO">${output} = 2021-07-14 23:05:22,062 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:22,127 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:05:19.019" endtime="20210714 23:05:23.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:23.423" level="INFO">2021-07-14 23:05:22,062 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:22,127 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:05:22,127 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:05:22,348 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:05:22,348 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0F1EAE6B4349-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:05:22,349 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:05:23.423" endtime="20210714 23:05:23.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:23.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:23.424" endtime="20210714 23:05:23.424"/>
</kw>
<status status="PASS" starttime="20210714 23:05:19.018" endtime="20210714 23:05:23.424"/>
</kw>
<msg timestamp="20210714 23:05:23.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:19.018" endtime="20210714 23:05:23.425"/>
</kw>
<status status="PASS" starttime="20210714 23:05:19.017" endtime="20210714 23:05:23.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:23.428" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/56145-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:27.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:27.672" level="INFO">${output} = 2021-07-14 23:05:26,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:26,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:05:23.426" endtime="20210714 23:05:27.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:27.673" level="INFO">2021-07-14 23:05:26,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:26,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:05:26,361 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:05:26,600 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:05:26,600 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-74B037F07485-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:05:26,602 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:05:27.672" endtime="20210714 23:05:27.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:27.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:27.673" endtime="20210714 23:05:27.674"/>
</kw>
<status status="PASS" starttime="20210714 23:05:23.426" endtime="20210714 23:05:27.674"/>
</kw>
<msg timestamp="20210714 23:05:27.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:23.426" endtime="20210714 23:05:27.674"/>
</kw>
<status status="PASS" starttime="20210714 23:05:23.425" endtime="20210714 23:05:27.674"/>
</kw>
<status status="PASS" starttime="20210714 23:05:16.060" endtime="20210714 23:05:27.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:27.678" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/56145-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:30.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:30.323" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-...</msg>
<status status="PASS" starttime="20210714 23:05:27.676" endtime="20210714 23:05:30.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:30.324" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210714 23:05:30.324" endtime="20210714 23:05:30.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:30.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:30.325" endtime="20210714 23:05:30.325"/>
</kw>
<status status="PASS" starttime="20210714 23:05:27.675" endtime="20210714 23:05:30.326"/>
</kw>
<msg timestamp="20210714 23:05:30.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:27.675" endtime="20210714 23:05:30.326"/>
</kw>
<msg timestamp="20210714 23:05:30.326" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-...</msg>
<status status="PASS" starttime="20210714 23:05:27.675" endtime="20210714 23:05:30.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:05:30.326" endtime="20210714 23:05:30.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:05:30.327" endtime="20210714 23:05:30.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:05:16.059" endtime="20210714 23:05:30.327"/>
</test>
<test id="s1-s4-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:05:30.333" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:05:30.333" endtime="20210714 23:05:30.333"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:05:30.334" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:05:30.334" endtime="20210714 23:05:30.334"/>
</kw>
<status status="PASS" starttime="20210714 23:05:30.332" endtime="20210714 23:05:30.334"/>
</kw>
<msg timestamp="20210714 23:05:30.334" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:05:30.331" endtime="20210714 23:05:30.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:05:30.336" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210714 23:05:30.336" endtime="20210714 23:05:30.336"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:05:30.337" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20210714 23:05:30.337" endtime="20210714 23:05:30.337"/>
</kw>
<status status="PASS" starttime="20210714 23:05:30.336" endtime="20210714 23:05:30.337"/>
</kw>
<msg timestamp="20210714 23:05:30.337" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20210714 23:05:30.334" endtime="20210714 23:05:30.337"/>
</kw>
<status status="PASS" starttime="20210714 23:05:30.330" endtime="20210714 23:05:30.338"/>
</kw>
<msg timestamp="20210714 23:05:30.338" level="INFO">${url} = ofs://om/fstest1/56145-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210714 23:05:30.330" endtime="20210714 23:05:30.338"/>
</kw>
<msg timestamp="20210714 23:05:30.338" level="INFO">${target} = ofs://om/fstest1/56145-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210714 23:05:30.329" endtime="20210714 23:05:30.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:30.341" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/56145-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:33.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:33.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:30.339" endtime="20210714 23:05:33.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:33.162" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:33.161" endtime="20210714 23:05:33.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:33.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:33.162" endtime="20210714 23:05:33.162"/>
</kw>
<status status="PASS" starttime="20210714 23:05:30.339" endtime="20210714 23:05:33.163"/>
</kw>
<msg timestamp="20210714 23:05:33.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:30.339" endtime="20210714 23:05:33.163"/>
</kw>
<status status="PASS" starttime="20210714 23:05:30.338" endtime="20210714 23:05:33.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:33.167" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/56145-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/56145-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:37.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:37.750" level="INFO">${output} = 2021-07-14 23:05:36,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:36,209 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:05:33.165" endtime="20210714 23:05:37.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:37.751" level="INFO">2021-07-14 23:05:36,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:36,209 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:05:36,209 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:05:37,017 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:05:37,017 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B33ACBD36ED9-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:05:37,018 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:05:37.750" endtime="20210714 23:05:37.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:37.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:37.751" endtime="20210714 23:05:37.752"/>
</kw>
<status status="PASS" starttime="20210714 23:05:33.164" endtime="20210714 23:05:37.752"/>
</kw>
<msg timestamp="20210714 23:05:37.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:33.164" endtime="20210714 23:05:37.752"/>
</kw>
<status status="PASS" starttime="20210714 23:05:33.163" endtime="20210714 23:05:37.753"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:37.756" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/56145-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:40.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:40.853" level="INFO">${output} = 2021-07-14 23:05:40,526 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:05:40,651 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:05:37.754" endtime="20210714 23:05:40.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:40.854" level="INFO">2021-07-14 23:05:40,526 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:05:40,651 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/56145-bucket2-ofs/testdir2' to trash at: ofs://om/fstest1/56145-bucket2-ofs/.Trash/hadoop/Current/fstest1/56145-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210714 23:05:40.854" endtime="20210714 23:05:40.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:40.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:40.855" endtime="20210714 23:05:40.855"/>
</kw>
<status status="PASS" starttime="20210714 23:05:37.754" endtime="20210714 23:05:40.855"/>
</kw>
<msg timestamp="20210714 23:05:40.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:37.754" endtime="20210714 23:05:40.856"/>
</kw>
<status status="PASS" starttime="20210714 23:05:37.753" endtime="20210714 23:05:40.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:05:30.328" endtime="20210714 23:05:40.856"/>
</test>
<test id="s1-s4-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:05:40.862" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:05:40.862" endtime="20210714 23:05:40.862"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:05:40.863" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:05:40.862" endtime="20210714 23:05:40.863"/>
</kw>
<status status="PASS" starttime="20210714 23:05:40.861" endtime="20210714 23:05:40.863"/>
</kw>
<msg timestamp="20210714 23:05:40.863" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:05:40.860" endtime="20210714 23:05:40.863"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:05:40.865" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210714 23:05:40.865" endtime="20210714 23:05:40.865"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:05:40.866" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20210714 23:05:40.865" endtime="20210714 23:05:40.866"/>
</kw>
<status status="PASS" starttime="20210714 23:05:40.864" endtime="20210714 23:05:40.866"/>
</kw>
<msg timestamp="20210714 23:05:40.866" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20210714 23:05:40.863" endtime="20210714 23:05:40.866"/>
</kw>
<status status="PASS" starttime="20210714 23:05:40.859" endtime="20210714 23:05:40.867"/>
</kw>
<msg timestamp="20210714 23:05:40.867" level="INFO">${url} = ofs://om/fstest2/56145-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210714 23:05:40.858" endtime="20210714 23:05:40.867"/>
</kw>
<msg timestamp="20210714 23:05:40.867" level="INFO">${target} = ofs://om/fstest2/56145-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210714 23:05:40.858" endtime="20210714 23:05:40.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:40.870" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/56145-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:43.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:43.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:40.868" endtime="20210714 23:05:43.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:43.591" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:43.591" endtime="20210714 23:05:43.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:43.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:43.592" endtime="20210714 23:05:43.592"/>
</kw>
<status status="PASS" starttime="20210714 23:05:40.868" endtime="20210714 23:05:43.592"/>
</kw>
<msg timestamp="20210714 23:05:43.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:40.868" endtime="20210714 23:05:43.593"/>
</kw>
<status status="PASS" starttime="20210714 23:05:40.867" endtime="20210714 23:05:43.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:43.596" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/56145-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/56145-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:48.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:48.203" level="INFO">${output} = 2021-07-14 23:05:46,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:46,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:05:43.594" endtime="20210714 23:05:48.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:48.204" level="INFO">2021-07-14 23:05:46,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:05:46,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:05:46,609 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:05:47,430 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:05:47,431 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8FCC9DAAA87A-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:05:47,433 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:05:48.204" endtime="20210714 23:05:48.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:48.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:48.205" endtime="20210714 23:05:48.205"/>
</kw>
<status status="PASS" starttime="20210714 23:05:43.594" endtime="20210714 23:05:48.205"/>
</kw>
<msg timestamp="20210714 23:05:48.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:43.594" endtime="20210714 23:05:48.206"/>
</kw>
<status status="PASS" starttime="20210714 23:05:43.593" endtime="20210714 23:05:48.206"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:48.209" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/56145-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:51.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:51.079" level="INFO">${output} = 2021-07-14 23:05:50,841 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:05:50,936 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:05:48.207" endtime="20210714 23:05:51.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:51.080" level="INFO">2021-07-14 23:05:50,841 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:05:50,936 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/56145-bucket3-ofs/testdir3' to trash at: ofs://om/fstest2/56145-bucket3-ofs/.Trash/hadoop/Current/fstest2/56145-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210714 23:05:51.079" endtime="20210714 23:05:51.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:51.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:51.080" endtime="20210714 23:05:51.081"/>
</kw>
<status status="PASS" starttime="20210714 23:05:48.207" endtime="20210714 23:05:51.081"/>
</kw>
<msg timestamp="20210714 23:05:51.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:48.207" endtime="20210714 23:05:51.081"/>
</kw>
<status status="PASS" starttime="20210714 23:05:48.206" endtime="20210714 23:05:51.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:05:40.857" endtime="20210714 23:05:51.082"/>
</test>
<test id="s1-s4-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:51.087" level="INFO">Running command 'ozone sh key put fstest1/56145-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:55.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:55.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:05:51.085" endtime="20210714 23:05:55.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:55.872" level="INFO"/>
<status status="PASS" starttime="20210714 23:05:55.871" endtime="20210714 23:05:55.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:55.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:55.872" endtime="20210714 23:05:55.873"/>
</kw>
<status status="PASS" starttime="20210714 23:05:51.084" endtime="20210714 23:05:55.873"/>
</kw>
<msg timestamp="20210714 23:05:55.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:51.084" endtime="20210714 23:05:55.873"/>
</kw>
<status status="PASS" starttime="20210714 23:05:51.083" endtime="20210714 23:05:55.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:55.877" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/56145-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:05:58.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:05:58.708" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210714 23:05:55.876" endtime="20210714 23:05:58.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:05:58.709" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210714 23:05:58.709" endtime="20210714 23:05:58.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:05:58.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:05:58.710" endtime="20210714 23:05:58.710"/>
</kw>
<status status="PASS" starttime="20210714 23:05:55.875" endtime="20210714 23:05:58.710"/>
</kw>
<msg timestamp="20210714 23:05:58.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:05:55.874" endtime="20210714 23:05:58.711"/>
</kw>
<msg timestamp="20210714 23:05:58.711" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:05 ofs://om/fstest1/56145-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210714 23:05:55.874" endtime="20210714 23:05:58.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:05:58.711" endtime="20210714 23:05:58.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:05:51.082" endtime="20210714 23:05:58.712"/>
</test>
<test id="s1-s4-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:05:58.716" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/56145-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:01.703" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:06:01.703" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/56145-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:05:58.714" endtime="20210714 23:06:01.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:01.704" level="INFO">copyFromLocal: `ofs://om/fstest1/56145-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:06:01.703" endtime="20210714 23:06:01.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:01.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:01.704" endtime="20210714 23:06:01.705"/>
</kw>
<msg timestamp="20210714 23:06:01.705" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/56145-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:05:58.713" endtime="20210714 23:06:01.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:06:01.706" endtime="20210714 23:06:01.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:05:58.712" endtime="20210714 23:06:01.706"/>
</test>
<test id="s1-s4-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:01.710" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:01.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:01.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:01.709" endtime="20210714 23:06:01.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:01.714" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:01.713" endtime="20210714 23:06:01.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:01.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:01.714" endtime="20210714 23:06:01.714"/>
</kw>
<status status="PASS" starttime="20210714 23:06:01.708" endtime="20210714 23:06:01.714"/>
</kw>
<msg timestamp="20210714 23:06:01.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:01.708" endtime="20210714 23:06:01.715"/>
</kw>
<status status="PASS" starttime="20210714 23:06:01.707" endtime="20210714 23:06:01.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:01.718" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/56145-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:05.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:05.631" level="INFO">${output} = 2021-07-14 23:06:04,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:06:04,592 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:06:01.716" endtime="20210714 23:06:05.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:05.632" level="INFO">2021-07-14 23:06:04,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:06:04,592 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:06:04,592 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210714 23:06:05.632" endtime="20210714 23:06:05.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:05.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:05.633" endtime="20210714 23:06:05.633"/>
</kw>
<status status="PASS" starttime="20210714 23:06:01.716" endtime="20210714 23:06:05.633"/>
</kw>
<msg timestamp="20210714 23:06:05.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:01.716" endtime="20210714 23:06:05.634"/>
</kw>
<status status="PASS" starttime="20210714 23:06:01.715" endtime="20210714 23:06:05.634"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210714 23:06:05.634" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210714 23:06:05.634" endtime="20210714 23:06:05.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:06:01.707" endtime="20210714 23:06:05.634"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210714 23:03:23.680" endtime="20210714 23:06:05.637"/>
</suite>
<suite id="s1-s5" name="ozonefs-simple-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:06:09.433" level="INFO">${random} = 97730</msg>
<status status="PASS" starttime="20210714 23:06:09.433" endtime="20210714 23:06:09.433"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:06:09.434" level="INFO">${BUCKET} = 97730-link1-o3fs</msg>
<status status="PASS" starttime="20210714 23:06:09.433" endtime="20210714 23:06:09.434"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:06:09.434" level="INFO">${BUCKET2} = 97730-link2-o3fs</msg>
<status status="PASS" starttime="20210714 23:06:09.434" endtime="20210714 23:06:09.434"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:06:09.435" level="INFO">${BUCKET_IN_VOL2} = 97730-link3-o3fs</msg>
<status status="PASS" starttime="20210714 23:06:09.435" endtime="20210714 23:06:09.435"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:06:09.439" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:06:09.438" endtime="20210714 23:06:09.439"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:06:09.439" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:06:09.439" endtime="20210714 23:06:09.439"/>
</kw>
<status status="PASS" starttime="20210714 23:06:09.438" endtime="20210714 23:06:09.439"/>
</kw>
<msg timestamp="20210714 23:06:09.439" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:06:09.437" endtime="20210714 23:06:09.439"/>
</kw>
<status status="PASS" starttime="20210714 23:06:09.436" endtime="20210714 23:06:09.440"/>
</kw>
<msg timestamp="20210714 23:06:09.440" level="INFO">${url} = o3fs://97730-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:06:09.436" endtime="20210714 23:06:09.440"/>
</kw>
<msg timestamp="20210714 23:06:09.440" level="INFO">${BASE_URL} = o3fs://97730-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:06:09.435" endtime="20210714 23:06:09.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:06:09.441" level="INFO">${BASE_URL} = o3fs://97730-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:06:09.440" endtime="20210714 23:06:09.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:06:09.442" level="INFO">${DEEP_URL} = o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20210714 23:06:09.441" endtime="20210714 23:06:09.442"/>
</kw>
<status status="PASS" starttime="20210714 23:06:09.432" endtime="20210714 23:06:09.442"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:09.446" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:12.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:06:12.340" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:06:09.443" endtime="20210714 23:06:12.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:12.341" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:06:12.341" endtime="20210714 23:06:12.341"/>
</kw>
<status status="PASS" starttime="20210714 23:06:09.443" endtime="20210714 23:06:12.342"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:12.344" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:14.978" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:06:14.978" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:06:12.342" endtime="20210714 23:06:14.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:14.979" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:06:14.979" endtime="20210714 23:06:14.980"/>
</kw>
<status status="PASS" starttime="20210714 23:06:12.342" endtime="20210714 23:06:14.980"/>
</kw>
<status status="PASS" starttime="20210714 23:06:09.443" endtime="20210714 23:06:14.980"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:14.983" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:17.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:17.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:14.981" endtime="20210714 23:06:17.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:17.758" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:17.757" endtime="20210714 23:06:17.758"/>
</kw>
<status status="PASS" starttime="20210714 23:06:14.981" endtime="20210714 23:06:17.758"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:17.761" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:20.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:20.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:17.759" endtime="20210714 23:06:20.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:20.557" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:20.557" endtime="20210714 23:06:20.557"/>
</kw>
<status status="PASS" starttime="20210714 23:06:17.759" endtime="20210714 23:06:20.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:20.561" level="INFO">Running command 'ozone sh bucket create fstest1-src/97730-link1-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:23.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:23.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:20.559" endtime="20210714 23:06:23.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:23.305" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:23.304" endtime="20210714 23:06:23.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:23.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:23.305" endtime="20210714 23:06:23.305"/>
</kw>
<status status="PASS" starttime="20210714 23:06:20.558" endtime="20210714 23:06:23.306"/>
</kw>
<msg timestamp="20210714 23:06:23.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:20.558" endtime="20210714 23:06:23.306"/>
</kw>
<status status="PASS" starttime="20210714 23:06:20.558" endtime="20210714 23:06:23.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:23.309" level="INFO">Running command 'ozone sh bucket create fstest1-src/97730-link2-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:26.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:26.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:23.308" endtime="20210714 23:06:26.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:26.062" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:26.061" endtime="20210714 23:06:26.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:26.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:26.062" endtime="20210714 23:06:26.062"/>
</kw>
<status status="PASS" starttime="20210714 23:06:23.307" endtime="20210714 23:06:26.063"/>
</kw>
<msg timestamp="20210714 23:06:26.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:23.307" endtime="20210714 23:06:26.063"/>
</kw>
<status status="PASS" starttime="20210714 23:06:23.306" endtime="20210714 23:06:26.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:26.066" level="INFO">Running command 'ozone sh bucket create fstest2-src/97730-link3-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:28.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:28.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:26.064" endtime="20210714 23:06:28.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:28.997" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:28.997" endtime="20210714 23:06:28.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:28.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:28.998" endtime="20210714 23:06:28.998"/>
</kw>
<status status="PASS" starttime="20210714 23:06:26.064" endtime="20210714 23:06:28.998"/>
</kw>
<msg timestamp="20210714 23:06:28.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:26.064" endtime="20210714 23:06:28.999"/>
</kw>
<status status="PASS" starttime="20210714 23:06:26.063" endtime="20210714 23:06:28.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:29.002" level="INFO">Running command 'ozone sh bucket link fstest1-src/97730-link1-o3fs-src fstest1/97730-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:31.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:31.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:29.000" endtime="20210714 23:06:31.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:31.848" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:31.847" endtime="20210714 23:06:31.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:31.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:31.848" endtime="20210714 23:06:31.848"/>
</kw>
<status status="PASS" starttime="20210714 23:06:29.000" endtime="20210714 23:06:31.849"/>
</kw>
<msg timestamp="20210714 23:06:31.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:28.999" endtime="20210714 23:06:31.849"/>
</kw>
<status status="PASS" starttime="20210714 23:06:28.999" endtime="20210714 23:06:31.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:31.852" level="INFO">Running command 'ozone sh bucket link fstest1-src/97730-link2-o3fs-src fstest1/97730-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:34.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:34.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:31.850" endtime="20210714 23:06:34.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:34.657" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:34.656" endtime="20210714 23:06:34.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:34.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:34.657" endtime="20210714 23:06:34.658"/>
</kw>
<status status="PASS" starttime="20210714 23:06:31.850" endtime="20210714 23:06:34.658"/>
</kw>
<msg timestamp="20210714 23:06:34.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:31.850" endtime="20210714 23:06:34.658"/>
</kw>
<status status="PASS" starttime="20210714 23:06:31.849" endtime="20210714 23:06:34.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:34.661" level="INFO">Running command 'ozone sh bucket link fstest2-src/97730-link3-o3fs-src fstest2/97730-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:37.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:37.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:34.660" endtime="20210714 23:06:37.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:37.405" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:37.405" endtime="20210714 23:06:37.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:37.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:37.405" endtime="20210714 23:06:37.406"/>
</kw>
<status status="PASS" starttime="20210714 23:06:34.659" endtime="20210714 23:06:37.406"/>
</kw>
<msg timestamp="20210714 23:06:37.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:34.659" endtime="20210714 23:06:37.406"/>
</kw>
<status status="PASS" starttime="20210714 23:06:34.658" endtime="20210714 23:06:37.407"/>
</kw>
<status status="PASS" starttime="20210714 23:06:14.981" endtime="20210714 23:06:37.407"/>
</kw>
<status status="PASS" starttime="20210714 23:06:14.980" endtime="20210714 23:06:37.407"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:37.410" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:40.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:40.275" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20210714 23:06:37.408" endtime="20210714 23:06:40.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:40.276" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:06:20.509Z",
  "modificationTime" : "2021-07-14T23:06:20.509Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "legacy",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:56:00.604Z",
  "modificationTime" : "2021-07-14T22:56:00.604Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "orkuc",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-07-14T22:54:12.746Z",
  "modificationTime" : "2021-07-14T22:54:12.746Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-67053",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.867Z",
  "modificationTime" : "2021-07-14T22:39:40.867Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-07-14T22:38:48.114Z",
  "modificationTime" : "2021-07-14T22:38:48.114Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "64520-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:47:39.123Z",
  "modificationTime" : "2021-07-14T22:47:55.945Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-43755",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.895Z",
  "modificationTime" : "2021-07-14T22:39:40.895Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-00555",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.887Z",
  "modificationTime" : "2021-07-14T22:39:40.887Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:06:17.633Z",
  "modificationTime" : "2021-07-14T23:06:17.633Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-31119",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:00:23.830Z",
  "modificationTime" : "2021-07-14T23:00:23.830Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 20,
  "creationTime" : "2021-07-14T22:38:34.672Z",
  "modificationTime" : "2021-07-14T22:38:34.672Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-91161",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.905Z",
  "modificationTime" : "2021-07-14T22:39:40.905Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:03:29.182Z",
  "modificationTime" : "2021-07-14T23:03:29.182Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-07-14T23:03:26.424Z",
  "modificationTime" : "2021-07-14T23:03:26.424Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "83319-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T22:40:45.747Z",
  "modificationTime" : "2021-07-14T22:40:45.747Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-85828",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T22:39:40.914Z",
  "modificationTime" : "2021-07-14T22:39:40.914Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "83319-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-07-14T22:40:48.648Z",
  "modificationTime" : "2021-07-14T22:40:48.648Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210714 23:06:40.275" endtime="20210714 23:06:40.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:40.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:40.276" endtime="20210714 23:06:40.277"/>
</kw>
<status status="PASS" starttime="20210714 23:06:37.408" endtime="20210714 23:06:40.277"/>
</kw>
<msg timestamp="20210714 23:06:40.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:37.408" endtime="20210714 23:06:40.277"/>
</kw>
<msg timestamp="20210714 23:06:40.277" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20210714 23:06:37.407" endtime="20210714 23:06:40.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:06:40.278" endtime="20210714 23:06:40.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:06:40.278" endtime="20210714 23:06:40.278"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:06:40.278" endtime="20210714 23:06:40.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:40.282" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:43.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:43.258" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210714 23:06:40.281" endtime="20210714 23:06:43.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:43.259" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 262890,
  "usedNamespace" : 5,
  "creationTime" : "2021-07-14T23:03:31.801Z",
  "modificationTime" : "2021-07-14T23:03:31.801Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:03:34.542Z",
  "modificationTime" : "2021-07-14T23:03:34.542Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "97730-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:06:31.784Z",
  "modificationTime" : "2021-07-14T23:06:31.784Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "97730-link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "97730-link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:06:34.457Z",
  "modificationTime" : "2021-07-14T23:06:34.457Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "97730-link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210714 23:06:43.259" endtime="20210714 23:06:43.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:43.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:43.260" endtime="20210714 23:06:43.260"/>
</kw>
<status status="PASS" starttime="20210714 23:06:40.280" endtime="20210714 23:06:43.260"/>
</kw>
<msg timestamp="20210714 23:06:43.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:40.280" endtime="20210714 23:06:43.261"/>
</kw>
<msg timestamp="20210714 23:06:43.261" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "56145-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210714 23:06:40.279" endtime="20210714 23:06:43.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:06:43.261" endtime="20210714 23:06:43.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:06:43.261" endtime="20210714 23:06:43.262"/>
</kw>
<status status="PASS" starttime="20210714 23:06:37.407" endtime="20210714 23:06:43.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:43.262" level="INFO">Completed setup for o3fs tests with links in fstest1/97730-link1-o3fs using FS base URL: o3fs://97730-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:06:43.262" endtime="20210714 23:06:43.262"/>
</kw>
<status status="PASS" starttime="20210714 23:06:09.432" endtime="20210714 23:06:43.263"/>
</kw>
<test id="s1-s5-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:06:43.268" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:06:43.268" endtime="20210714 23:06:43.268"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:06:43.269" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:06:43.269" endtime="20210714 23:06:43.269"/>
</kw>
<status status="PASS" starttime="20210714 23:06:43.267" endtime="20210714 23:06:43.269"/>
</kw>
<msg timestamp="20210714 23:06:43.270" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:06:43.266" endtime="20210714 23:06:43.270"/>
</kw>
<status status="PASS" starttime="20210714 23:06:43.266" endtime="20210714 23:06:43.270"/>
</kw>
<msg timestamp="20210714 23:06:43.270" level="INFO">${url} = o3fs://97730-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:06:43.265" endtime="20210714 23:06:43.270"/>
</kw>
<msg timestamp="20210714 23:06:43.270" level="INFO">${root} = o3fs://97730-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:06:43.264" endtime="20210714 23:06:43.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:43.273" level="INFO">Running command 'ozone fs -ls o3fs://97730-link1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:46.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:46.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:43.272" endtime="20210714 23:06:46.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:46.036" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:46.035" endtime="20210714 23:06:46.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:46.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:46.036" endtime="20210714 23:06:46.036"/>
</kw>
<status status="PASS" starttime="20210714 23:06:43.271" endtime="20210714 23:06:46.037"/>
</kw>
<msg timestamp="20210714 23:06:46.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:43.271" endtime="20210714 23:06:46.037"/>
</kw>
<status status="PASS" starttime="20210714 23:06:43.270" endtime="20210714 23:06:46.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:06:43.263" endtime="20210714 23:06:46.037"/>
</test>
<test id="s1-s5-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:06:46.043" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:06:46.043" endtime="20210714 23:06:46.043"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:06:46.044" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:06:46.043" endtime="20210714 23:06:46.044"/>
</kw>
<status status="PASS" starttime="20210714 23:06:46.042" endtime="20210714 23:06:46.044"/>
</kw>
<msg timestamp="20210714 23:06:46.044" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:06:46.041" endtime="20210714 23:06:46.044"/>
</kw>
<status status="PASS" starttime="20210714 23:06:46.040" endtime="20210714 23:06:46.045"/>
</kw>
<msg timestamp="20210714 23:06:46.045" level="INFO">${url} = o3fs://97730-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210714 23:06:46.040" endtime="20210714 23:06:46.045"/>
</kw>
<msg timestamp="20210714 23:06:46.045" level="INFO">${url} = o3fs://97730-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210714 23:06:46.039" endtime="20210714 23:06:46.045"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:46.047" level="INFO">Running command 'ozone fs -ls o3fs://97730-link1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:48.670" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:06:48.670" level="INFO">${output} = 2021-07-14 23:06:48,546 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://97730-link1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume...</msg>
<status status="PASS" starttime="20210714 23:06:46.046" endtime="20210714 23:06:48.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:48.671" level="INFO">2021-07-14 23:06:48,546 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://97730-link1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume no-such-volume is not found
ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210714 23:06:48.671" endtime="20210714 23:06:48.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:48.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:48.672" endtime="20210714 23:06:48.672"/>
</kw>
<msg timestamp="20210714 23:06:48.673" level="INFO">${result} = 2021-07-14 23:06:48,546 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://97730-link1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume...</msg>
<status status="PASS" starttime="20210714 23:06:46.045" endtime="20210714 23:06:48.673"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:06:48.673" endtime="20210714 23:06:48.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:06:46.038" endtime="20210714 23:06:48.674"/>
</test>
<test id="s1-s5-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:06:48.679" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:06:48.679" endtime="20210714 23:06:48.679"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:06:48.680" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:06:48.680" endtime="20210714 23:06:48.680"/>
</kw>
<status status="PASS" starttime="20210714 23:06:48.678" endtime="20210714 23:06:48.680"/>
</kw>
<msg timestamp="20210714 23:06:48.680" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:06:48.677" endtime="20210714 23:06:48.680"/>
</kw>
<status status="PASS" starttime="20210714 23:06:48.677" endtime="20210714 23:06:48.681"/>
</kw>
<msg timestamp="20210714 23:06:48.681" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:06:48.676" endtime="20210714 23:06:48.681"/>
</kw>
<msg timestamp="20210714 23:06:48.681" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:06:48.675" endtime="20210714 23:06:48.681"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:48.684" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:51.328" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:06:51.328" level="INFO">${output} = 2021-07-14 23:06:51,192 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not foun...</msg>
<status status="PASS" starttime="20210714 23:06:48.682" endtime="20210714 23:06:51.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:51.330" level="INFO">2021-07-14 23:06:51,192 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found
ls: Bucket not found</msg>
<status status="PASS" starttime="20210714 23:06:51.329" endtime="20210714 23:06:51.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:51.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:51.330" endtime="20210714 23:06:51.330"/>
</kw>
<msg timestamp="20210714 23:06:51.331" level="INFO">${result} = 2021-07-14 23:06:51,192 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not foun...</msg>
<status status="PASS" starttime="20210714 23:06:48.681" endtime="20210714 23:06:51.331"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:06:51.331" endtime="20210714 23:06:51.332"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:06:48.674" endtime="20210714 23:06:51.332"/>
</test>
<test id="s1-s5-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:51.337" level="INFO">Running command 'ozone fs -mkdir -p o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:54.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:54.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:06:51.335" endtime="20210714 23:06:54.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:54.238" level="INFO"/>
<status status="PASS" starttime="20210714 23:06:54.238" endtime="20210714 23:06:54.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:54.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:54.239" endtime="20210714 23:06:54.239"/>
</kw>
<status status="PASS" starttime="20210714 23:06:51.334" endtime="20210714 23:06:54.239"/>
</kw>
<msg timestamp="20210714 23:06:54.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:51.334" endtime="20210714 23:06:54.240"/>
</kw>
<status status="PASS" starttime="20210714 23:06:51.334" endtime="20210714 23:06:54.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:54.244" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:06:57.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:06:57.133" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210714 23:06:54.242" endtime="20210714 23:06:57.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:06:57.134" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210714 23:06:57.133" endtime="20210714 23:06:57.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:06:57.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:06:57.134" endtime="20210714 23:06:57.135"/>
</kw>
<status status="PASS" starttime="20210714 23:06:54.241" endtime="20210714 23:06:57.135"/>
</kw>
<msg timestamp="20210714 23:06:57.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:54.241" endtime="20210714 23:06:57.135"/>
</kw>
<msg timestamp="20210714 23:06:57.136" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210714 23:06:54.240" endtime="20210714 23:06:57.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:06:57.136" endtime="20210714 23:06:57.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:06:51.333" endtime="20210714 23:06:57.136"/>
</test>
<test id="s1-s5-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:06:57.141" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:01.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:01.729" level="INFO">${output} = 2021-07-14 23:07:00,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:00,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:06:57.139" endtime="20210714 23:07:01.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:01.730" level="INFO">2021-07-14 23:07:00,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:00,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:07:00,320 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:07:00,561 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:07:00,561 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-AAC71533E143-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:07:00,562 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:07:01.729" endtime="20210714 23:07:01.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:01.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:01.730" endtime="20210714 23:07:01.731"/>
</kw>
<status status="PASS" starttime="20210714 23:06:57.138" endtime="20210714 23:07:01.731"/>
</kw>
<msg timestamp="20210714 23:07:01.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:06:57.138" endtime="20210714 23:07:01.731"/>
</kw>
<status status="PASS" starttime="20210714 23:06:57.138" endtime="20210714 23:07:01.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:01.735" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:04.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:04.643" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:01.733" endtime="20210714 23:07:04.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:04.645" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:04.644" endtime="20210714 23:07:04.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:04.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:04.645" endtime="20210714 23:07:04.645"/>
</kw>
<status status="PASS" starttime="20210714 23:07:01.732" endtime="20210714 23:07:04.646"/>
</kw>
<msg timestamp="20210714 23:07:04.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:01.732" endtime="20210714 23:07:04.646"/>
</kw>
<msg timestamp="20210714 23:07:04.646" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:01.731" endtime="20210714 23:07:04.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:04.646" endtime="20210714 23:07:04.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:04.650" level="INFO">Running command 'ozone sh key info fstest1/97730-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:07.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:07.655" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210714 23:07:04.648" endtime="20210714 23:07:07.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:07.656" level="INFO">3</msg>
<status status="PASS" starttime="20210714 23:07:07.656" endtime="20210714 23:07:07.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:07.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:07.657" endtime="20210714 23:07:07.657"/>
</kw>
<status status="PASS" starttime="20210714 23:07:04.648" endtime="20210714 23:07:07.657"/>
</kw>
<msg timestamp="20210714 23:07:07.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:04.648" endtime="20210714 23:07:07.658"/>
</kw>
<msg timestamp="20210714 23:07:07.658" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210714 23:07:04.647" endtime="20210714 23:07:07.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:07:07.658" endtime="20210714 23:07:07.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:06:57.137" endtime="20210714 23:07:07.659"/>
</test>
<test id="s1-s5-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:07.664" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:11.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:11.986" level="INFO">${output} = 2021-07-14 23:07:10,599 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:10,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:07:07.662" endtime="20210714 23:07:11.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:11.987" level="INFO">2021-07-14 23:07:10,599 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:10,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:07:10,721 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:07:10,950 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:07:10,951 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E361EE17F613-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:07:10,951 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:07:11.986" endtime="20210714 23:07:11.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:11.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:11.987" endtime="20210714 23:07:11.988"/>
</kw>
<status status="PASS" starttime="20210714 23:07:07.661" endtime="20210714 23:07:11.988"/>
</kw>
<msg timestamp="20210714 23:07:11.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:07.661" endtime="20210714 23:07:11.988"/>
</kw>
<status status="PASS" starttime="20210714 23:07:07.660" endtime="20210714 23:07:11.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:11.992" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:14.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:14.859" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:11.990" endtime="20210714 23:07:14.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:14.860" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:14.860" endtime="20210714 23:07:14.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:14.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:14.861" endtime="20210714 23:07:14.861"/>
</kw>
<status status="PASS" starttime="20210714 23:07:11.989" endtime="20210714 23:07:14.862"/>
</kw>
<msg timestamp="20210714 23:07:14.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:11.989" endtime="20210714 23:07:14.862"/>
</kw>
<msg timestamp="20210714 23:07:14.862" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:11.988" endtime="20210714 23:07:14.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:14.862" endtime="20210714 23:07:14.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:07.660" endtime="20210714 23:07:14.863"/>
</test>
<test id="s1-s5-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:14.867" level="INFO">Running command 'ozone fs -ls o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:17.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:17.803" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730...</msg>
<status status="PASS" starttime="20210714 23:07:14.865" endtime="20210714 23:07:17.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:17.804" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:17.803" endtime="20210714 23:07:17.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:17.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:17.804" endtime="20210714 23:07:17.805"/>
</kw>
<status status="PASS" starttime="20210714 23:07:14.865" endtime="20210714 23:07:17.805"/>
</kw>
<msg timestamp="20210714 23:07:17.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:14.865" endtime="20210714 23:07:17.805"/>
</kw>
<msg timestamp="20210714 23:07:17.806" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730...</msg>
<status status="PASS" starttime="20210714 23:07:14.864" endtime="20210714 23:07:17.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:17.806" endtime="20210714 23:07:17.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:17.806" endtime="20210714 23:07:17.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:14.863" endtime="20210714 23:07:17.807"/>
</test>
<test id="s1-s5-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:17.812" level="INFO">Running command 'ozone fs -mv o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:20.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:20.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:07:17.809" endtime="20210714 23:07:20.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:20.706" level="INFO"/>
<status status="PASS" starttime="20210714 23:07:20.706" endtime="20210714 23:07:20.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:20.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:20.706" endtime="20210714 23:07:20.707"/>
</kw>
<status status="PASS" starttime="20210714 23:07:17.809" endtime="20210714 23:07:20.707"/>
</kw>
<msg timestamp="20210714 23:07:20.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:17.809" endtime="20210714 23:07:20.708"/>
</kw>
<status status="PASS" starttime="20210714 23:07:17.808" endtime="20210714 23:07:20.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:20.711" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:23.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:23.661" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:20.709" endtime="20210714 23:07:23.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:23.662" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:23.662" endtime="20210714 23:07:23.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:23.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:23.663" endtime="20210714 23:07:23.663"/>
</kw>
<status status="PASS" starttime="20210714 23:07:20.709" endtime="20210714 23:07:23.663"/>
</kw>
<msg timestamp="20210714 23:07:23.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:20.708" endtime="20210714 23:07:23.664"/>
</kw>
<msg timestamp="20210714 23:07:23.664" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:20.708" endtime="20210714 23:07:23.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:23.664" endtime="20210714 23:07:23.664"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:23.665" endtime="20210714 23:07:23.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:17.807" endtime="20210714 23:07:23.665"/>
</test>
<test id="s1-s5-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:23.670" level="INFO">Running command 'ozone fs -mkdir -p o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:26.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:26.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:07:23.668" endtime="20210714 23:07:26.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:26.509" level="INFO"/>
<status status="PASS" starttime="20210714 23:07:26.508" endtime="20210714 23:07:26.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:26.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:26.509" endtime="20210714 23:07:26.510"/>
</kw>
<status status="PASS" starttime="20210714 23:07:23.667" endtime="20210714 23:07:26.510"/>
</kw>
<msg timestamp="20210714 23:07:26.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:23.667" endtime="20210714 23:07:26.510"/>
</kw>
<status status="PASS" starttime="20210714 23:07:23.666" endtime="20210714 23:07:26.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:26.514" level="INFO">Running command 'ozone fs -cp o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:30.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:30.946" level="INFO">${output} = 2021-07-14 23:07:29,376 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:29,440 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:07:26.512" endtime="20210714 23:07:30.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:30.947" level="INFO">2021-07-14 23:07:29,376 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:29,440 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:07:29,440 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:07:30,207 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:07:30,207 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A635C79AC567-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:07:30,208 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:07:30.946" endtime="20210714 23:07:30.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:30.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:30.947" endtime="20210714 23:07:30.948"/>
</kw>
<status status="PASS" starttime="20210714 23:07:26.511" endtime="20210714 23:07:30.948"/>
</kw>
<msg timestamp="20210714 23:07:30.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:26.511" endtime="20210714 23:07:30.948"/>
</kw>
<status status="PASS" starttime="20210714 23:07:26.511" endtime="20210714 23:07:30.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:30.952" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:34.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:34.030" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:30.950" endtime="20210714 23:07:34.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:34.031" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:34.031" endtime="20210714 23:07:34.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:34.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:34.031" endtime="20210714 23:07:34.032"/>
</kw>
<status status="PASS" starttime="20210714 23:07:30.950" endtime="20210714 23:07:34.032"/>
</kw>
<msg timestamp="20210714 23:07:34.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:30.949" endtime="20210714 23:07:34.033"/>
</kw>
<msg timestamp="20210714 23:07:34.033" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:30.949" endtime="20210714 23:07:34.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:34.033" endtime="20210714 23:07:34.033"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:34.037" level="INFO">Running command 'ozone fs -ls o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:37.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:37.024" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:34.035" endtime="20210714 23:07:37.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:37.025" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:37.024" endtime="20210714 23:07:37.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:37.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:37.025" endtime="20210714 23:07:37.026"/>
</kw>
<status status="PASS" starttime="20210714 23:07:34.034" endtime="20210714 23:07:37.026"/>
</kw>
<msg timestamp="20210714 23:07:37.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:34.034" endtime="20210714 23:07:37.026"/>
</kw>
<msg timestamp="20210714 23:07:37.026" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:34.033" endtime="20210714 23:07:37.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:37.027" endtime="20210714 23:07:37.027"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:37.027" endtime="20210714 23:07:37.027"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:23.666" endtime="20210714 23:07:37.028"/>
</test>
<test id="s1-s5-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:37.032" level="INFO">Running command 'ozone fs -cat o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:41.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:41.116" level="INFO">${output} = 2021-07-14 23:07:39,808 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:39,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:07:37.031" endtime="20210714 23:07:41.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:41.117" level="INFO">2021-07-14 23:07:39,808 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:07:39,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:07:39,931 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210714 23:07:41.116" endtime="20210714 23:07:41.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:41.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:41.117" endtime="20210714 23:07:41.118"/>
</kw>
<status status="PASS" starttime="20210714 23:07:37.030" endtime="20210714 23:07:41.118"/>
</kw>
<msg timestamp="20210714 23:07:41.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:37.030" endtime="20210714 23:07:41.118"/>
</kw>
<status status="PASS" starttime="20210714 23:07:37.029" endtime="20210714 23:07:41.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:37.028" endtime="20210714 23:07:41.120"/>
</test>
<test id="s1-s5-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:41.125" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:43.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:43.923" level="INFO">${output} = Deleted o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:41.123" endtime="20210714 23:07:43.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:43.924" level="INFO">Deleted o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:07:43.924" endtime="20210714 23:07:43.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:43.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:43.925" endtime="20210714 23:07:43.925"/>
</kw>
<status status="PASS" starttime="20210714 23:07:41.122" endtime="20210714 23:07:43.926"/>
</kw>
<msg timestamp="20210714 23:07:43.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:41.122" endtime="20210714 23:07:43.926"/>
</kw>
<status status="PASS" starttime="20210714 23:07:41.121" endtime="20210714 23:07:43.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:43.931" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:46.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:46.921" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:07:43.929" endtime="20210714 23:07:46.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:46.922" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:07:46.922" endtime="20210714 23:07:46.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:46.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:46.923" endtime="20210714 23:07:46.923"/>
</kw>
<status status="PASS" starttime="20210714 23:07:43.927" endtime="20210714 23:07:46.923"/>
</kw>
<msg timestamp="20210714 23:07:46.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:43.927" endtime="20210714 23:07:46.924"/>
</kw>
<msg timestamp="20210714 23:07:46.924" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:07:43.926" endtime="20210714 23:07:46.924"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:46.924" endtime="20210714 23:07:46.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:41.120" endtime="20210714 23:07:46.925"/>
</test>
<test id="s1-s5-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:46.929" level="INFO">Running command 'ozone fs -rmdir o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:49.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:49.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:07:46.927" endtime="20210714 23:07:49.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:49.670" level="INFO"/>
<status status="PASS" starttime="20210714 23:07:49.670" endtime="20210714 23:07:49.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:49.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:49.671" endtime="20210714 23:07:49.671"/>
</kw>
<status status="PASS" starttime="20210714 23:07:46.927" endtime="20210714 23:07:49.671"/>
</kw>
<msg timestamp="20210714 23:07:49.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:46.927" endtime="20210714 23:07:49.672"/>
</kw>
<msg timestamp="20210714 23:07:49.672" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:07:46.926" endtime="20210714 23:07:49.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:49.675" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:52.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:52.653" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:49.674" endtime="20210714 23:07:52.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:52.654" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:52.653" endtime="20210714 23:07:52.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:52.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:52.654" endtime="20210714 23:07:52.655"/>
</kw>
<status status="PASS" starttime="20210714 23:07:49.673" endtime="20210714 23:07:52.655"/>
</kw>
<msg timestamp="20210714 23:07:52.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:49.673" endtime="20210714 23:07:52.655"/>
</kw>
<msg timestamp="20210714 23:07:52.656" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:07:49.672" endtime="20210714 23:07:52.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:52.656" endtime="20210714 23:07:52.656"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:46.925" endtime="20210714 23:07:52.656"/>
</test>
<test id="s1-s5-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:52.661" level="INFO">Running command 'ozone fs -touch o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:55.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:55.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:07:52.659" endtime="20210714 23:07:55.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:55.445" level="INFO"/>
<status status="PASS" starttime="20210714 23:07:55.444" endtime="20210714 23:07:55.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:55.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:55.445" endtime="20210714 23:07:55.446"/>
</kw>
<status status="PASS" starttime="20210714 23:07:52.659" endtime="20210714 23:07:55.446"/>
</kw>
<msg timestamp="20210714 23:07:55.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:52.658" endtime="20210714 23:07:55.446"/>
</kw>
<status status="PASS" starttime="20210714 23:07:52.658" endtime="20210714 23:07:55.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:55.451" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:07:58.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:07:58.470" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:07:55.448" endtime="20210714 23:07:58.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:07:58.472" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:07:58.471" endtime="20210714 23:07:58.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:07:58.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:07:58.472" endtime="20210714 23:07:58.472"/>
</kw>
<status status="PASS" starttime="20210714 23:07:55.448" endtime="20210714 23:07:58.473"/>
</kw>
<msg timestamp="20210714 23:07:58.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:55.447" endtime="20210714 23:07:58.473"/>
</kw>
<msg timestamp="20210714 23:07:58.473" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:07:55.447" endtime="20210714 23:07:58.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:07:58.473" endtime="20210714 23:07:58.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:52.657" endtime="20210714 23:07:58.474"/>
</test>
<test id="s1-s5-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:07:58.478" level="INFO">Running command 'ozone fs -touch o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:01.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:01.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:07:58.476" endtime="20210714 23:08:01.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:01.331" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:01.330" endtime="20210714 23:08:01.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:01.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:01.331" endtime="20210714 23:08:01.332"/>
</kw>
<status status="PASS" starttime="20210714 23:07:58.476" endtime="20210714 23:08:01.332"/>
</kw>
<msg timestamp="20210714 23:08:01.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:07:58.476" endtime="20210714 23:08:01.332"/>
</kw>
<status status="PASS" starttime="20210714 23:07:58.475" endtime="20210714 23:08:01.334"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:01.352" level="INFO">Running command 'ozone fs -rm o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:04.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:04.251" level="INFO">${output} = 2021-07-14 23:08:04,050 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:08:04,122 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:08:01.341" endtime="20210714 23:08:04.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:04.252" level="INFO">2021-07-14 23:08:04,050 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:08:04,122 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/hadoop/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210714 23:08:04.252" endtime="20210714 23:08:04.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:04.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:04.252" endtime="20210714 23:08:04.253"/>
</kw>
<status status="PASS" starttime="20210714 23:08:01.341" endtime="20210714 23:08:04.253"/>
</kw>
<msg timestamp="20210714 23:08:04.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:01.341" endtime="20210714 23:08:04.253"/>
</kw>
<status status="PASS" starttime="20210714 23:08:01.340" endtime="20210714 23:08:04.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:04.257" level="INFO">Running command 'ozone fs -ls -R o3fs://97730-link1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:07.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:07.011" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/ha...</msg>
<status status="PASS" starttime="20210714 23:08:04.255" endtime="20210714 23:08:07.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:07.012" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/hadoop/Current/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:06 o3fs://97730-link1-o3fs.fstest1.om/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:06 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:06 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:07 o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:08:07.011" endtime="20210714 23:08:07.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:07.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:07.012" endtime="20210714 23:08:07.013"/>
</kw>
<status status="PASS" starttime="20210714 23:08:04.255" endtime="20210714 23:08:07.013"/>
</kw>
<msg timestamp="20210714 23:08:07.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:04.254" endtime="20210714 23:08:07.013"/>
</kw>
<msg timestamp="20210714 23:08:07.013" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/.Trash/ha...</msg>
<status status="PASS" starttime="20210714 23:08:04.254" endtime="20210714 23:08:07.013"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:08:07.014" endtime="20210714 23:08:07.014"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210714 23:08:07.014" endtime="20210714 23:08:07.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:08:07.015" endtime="20210714 23:08:07.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:07:58.474" endtime="20210714 23:08:07.015"/>
</test>
<test id="s1-s5-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:07.021" level="INFO">Running command 'ozone fs -mkdir -p o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:09.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:09.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:07.019" endtime="20210714 23:08:09.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:09.923" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:09.922" endtime="20210714 23:08:09.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:09.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:09.923" endtime="20210714 23:08:09.924"/>
</kw>
<status status="PASS" starttime="20210714 23:08:07.018" endtime="20210714 23:08:09.924"/>
</kw>
<msg timestamp="20210714 23:08:09.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:07.018" endtime="20210714 23:08:09.924"/>
</kw>
<status status="PASS" starttime="20210714 23:08:07.017" endtime="20210714 23:08:09.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:09.928" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://97730-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:12.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:12.678" level="INFO">${output} = Deleted o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:08:09.926" endtime="20210714 23:08:12.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:12.679" level="INFO">Deleted o3fs://97730-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:08:12.679" endtime="20210714 23:08:12.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:12.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:12.680" endtime="20210714 23:08:12.680"/>
</kw>
<status status="PASS" starttime="20210714 23:08:09.926" endtime="20210714 23:08:12.680"/>
</kw>
<msg timestamp="20210714 23:08:12.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:09.925" endtime="20210714 23:08:12.680"/>
</kw>
<status status="PASS" starttime="20210714 23:08:09.925" endtime="20210714 23:08:12.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:12.684" level="INFO">Running command 'ozone sh key list fstest1/97730-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:15.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:15.726" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/
t...</msg>
<status status="PASS" starttime="20210714 23:08:12.682" endtime="20210714 23:08:15.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:15.727" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:08:15.726" endtime="20210714 23:08:15.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:15.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:15.727" endtime="20210714 23:08:15.727"/>
</kw>
<status status="PASS" starttime="20210714 23:08:12.682" endtime="20210714 23:08:15.728"/>
</kw>
<msg timestamp="20210714 23:08:15.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:12.681" endtime="20210714 23:08:15.728"/>
</kw>
<msg timestamp="20210714 23:08:15.728" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/
t...</msg>
<status status="PASS" starttime="20210714 23:08:12.681" endtime="20210714 23:08:15.728"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:08:15.728" endtime="20210714 23:08:15.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:08:07.016" endtime="20210714 23:08:15.729"/>
</test>
<test id="s1-s5-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:15.734" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:15.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:15.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:15.732" endtime="20210714 23:08:15.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:15.737" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:15.736" endtime="20210714 23:08:15.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:15.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:15.738" endtime="20210714 23:08:15.738"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.731" endtime="20210714 23:08:15.738"/>
</kw>
<msg timestamp="20210714 23:08:15.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:15.731" endtime="20210714 23:08:15.738"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.731" endtime="20210714 23:08:15.739"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:15.742" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:15.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:15.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:15.740" endtime="20210714 23:08:15.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:15.745" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:15.744" endtime="20210714 23:08:15.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:15.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:15.745" endtime="20210714 23:08:15.745"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.739" endtime="20210714 23:08:15.746"/>
</kw>
<msg timestamp="20210714 23:08:15.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:15.739" endtime="20210714 23:08:15.746"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.739" endtime="20210714 23:08:15.746"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:15.749" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:15.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:15.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:15.747" endtime="20210714 23:08:15.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:15.752" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:15.752" endtime="20210714 23:08:15.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:15.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:15.753" endtime="20210714 23:08:15.753"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.747" endtime="20210714 23:08:15.753"/>
</kw>
<msg timestamp="20210714 23:08:15.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:15.747" endtime="20210714 23:08:15.753"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.746" endtime="20210714 23:08:15.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:15.757" level="INFO">Running command 'ozone fs -mkdir -p o3fs://97730-link1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:18.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:18.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:15.755" endtime="20210714 23:08:18.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:18.631" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:18.630" endtime="20210714 23:08:18.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:18.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:18.631" endtime="20210714 23:08:18.631"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.754" endtime="20210714 23:08:18.632"/>
</kw>
<msg timestamp="20210714 23:08:18.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:15.754" endtime="20210714 23:08:18.632"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.754" endtime="20210714 23:08:18.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:18.635" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://97730-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:22.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:22.769" level="INFO">${output} = 2021-07-14 23:08:21,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:21,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:08:18.634" endtime="20210714 23:08:22.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:22.770" level="INFO">2021-07-14 23:08:21,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:21,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:08:21,566 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:08:21,805 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:08:21,806 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1674609FA6A4-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:08:21,807 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:08:22.770" endtime="20210714 23:08:22.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:22.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:22.770" endtime="20210714 23:08:22.771"/>
</kw>
<status status="PASS" starttime="20210714 23:08:18.633" endtime="20210714 23:08:22.771"/>
</kw>
<msg timestamp="20210714 23:08:22.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:18.633" endtime="20210714 23:08:22.771"/>
</kw>
<status status="PASS" starttime="20210714 23:08:18.632" endtime="20210714 23:08:22.772"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:22.775" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://97730-link1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:26.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:26.969" level="INFO">${output} = 2021-07-14 23:08:25,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:25,614 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:08:22.773" endtime="20210714 23:08:26.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:26.970" level="INFO">2021-07-14 23:08:25,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:25,614 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:08:25,614 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:08:25,839 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:08:25,839 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-628052F82688-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:08:25,840 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:08:26.969" endtime="20210714 23:08:26.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:26.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:26.970" endtime="20210714 23:08:26.971"/>
</kw>
<status status="PASS" starttime="20210714 23:08:22.773" endtime="20210714 23:08:26.971"/>
</kw>
<msg timestamp="20210714 23:08:26.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:22.772" endtime="20210714 23:08:26.971"/>
</kw>
<status status="PASS" starttime="20210714 23:08:22.772" endtime="20210714 23:08:26.972"/>
</kw>
<status status="PASS" starttime="20210714 23:08:15.730" endtime="20210714 23:08:26.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:26.975" level="INFO">Running command 'ozone fs -ls -R o3fs://97730-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:30.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:30.107" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1...</msg>
<status status="PASS" starttime="20210714 23:08:26.973" endtime="20210714 23:08:30.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:30.108" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210714 23:08:30.108" endtime="20210714 23:08:30.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:30.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:30.109" endtime="20210714 23:08:30.109"/>
</kw>
<status status="PASS" starttime="20210714 23:08:26.973" endtime="20210714 23:08:30.110"/>
</kw>
<msg timestamp="20210714 23:08:30.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:26.972" endtime="20210714 23:08:30.110"/>
</kw>
<msg timestamp="20210714 23:08:30.110" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1...</msg>
<status status="PASS" starttime="20210714 23:08:26.972" endtime="20210714 23:08:30.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:08:30.110" endtime="20210714 23:08:30.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:08:30.111" endtime="20210714 23:08:30.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:08:15.730" endtime="20210714 23:08:30.111"/>
</test>
<test id="s1-s5-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:08:30.117" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:08:30.116" endtime="20210714 23:08:30.117"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:08:30.117" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:08:30.117" endtime="20210714 23:08:30.118"/>
</kw>
<status status="PASS" starttime="20210714 23:08:30.116" endtime="20210714 23:08:30.118"/>
</kw>
<msg timestamp="20210714 23:08:30.118" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:08:30.115" endtime="20210714 23:08:30.118"/>
</kw>
<status status="PASS" starttime="20210714 23:08:30.114" endtime="20210714 23:08:30.118"/>
</kw>
<msg timestamp="20210714 23:08:30.118" level="INFO">${url} = o3fs://97730-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210714 23:08:30.113" endtime="20210714 23:08:30.118"/>
</kw>
<msg timestamp="20210714 23:08:30.119" level="INFO">${target} = o3fs://97730-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210714 23:08:30.113" endtime="20210714 23:08:30.119"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:30.122" level="INFO">Running command 'ozone fs -mkdir -p o3fs://97730-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:33.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:33.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:30.120" endtime="20210714 23:08:33.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:33.027" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:33.026" endtime="20210714 23:08:33.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:33.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:33.027" endtime="20210714 23:08:33.028"/>
</kw>
<status status="PASS" starttime="20210714 23:08:30.119" endtime="20210714 23:08:33.028"/>
</kw>
<msg timestamp="20210714 23:08:33.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:30.119" endtime="20210714 23:08:33.028"/>
</kw>
<status status="PASS" starttime="20210714 23:08:30.119" endtime="20210714 23:08:33.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:33.032" level="INFO">Running command 'ozone fs -cp o3fs://97730-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://97730-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:37.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:37.628" level="INFO">${output} = 2021-07-14 23:08:36,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:36,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:08:33.030" endtime="20210714 23:08:37.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:37.629" level="INFO">2021-07-14 23:08:36,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:36,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:08:36,087 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:08:36,896 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:08:36,896 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E385CE602CCA-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:08:36,897 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:08:37.628" endtime="20210714 23:08:37.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:37.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:37.629" endtime="20210714 23:08:37.630"/>
</kw>
<status status="PASS" starttime="20210714 23:08:33.029" endtime="20210714 23:08:37.631"/>
</kw>
<msg timestamp="20210714 23:08:37.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:33.029" endtime="20210714 23:08:37.631"/>
</kw>
<status status="PASS" starttime="20210714 23:08:33.028" endtime="20210714 23:08:37.631"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:37.634" level="INFO">Running command 'ozone fs -rm -r o3fs://97730-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:40.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:40.273" level="INFO">${output} = 2021-07-14 23:08:40,049 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:08:40,128 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:08:37.632" endtime="20210714 23:08:40.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:40.274" level="INFO">2021-07-14 23:08:40,049 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:08:40,128 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://97730-link2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/hadoop/Current/testdir2</msg>
<status status="PASS" starttime="20210714 23:08:40.273" endtime="20210714 23:08:40.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:40.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:40.274" endtime="20210714 23:08:40.275"/>
</kw>
<status status="PASS" starttime="20210714 23:08:37.632" endtime="20210714 23:08:40.275"/>
</kw>
<msg timestamp="20210714 23:08:40.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:37.632" endtime="20210714 23:08:40.275"/>
</kw>
<status status="PASS" starttime="20210714 23:08:37.631" endtime="20210714 23:08:40.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:08:30.112" endtime="20210714 23:08:40.275"/>
</test>
<test id="s1-s5-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:08:40.281" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:08:40.280" endtime="20210714 23:08:40.281"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:08:40.281" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:08:40.281" endtime="20210714 23:08:40.281"/>
</kw>
<status status="PASS" starttime="20210714 23:08:40.280" endtime="20210714 23:08:40.282"/>
</kw>
<msg timestamp="20210714 23:08:40.282" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:08:40.279" endtime="20210714 23:08:40.282"/>
</kw>
<status status="PASS" starttime="20210714 23:08:40.278" endtime="20210714 23:08:40.282"/>
</kw>
<msg timestamp="20210714 23:08:40.282" level="INFO">${url} = o3fs://97730-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210714 23:08:40.278" endtime="20210714 23:08:40.282"/>
</kw>
<msg timestamp="20210714 23:08:40.282" level="INFO">${target} = o3fs://97730-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210714 23:08:40.277" endtime="20210714 23:08:40.283"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:40.286" level="INFO">Running command 'ozone fs -mkdir -p o3fs://97730-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:43.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:43.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:40.284" endtime="20210714 23:08:43.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:43.101" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:43.101" endtime="20210714 23:08:43.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:43.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:43.102" endtime="20210714 23:08:43.102"/>
</kw>
<status status="PASS" starttime="20210714 23:08:40.283" endtime="20210714 23:08:43.102"/>
</kw>
<msg timestamp="20210714 23:08:43.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:40.283" endtime="20210714 23:08:43.103"/>
</kw>
<status status="PASS" starttime="20210714 23:08:40.283" endtime="20210714 23:08:43.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:43.106" level="INFO">Running command 'ozone fs -cp o3fs://97730-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://97730-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:47.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:47.626" level="INFO">${output} = 2021-07-14 23:08:45,985 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:46,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:08:43.104" endtime="20210714 23:08:47.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:47.628" level="INFO">2021-07-14 23:08:45,985 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:08:46,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:08:46,093 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:08:46,877 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:08:46,877 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5AE946DA8F8D-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:08:46,878 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:08:47.627" endtime="20210714 23:08:47.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:47.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:47.628" endtime="20210714 23:08:47.628"/>
</kw>
<status status="PASS" starttime="20210714 23:08:43.104" endtime="20210714 23:08:47.629"/>
</kw>
<msg timestamp="20210714 23:08:47.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:43.104" endtime="20210714 23:08:47.629"/>
</kw>
<status status="PASS" starttime="20210714 23:08:43.103" endtime="20210714 23:08:47.629"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:47.633" level="INFO">Running command 'ozone fs -rm -r o3fs://97730-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:50.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:50.468" level="INFO">${output} = 2021-07-14 23:08:50,207 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:08:50,292 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:08:47.631" endtime="20210714 23:08:50.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:50.469" level="INFO">2021-07-14 23:08:50,207 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:08:50,292 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://97730-link3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/hadoop/Current/testdir3</msg>
<status status="PASS" starttime="20210714 23:08:50.468" endtime="20210714 23:08:50.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:50.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:50.469" endtime="20210714 23:08:50.469"/>
</kw>
<status status="PASS" starttime="20210714 23:08:47.630" endtime="20210714 23:08:50.470"/>
</kw>
<msg timestamp="20210714 23:08:50.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:47.630" endtime="20210714 23:08:50.470"/>
</kw>
<status status="PASS" starttime="20210714 23:08:47.629" endtime="20210714 23:08:50.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:08:40.276" endtime="20210714 23:08:50.470"/>
</test>
<test id="s1-s5-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:50.476" level="INFO">Running command 'ozone sh key put fstest1/97730-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:55.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:55.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:08:50.474" endtime="20210714 23:08:55.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:55.290" level="INFO"/>
<status status="PASS" starttime="20210714 23:08:55.289" endtime="20210714 23:08:55.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:55.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:55.290" endtime="20210714 23:08:55.291"/>
</kw>
<status status="PASS" starttime="20210714 23:08:50.473" endtime="20210714 23:08:55.291"/>
</kw>
<msg timestamp="20210714 23:08:55.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:50.473" endtime="20210714 23:08:55.291"/>
</kw>
<status status="PASS" starttime="20210714 23:08:50.472" endtime="20210714 23:08:55.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:55.295" level="INFO">Running command 'ozone fs -ls o3fs://97730-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:08:58.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:08:58.195" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:08:55.293" endtime="20210714 23:08:58.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:08:58.196" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:08:58.195" endtime="20210714 23:08:58.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:08:58.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:08:58.196" endtime="20210714 23:08:58.197"/>
</kw>
<status status="PASS" starttime="20210714 23:08:55.292" endtime="20210714 23:08:58.197"/>
</kw>
<msg timestamp="20210714 23:08:58.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:08:55.292" endtime="20210714 23:08:58.197"/>
</kw>
<msg timestamp="20210714 23:08:58.198" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:08 o3fs://97730-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:08:55.291" endtime="20210714 23:08:58.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:08:58.198" endtime="20210714 23:08:58.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:08:50.471" endtime="20210714 23:08:58.198"/>
</test>
<test id="s1-s5-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:08:58.203" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://97730-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:09:01.205" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:09:01.205" level="INFO">${output} = copyFromLocal: `o3fs://97730-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:08:58.201" endtime="20210714 23:09:01.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:09:01.207" level="INFO">copyFromLocal: `o3fs://97730-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:09:01.206" endtime="20210714 23:09:01.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:09:01.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:09:01.207" endtime="20210714 23:09:01.207"/>
</kw>
<msg timestamp="20210714 23:09:01.208" level="INFO">${result} = copyFromLocal: `o3fs://97730-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:08:58.200" endtime="20210714 23:09:01.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:09:01.208" endtime="20210714 23:09:01.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:08:58.199" endtime="20210714 23:09:01.208"/>
</test>
<test id="s1-s5-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:09:01.214" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:09:01.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:09:01.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:09:01.211" endtime="20210714 23:09:01.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:09:01.217" level="INFO"/>
<status status="PASS" starttime="20210714 23:09:01.216" endtime="20210714 23:09:01.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:09:01.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:09:01.217" endtime="20210714 23:09:01.218"/>
</kw>
<status status="PASS" starttime="20210714 23:09:01.211" endtime="20210714 23:09:01.218"/>
</kw>
<msg timestamp="20210714 23:09:01.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:09:01.211" endtime="20210714 23:09:01.218"/>
</kw>
<status status="PASS" starttime="20210714 23:09:01.210" endtime="20210714 23:09:01.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:09:01.221" level="INFO">Running command 'ozone fs -get o3fs://97730-link1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:09:05.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:09:05.182" level="INFO">${output} = 2021-07-14 23:09:04,007 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:09:04,070 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:09:01.220" endtime="20210714 23:09:05.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:09:05.183" level="INFO">2021-07-14 23:09:04,007 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:09:04,070 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:09:04,070 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210714 23:09:05.182" endtime="20210714 23:09:05.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:09:05.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:09:05.183" endtime="20210714 23:09:05.184"/>
</kw>
<status status="PASS" starttime="20210714 23:09:01.219" endtime="20210714 23:09:05.184"/>
</kw>
<msg timestamp="20210714 23:09:05.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:09:01.219" endtime="20210714 23:09:05.184"/>
</kw>
<status status="PASS" starttime="20210714 23:09:01.218" endtime="20210714 23:09:05.184"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210714 23:09:05.185" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210714 23:09:05.184" endtime="20210714 23:09:05.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:09:01.209" endtime="20210714 23:09:05.185"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210714 23:06:09.380" endtime="20210714 23:09:05.187"/>
</suite>
<suite id="s1-s6" name="ozonefs-prefix-ofs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:10:14.233" level="INFO">${random} = 11312</msg>
<status status="PASS" starttime="20210714 23:10:14.233" endtime="20210714 23:10:14.233"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:10:14.234" level="INFO">${BUCKET} = 11312-link1-ofs</msg>
<status status="PASS" starttime="20210714 23:10:14.233" endtime="20210714 23:10:14.234"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:10:14.234" level="INFO">${BUCKET2} = 11312-link2-ofs</msg>
<status status="PASS" starttime="20210714 23:10:14.234" endtime="20210714 23:10:14.234"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:10:14.235" level="INFO">${BUCKET_IN_VOL2} = 11312-link3-ofs</msg>
<status status="PASS" starttime="20210714 23:10:14.235" endtime="20210714 23:10:14.235"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:10:14.239" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:10:14.239" endtime="20210714 23:10:14.239"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:10:14.240" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:10:14.239" endtime="20210714 23:10:14.240"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.238" endtime="20210714 23:10:14.240"/>
</kw>
<msg timestamp="20210714 23:10:14.240" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:10:14.237" endtime="20210714 23:10:14.240"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:10:14.242" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20210714 23:10:14.241" endtime="20210714 23:10:14.242"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:10:14.242" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20210714 23:10:14.242" endtime="20210714 23:10:14.242"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.241" endtime="20210714 23:10:14.243"/>
</kw>
<msg timestamp="20210714 23:10:14.243" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20210714 23:10:14.240" endtime="20210714 23:10:14.243"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.236" endtime="20210714 23:10:14.243"/>
</kw>
<msg timestamp="20210714 23:10:14.243" level="INFO">${url} = ofs://om/fstest1/11312-link1-ofs/</msg>
<status status="PASS" starttime="20210714 23:10:14.236" endtime="20210714 23:10:14.243"/>
</kw>
<msg timestamp="20210714 23:10:14.243" level="INFO">${BASE_URL} = ofs://om/fstest1/11312-link1-ofs/</msg>
<status status="PASS" starttime="20210714 23:10:14.235" endtime="20210714 23:10:14.243"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:10:14.244" level="INFO">${BASE_URL} = ofs://om/fstest1/11312-link1-ofs/</msg>
<status status="PASS" starttime="20210714 23:10:14.244" endtime="20210714 23:10:14.244"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:10:14.246" level="INFO">${DEEP_URL} = ofs://om/fstest1/11312-link1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20210714 23:10:14.244" endtime="20210714 23:10:14.246"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.232" endtime="20210714 23:10:14.246"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:14.249" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:17.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:17.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:14.246" endtime="20210714 23:10:17.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:17.996" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:17.996" endtime="20210714 23:10:17.996"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.246" endtime="20210714 23:10:17.996"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:17.999" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:20.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:20.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:17.997" endtime="20210714 23:10:20.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:20.760" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:20.759" endtime="20210714 23:10:20.760"/>
</kw>
<status status="PASS" starttime="20210714 23:10:17.997" endtime="20210714 23:10:20.760"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.246" endtime="20210714 23:10:20.760"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:20.763" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:23.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:23.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:20.761" endtime="20210714 23:10:23.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:23.718" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:23.718" endtime="20210714 23:10:23.718"/>
</kw>
<status status="PASS" starttime="20210714 23:10:20.761" endtime="20210714 23:10:23.719"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:23.721" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:26.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:26.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:23.719" endtime="20210714 23:10:26.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:26.470" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:26.469" endtime="20210714 23:10:26.470"/>
</kw>
<status status="PASS" starttime="20210714 23:10:23.719" endtime="20210714 23:10:26.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:26.473" level="INFO">Running command 'ozone sh bucket create fstest1-src/11312-link1-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:29.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:29.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:26.471" endtime="20210714 23:10:29.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:29.468" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:29.467" endtime="20210714 23:10:29.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:29.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:29.468" endtime="20210714 23:10:29.468"/>
</kw>
<status status="PASS" starttime="20210714 23:10:26.471" endtime="20210714 23:10:29.469"/>
</kw>
<msg timestamp="20210714 23:10:29.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:26.471" endtime="20210714 23:10:29.469"/>
</kw>
<status status="PASS" starttime="20210714 23:10:26.470" endtime="20210714 23:10:29.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:29.472" level="INFO">Running command 'ozone sh bucket create fstest1-src/11312-link2-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:32.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:32.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:29.470" endtime="20210714 23:10:32.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:32.249" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:32.248" endtime="20210714 23:10:32.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:32.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:32.249" endtime="20210714 23:10:32.250"/>
</kw>
<status status="PASS" starttime="20210714 23:10:29.470" endtime="20210714 23:10:32.250"/>
</kw>
<msg timestamp="20210714 23:10:32.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:29.470" endtime="20210714 23:10:32.250"/>
</kw>
<status status="PASS" starttime="20210714 23:10:29.469" endtime="20210714 23:10:32.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:32.254" level="INFO">Running command 'ozone sh bucket create fstest2-src/11312-link3-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:35.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:35.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:32.252" endtime="20210714 23:10:35.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:35.123" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:35.122" endtime="20210714 23:10:35.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:35.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:35.123" endtime="20210714 23:10:35.124"/>
</kw>
<status status="PASS" starttime="20210714 23:10:32.251" endtime="20210714 23:10:35.124"/>
</kw>
<msg timestamp="20210714 23:10:35.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:32.251" endtime="20210714 23:10:35.124"/>
</kw>
<status status="PASS" starttime="20210714 23:10:32.251" endtime="20210714 23:10:35.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:35.128" level="INFO">Running command 'ozone sh bucket link fstest1-src/11312-link1-ofs-src fstest1/11312-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:37.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:37.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:35.126" endtime="20210714 23:10:37.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:37.924" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:37.923" endtime="20210714 23:10:37.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:37.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:37.924" endtime="20210714 23:10:37.924"/>
</kw>
<status status="PASS" starttime="20210714 23:10:35.125" endtime="20210714 23:10:37.925"/>
</kw>
<msg timestamp="20210714 23:10:37.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:35.125" endtime="20210714 23:10:37.925"/>
</kw>
<status status="PASS" starttime="20210714 23:10:35.124" endtime="20210714 23:10:37.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:37.928" level="INFO">Running command 'ozone sh bucket link fstest1-src/11312-link2-ofs-src fstest1/11312-link2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:40.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:40.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:37.926" endtime="20210714 23:10:40.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:40.688" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:40.687" endtime="20210714 23:10:40.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:40.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:40.688" endtime="20210714 23:10:40.688"/>
</kw>
<status status="PASS" starttime="20210714 23:10:37.926" endtime="20210714 23:10:40.688"/>
</kw>
<msg timestamp="20210714 23:10:40.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:37.926" endtime="20210714 23:10:40.689"/>
</kw>
<status status="PASS" starttime="20210714 23:10:37.925" endtime="20210714 23:10:40.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:40.692" level="INFO">Running command 'ozone sh bucket link fstest2-src/11312-link3-ofs-src fstest2/11312-link3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:43.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:43.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:40.690" endtime="20210714 23:10:43.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:43.442" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:43.441" endtime="20210714 23:10:43.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:43.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:43.442" endtime="20210714 23:10:43.443"/>
</kw>
<status status="PASS" starttime="20210714 23:10:40.690" endtime="20210714 23:10:43.443"/>
</kw>
<msg timestamp="20210714 23:10:43.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:40.690" endtime="20210714 23:10:43.443"/>
</kw>
<status status="PASS" starttime="20210714 23:10:40.689" endtime="20210714 23:10:43.443"/>
</kw>
<status status="PASS" starttime="20210714 23:10:20.761" endtime="20210714 23:10:43.443"/>
</kw>
<status status="PASS" starttime="20210714 23:10:20.760" endtime="20210714 23:10:43.444"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:43.447" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:46.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:46.794" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20210714 23:10:43.445" endtime="20210714 23:10:46.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:46.795" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:10:26.318Z",
  "modificationTime" : "2021-07-14T23:10:26.318Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:10:23.572Z",
  "modificationTime" : "2021-07-14T23:10:23.572Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:10:06.534Z",
  "modificationTime" : "2021-07-14T23:10:06.534Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:10:20.700Z",
  "modificationTime" : "2021-07-14T23:10:20.700Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:10:17.632Z",
  "modificationTime" : "2021-07-14T23:10:17.632Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210714 23:10:46.794" endtime="20210714 23:10:46.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:46.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:46.795" endtime="20210714 23:10:46.796"/>
</kw>
<status status="PASS" starttime="20210714 23:10:43.445" endtime="20210714 23:10:46.796"/>
</kw>
<msg timestamp="20210714 23:10:46.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:43.444" endtime="20210714 23:10:46.796"/>
</kw>
<msg timestamp="20210714 23:10:46.796" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20210714 23:10:43.444" endtime="20210714 23:10:46.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:10:46.797" endtime="20210714 23:10:46.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:10:46.797" endtime="20210714 23:10:46.797"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:10:46.797" endtime="20210714 23:10:46.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:46.801" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:49.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:49.758" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "11312-link1-ofs",
  "storageType" : "DISK",
 ...</msg>
<status status="PASS" starttime="20210714 23:10:46.800" endtime="20210714 23:10:49.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:49.759" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "11312-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:10:37.774Z",
  "modificationTime" : "2021-07-14T23:10:37.774Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "11312-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "11312-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:10:40.541Z",
  "modificationTime" : "2021-07-14T23:10:40.541Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "11312-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210714 23:10:49.758" endtime="20210714 23:10:49.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:49.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:49.759" endtime="20210714 23:10:49.760"/>
</kw>
<status status="PASS" starttime="20210714 23:10:46.799" endtime="20210714 23:10:49.760"/>
</kw>
<msg timestamp="20210714 23:10:49.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:46.799" endtime="20210714 23:10:49.760"/>
</kw>
<msg timestamp="20210714 23:10:49.760" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "11312-link1-ofs",
  "storageType" : "DISK",
 ...</msg>
<status status="PASS" starttime="20210714 23:10:46.798" endtime="20210714 23:10:49.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:10:49.760" endtime="20210714 23:10:49.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:10:49.761" endtime="20210714 23:10:49.761"/>
</kw>
<status status="PASS" starttime="20210714 23:10:43.444" endtime="20210714 23:10:49.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:49.762" level="INFO">Completed setup for ofs tests with links in fstest1/11312-link1-ofs using FS base URL: ofs://om/fstest1/11312-link1-ofs/</msg>
<status status="PASS" starttime="20210714 23:10:49.761" endtime="20210714 23:10:49.762"/>
</kw>
<status status="PASS" starttime="20210714 23:10:14.232" endtime="20210714 23:10:49.762"/>
</kw>
<test id="s1-s6-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:10:49.768" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:10:49.767" endtime="20210714 23:10:49.768"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:10:49.768" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:10:49.768" endtime="20210714 23:10:49.769"/>
</kw>
<status status="PASS" starttime="20210714 23:10:49.767" endtime="20210714 23:10:49.769"/>
</kw>
<msg timestamp="20210714 23:10:49.769" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:10:49.766" endtime="20210714 23:10:49.769"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 23:10:49.770" endtime="20210714 23:10:49.771"/>
</kw>
<msg timestamp="20210714 23:10:49.771" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 23:10:49.769" endtime="20210714 23:10:49.771"/>
</kw>
<status status="PASS" starttime="20210714 23:10:49.765" endtime="20210714 23:10:49.771"/>
</kw>
<msg timestamp="20210714 23:10:49.771" level="INFO">${url} = ofs://om/fstest1/11312-link1-ofs</msg>
<status status="PASS" starttime="20210714 23:10:49.765" endtime="20210714 23:10:49.772"/>
</kw>
<msg timestamp="20210714 23:10:49.772" level="INFO">${root} = ofs://om/fstest1/11312-link1-ofs</msg>
<status status="PASS" starttime="20210714 23:10:49.763" endtime="20210714 23:10:49.772"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:49.775" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/11312-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:52.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:10:52.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:49.773" endtime="20210714 23:10:52.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:52.669" level="INFO"/>
<status status="PASS" starttime="20210714 23:10:52.668" endtime="20210714 23:10:52.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:52.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:52.669" endtime="20210714 23:10:52.670"/>
</kw>
<status status="PASS" starttime="20210714 23:10:49.773" endtime="20210714 23:10:52.670"/>
</kw>
<msg timestamp="20210714 23:10:52.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:49.772" endtime="20210714 23:10:52.670"/>
</kw>
<status status="PASS" starttime="20210714 23:10:49.772" endtime="20210714 23:10:52.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:10:49.762" endtime="20210714 23:10:52.671"/>
</test>
<test id="s1-s6-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:10:52.677" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:10:52.676" endtime="20210714 23:10:52.677"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:10:52.677" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:10:52.677" endtime="20210714 23:10:52.677"/>
</kw>
<status status="PASS" starttime="20210714 23:10:52.676" endtime="20210714 23:10:52.678"/>
</kw>
<msg timestamp="20210714 23:10:52.678" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:10:52.675" endtime="20210714 23:10:52.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 23:10:52.679" endtime="20210714 23:10:52.680"/>
</kw>
<msg timestamp="20210714 23:10:52.680" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 23:10:52.678" endtime="20210714 23:10:52.680"/>
</kw>
<status status="PASS" starttime="20210714 23:10:52.674" endtime="20210714 23:10:52.680"/>
</kw>
<msg timestamp="20210714 23:10:52.680" level="INFO">${url} = ofs://om/no-such-volume/11312-link1-ofs</msg>
<status status="PASS" starttime="20210714 23:10:52.673" endtime="20210714 23:10:52.680"/>
</kw>
<msg timestamp="20210714 23:10:52.681" level="INFO">${url} = ofs://om/no-such-volume/11312-link1-ofs</msg>
<status status="PASS" starttime="20210714 23:10:52.672" endtime="20210714 23:10:52.681"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:52.683" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/11312-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:56.303" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:10:56.303" level="INFO">${output} = ls: `ofs://om/no-such-volume/11312-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:10:52.681" endtime="20210714 23:10:56.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:56.304" level="INFO">ls: `ofs://om/no-such-volume/11312-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:10:56.304" endtime="20210714 23:10:56.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:56.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:56.305" endtime="20210714 23:10:56.305"/>
</kw>
<msg timestamp="20210714 23:10:56.306" level="INFO">${result} = ls: `ofs://om/no-such-volume/11312-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:10:52.681" endtime="20210714 23:10:56.306"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:10:56.306" endtime="20210714 23:10:56.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:10:52.671" endtime="20210714 23:10:56.307"/>
</test>
<test id="s1-s6-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:10:56.313" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:10:56.312" endtime="20210714 23:10:56.313"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:10:56.313" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:10:56.313" endtime="20210714 23:10:56.313"/>
</kw>
<status status="PASS" starttime="20210714 23:10:56.312" endtime="20210714 23:10:56.314"/>
</kw>
<msg timestamp="20210714 23:10:56.314" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:10:56.311" endtime="20210714 23:10:56.314"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 23:10:56.315" endtime="20210714 23:10:56.316"/>
</kw>
<msg timestamp="20210714 23:10:56.316" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 23:10:56.314" endtime="20210714 23:10:56.316"/>
</kw>
<status status="PASS" starttime="20210714 23:10:56.310" endtime="20210714 23:10:56.316"/>
</kw>
<msg timestamp="20210714 23:10:56.316" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210714 23:10:56.309" endtime="20210714 23:10:56.316"/>
</kw>
<msg timestamp="20210714 23:10:56.317" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210714 23:10:56.308" endtime="20210714 23:10:56.317"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:56.319" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:10:59.117" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:10:59.117" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:10:56.317" endtime="20210714 23:10:59.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:10:59.119" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:10:59.118" endtime="20210714 23:10:59.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:10:59.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:10:59.119" endtime="20210714 23:10:59.119"/>
</kw>
<msg timestamp="20210714 23:10:59.120" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210714 23:10:56.317" endtime="20210714 23:10:59.120"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:10:59.120" endtime="20210714 23:10:59.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:10:56.307" endtime="20210714 23:10:59.121"/>
</test>
<test id="s1-s6-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:10:59.125" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/11312-link1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:02.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:02.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:10:59.123" endtime="20210714 23:11:02.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:02.140" level="INFO"/>
<status status="PASS" starttime="20210714 23:11:02.140" endtime="20210714 23:11:02.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:02.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:02.141" endtime="20210714 23:11:02.141"/>
</kw>
<status status="PASS" starttime="20210714 23:10:59.123" endtime="20210714 23:11:02.142"/>
</kw>
<msg timestamp="20210714 23:11:02.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:10:59.123" endtime="20210714 23:11:02.142"/>
</kw>
<status status="PASS" starttime="20210714 23:10:59.122" endtime="20210714 23:11:02.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:02.146" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:05.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:05.279" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210714 23:11:02.144" endtime="20210714 23:11:05.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:05.281" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210714 23:11:05.280" endtime="20210714 23:11:05.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:05.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:05.281" endtime="20210714 23:11:05.281"/>
</kw>
<status status="PASS" starttime="20210714 23:11:02.143" endtime="20210714 23:11:05.282"/>
</kw>
<msg timestamp="20210714 23:11:05.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:02.143" endtime="20210714 23:11:05.282"/>
</kw>
<msg timestamp="20210714 23:11:05.282" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210714 23:11:02.142" endtime="20210714 23:11:05.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:05.282" endtime="20210714 23:11:05.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:10:59.121" endtime="20210714 23:11:05.283"/>
</test>
<test id="s1-s6-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:05.287" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:12.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:12.081" level="INFO">${output} = 2021-07-14 23:11:08,474 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:08,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:11:05.285" endtime="20210714 23:11:12.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:12.083" level="INFO">2021-07-14 23:11:08,474 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:08,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:11:08,585 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:11:08,825 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:11:08,825 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-15746A7DEBD9-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:11:08,827 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:11:12.082" endtime="20210714 23:11:12.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:12.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:12.083" endtime="20210714 23:11:12.084"/>
</kw>
<status status="PASS" starttime="20210714 23:11:05.285" endtime="20210714 23:11:12.084"/>
</kw>
<msg timestamp="20210714 23:11:12.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:05.285" endtime="20210714 23:11:12.084"/>
</kw>
<status status="PASS" starttime="20210714 23:11:05.284" endtime="20210714 23:11:12.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:12.087" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:15.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:15.270" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:12.086" endtime="20210714 23:11:15.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:15.272" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:15.271" endtime="20210714 23:11:15.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:15.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:15.272" endtime="20210714 23:11:15.273"/>
</kw>
<status status="PASS" starttime="20210714 23:11:12.085" endtime="20210714 23:11:15.273"/>
</kw>
<msg timestamp="20210714 23:11:15.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:12.085" endtime="20210714 23:11:15.273"/>
</kw>
<msg timestamp="20210714 23:11:15.273" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:12.084" endtime="20210714 23:11:15.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:15.273" endtime="20210714 23:11:15.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:15.277" level="INFO">Running command 'ozone sh key info fstest1/11312-link1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:18.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:18.426" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210714 23:11:15.275" endtime="20210714 23:11:18.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:18.427" level="INFO">3</msg>
<status status="PASS" starttime="20210714 23:11:18.426" endtime="20210714 23:11:18.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:18.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:18.427" endtime="20210714 23:11:18.427"/>
</kw>
<status status="PASS" starttime="20210714 23:11:15.275" endtime="20210714 23:11:18.428"/>
</kw>
<msg timestamp="20210714 23:11:18.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:15.275" endtime="20210714 23:11:18.428"/>
</kw>
<msg timestamp="20210714 23:11:18.428" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210714 23:11:15.274" endtime="20210714 23:11:18.428"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:11:18.428" endtime="20210714 23:11:18.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:05.283" endtime="20210714 23:11:18.429"/>
</test>
<test id="s1-s6-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:18.434" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:22.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:22.939" level="INFO">${output} = 2021-07-14 23:11:21,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:21,605 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:11:18.432" endtime="20210714 23:11:22.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:22.940" level="INFO">2021-07-14 23:11:21,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:21,605 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:11:21,605 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:11:21,869 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:11:21,870 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-596B224CFD69-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:11:21,872 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:11:22.939" endtime="20210714 23:11:22.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:22.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:22.940" endtime="20210714 23:11:22.941"/>
</kw>
<status status="PASS" starttime="20210714 23:11:18.431" endtime="20210714 23:11:22.941"/>
</kw>
<msg timestamp="20210714 23:11:22.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:18.431" endtime="20210714 23:11:22.941"/>
</kw>
<status status="PASS" starttime="20210714 23:11:18.430" endtime="20210714 23:11:22.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:22.945" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:26.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:26.046" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:22.943" endtime="20210714 23:11:26.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:26.047" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:26.047" endtime="20210714 23:11:26.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:26.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:26.048" endtime="20210714 23:11:26.048"/>
</kw>
<status status="PASS" starttime="20210714 23:11:22.943" endtime="20210714 23:11:26.048"/>
</kw>
<msg timestamp="20210714 23:11:26.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:22.942" endtime="20210714 23:11:26.049"/>
</kw>
<msg timestamp="20210714 23:11:26.049" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:22.942" endtime="20210714 23:11:26.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:26.049" endtime="20210714 23:11:26.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:18.429" endtime="20210714 23:11:26.050"/>
</test>
<test id="s1-s6-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:26.054" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:29.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:29.027" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest...</msg>
<status status="PASS" starttime="20210714 23:11:26.052" endtime="20210714 23:11:29.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:29.029" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:29.028" endtime="20210714 23:11:29.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:29.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:29.029" endtime="20210714 23:11:29.029"/>
</kw>
<status status="PASS" starttime="20210714 23:11:26.052" endtime="20210714 23:11:29.030"/>
</kw>
<msg timestamp="20210714 23:11:29.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:26.052" endtime="20210714 23:11:29.030"/>
</kw>
<msg timestamp="20210714 23:11:29.030" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest...</msg>
<status status="PASS" starttime="20210714 23:11:26.051" endtime="20210714 23:11:29.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:29.030" endtime="20210714 23:11:29.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:29.031" endtime="20210714 23:11:29.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:26.050" endtime="20210714 23:11:29.031"/>
</test>
<test id="s1-s6-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:29.036" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:31.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:31.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:11:29.034" endtime="20210714 23:11:31.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:31.833" level="INFO"/>
<status status="PASS" starttime="20210714 23:11:31.832" endtime="20210714 23:11:31.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:31.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:31.834" endtime="20210714 23:11:31.834"/>
</kw>
<status status="PASS" starttime="20210714 23:11:29.034" endtime="20210714 23:11:31.834"/>
</kw>
<msg timestamp="20210714 23:11:31.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:29.034" endtime="20210714 23:11:31.835"/>
</kw>
<status status="PASS" starttime="20210714 23:11:29.033" endtime="20210714 23:11:31.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:31.838" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:34.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:34.990" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:31.836" endtime="20210714 23:11:34.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:34.991" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:34.990" endtime="20210714 23:11:34.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:34.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:34.991" endtime="20210714 23:11:34.992"/>
</kw>
<status status="PASS" starttime="20210714 23:11:31.836" endtime="20210714 23:11:34.992"/>
</kw>
<msg timestamp="20210714 23:11:34.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:31.835" endtime="20210714 23:11:34.992"/>
</kw>
<msg timestamp="20210714 23:11:34.992" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:11:31.835" endtime="20210714 23:11:34.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:34.993" endtime="20210714 23:11:34.993"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:34.993" endtime="20210714 23:11:34.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:29.032" endtime="20210714 23:11:34.994"/>
</test>
<test id="s1-s6-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:34.998" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:38.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:38.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:11:34.996" endtime="20210714 23:11:38.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:38.125" level="INFO"/>
<status status="PASS" starttime="20210714 23:11:38.124" endtime="20210714 23:11:38.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:38.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:38.125" endtime="20210714 23:11:38.126"/>
</kw>
<status status="PASS" starttime="20210714 23:11:34.996" endtime="20210714 23:11:38.126"/>
</kw>
<msg timestamp="20210714 23:11:38.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:34.996" endtime="20210714 23:11:38.126"/>
</kw>
<status status="PASS" starttime="20210714 23:11:34.995" endtime="20210714 23:11:38.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:38.130" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:42.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:42.694" level="INFO">${output} = 2021-07-14 23:11:41,119 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:41,192 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:11:38.128" endtime="20210714 23:11:42.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:42.696" level="INFO">2021-07-14 23:11:41,119 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:41,192 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:11:41,192 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:11:42,047 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:11:42,048 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3D01361577D7-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:11:42,048 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:11:42.695" endtime="20210714 23:11:42.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:42.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:42.696" endtime="20210714 23:11:42.697"/>
</kw>
<status status="PASS" starttime="20210714 23:11:38.128" endtime="20210714 23:11:42.697"/>
</kw>
<msg timestamp="20210714 23:11:42.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:38.127" endtime="20210714 23:11:42.697"/>
</kw>
<status status="PASS" starttime="20210714 23:11:38.127" endtime="20210714 23:11:42.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:42.701" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:45.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:45.751" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:42.699" endtime="20210714 23:11:45.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:45.753" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:45.752" endtime="20210714 23:11:45.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:45.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:45.753" endtime="20210714 23:11:45.754"/>
</kw>
<status status="PASS" starttime="20210714 23:11:42.698" endtime="20210714 23:11:45.754"/>
</kw>
<msg timestamp="20210714 23:11:45.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:42.698" endtime="20210714 23:11:45.754"/>
</kw>
<msg timestamp="20210714 23:11:45.754" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:42.697" endtime="20210714 23:11:45.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:45.754" endtime="20210714 23:11:45.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:45.758" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:48.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:48.656" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:45.756" endtime="20210714 23:11:48.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:48.657" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:48.657" endtime="20210714 23:11:48.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:48.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:48.658" endtime="20210714 23:11:48.658"/>
</kw>
<status status="PASS" starttime="20210714 23:11:45.756" endtime="20210714 23:11:48.658"/>
</kw>
<msg timestamp="20210714 23:11:48.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:45.755" endtime="20210714 23:11:48.659"/>
</kw>
<msg timestamp="20210714 23:11:48.659" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:45.755" endtime="20210714 23:11:48.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:48.659" endtime="20210714 23:11:48.659"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:48.659" endtime="20210714 23:11:48.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:34.994" endtime="20210714 23:11:48.660"/>
</test>
<test id="s1-s6-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:48.664" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:52.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:52.660" level="INFO">${output} = 2021-07-14 23:11:51,476 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:51,541 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:11:48.663" endtime="20210714 23:11:52.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:52.661" level="INFO">2021-07-14 23:11:51,476 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:11:51,541 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:11:51,541 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210714 23:11:52.660" endtime="20210714 23:11:52.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:52.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:52.662" endtime="20210714 23:11:52.662"/>
</kw>
<status status="PASS" starttime="20210714 23:11:48.662" endtime="20210714 23:11:52.663"/>
</kw>
<msg timestamp="20210714 23:11:52.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:48.662" endtime="20210714 23:11:52.663"/>
</kw>
<status status="PASS" starttime="20210714 23:11:48.661" endtime="20210714 23:11:52.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:48.661" endtime="20210714 23:11:52.664"/>
</test>
<test id="s1-s6-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:52.669" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:55.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:55.725" level="INFO">${output} = Deleted ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:52.667" endtime="20210714 23:11:55.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:55.726" level="INFO">Deleted ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:11:55.725" endtime="20210714 23:11:55.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:55.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:55.726" endtime="20210714 23:11:55.727"/>
</kw>
<status status="PASS" starttime="20210714 23:11:52.667" endtime="20210714 23:11:55.727"/>
</kw>
<msg timestamp="20210714 23:11:55.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:52.666" endtime="20210714 23:11:55.727"/>
</kw>
<status status="PASS" starttime="20210714 23:11:52.666" endtime="20210714 23:11:55.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:55.732" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:11:58.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:11:58.826" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:11:55.730" endtime="20210714 23:11:58.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:11:58.827" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:11:58.827" endtime="20210714 23:11:58.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:11:58.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:11:58.827" endtime="20210714 23:11:58.828"/>
</kw>
<status status="PASS" starttime="20210714 23:11:55.729" endtime="20210714 23:11:58.828"/>
</kw>
<msg timestamp="20210714 23:11:58.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:55.728" endtime="20210714 23:11:58.828"/>
</kw>
<msg timestamp="20210714 23:11:58.829" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:11:55.728" endtime="20210714 23:11:58.829"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:11:58.829" endtime="20210714 23:11:58.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:52.665" endtime="20210714 23:11:58.829"/>
</test>
<test id="s1-s6-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:11:58.834" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:01.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:01.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:11:58.832" endtime="20210714 23:12:01.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:01.611" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:01.611" endtime="20210714 23:12:01.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:01.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:01.612" endtime="20210714 23:12:01.612"/>
</kw>
<status status="PASS" starttime="20210714 23:11:58.832" endtime="20210714 23:12:01.612"/>
</kw>
<msg timestamp="20210714 23:12:01.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:11:58.831" endtime="20210714 23:12:01.613"/>
</kw>
<msg timestamp="20210714 23:12:01.613" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:11:58.831" endtime="20210714 23:12:01.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:01.616" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:04.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:04.704" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:12:01.614" endtime="20210714 23:12:04.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:04.705" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:12:04.705" endtime="20210714 23:12:04.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:04.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:04.706" endtime="20210714 23:12:04.706"/>
</kw>
<status status="PASS" starttime="20210714 23:12:01.614" endtime="20210714 23:12:04.706"/>
</kw>
<msg timestamp="20210714 23:12:04.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:01.614" endtime="20210714 23:12:04.707"/>
</kw>
<msg timestamp="20210714 23:12:04.707" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:12:01.613" endtime="20210714 23:12:04.707"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:04.707" endtime="20210714 23:12:04.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:11:58.830" endtime="20210714 23:12:04.708"/>
</test>
<test id="s1-s6-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:04.712" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:07.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:07.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:04.710" endtime="20210714 23:12:07.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:07.488" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:07.487" endtime="20210714 23:12:07.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:07.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:07.488" endtime="20210714 23:12:07.489"/>
</kw>
<status status="PASS" starttime="20210714 23:12:04.710" endtime="20210714 23:12:07.489"/>
</kw>
<msg timestamp="20210714 23:12:07.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:04.709" endtime="20210714 23:12:07.489"/>
</kw>
<status status="PASS" starttime="20210714 23:12:04.709" endtime="20210714 23:12:07.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:07.493" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:10.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:10.554" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:12:07.491" endtime="20210714 23:12:10.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:10.555" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:12:10.554" endtime="20210714 23:12:10.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:10.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:10.556" endtime="20210714 23:12:10.556"/>
</kw>
<status status="PASS" starttime="20210714 23:12:07.491" endtime="20210714 23:12:10.556"/>
</kw>
<msg timestamp="20210714 23:12:10.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:07.490" endtime="20210714 23:12:10.557"/>
</kw>
<msg timestamp="20210714 23:12:10.557" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:12:07.490" endtime="20210714 23:12:10.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:10.557" endtime="20210714 23:12:10.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:12:04.708" endtime="20210714 23:12:10.558"/>
</test>
<test id="s1-s6-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:10.562" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:13.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:13.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:10.560" endtime="20210714 23:12:13.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:13.446" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:13.445" endtime="20210714 23:12:13.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:13.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:13.446" endtime="20210714 23:12:13.446"/>
</kw>
<status status="PASS" starttime="20210714 23:12:10.560" endtime="20210714 23:12:13.447"/>
</kw>
<msg timestamp="20210714 23:12:13.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:10.559" endtime="20210714 23:12:13.447"/>
</kw>
<status status="PASS" starttime="20210714 23:12:10.559" endtime="20210714 23:12:13.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:13.450" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:16.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:16.266" level="INFO">${output} = 2021-07-14 23:12:16,030 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:12:16,113 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:12:13.449" endtime="20210714 23:12:16.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:16.267" level="INFO">2021-07-14 23:12:16,030 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:12:16,113 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210714 23:12:16.267" endtime="20210714 23:12:16.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:16.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:16.268" endtime="20210714 23:12:16.268"/>
</kw>
<status status="PASS" starttime="20210714 23:12:13.448" endtime="20210714 23:12:16.268"/>
</kw>
<msg timestamp="20210714 23:12:16.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:13.448" endtime="20210714 23:12:16.269"/>
</kw>
<status status="PASS" starttime="20210714 23:12:13.447" endtime="20210714 23:12:16.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:16.272" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/11312-link1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:19.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:19.185" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop...</msg>
<status status="PASS" starttime="20210714 23:12:16.270" endtime="20210714 23:12:19.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:19.186" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1/11312-link1-ofs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1/11312-link1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:11 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:12:19.186" endtime="20210714 23:12:19.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:19.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:19.187" endtime="20210714 23:12:19.187"/>
</kw>
<status status="PASS" starttime="20210714 23:12:16.270" endtime="20210714 23:12:19.187"/>
</kw>
<msg timestamp="20210714 23:12:19.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:16.269" endtime="20210714 23:12:19.188"/>
</kw>
<msg timestamp="20210714 23:12:19.188" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/.Trash/hadoop...</msg>
<status status="PASS" starttime="20210714 23:12:16.269" endtime="20210714 23:12:19.188"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:19.188" endtime="20210714 23:12:19.189"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210714 23:12:19.189" endtime="20210714 23:12:19.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:19.189" endtime="20210714 23:12:19.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:12:10.558" endtime="20210714 23:12:19.190"/>
</test>
<test id="s1-s6-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:19.194" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:22.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:22.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:19.192" endtime="20210714 23:12:22.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:22.150" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:22.149" endtime="20210714 23:12:22.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:22.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:22.150" endtime="20210714 23:12:22.151"/>
</kw>
<status status="PASS" starttime="20210714 23:12:19.192" endtime="20210714 23:12:22.151"/>
</kw>
<msg timestamp="20210714 23:12:22.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:19.192" endtime="20210714 23:12:22.151"/>
</kw>
<status status="PASS" starttime="20210714 23:12:19.191" endtime="20210714 23:12:22.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:22.155" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:24.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:24.883" level="INFO">${output} = Deleted ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:12:22.153" endtime="20210714 23:12:24.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:24.884" level="INFO">Deleted ofs://om/fstest1/11312-link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:12:24.884" endtime="20210714 23:12:24.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:24.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:24.885" endtime="20210714 23:12:24.885"/>
</kw>
<status status="PASS" starttime="20210714 23:12:22.152" endtime="20210714 23:12:24.886"/>
</kw>
<msg timestamp="20210714 23:12:24.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:22.152" endtime="20210714 23:12:24.886"/>
</kw>
<status status="PASS" starttime="20210714 23:12:22.152" endtime="20210714 23:12:24.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:24.889" level="INFO">Running command 'ozone sh key list fstest1/11312-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:27.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:27.992" level="INFO">${output} = .Trash/
test/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/
.Trash/hadoop/Curr...</msg>
<status status="PASS" starttime="20210714 23:12:24.887" endtime="20210714 23:12:27.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:27.993" level="INFO">.Trash/
test/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs/dir/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/ofs/dir/testFile.txt
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210714 23:12:27.992" endtime="20210714 23:12:27.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:27.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:27.993" endtime="20210714 23:12:27.994"/>
</kw>
<status status="PASS" starttime="20210714 23:12:24.887" endtime="20210714 23:12:27.994"/>
</kw>
<msg timestamp="20210714 23:12:27.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:24.887" endtime="20210714 23:12:27.994"/>
</kw>
<msg timestamp="20210714 23:12:27.994" level="INFO">${result} = .Trash/
test/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/
.Trash/hadoop/Current/fstest1/11312-link1-ofs/test/
.Trash/hadoop/Curr...</msg>
<status status="PASS" starttime="20210714 23:12:24.886" endtime="20210714 23:12:27.995"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:27.995" endtime="20210714 23:12:27.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:12:19.190" endtime="20210714 23:12:27.995"/>
</test>
<test id="s1-s6-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:28.000" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:28.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:28.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:27.998" endtime="20210714 23:12:28.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:28.003" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:28.002" endtime="20210714 23:12:28.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:28.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:28.004" endtime="20210714 23:12:28.004"/>
</kw>
<status status="PASS" starttime="20210714 23:12:27.998" endtime="20210714 23:12:28.004"/>
</kw>
<msg timestamp="20210714 23:12:28.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:27.998" endtime="20210714 23:12:28.004"/>
</kw>
<status status="PASS" starttime="20210714 23:12:27.997" endtime="20210714 23:12:28.005"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:28.007" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:28.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:28.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:28.006" endtime="20210714 23:12:28.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:28.011" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:28.010" endtime="20210714 23:12:28.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:28.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:28.011" endtime="20210714 23:12:28.011"/>
</kw>
<status status="PASS" starttime="20210714 23:12:28.005" endtime="20210714 23:12:28.012"/>
</kw>
<msg timestamp="20210714 23:12:28.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:28.005" endtime="20210714 23:12:28.012"/>
</kw>
<status status="PASS" starttime="20210714 23:12:28.005" endtime="20210714 23:12:28.012"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:28.015" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:28.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:28.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:28.013" endtime="20210714 23:12:28.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:28.018" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:28.017" endtime="20210714 23:12:28.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:28.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:28.018" endtime="20210714 23:12:28.019"/>
</kw>
<status status="PASS" starttime="20210714 23:12:28.013" endtime="20210714 23:12:28.019"/>
</kw>
<msg timestamp="20210714 23:12:28.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:28.012" endtime="20210714 23:12:28.019"/>
</kw>
<status status="PASS" starttime="20210714 23:12:28.012" endtime="20210714 23:12:28.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:28.023" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/11312-link1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:30.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:30.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:28.021" endtime="20210714 23:12:30.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:30.953" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:30.952" endtime="20210714 23:12:30.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:30.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:30.953" endtime="20210714 23:12:30.954"/>
</kw>
<status status="PASS" starttime="20210714 23:12:28.020" endtime="20210714 23:12:30.954"/>
</kw>
<msg timestamp="20210714 23:12:30.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:28.020" endtime="20210714 23:12:30.954"/>
</kw>
<status status="PASS" starttime="20210714 23:12:28.019" endtime="20210714 23:12:30.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:30.958" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/11312-link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:35.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:35.619" level="INFO">${output} = 2021-07-14 23:12:34,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:34,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:12:30.956" endtime="20210714 23:12:35.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:35.620" level="INFO">2021-07-14 23:12:34,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:34,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:12:34,370 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:12:34,588 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:12:34,588 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-4E5F86C80BD8-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:12:34,589 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:12:35.619" endtime="20210714 23:12:35.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:35.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:35.620" endtime="20210714 23:12:35.621"/>
</kw>
<status status="PASS" starttime="20210714 23:12:30.955" endtime="20210714 23:12:35.621"/>
</kw>
<msg timestamp="20210714 23:12:35.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:30.955" endtime="20210714 23:12:35.621"/>
</kw>
<status status="PASS" starttime="20210714 23:12:30.955" endtime="20210714 23:12:35.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:35.625" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/11312-link1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:39.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:39.726" level="INFO">${output} = 2021-07-14 23:12:38,423 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:38,487 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:12:35.623" endtime="20210714 23:12:39.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:39.727" level="INFO">2021-07-14 23:12:38,423 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:38,487 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:12:38,487 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:12:38,756 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:12:38,757 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-4D856C9236FA-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:12:38,758 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:12:39.726" endtime="20210714 23:12:39.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:39.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:39.727" endtime="20210714 23:12:39.728"/>
</kw>
<status status="PASS" starttime="20210714 23:12:35.622" endtime="20210714 23:12:39.728"/>
</kw>
<msg timestamp="20210714 23:12:39.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:35.622" endtime="20210714 23:12:39.728"/>
</kw>
<status status="PASS" starttime="20210714 23:12:35.622" endtime="20210714 23:12:39.728"/>
</kw>
<status status="PASS" starttime="20210714 23:12:27.997" endtime="20210714 23:12:39.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:39.732" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/11312-link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:42.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:42.685" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/...</msg>
<status status="PASS" starttime="20210714 23:12:39.730" endtime="20210714 23:12:42.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:42.687" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210714 23:12:42.686" endtime="20210714 23:12:42.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:42.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:42.687" endtime="20210714 23:12:42.688"/>
</kw>
<status status="PASS" starttime="20210714 23:12:39.729" endtime="20210714 23:12:42.688"/>
</kw>
<msg timestamp="20210714 23:12:42.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:39.729" endtime="20210714 23:12:42.688"/>
</kw>
<msg timestamp="20210714 23:12:42.688" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:12 ofs://om/fstest1/11312-link1-ofs/...</msg>
<status status="PASS" starttime="20210714 23:12:39.729" endtime="20210714 23:12:42.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:42.689" endtime="20210714 23:12:42.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:12:42.689" endtime="20210714 23:12:42.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:12:27.996" endtime="20210714 23:12:42.690"/>
</test>
<test id="s1-s6-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:12:42.695" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:12:42.695" endtime="20210714 23:12:42.695"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:12:42.696" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:12:42.695" endtime="20210714 23:12:42.696"/>
</kw>
<status status="PASS" starttime="20210714 23:12:42.694" endtime="20210714 23:12:42.696"/>
</kw>
<msg timestamp="20210714 23:12:42.696" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:12:42.693" endtime="20210714 23:12:42.696"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:12:42.698" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210714 23:12:42.698" endtime="20210714 23:12:42.698"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:12:42.699" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20210714 23:12:42.699" endtime="20210714 23:12:42.699"/>
</kw>
<status status="PASS" starttime="20210714 23:12:42.698" endtime="20210714 23:12:42.699"/>
</kw>
<msg timestamp="20210714 23:12:42.699" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20210714 23:12:42.697" endtime="20210714 23:12:42.699"/>
</kw>
<status status="PASS" starttime="20210714 23:12:42.693" endtime="20210714 23:12:42.700"/>
</kw>
<msg timestamp="20210714 23:12:42.700" level="INFO">${url} = ofs://om/fstest1/11312-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210714 23:12:42.692" endtime="20210714 23:12:42.700"/>
</kw>
<msg timestamp="20210714 23:12:42.700" level="INFO">${target} = ofs://om/fstest1/11312-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210714 23:12:42.691" endtime="20210714 23:12:42.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:42.703" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/11312-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:45.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:45.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:42.701" endtime="20210714 23:12:45.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:45.482" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:45.481" endtime="20210714 23:12:45.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:45.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:45.482" endtime="20210714 23:12:45.483"/>
</kw>
<status status="PASS" starttime="20210714 23:12:42.701" endtime="20210714 23:12:45.483"/>
</kw>
<msg timestamp="20210714 23:12:45.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:42.701" endtime="20210714 23:12:45.483"/>
</kw>
<status status="PASS" starttime="20210714 23:12:42.700" endtime="20210714 23:12:45.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:45.487" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/11312-link1-ofs//testdir1/localdir1 ofs://om/fstest1/11312-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:50.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:50.062" level="INFO">${output} = 2021-07-14 23:12:48,535 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:48,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:12:45.485" endtime="20210714 23:12:50.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:50.064" level="INFO">2021-07-14 23:12:48,535 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:48,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:12:48,611 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:12:49,404 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:12:49,404 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-37579AC763A8-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:12:49,405 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:12:50.063" endtime="20210714 23:12:50.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:50.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:50.064" endtime="20210714 23:12:50.064"/>
</kw>
<status status="PASS" starttime="20210714 23:12:45.485" endtime="20210714 23:12:50.065"/>
</kw>
<msg timestamp="20210714 23:12:50.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:45.484" endtime="20210714 23:12:50.065"/>
</kw>
<status status="PASS" starttime="20210714 23:12:45.483" endtime="20210714 23:12:50.065"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:50.070" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/11312-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:53.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:53.003" level="INFO">${output} = 2021-07-14 23:12:52,796 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:12:52,865 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:12:50.067" endtime="20210714 23:12:53.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:53.004" level="INFO">2021-07-14 23:12:52,796 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:12:52,865 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/11312-link2-ofs/testdir2' to trash at: ofs://om/fstest1/11312-link2-ofs/.Trash/hadoop/Current/fstest1/11312-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210714 23:12:53.004" endtime="20210714 23:12:53.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:53.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:53.004" endtime="20210714 23:12:53.005"/>
</kw>
<status status="PASS" starttime="20210714 23:12:50.066" endtime="20210714 23:12:53.005"/>
</kw>
<msg timestamp="20210714 23:12:53.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:50.066" endtime="20210714 23:12:53.005"/>
</kw>
<status status="PASS" starttime="20210714 23:12:50.065" endtime="20210714 23:12:53.006"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:12:42.690" endtime="20210714 23:12:53.006"/>
</test>
<test id="s1-s6-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:12:53.011" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 23:12:53.011" endtime="20210714 23:12:53.011"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:12:53.012" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 23:12:53.011" endtime="20210714 23:12:53.012"/>
</kw>
<status status="PASS" starttime="20210714 23:12:53.010" endtime="20210714 23:12:53.012"/>
</kw>
<msg timestamp="20210714 23:12:53.012" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 23:12:53.009" endtime="20210714 23:12:53.012"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:12:53.014" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210714 23:12:53.014" endtime="20210714 23:12:53.014"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:12:53.015" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20210714 23:12:53.014" endtime="20210714 23:12:53.015"/>
</kw>
<status status="PASS" starttime="20210714 23:12:53.013" endtime="20210714 23:12:53.015"/>
</kw>
<msg timestamp="20210714 23:12:53.015" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20210714 23:12:53.012" endtime="20210714 23:12:53.015"/>
</kw>
<status status="PASS" starttime="20210714 23:12:53.008" endtime="20210714 23:12:53.015"/>
</kw>
<msg timestamp="20210714 23:12:53.016" level="INFO">${url} = ofs://om/fstest2/11312-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210714 23:12:53.008" endtime="20210714 23:12:53.016"/>
</kw>
<msg timestamp="20210714 23:12:53.016" level="INFO">${target} = ofs://om/fstest2/11312-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210714 23:12:53.007" endtime="20210714 23:12:53.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:53.019" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/11312-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:12:55.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:12:55.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:12:53.017" endtime="20210714 23:12:55.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:12:55.949" level="INFO"/>
<status status="PASS" starttime="20210714 23:12:55.948" endtime="20210714 23:12:55.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:12:55.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:12:55.949" endtime="20210714 23:12:55.950"/>
</kw>
<status status="PASS" starttime="20210714 23:12:53.017" endtime="20210714 23:12:55.950"/>
</kw>
<msg timestamp="20210714 23:12:55.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:53.016" endtime="20210714 23:12:55.950"/>
</kw>
<status status="PASS" starttime="20210714 23:12:53.016" endtime="20210714 23:12:55.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:12:55.954" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/11312-link1-ofs//testdir1/localdir1 ofs://om/fstest2/11312-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:00.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:00.498" level="INFO">${output} = 2021-07-14 23:12:58,948 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:59,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:12:55.952" endtime="20210714 23:13:00.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:00.499" level="INFO">2021-07-14 23:12:58,948 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:12:59,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:12:59,027 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:12:59,858 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:12:59,858 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-26006C2B5CDE-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:12:59,863 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:13:00.498" endtime="20210714 23:13:00.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:00.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:00.499" endtime="20210714 23:13:00.500"/>
</kw>
<status status="PASS" starttime="20210714 23:12:55.952" endtime="20210714 23:13:00.500"/>
</kw>
<msg timestamp="20210714 23:13:00.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:12:55.951" endtime="20210714 23:13:00.500"/>
</kw>
<status status="PASS" starttime="20210714 23:12:55.951" endtime="20210714 23:13:00.501"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:00.504" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/11312-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:03.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:03.258" level="INFO">${output} = 2021-07-14 23:13:02,974 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:13:03,039 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:13:00.502" endtime="20210714 23:13:03.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:03.259" level="INFO">2021-07-14 23:13:02,974 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:13:03,039 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/11312-link3-ofs/testdir3' to trash at: ofs://om/fstest2/11312-link3-ofs/.Trash/hadoop/Current/fstest2/11312-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210714 23:13:03.258" endtime="20210714 23:13:03.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:03.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:03.259" endtime="20210714 23:13:03.259"/>
</kw>
<status status="PASS" starttime="20210714 23:13:00.502" endtime="20210714 23:13:03.260"/>
</kw>
<msg timestamp="20210714 23:13:03.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:00.501" endtime="20210714 23:13:03.260"/>
</kw>
<status status="PASS" starttime="20210714 23:13:00.501" endtime="20210714 23:13:03.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:12:53.006" endtime="20210714 23:13:03.260"/>
</test>
<test id="s1-s6-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:03.265" level="INFO">Running command 'ozone sh key put fstest1/11312-link1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:07.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:07.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:03.263" endtime="20210714 23:13:07.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:07.950" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:07.949" endtime="20210714 23:13:07.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:07.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:07.950" endtime="20210714 23:13:07.951"/>
</kw>
<status status="PASS" starttime="20210714 23:13:03.263" endtime="20210714 23:13:07.951"/>
</kw>
<msg timestamp="20210714 23:13:07.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:03.262" endtime="20210714 23:13:07.951"/>
</kw>
<status status="PASS" starttime="20210714 23:13:03.262" endtime="20210714 23:13:07.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:07.955" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/11312-link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:10.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:10.888" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:13 ofs://om/fstest1/11312-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210714 23:13:07.953" endtime="20210714 23:13:10.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:10.890" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:13 ofs://om/fstest1/11312-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210714 23:13:10.889" endtime="20210714 23:13:10.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:10.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:10.890" endtime="20210714 23:13:10.890"/>
</kw>
<status status="PASS" starttime="20210714 23:13:07.953" endtime="20210714 23:13:10.891"/>
</kw>
<msg timestamp="20210714 23:13:10.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:07.952" endtime="20210714 23:13:10.891"/>
</kw>
<msg timestamp="20210714 23:13:10.891" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:13 ofs://om/fstest1/11312-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210714 23:13:07.952" endtime="20210714 23:13:10.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:10.891" endtime="20210714 23:13:10.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:03.261" endtime="20210714 23:13:10.892"/>
</test>
<test id="s1-s6-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:10.896" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/11312-link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:13.702" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:13:13.702" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/11312-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:13:10.894" endtime="20210714 23:13:13.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:13.703" level="INFO">copyFromLocal: `ofs://om/fstest1/11312-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:13:13.702" endtime="20210714 23:13:13.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:13.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:13.703" endtime="20210714 23:13:13.704"/>
</kw>
<msg timestamp="20210714 23:13:13.704" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/11312-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:13:10.893" endtime="20210714 23:13:13.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:13.704" endtime="20210714 23:13:13.705"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:10.893" endtime="20210714 23:13:13.705"/>
</test>
<test id="s1-s6-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:13.710" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:13.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:13.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:13.708" endtime="20210714 23:13:13.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:13.713" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:13.712" endtime="20210714 23:13:13.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:13.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:13.713" endtime="20210714 23:13:13.713"/>
</kw>
<status status="PASS" starttime="20210714 23:13:13.707" endtime="20210714 23:13:13.714"/>
</kw>
<msg timestamp="20210714 23:13:13.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:13.707" endtime="20210714 23:13:13.714"/>
</kw>
<status status="PASS" starttime="20210714 23:13:13.706" endtime="20210714 23:13:13.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:13.717" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/11312-link1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:17.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:17.875" level="INFO">${output} = 2021-07-14 23:13:16,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:13:16,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:13:13.716" endtime="20210714 23:13:17.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:17.876" level="INFO">2021-07-14 23:13:16,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:13:16,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:13:16,653 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210714 23:13:17.876" endtime="20210714 23:13:17.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:17.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:17.877" endtime="20210714 23:13:17.877"/>
</kw>
<status status="PASS" starttime="20210714 23:13:13.715" endtime="20210714 23:13:17.878"/>
</kw>
<msg timestamp="20210714 23:13:17.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:13.715" endtime="20210714 23:13:17.878"/>
</kw>
<status status="PASS" starttime="20210714 23:13:13.714" endtime="20210714 23:13:17.878"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210714 23:13:17.878" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210714 23:13:17.878" endtime="20210714 23:13:17.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:13.705" endtime="20210714 23:13:17.879"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210714 23:10:14.179" endtime="20210714 23:13:17.881"/>
</suite>
<suite id="s1-s7" name="ozonefs-prefix-o3fs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:13:21.678" level="INFO">${random} = 07011</msg>
<status status="PASS" starttime="20210714 23:13:21.677" endtime="20210714 23:13:21.678"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:13:21.678" level="INFO">${BUCKET} = 07011-bucket1-o3fs</msg>
<status status="PASS" starttime="20210714 23:13:21.678" endtime="20210714 23:13:21.679"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:13:21.679" level="INFO">${BUCKET2} = 07011-bucket2-o3fs</msg>
<status status="PASS" starttime="20210714 23:13:21.679" endtime="20210714 23:13:21.679"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:13:21.680" level="INFO">${BUCKET_IN_VOL2} = 07011-bucket3-o3fs</msg>
<status status="PASS" starttime="20210714 23:13:21.679" endtime="20210714 23:13:21.680"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:13:21.683" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:13:21.683" endtime="20210714 23:13:21.684"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:13:21.684" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:13:21.684" endtime="20210714 23:13:21.684"/>
</kw>
<status status="PASS" starttime="20210714 23:13:21.683" endtime="20210714 23:13:21.684"/>
</kw>
<msg timestamp="20210714 23:13:21.684" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:13:21.682" endtime="20210714 23:13:21.684"/>
</kw>
<status status="PASS" starttime="20210714 23:13:21.681" endtime="20210714 23:13:21.685"/>
</kw>
<msg timestamp="20210714 23:13:21.685" level="INFO">${url} = o3fs://07011-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:13:21.680" endtime="20210714 23:13:21.685"/>
</kw>
<msg timestamp="20210714 23:13:21.685" level="INFO">${BASE_URL} = o3fs://07011-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:13:21.680" endtime="20210714 23:13:21.685"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:13:21.686" level="INFO">${BASE_URL} = o3fs://07011-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:13:21.685" endtime="20210714 23:13:21.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:13:21.688" level="INFO">${DEEP_URL} = o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20210714 23:13:21.686" endtime="20210714 23:13:21.688"/>
</kw>
<status status="PASS" starttime="20210714 23:13:21.677" endtime="20210714 23:13:21.688"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:21.692" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:24.525" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:13:24.525" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:13:21.688" endtime="20210714 23:13:24.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:24.526" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:13:24.526" endtime="20210714 23:13:24.526"/>
</kw>
<status status="PASS" starttime="20210714 23:13:21.688" endtime="20210714 23:13:24.527"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:24.529" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:27.255" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:13:27.255" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:13:24.527" endtime="20210714 23:13:27.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:27.256" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210714 23:13:27.256" endtime="20210714 23:13:27.256"/>
</kw>
<status status="PASS" starttime="20210714 23:13:24.527" endtime="20210714 23:13:27.257"/>
</kw>
<status status="PASS" starttime="20210714 23:13:21.688" endtime="20210714 23:13:27.257"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:27.261" level="INFO">Running command 'ozone sh bucket create fstest1/07011-bucket1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:30.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:30.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:27.259" endtime="20210714 23:13:30.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:30.097" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:30.096" endtime="20210714 23:13:30.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:30.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:30.097" endtime="20210714 23:13:30.098"/>
</kw>
<status status="PASS" starttime="20210714 23:13:27.258" endtime="20210714 23:13:30.098"/>
</kw>
<msg timestamp="20210714 23:13:30.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:27.258" endtime="20210714 23:13:30.098"/>
</kw>
<status status="PASS" starttime="20210714 23:13:27.258" endtime="20210714 23:13:30.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:30.101" level="INFO">Running command 'ozone sh bucket create fstest1/07011-bucket2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:32.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:32.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:30.100" endtime="20210714 23:13:32.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:32.576" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:32.576" endtime="20210714 23:13:32.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:32.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:32.576" endtime="20210714 23:13:32.577"/>
</kw>
<status status="PASS" starttime="20210714 23:13:30.099" endtime="20210714 23:13:32.577"/>
</kw>
<msg timestamp="20210714 23:13:32.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:30.099" endtime="20210714 23:13:32.577"/>
</kw>
<status status="PASS" starttime="20210714 23:13:30.098" endtime="20210714 23:13:32.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:32.581" level="INFO">Running command 'ozone sh bucket create fstest2/07011-bucket3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:35.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:35.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:32.579" endtime="20210714 23:13:35.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:35.245" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:35.244" endtime="20210714 23:13:35.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:35.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:35.245" endtime="20210714 23:13:35.246"/>
</kw>
<status status="PASS" starttime="20210714 23:13:32.579" endtime="20210714 23:13:35.246"/>
</kw>
<msg timestamp="20210714 23:13:35.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:32.578" endtime="20210714 23:13:35.246"/>
</kw>
<status status="PASS" starttime="20210714 23:13:32.578" endtime="20210714 23:13:35.246"/>
</kw>
<status status="PASS" starttime="20210714 23:13:27.257" endtime="20210714 23:13:35.247"/>
</kw>
<status status="PASS" starttime="20210714 23:13:27.257" endtime="20210714 23:13:35.247"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:35.250" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:38.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:38.087" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20210714 23:13:35.248" endtime="20210714 23:13:38.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:38.088" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-07-14T23:10:26.318Z",
  "modificationTime" : "2021-07-14T23:10:26.318Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:10:23.572Z",
  "modificationTime" : "2021-07-14T23:10:23.572Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:10:06.534Z",
  "modificationTime" : "2021-07-14T23:10:06.534Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-07-14T23:10:20.700Z",
  "modificationTime" : "2021-07-14T23:10:20.700Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-07-14T23:10:17.632Z",
  "modificationTime" : "2021-07-14T23:10:17.632Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210714 23:13:38.088" endtime="20210714 23:13:38.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:38.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:38.089" endtime="20210714 23:13:38.089"/>
</kw>
<status status="PASS" starttime="20210714 23:13:35.248" endtime="20210714 23:13:38.089"/>
</kw>
<msg timestamp="20210714 23:13:38.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:35.247" endtime="20210714 23:13:38.090"/>
</kw>
<msg timestamp="20210714 23:13:38.090" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20210714 23:13:35.247" endtime="20210714 23:13:38.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:38.090" endtime="20210714 23:13:38.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:38.090" endtime="20210714 23:13:38.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:13:38.091" endtime="20210714 23:13:38.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:38.095" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:40.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:40.986" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "07011-bucket1-o3fs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210714 23:13:38.093" endtime="20210714 23:13:40.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:40.987" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "07011-bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:13:29.995Z",
  "modificationTime" : "2021-07-14T23:13:29.995Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "07011-bucket2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:13:32.523Z",
  "modificationTime" : "2021-07-14T23:13:32.523Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "11312-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:10:37.774Z",
  "modificationTime" : "2021-07-14T23:10:37.774Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "11312-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "11312-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T23:10:40.541Z",
  "modificationTime" : "2021-07-14T23:10:40.541Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "11312-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210714 23:13:40.987" endtime="20210714 23:13:40.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:40.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:40.988" endtime="20210714 23:13:40.988"/>
</kw>
<status status="PASS" starttime="20210714 23:13:38.093" endtime="20210714 23:13:40.988"/>
</kw>
<msg timestamp="20210714 23:13:40.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:38.092" endtime="20210714 23:13:40.988"/>
</kw>
<msg timestamp="20210714 23:13:40.989" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "PREFIX",
    "ozone.om.enable.filesystem.paths" : "true"
  },
  "volumeName" : "fstest1",
  "name" : "07011-bucket1-o3fs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210714 23:13:38.092" endtime="20210714 23:13:40.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:40.989" endtime="20210714 23:13:40.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:40.989" endtime="20210714 23:13:40.990"/>
</kw>
<status status="PASS" starttime="20210714 23:13:35.247" endtime="20210714 23:13:40.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:40.990" level="INFO">Completed setup for o3fs tests with buckets in fstest1/07011-bucket1-o3fs using FS base URL: o3fs://07011-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210714 23:13:40.990" endtime="20210714 23:13:40.990"/>
</kw>
<status status="PASS" starttime="20210714 23:13:21.677" endtime="20210714 23:13:40.991"/>
</kw>
<test id="s1-s7-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:13:40.996" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:13:40.996" endtime="20210714 23:13:40.996"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:13:40.997" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:13:40.997" endtime="20210714 23:13:40.997"/>
</kw>
<status status="PASS" starttime="20210714 23:13:40.995" endtime="20210714 23:13:40.997"/>
</kw>
<msg timestamp="20210714 23:13:40.997" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:13:40.994" endtime="20210714 23:13:40.997"/>
</kw>
<status status="PASS" starttime="20210714 23:13:40.994" endtime="20210714 23:13:40.998"/>
</kw>
<msg timestamp="20210714 23:13:40.998" level="INFO">${url} = o3fs://07011-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:13:40.993" endtime="20210714 23:13:40.998"/>
</kw>
<msg timestamp="20210714 23:13:40.998" level="INFO">${root} = o3fs://07011-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:13:40.992" endtime="20210714 23:13:40.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:41.001" level="INFO">Running command 'ozone fs -ls o3fs://07011-bucket1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:43.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:43.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:40.999" endtime="20210714 23:13:43.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:43.687" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:43.686" endtime="20210714 23:13:43.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:43.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:43.687" endtime="20210714 23:13:43.688"/>
</kw>
<status status="PASS" starttime="20210714 23:13:40.999" endtime="20210714 23:13:43.688"/>
</kw>
<msg timestamp="20210714 23:13:43.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:40.999" endtime="20210714 23:13:43.689"/>
</kw>
<status status="PASS" starttime="20210714 23:13:40.998" endtime="20210714 23:13:43.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:40.991" endtime="20210714 23:13:43.689"/>
</test>
<test id="s1-s7-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:13:43.696" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:13:43.696" endtime="20210714 23:13:43.696"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:13:43.697" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:13:43.696" endtime="20210714 23:13:43.697"/>
</kw>
<status status="PASS" starttime="20210714 23:13:43.695" endtime="20210714 23:13:43.697"/>
</kw>
<msg timestamp="20210714 23:13:43.697" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:13:43.694" endtime="20210714 23:13:43.697"/>
</kw>
<status status="PASS" starttime="20210714 23:13:43.693" endtime="20210714 23:13:43.698"/>
</kw>
<msg timestamp="20210714 23:13:43.698" level="INFO">${url} = o3fs://07011-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210714 23:13:43.692" endtime="20210714 23:13:43.698"/>
</kw>
<msg timestamp="20210714 23:13:43.698" level="INFO">${url} = o3fs://07011-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210714 23:13:43.691" endtime="20210714 23:13:43.698"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:43.701" level="INFO">Running command 'ozone fs -ls o3fs://07011-bucket1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:46.306" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:13:46.307" level="INFO">${output} = 2021-07-14 23:13:46,230 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://07011-bucket1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volu...</msg>
<status status="PASS" starttime="20210714 23:13:43.699" endtime="20210714 23:13:46.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:46.308" level="INFO">2021-07-14 23:13:46,230 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://07011-bucket1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume no-such-volume is not found
ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210714 23:13:46.307" endtime="20210714 23:13:46.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:46.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:46.308" endtime="20210714 23:13:46.309"/>
</kw>
<msg timestamp="20210714 23:13:46.309" level="INFO">${result} = 2021-07-14 23:13:46,230 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://07011-bucket1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volu...</msg>
<status status="PASS" starttime="20210714 23:13:43.698" endtime="20210714 23:13:46.309"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:13:46.310" endtime="20210714 23:13:46.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:43.690" endtime="20210714 23:13:46.311"/>
</test>
<test id="s1-s7-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:13:46.317" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:13:46.316" endtime="20210714 23:13:46.317"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:13:46.317" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:13:46.317" endtime="20210714 23:13:46.317"/>
</kw>
<status status="PASS" starttime="20210714 23:13:46.316" endtime="20210714 23:13:46.318"/>
</kw>
<msg timestamp="20210714 23:13:46.318" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:13:46.315" endtime="20210714 23:13:46.318"/>
</kw>
<status status="PASS" starttime="20210714 23:13:46.314" endtime="20210714 23:13:46.318"/>
</kw>
<msg timestamp="20210714 23:13:46.318" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:13:46.313" endtime="20210714 23:13:46.318"/>
</kw>
<msg timestamp="20210714 23:13:46.318" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210714 23:13:46.312" endtime="20210714 23:13:46.318"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:46.321" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:49.050" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:13:49.050" level="INFO">${output} = 2021-07-14 23:13:48,945 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not foun...</msg>
<status status="PASS" starttime="20210714 23:13:46.319" endtime="20210714 23:13:49.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:49.051" level="INFO">2021-07-14 23:13:48,945 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found
ls: Bucket not found</msg>
<status status="PASS" starttime="20210714 23:13:49.051" endtime="20210714 23:13:49.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:49.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:49.052" endtime="20210714 23:13:49.052"/>
</kw>
<msg timestamp="20210714 23:13:49.053" level="INFO">${result} = 2021-07-14 23:13:48,945 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not foun...</msg>
<status status="PASS" starttime="20210714 23:13:46.319" endtime="20210714 23:13:49.053"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 23:13:49.053" endtime="20210714 23:13:49.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:46.311" endtime="20210714 23:13:49.054"/>
</test>
<test id="s1-s7-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:49.058" level="INFO">Running command 'ozone fs -mkdir -p o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:51.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:51.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:13:49.056" endtime="20210714 23:13:51.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:51.880" level="INFO"/>
<status status="PASS" starttime="20210714 23:13:51.879" endtime="20210714 23:13:51.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:51.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:51.880" endtime="20210714 23:13:51.881"/>
</kw>
<status status="PASS" starttime="20210714 23:13:49.056" endtime="20210714 23:13:51.881"/>
</kw>
<msg timestamp="20210714 23:13:51.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:49.056" endtime="20210714 23:13:51.881"/>
</kw>
<status status="PASS" starttime="20210714 23:13:49.055" endtime="20210714 23:13:51.882"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:51.885" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:54.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:54.887" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210714 23:13:51.883" endtime="20210714 23:13:54.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:54.889" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210714 23:13:54.888" endtime="20210714 23:13:54.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:54.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:54.889" endtime="20210714 23:13:54.890"/>
</kw>
<status status="PASS" starttime="20210714 23:13:51.883" endtime="20210714 23:13:54.890"/>
</kw>
<msg timestamp="20210714 23:13:54.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:51.882" endtime="20210714 23:13:54.890"/>
</kw>
<msg timestamp="20210714 23:13:54.890" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210714 23:13:51.882" endtime="20210714 23:13:54.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:13:54.891" endtime="20210714 23:13:54.891"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:49.054" endtime="20210714 23:13:54.891"/>
</test>
<test id="s1-s7-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:54.895" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:13:59.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:13:59.481" level="INFO">${output} = 2021-07-14 23:13:57,995 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:13:58,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:13:54.893" endtime="20210714 23:13:59.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:13:59.482" level="INFO">2021-07-14 23:13:57,995 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:13:58,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:13:58,105 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:13:58,334 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:13:58,334 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5C9BA1C5089F-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:13:58,336 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:13:59.482" endtime="20210714 23:13:59.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:13:59.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:13:59.483" endtime="20210714 23:13:59.483"/>
</kw>
<status status="PASS" starttime="20210714 23:13:54.893" endtime="20210714 23:13:59.483"/>
</kw>
<msg timestamp="20210714 23:13:59.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:54.893" endtime="20210714 23:13:59.484"/>
</kw>
<status status="PASS" starttime="20210714 23:13:54.892" endtime="20210714 23:13:59.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:13:59.487" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:02.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:02.448" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:13:59.485" endtime="20210714 23:14:02.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:02.450" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:02.449" endtime="20210714 23:14:02.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:02.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:02.450" endtime="20210714 23:14:02.450"/>
</kw>
<status status="PASS" starttime="20210714 23:13:59.485" endtime="20210714 23:14:02.451"/>
</kw>
<msg timestamp="20210714 23:14:02.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:13:59.485" endtime="20210714 23:14:02.451"/>
</kw>
<msg timestamp="20210714 23:14:02.451" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:13:59.484" endtime="20210714 23:14:02.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:02.451" endtime="20210714 23:14:02.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:02.455" level="INFO">Running command 'ozone sh key info fstest1/07011-bucket1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:05.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:05.559" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210714 23:14:02.453" endtime="20210714 23:14:05.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:05.561" level="INFO">3</msg>
<status status="PASS" starttime="20210714 23:14:05.560" endtime="20210714 23:14:05.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:05.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:05.561" endtime="20210714 23:14:05.562"/>
</kw>
<status status="PASS" starttime="20210714 23:14:02.453" endtime="20210714 23:14:05.562"/>
</kw>
<msg timestamp="20210714 23:14:05.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:02.453" endtime="20210714 23:14:05.562"/>
</kw>
<msg timestamp="20210714 23:14:05.562" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210714 23:14:02.452" endtime="20210714 23:14:05.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:14:05.563" endtime="20210714 23:14:05.563"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:13:54.892" endtime="20210714 23:14:05.563"/>
</test>
<test id="s1-s7-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:05.568" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:10.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:10.090" level="INFO">${output} = 2021-07-14 23:14:08,640 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:14:08,719 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:14:05.566" endtime="20210714 23:14:10.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:10.091" level="INFO">2021-07-14 23:14:08,640 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:14:08,719 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:14:08,719 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:14:08,953 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:14:08,953 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-037CEBCF6F18-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:14:08,956 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:14:10.090" endtime="20210714 23:14:10.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:10.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:10.091" endtime="20210714 23:14:10.092"/>
</kw>
<status status="PASS" starttime="20210714 23:14:05.565" endtime="20210714 23:14:10.092"/>
</kw>
<msg timestamp="20210714 23:14:10.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:05.565" endtime="20210714 23:14:10.092"/>
</kw>
<status status="PASS" starttime="20210714 23:14:05.564" endtime="20210714 23:14:10.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:10.096" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:13.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:13.166" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:10.094" endtime="20210714 23:14:13.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:13.167" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:13.167" endtime="20210714 23:14:13.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:13.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:13.168" endtime="20210714 23:14:13.168"/>
</kw>
<status status="PASS" starttime="20210714 23:14:10.094" endtime="20210714 23:14:13.168"/>
</kw>
<msg timestamp="20210714 23:14:13.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:10.093" endtime="20210714 23:14:13.169"/>
</kw>
<msg timestamp="20210714 23:14:13.169" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:10.093" endtime="20210714 23:14:13.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:13.169" endtime="20210714 23:14:13.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:05.564" endtime="20210714 23:14:13.170"/>
</test>
<test id="s1-s7-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:13.175" level="INFO">Running command 'ozone fs -ls o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:16.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:16.058" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:13 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://070...</msg>
<status status="PASS" starttime="20210714 23:14:13.173" endtime="20210714 23:14:16.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:16.059" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:13 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:16.058" endtime="20210714 23:14:16.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:16.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:16.059" endtime="20210714 23:14:16.060"/>
</kw>
<status status="PASS" starttime="20210714 23:14:13.173" endtime="20210714 23:14:16.060"/>
</kw>
<msg timestamp="20210714 23:14:16.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:13.172" endtime="20210714 23:14:16.060"/>
</kw>
<msg timestamp="20210714 23:14:16.060" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:13 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://070...</msg>
<status status="PASS" starttime="20210714 23:14:13.172" endtime="20210714 23:14:16.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:16.061" endtime="20210714 23:14:16.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:16.061" endtime="20210714 23:14:16.061"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:13.171" endtime="20210714 23:14:16.062"/>
</test>
<test id="s1-s7-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:16.066" level="INFO">Running command 'ozone fs -mv o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:18.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:18.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:14:16.064" endtime="20210714 23:14:18.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:18.985" level="INFO"/>
<status status="PASS" starttime="20210714 23:14:18.984" endtime="20210714 23:14:18.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:18.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:18.985" endtime="20210714 23:14:18.986"/>
</kw>
<status status="PASS" starttime="20210714 23:14:16.064" endtime="20210714 23:14:18.986"/>
</kw>
<msg timestamp="20210714 23:14:18.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:16.063" endtime="20210714 23:14:18.986"/>
</kw>
<status status="PASS" starttime="20210714 23:14:16.063" endtime="20210714 23:14:18.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:18.990" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:21.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:21.980" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:18.988" endtime="20210714 23:14:21.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:21.981" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:21.980" endtime="20210714 23:14:21.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:21.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:21.981" endtime="20210714 23:14:21.982"/>
</kw>
<status status="PASS" starttime="20210714 23:14:18.987" endtime="20210714 23:14:21.982"/>
</kw>
<msg timestamp="20210714 23:14:21.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:18.987" endtime="20210714 23:14:21.982"/>
</kw>
<msg timestamp="20210714 23:14:21.983" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:18.986" endtime="20210714 23:14:21.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:21.983" endtime="20210714 23:14:21.983"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:21.983" endtime="20210714 23:14:21.984"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:16.062" endtime="20210714 23:14:21.984"/>
</test>
<test id="s1-s7-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:21.989" level="INFO">Running command 'ozone fs -mkdir -p o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:24.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:24.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:14:21.987" endtime="20210714 23:14:24.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:24.918" level="INFO"/>
<status status="PASS" starttime="20210714 23:14:24.917" endtime="20210714 23:14:24.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:24.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:24.918" endtime="20210714 23:14:24.919"/>
</kw>
<status status="PASS" starttime="20210714 23:14:21.987" endtime="20210714 23:14:24.919"/>
</kw>
<msg timestamp="20210714 23:14:24.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:21.985" endtime="20210714 23:14:24.919"/>
</kw>
<status status="PASS" starttime="20210714 23:14:21.985" endtime="20210714 23:14:24.919"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:24.923" level="INFO">Running command 'ozone fs -cp o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:29.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:29.176" level="INFO">${output} = 2021-07-14 23:14:27,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:14:27,699 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:14:24.921" endtime="20210714 23:14:29.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:29.178" level="INFO">2021-07-14 23:14:27,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:14:27,699 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:14:27,699 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:14:28,512 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:14:28,512 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2ECD6DD48CC9-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:14:28,513 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:14:29.177" endtime="20210714 23:14:29.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:29.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:29.178" endtime="20210714 23:14:29.179"/>
</kw>
<status status="PASS" starttime="20210714 23:14:24.921" endtime="20210714 23:14:29.179"/>
</kw>
<msg timestamp="20210714 23:14:29.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:24.920" endtime="20210714 23:14:29.179"/>
</kw>
<status status="PASS" starttime="20210714 23:14:24.920" endtime="20210714 23:14:29.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:29.183" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:32.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:32.004" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:29.181" endtime="20210714 23:14:32.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:32.006" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:32.005" endtime="20210714 23:14:32.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:32.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:32.006" endtime="20210714 23:14:32.007"/>
</kw>
<status status="PASS" starttime="20210714 23:14:29.180" endtime="20210714 23:14:32.007"/>
</kw>
<msg timestamp="20210714 23:14:32.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:29.180" endtime="20210714 23:14:32.007"/>
</kw>
<msg timestamp="20210714 23:14:32.007" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:29.179" endtime="20210714 23:14:32.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:32.007" endtime="20210714 23:14:32.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:32.011" level="INFO">Running command 'ozone fs -ls o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:34.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:34.884" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:32.009" endtime="20210714 23:14:34.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:34.885" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:34.885" endtime="20210714 23:14:34.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:34.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:34.886" endtime="20210714 23:14:34.886"/>
</kw>
<status status="PASS" starttime="20210714 23:14:32.009" endtime="20210714 23:14:34.886"/>
</kw>
<msg timestamp="20210714 23:14:34.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:32.008" endtime="20210714 23:14:34.887"/>
</kw>
<msg timestamp="20210714 23:14:34.887" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:32.008" endtime="20210714 23:14:34.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:34.887" endtime="20210714 23:14:34.888"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:34.888" endtime="20210714 23:14:34.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:21.984" endtime="20210714 23:14:34.888"/>
</test>
<test id="s1-s7-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:34.893" level="INFO">Running command 'ozone fs -cat o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:39.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:39.008" level="INFO">${output} = 2021-07-14 23:14:37,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:14:37,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:14:34.891" endtime="20210714 23:14:39.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:39.010" level="INFO">2021-07-14 23:14:37,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:14:37,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:14:37,809 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210714 23:14:39.009" endtime="20210714 23:14:39.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:39.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:39.010" endtime="20210714 23:14:39.011"/>
</kw>
<status status="PASS" starttime="20210714 23:14:34.890" endtime="20210714 23:14:39.011"/>
</kw>
<msg timestamp="20210714 23:14:39.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:34.890" endtime="20210714 23:14:39.011"/>
</kw>
<status status="PASS" starttime="20210714 23:14:34.890" endtime="20210714 23:14:39.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:34.889" endtime="20210714 23:14:39.013"/>
</test>
<test id="s1-s7-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:39.017" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:41.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:41.862" level="INFO">${output} = Deleted o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:39.015" endtime="20210714 23:14:41.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:41.863" level="INFO">Deleted o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210714 23:14:41.862" endtime="20210714 23:14:41.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:41.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:41.863" endtime="20210714 23:14:41.864"/>
</kw>
<status status="PASS" starttime="20210714 23:14:39.015" endtime="20210714 23:14:41.864"/>
</kw>
<msg timestamp="20210714 23:14:41.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:39.015" endtime="20210714 23:14:41.864"/>
</kw>
<status status="PASS" starttime="20210714 23:14:39.014" endtime="20210714 23:14:41.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:41.868" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:44.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:44.865" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:14:41.866" endtime="20210714 23:14:44.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:44.866" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:14:44.865" endtime="20210714 23:14:44.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:44.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:44.866" endtime="20210714 23:14:44.867"/>
</kw>
<status status="PASS" starttime="20210714 23:14:41.866" endtime="20210714 23:14:44.867"/>
</kw>
<msg timestamp="20210714 23:14:44.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:41.865" endtime="20210714 23:14:44.867"/>
</kw>
<msg timestamp="20210714 23:14:44.868" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210714 23:14:41.865" endtime="20210714 23:14:44.868"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:44.868" endtime="20210714 23:14:44.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:39.013" endtime="20210714 23:14:44.868"/>
</test>
<test id="s1-s7-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:44.873" level="INFO">Running command 'ozone fs -rmdir o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:47.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:47.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:14:44.871" endtime="20210714 23:14:47.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:47.756" level="INFO"/>
<status status="PASS" starttime="20210714 23:14:47.755" endtime="20210714 23:14:47.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:47.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:47.756" endtime="20210714 23:14:47.757"/>
</kw>
<status status="PASS" starttime="20210714 23:14:44.871" endtime="20210714 23:14:47.757"/>
</kw>
<msg timestamp="20210714 23:14:47.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:44.870" endtime="20210714 23:14:47.757"/>
</kw>
<msg timestamp="20210714 23:14:47.758" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:14:44.870" endtime="20210714 23:14:47.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:47.761" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:50.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:50.837" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:47.759" endtime="20210714 23:14:50.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:50.838" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:50.837" endtime="20210714 23:14:50.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:50.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:50.838" endtime="20210714 23:14:50.839"/>
</kw>
<status status="PASS" starttime="20210714 23:14:47.759" endtime="20210714 23:14:50.839"/>
</kw>
<msg timestamp="20210714 23:14:50.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:47.759" endtime="20210714 23:14:50.839"/>
</kw>
<msg timestamp="20210714 23:14:50.840" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210714 23:14:47.758" endtime="20210714 23:14:50.840"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:50.840" endtime="20210714 23:14:50.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:44.869" endtime="20210714 23:14:50.840"/>
</test>
<test id="s1-s7-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:50.845" level="INFO">Running command 'ozone fs -touch o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:53.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:53.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:14:50.843" endtime="20210714 23:14:53.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:53.921" level="INFO"/>
<status status="PASS" starttime="20210714 23:14:53.921" endtime="20210714 23:14:53.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:53.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:53.922" endtime="20210714 23:14:53.922"/>
</kw>
<status status="PASS" starttime="20210714 23:14:50.843" endtime="20210714 23:14:53.922"/>
</kw>
<msg timestamp="20210714 23:14:53.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:50.842" endtime="20210714 23:14:53.923"/>
</kw>
<status status="PASS" starttime="20210714 23:14:50.842" endtime="20210714 23:14:53.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:53.927" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:14:57.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:14:57.080" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:14:53.925" endtime="20210714 23:14:57.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:14:57.081" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:14:57.080" endtime="20210714 23:14:57.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:14:57.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:14:57.081" endtime="20210714 23:14:57.082"/>
</kw>
<status status="PASS" starttime="20210714 23:14:53.925" endtime="20210714 23:14:57.082"/>
</kw>
<msg timestamp="20210714 23:14:57.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:53.924" endtime="20210714 23:14:57.082"/>
</kw>
<msg timestamp="20210714 23:14:57.083" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:14:53.923" endtime="20210714 23:14:57.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:14:57.083" endtime="20210714 23:14:57.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:50.841" endtime="20210714 23:14:57.083"/>
</test>
<test id="s1-s7-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:14:57.088" level="INFO">Running command 'ozone fs -touch o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:00.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:00.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:14:57.086" endtime="20210714 23:15:00.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:00.051" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:00.051" endtime="20210714 23:15:00.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:00.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:00.052" endtime="20210714 23:15:00.052"/>
</kw>
<status status="PASS" starttime="20210714 23:14:57.086" endtime="20210714 23:15:00.053"/>
</kw>
<msg timestamp="20210714 23:15:00.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:14:57.085" endtime="20210714 23:15:00.053"/>
</kw>
<status status="PASS" starttime="20210714 23:14:57.085" endtime="20210714 23:15:00.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:00.056" level="INFO">Running command 'ozone fs -rm o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:03.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:03.029" level="INFO">${output} = 2021-07-14 23:15:02,811 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:15:02,859 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:15:00.054" endtime="20210714 23:15:03.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:03.030" level="INFO">2021-07-14 23:15:02,811 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:15:02,859 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/hadoop/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210714 23:15:03.029" endtime="20210714 23:15:03.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:03.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:03.030" endtime="20210714 23:15:03.031"/>
</kw>
<status status="PASS" starttime="20210714 23:15:00.054" endtime="20210714 23:15:03.031"/>
</kw>
<msg timestamp="20210714 23:15:03.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:00.054" endtime="20210714 23:15:03.031"/>
</kw>
<status status="PASS" starttime="20210714 23:15:00.053" endtime="20210714 23:15:03.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:03.035" level="INFO">Running command 'ozone fs -ls -R o3fs://07011-bucket1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:05.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:05.755" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Tras...</msg>
<status status="PASS" starttime="20210714 23:15:03.033" endtime="20210714 23:15:05.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:05.756" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:13 o3fs://07011-bucket1-o3fs.fstest1.om/test
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:13 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:13 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-07-14 23:14 o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:15:05.755" endtime="20210714 23:15:05.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:05.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:05.756" endtime="20210714 23:15:05.757"/>
</kw>
<status status="PASS" starttime="20210714 23:15:03.032" endtime="20210714 23:15:05.757"/>
</kw>
<msg timestamp="20210714 23:15:05.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:03.032" endtime="20210714 23:15:05.757"/>
</kw>
<msg timestamp="20210714 23:15:05.757" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/.Tras...</msg>
<status status="PASS" starttime="20210714 23:15:03.032" endtime="20210714 23:15:05.757"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:05.758" endtime="20210714 23:15:05.758"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210714 23:15:05.758" endtime="20210714 23:15:05.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:05.759" endtime="20210714 23:15:05.759"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:14:57.084" endtime="20210714 23:15:05.759"/>
</test>
<test id="s1-s7-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:05.764" level="INFO">Running command 'ozone fs -mkdir -p o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:08.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:08.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:05.762" endtime="20210714 23:15:08.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:08.676" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:08.675" endtime="20210714 23:15:08.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:08.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:08.677" endtime="20210714 23:15:08.677"/>
</kw>
<status status="PASS" starttime="20210714 23:15:05.761" endtime="20210714 23:15:08.678"/>
</kw>
<msg timestamp="20210714 23:15:08.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:05.761" endtime="20210714 23:15:08.678"/>
</kw>
<status status="PASS" starttime="20210714 23:15:05.760" endtime="20210714 23:15:08.678"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:08.681" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://07011-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:11.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:11.617" level="INFO">${output} = Deleted o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:15:08.679" endtime="20210714 23:15:11.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:11.618" level="INFO">Deleted o3fs://07011-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210714 23:15:11.617" endtime="20210714 23:15:11.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:11.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:11.618" endtime="20210714 23:15:11.619"/>
</kw>
<status status="PASS" starttime="20210714 23:15:08.679" endtime="20210714 23:15:11.619"/>
</kw>
<msg timestamp="20210714 23:15:11.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:08.679" endtime="20210714 23:15:11.619"/>
</kw>
<status status="PASS" starttime="20210714 23:15:08.678" endtime="20210714 23:15:11.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:11.623" level="INFO">Running command 'ozone sh key list fstest1/07011-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:14.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:14.568" level="INFO">${output} = .Trash/
test/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
t...</msg>
<status status="PASS" starttime="20210714 23:15:11.621" endtime="20210714 23:15:14.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:14.569" level="INFO">.Trash/
test/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:15:14.569" endtime="20210714 23:15:14.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:14.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:14.570" endtime="20210714 23:15:14.570"/>
</kw>
<status status="PASS" starttime="20210714 23:15:11.621" endtime="20210714 23:15:14.570"/>
</kw>
<msg timestamp="20210714 23:15:14.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:11.620" endtime="20210714 23:15:14.571"/>
</kw>
<msg timestamp="20210714 23:15:14.571" level="INFO">${result} = .Trash/
test/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
t...</msg>
<status status="PASS" starttime="20210714 23:15:11.620" endtime="20210714 23:15:14.571"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:14.571" endtime="20210714 23:15:14.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:05.760" endtime="20210714 23:15:14.572"/>
</test>
<test id="s1-s7-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:14.577" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:14.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:14.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:14.575" endtime="20210714 23:15:14.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:14.580" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:14.580" endtime="20210714 23:15:14.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:14.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:14.580" endtime="20210714 23:15:14.581"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.574" endtime="20210714 23:15:14.581"/>
</kw>
<msg timestamp="20210714 23:15:14.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:14.574" endtime="20210714 23:15:14.581"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.574" endtime="20210714 23:15:14.582"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:14.585" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:14.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:14.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:14.583" endtime="20210714 23:15:14.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:14.588" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:14.587" endtime="20210714 23:15:14.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:14.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:14.588" endtime="20210714 23:15:14.589"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.583" endtime="20210714 23:15:14.589"/>
</kw>
<msg timestamp="20210714 23:15:14.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:14.582" endtime="20210714 23:15:14.589"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.582" endtime="20210714 23:15:14.589"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:14.592" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:14.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:14.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:14.590" endtime="20210714 23:15:14.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:14.596" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:14.595" endtime="20210714 23:15:14.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:14.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:14.596" endtime="20210714 23:15:14.596"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.590" endtime="20210714 23:15:14.596"/>
</kw>
<msg timestamp="20210714 23:15:14.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:14.590" endtime="20210714 23:15:14.597"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.589" endtime="20210714 23:15:14.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:14.600" level="INFO">Running command 'ozone fs -mkdir -p o3fs://07011-bucket1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:17.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:17.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:14.598" endtime="20210714 23:15:17.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:17.591" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:17.590" endtime="20210714 23:15:17.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:17.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:17.591" endtime="20210714 23:15:17.591"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.598" endtime="20210714 23:15:17.592"/>
</kw>
<msg timestamp="20210714 23:15:17.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:14.597" endtime="20210714 23:15:17.592"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.597" endtime="20210714 23:15:17.592"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:17.596" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://07011-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:21.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:21.996" level="INFO">${output} = 2021-07-14 23:15:20,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:20,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:15:17.594" endtime="20210714 23:15:21.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:21.997" level="INFO">2021-07-14 23:15:20,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:20,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:15:20,758 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:15:21,003 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:15:21,003 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A898D55202BB-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:15:21,007 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:15:21.996" endtime="20210714 23:15:21.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:21.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:21.997" endtime="20210714 23:15:21.998"/>
</kw>
<status status="PASS" starttime="20210714 23:15:17.593" endtime="20210714 23:15:21.998"/>
</kw>
<msg timestamp="20210714 23:15:21.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:17.593" endtime="20210714 23:15:21.998"/>
</kw>
<status status="PASS" starttime="20210714 23:15:17.592" endtime="20210714 23:15:21.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:22.002" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://07011-bucket1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:26.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:26.387" level="INFO">${output} = 2021-07-14 23:15:25,009 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:25,125 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:15:22.000" endtime="20210714 23:15:26.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:26.388" level="INFO">2021-07-14 23:15:25,009 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:25,125 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:15:25,125 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:15:25,376 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:15:25,377 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-52483E5ED3D1-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:15:25,380 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:15:26.387" endtime="20210714 23:15:26.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:26.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:26.388" endtime="20210714 23:15:26.389"/>
</kw>
<status status="PASS" starttime="20210714 23:15:21.999" endtime="20210714 23:15:26.389"/>
</kw>
<msg timestamp="20210714 23:15:26.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:21.999" endtime="20210714 23:15:26.389"/>
</kw>
<status status="PASS" starttime="20210714 23:15:21.999" endtime="20210714 23:15:26.389"/>
</kw>
<status status="PASS" starttime="20210714 23:15:14.573" endtime="20210714 23:15:26.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:26.393" level="INFO">Running command 'ozone fs -ls -R o3fs://07011-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:29.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:29.174" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fst...</msg>
<status status="PASS" starttime="20210714 23:15:26.391" endtime="20210714 23:15:29.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:29.176" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210714 23:15:29.175" endtime="20210714 23:15:29.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:29.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:29.176" endtime="20210714 23:15:29.176"/>
</kw>
<status status="PASS" starttime="20210714 23:15:26.391" endtime="20210714 23:15:29.177"/>
</kw>
<msg timestamp="20210714 23:15:29.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:26.390" endtime="20210714 23:15:29.177"/>
</kw>
<msg timestamp="20210714 23:15:29.177" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fst...</msg>
<status status="PASS" starttime="20210714 23:15:26.390" endtime="20210714 23:15:29.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:29.177" endtime="20210714 23:15:29.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:29.178" endtime="20210714 23:15:29.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:14.573" endtime="20210714 23:15:29.178"/>
</test>
<test id="s1-s7-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:15:29.184" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:15:29.183" endtime="20210714 23:15:29.184"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:15:29.184" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:15:29.184" endtime="20210714 23:15:29.184"/>
</kw>
<status status="PASS" starttime="20210714 23:15:29.183" endtime="20210714 23:15:29.185"/>
</kw>
<msg timestamp="20210714 23:15:29.185" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:15:29.182" endtime="20210714 23:15:29.185"/>
</kw>
<status status="PASS" starttime="20210714 23:15:29.181" endtime="20210714 23:15:29.185"/>
</kw>
<msg timestamp="20210714 23:15:29.185" level="INFO">${url} = o3fs://07011-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210714 23:15:29.181" endtime="20210714 23:15:29.185"/>
</kw>
<msg timestamp="20210714 23:15:29.185" level="INFO">${target} = o3fs://07011-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210714 23:15:29.180" endtime="20210714 23:15:29.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:29.188" level="INFO">Running command 'ozone fs -mkdir -p o3fs://07011-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:31.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:31.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:29.187" endtime="20210714 23:15:31.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:31.842" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:31.841" endtime="20210714 23:15:31.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:31.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:31.842" endtime="20210714 23:15:31.842"/>
</kw>
<status status="PASS" starttime="20210714 23:15:29.186" endtime="20210714 23:15:31.843"/>
</kw>
<msg timestamp="20210714 23:15:31.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:29.186" endtime="20210714 23:15:31.843"/>
</kw>
<status status="PASS" starttime="20210714 23:15:29.186" endtime="20210714 23:15:31.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:31.846" level="INFO">Running command 'ozone fs -cp o3fs://07011-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://07011-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:36.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:36.249" level="INFO">${output} = 2021-07-14 23:15:34,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:34,793 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:15:31.845" endtime="20210714 23:15:36.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:36.250" level="INFO">2021-07-14 23:15:34,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:34,793 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:15:34,793 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:15:35,662 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:15:35,663 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-DF2595A17844-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:15:35,664 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:15:36.249" endtime="20210714 23:15:36.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:36.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:36.250" endtime="20210714 23:15:36.251"/>
</kw>
<status status="PASS" starttime="20210714 23:15:31.844" endtime="20210714 23:15:36.251"/>
</kw>
<msg timestamp="20210714 23:15:36.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:31.844" endtime="20210714 23:15:36.252"/>
</kw>
<status status="PASS" starttime="20210714 23:15:31.843" endtime="20210714 23:15:36.252"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:36.255" level="INFO">Running command 'ozone fs -rm -r o3fs://07011-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:38.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:38.996" level="INFO">${output} = 2021-07-14 23:15:38,875 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:15:38,926 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:15:36.253" endtime="20210714 23:15:38.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:38.997" level="INFO">2021-07-14 23:15:38,875 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:15:38,926 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://07011-bucket2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/hadoop/Current/testdir2</msg>
<status status="PASS" starttime="20210714 23:15:38.996" endtime="20210714 23:15:38.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:38.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:38.997" endtime="20210714 23:15:38.998"/>
</kw>
<status status="PASS" starttime="20210714 23:15:36.253" endtime="20210714 23:15:38.998"/>
</kw>
<msg timestamp="20210714 23:15:38.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:36.253" endtime="20210714 23:15:38.998"/>
</kw>
<status status="PASS" starttime="20210714 23:15:36.252" endtime="20210714 23:15:38.998"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:29.179" endtime="20210714 23:15:38.999"/>
</test>
<test id="s1-s7-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 23:15:39.004" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 23:15:39.004" endtime="20210714 23:15:39.004"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 23:15:39.005" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 23:15:39.005" endtime="20210714 23:15:39.005"/>
</kw>
<status status="PASS" starttime="20210714 23:15:39.003" endtime="20210714 23:15:39.005"/>
</kw>
<msg timestamp="20210714 23:15:39.005" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 23:15:39.002" endtime="20210714 23:15:39.005"/>
</kw>
<status status="PASS" starttime="20210714 23:15:39.002" endtime="20210714 23:15:39.006"/>
</kw>
<msg timestamp="20210714 23:15:39.006" level="INFO">${url} = o3fs://07011-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210714 23:15:39.001" endtime="20210714 23:15:39.006"/>
</kw>
<msg timestamp="20210714 23:15:39.006" level="INFO">${target} = o3fs://07011-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210714 23:15:39.000" endtime="20210714 23:15:39.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:39.009" level="INFO">Running command 'ozone fs -mkdir -p o3fs://07011-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:41.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:41.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:39.007" endtime="20210714 23:15:41.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:41.906" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:41.905" endtime="20210714 23:15:41.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:41.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:41.906" endtime="20210714 23:15:41.907"/>
</kw>
<status status="PASS" starttime="20210714 23:15:39.007" endtime="20210714 23:15:41.907"/>
</kw>
<msg timestamp="20210714 23:15:41.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:39.007" endtime="20210714 23:15:41.907"/>
</kw>
<status status="PASS" starttime="20210714 23:15:39.006" endtime="20210714 23:15:41.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:41.911" level="INFO">Running command 'ozone fs -cp o3fs://07011-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://07011-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:46.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:46.399" level="INFO">${output} = 2021-07-14 23:15:44,884 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:44,994 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:15:41.909" endtime="20210714 23:15:46.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:46.400" level="INFO">2021-07-14 23:15:44,884 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:15:44,994 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:15:44,994 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-07-14 23:15:45,751 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:15:45,752 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-81F34EE0F866-&gt;38d34320-e33b-4877-89e2-1a5822a0edc0
2021-07-14 23:15:45,752 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210714 23:15:46.400" endtime="20210714 23:15:46.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:46.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:46.401" endtime="20210714 23:15:46.401"/>
</kw>
<status status="PASS" starttime="20210714 23:15:41.909" endtime="20210714 23:15:46.401"/>
</kw>
<msg timestamp="20210714 23:15:46.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:41.908" endtime="20210714 23:15:46.402"/>
</kw>
<status status="PASS" starttime="20210714 23:15:41.908" endtime="20210714 23:15:46.402"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:46.406" level="INFO">Running command 'ozone fs -rm -r o3fs://07011-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:49.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:49.142" level="INFO">${output} = 2021-07-14 23:15:48,966 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:15:49,025 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210714 23:15:46.404" endtime="20210714 23:15:49.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:49.143" level="INFO">2021-07-14 23:15:48,966 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-07-14 23:15:49,025 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://07011-bucket3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/hadoop/Current/testdir3</msg>
<status status="PASS" starttime="20210714 23:15:49.142" endtime="20210714 23:15:49.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:49.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:49.143" endtime="20210714 23:15:49.143"/>
</kw>
<status status="PASS" starttime="20210714 23:15:46.403" endtime="20210714 23:15:49.144"/>
</kw>
<msg timestamp="20210714 23:15:49.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:46.403" endtime="20210714 23:15:49.144"/>
</kw>
<status status="PASS" starttime="20210714 23:15:46.402" endtime="20210714 23:15:49.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:38.999" endtime="20210714 23:15:49.144"/>
</test>
<test id="s1-s7-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:49.149" level="INFO">Running command 'ozone sh key put fstest1/07011-bucket1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:53.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:53.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:49.147" endtime="20210714 23:15:53.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:53.986" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:53.986" endtime="20210714 23:15:53.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:53.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:53.987" endtime="20210714 23:15:53.987"/>
</kw>
<status status="PASS" starttime="20210714 23:15:49.147" endtime="20210714 23:15:53.987"/>
</kw>
<msg timestamp="20210714 23:15:53.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:49.146" endtime="20210714 23:15:53.987"/>
</kw>
<status status="PASS" starttime="20210714 23:15:49.146" endtime="20210714 23:15:53.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:53.991" level="INFO">Running command 'ozone fs -ls o3fs://07011-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:56.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:56.882" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:15:53.989" endtime="20210714 23:15:56.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:56.884" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:15:56.883" endtime="20210714 23:15:56.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:56.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:56.884" endtime="20210714 23:15:56.884"/>
</kw>
<status status="PASS" starttime="20210714 23:15:53.989" endtime="20210714 23:15:56.885"/>
</kw>
<msg timestamp="20210714 23:15:56.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:53.988" endtime="20210714 23:15:56.885"/>
</kw>
<msg timestamp="20210714 23:15:56.885" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17526 2021-07-14 23:15 o3fs://07011-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210714 23:15:53.988" endtime="20210714 23:15:56.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:56.885" endtime="20210714 23:15:56.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:49.145" endtime="20210714 23:15:56.886"/>
</test>
<test id="s1-s7-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:56.890" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://07011-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:59.700" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:15:59.700" level="INFO">${output} = copyFromLocal: `o3fs://07011-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:15:56.888" endtime="20210714 23:15:59.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:59.701" level="INFO">copyFromLocal: `o3fs://07011-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:15:59.701" endtime="20210714 23:15:59.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:59.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:59.702" endtime="20210714 23:15:59.702"/>
</kw>
<msg timestamp="20210714 23:15:59.703" level="INFO">${result} = copyFromLocal: `o3fs://07011-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210714 23:15:56.887" endtime="20210714 23:15:59.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:15:59.703" endtime="20210714 23:15:59.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:56.887" endtime="20210714 23:15:59.703"/>
</test>
<test id="s1-s7-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:59.709" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:15:59.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:15:59.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:15:59.706" endtime="20210714 23:15:59.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:15:59.712" level="INFO"/>
<status status="PASS" starttime="20210714 23:15:59.711" endtime="20210714 23:15:59.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:15:59.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:15:59.712" endtime="20210714 23:15:59.713"/>
</kw>
<status status="PASS" starttime="20210714 23:15:59.706" endtime="20210714 23:15:59.713"/>
</kw>
<msg timestamp="20210714 23:15:59.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:59.705" endtime="20210714 23:15:59.713"/>
</kw>
<status status="PASS" starttime="20210714 23:15:59.705" endtime="20210714 23:15:59.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:15:59.717" level="INFO">Running command 'ozone fs -get o3fs://07011-bucket1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:03.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:03.892" level="INFO">${output} = 2021-07-14 23:16:02,690 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:16:02,801 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:15:59.715" endtime="20210714 23:16:03.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:03.894" level="INFO">2021-07-14 23:16:02,690 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:16:02,801 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:16:02,801 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210714 23:16:03.893" endtime="20210714 23:16:03.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:03.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:03.894" endtime="20210714 23:16:03.895"/>
</kw>
<status status="PASS" starttime="20210714 23:15:59.714" endtime="20210714 23:16:03.895"/>
</kw>
<msg timestamp="20210714 23:16:03.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:15:59.714" endtime="20210714 23:16:03.895"/>
</kw>
<status status="PASS" starttime="20210714 23:15:59.713" endtime="20210714 23:16:03.895"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210714 23:16:03.896" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210714 23:16:03.895" endtime="20210714 23:16:03.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:15:59.704" endtime="20210714 23:16:03.896"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210714 23:13:21.624" endtime="20210714 23:16:03.898"/>
</suite>
<suite id="s1-s8" name="s3-generated-prefix-layout-objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:16:07.683" level="INFO">${random} = 84562</msg>
<status status="PASS" starttime="20210714 23:16:07.682" endtime="20210714 23:16:07.683"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:16:07.684" level="INFO">${PREFIX} = 84562</msg>
<status status="PASS" starttime="20210714 23:16:07.683" endtime="20210714 23:16:07.684"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.682" endtime="20210714 23:16:07.684"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.682" endtime="20210714 23:16:07.685"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:07.688" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:07.690" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:16:07.691" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 23:16:07.685" endtime="20210714 23:16:07.691"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:07.691" endtime="20210714 23:16:07.691"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:07.693" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:07.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:07.824" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 23:16:07.692" endtime="20210714 23:16:07.824"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:07.829" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:13.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:13.837" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.grid.uchicago.edu
 * epel: epel.mirror.constant.com
 * extras: atl.mirrors.clouvider.net
 * updates: mirror.umd.edu
Packa...</msg>
<status status="PASS" starttime="20210714 23:16:07.827" endtime="20210714 23:16:13.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:13.838" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.grid.uchicago.edu
 * epel: epel.mirror.constant.com
 * extras: atl.mirrors.clouvider.net
 * updates: mirror.umd.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 23:16:13.837" endtime="20210714 23:16:13.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:13.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:13.838" endtime="20210714 23:16:13.839"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.827" endtime="20210714 23:16:13.839"/>
</kw>
<msg timestamp="20210714 23:16:13.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:07.827" endtime="20210714 23:16:13.839"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.826" endtime="20210714 23:16:13.839"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.826" endtime="20210714 23:16:13.839"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.825" endtime="20210714 23:16:13.840"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.685" endtime="20210714 23:16:13.840"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.685" endtime="20210714 23:16:13.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:13.841" endtime="20210714 23:16:13.841"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:13.841" endtime="20210714 23:16:13.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:13.845" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:14.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:14.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:13.843" endtime="20210714 23:16:14.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:14.137" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:14.137" endtime="20210714 23:16:14.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:14.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:14.138" endtime="20210714 23:16:14.138"/>
</kw>
<status status="PASS" starttime="20210714 23:16:13.843" endtime="20210714 23:16:14.138"/>
</kw>
<msg timestamp="20210714 23:16:14.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:13.843" endtime="20210714 23:16:14.139"/>
</kw>
<status status="PASS" starttime="20210714 23:16:13.843" endtime="20210714 23:16:14.139"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:14.142" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:14.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:14.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:14.140" endtime="20210714 23:16:14.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:14.419" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:14.418" endtime="20210714 23:16:14.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:14.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:14.419" endtime="20210714 23:16:14.420"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.140" endtime="20210714 23:16:14.420"/>
</kw>
<msg timestamp="20210714 23:16:14.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:14.139" endtime="20210714 23:16:14.420"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.139" endtime="20210714 23:16:14.420"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:14.423" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:14.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:14.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:14.422" endtime="20210714 23:16:14.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:14.708" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:14.708" endtime="20210714 23:16:14.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:14.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:14.709" endtime="20210714 23:16:14.709"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.421" endtime="20210714 23:16:14.710"/>
</kw>
<msg timestamp="20210714 23:16:14.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:14.421" endtime="20210714 23:16:14.710"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.421" endtime="20210714 23:16:14.710"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:14.713" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:14.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:14.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:14.711" endtime="20210714 23:16:14.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:14.993" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:14.992" endtime="20210714 23:16:14.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:14.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:14.993" endtime="20210714 23:16:14.994"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.711" endtime="20210714 23:16:14.994"/>
</kw>
<msg timestamp="20210714 23:16:14.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:14.710" endtime="20210714 23:16:14.994"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.710" endtime="20210714 23:16:14.994"/>
</kw>
<status status="PASS" starttime="20210714 23:16:13.842" endtime="20210714 23:16:14.994"/>
</kw>
<status status="PASS" starttime="20210714 23:16:13.842" endtime="20210714 23:16:14.995"/>
</kw>
<status status="PASS" starttime="20210714 23:16:13.841" endtime="20210714 23:16:14.995"/>
</kw>
<status status="PASS" starttime="20210714 23:16:13.840" endtime="20210714 23:16:14.995"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:16:14.996" level="INFO">${postfix} = 69807</msg>
<status status="PASS" starttime="20210714 23:16:14.996" endtime="20210714 23:16:14.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 23:16:14.997" level="INFO">${bucket} = bucket-69807</msg>
<status status="PASS" starttime="20210714 23:16:14.996" endtime="20210714 23:16:14.997"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:15.001" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-69807 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:16.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:16.401" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-69807"
}</msg>
<status status="PASS" starttime="20210714 23:16:14.999" endtime="20210714 23:16:16.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:16.402" level="INFO">{
    "Location": "http://s3g:9878/bucket-69807"
}</msg>
<status status="PASS" starttime="20210714 23:16:16.401" endtime="20210714 23:16:16.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:16.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:16.402" endtime="20210714 23:16:16.402"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.998" endtime="20210714 23:16:16.403"/>
</kw>
<msg timestamp="20210714 23:16:16.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:14.998" endtime="20210714 23:16:16.403"/>
</kw>
<msg timestamp="20210714 23:16:16.403" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-69807"
}</msg>
<status status="PASS" starttime="20210714 23:16:14.997" endtime="20210714 23:16:16.403"/>
</kw>
<msg timestamp="20210714 23:16:16.403" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-69807"
}</msg>
<status status="PASS" starttime="20210714 23:16:14.997" endtime="20210714 23:16:16.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:16.403" endtime="20210714 23:16:16.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:16.404" endtime="20210714 23:16:16.404"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.997" endtime="20210714 23:16:16.404"/>
</kw>
<status status="PASS" starttime="20210714 23:16:14.995" endtime="20210714 23:16:16.405"/>
</kw>
<msg timestamp="20210714 23:16:16.405" level="INFO">${BUCKET} = bucket-69807</msg>
<status status="PASS" starttime="20210714 23:16:14.995" endtime="20210714 23:16:16.405"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:16:16.405" level="INFO">${BUCKET} = bucket-69807</msg>
<status status="PASS" starttime="20210714 23:16:16.405" endtime="20210714 23:16:16.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:16.405" endtime="20210714 23:16:16.406"/>
</kw>
<status status="PASS" starttime="20210714 23:16:07.681" endtime="20210714 23:16:16.406"/>
</kw>
<test id="s1-s8-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:16.410" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 23:16:16.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:16.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:16.408" endtime="20210714 23:16:16.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:16.413" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:16.413" endtime="20210714 23:16:16.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:16.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:16.414" endtime="20210714 23:16:16.414"/>
</kw>
<status status="PASS" starttime="20210714 23:16:16.408" endtime="20210714 23:16:16.414"/>
</kw>
<msg timestamp="20210714 23:16:16.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:16.408" endtime="20210714 23:16:16.415"/>
</kw>
<status status="PASS" starttime="20210714 23:16:16.407" endtime="20210714 23:16:16.415"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:16.418" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-69807 --key 84562/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:18.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:18.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:16.417" endtime="20210714 23:16:18.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:18.318" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:18.318" endtime="20210714 23:16:18.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:18.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:18.319" endtime="20210714 23:16:18.319"/>
</kw>
<status status="PASS" starttime="20210714 23:16:16.416" endtime="20210714 23:16:18.319"/>
</kw>
<msg timestamp="20210714 23:16:18.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:16.416" endtime="20210714 23:16:18.320"/>
</kw>
<msg timestamp="20210714 23:16:18.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:16.415" endtime="20210714 23:16:18.320"/>
</kw>
<msg timestamp="20210714 23:16:18.320" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:16.415" endtime="20210714 23:16:18.320"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:18.324" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-69807 --prefix 84562/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:18.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:18.824" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "845...</msg>
<status status="PASS" starttime="20210714 23:16:18.322" endtime="20210714 23:16:18.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:18.825" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "84562/putobject/", 
            "Size": 0
        }, 
        {
            "LastModified": "2021-07-14T23:16:18.251Z", 
            "ETag": "2021-07-14T23:16:18.251Z", 
            "StorageClass": "STANDARD", 
            "Key": "84562/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:16:18.824" endtime="20210714 23:16:18.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:18.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:18.825" endtime="20210714 23:16:18.826"/>
</kw>
<status status="PASS" starttime="20210714 23:16:18.322" endtime="20210714 23:16:18.826"/>
</kw>
<msg timestamp="20210714 23:16:18.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:18.321" endtime="20210714 23:16:18.826"/>
</kw>
<msg timestamp="20210714 23:16:18.826" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "845...</msg>
<status status="PASS" starttime="20210714 23:16:18.321" endtime="20210714 23:16:18.826"/>
</kw>
<msg timestamp="20210714 23:16:18.827" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "845...</msg>
<status status="PASS" starttime="20210714 23:16:18.320" endtime="20210714 23:16:18.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:18.827" endtime="20210714 23:16:18.827"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:18.830" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:18.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:18.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:18.828" endtime="20210714 23:16:18.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:18.834" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:18.833" endtime="20210714 23:16:18.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:18.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:18.834" endtime="20210714 23:16:18.835"/>
</kw>
<status status="PASS" starttime="20210714 23:16:18.828" endtime="20210714 23:16:18.835"/>
</kw>
<msg timestamp="20210714 23:16:18.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:18.828" endtime="20210714 23:16:18.835"/>
</kw>
<status status="PASS" starttime="20210714 23:16:18.827" endtime="20210714 23:16:18.835"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:18.839" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-69807 --key 84562/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:19.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:19.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:18.837" endtime="20210714 23:16:19.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:19.272" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:19.271" endtime="20210714 23:16:19.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:19.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:19.272" endtime="20210714 23:16:19.272"/>
</kw>
<status status="PASS" starttime="20210714 23:16:18.836" endtime="20210714 23:16:19.273"/>
</kw>
<msg timestamp="20210714 23:16:19.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:18.836" endtime="20210714 23:16:19.273"/>
</kw>
<msg timestamp="20210714 23:16:19.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:18.836" endtime="20210714 23:16:19.273"/>
</kw>
<msg timestamp="20210714 23:16:19.273" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:18.835" endtime="20210714 23:16:19.273"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:19.278" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-69807 --prefix 84562/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:19.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:19.683" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "845...</msg>
<status status="PASS" starttime="20210714 23:16:19.275" endtime="20210714 23:16:19.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:19.684" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "84562/putobject/", 
            "Size": 0
        }, 
        {
            "LastModified": "2021-07-14T23:16:18.251Z", 
            "ETag": "2021-07-14T23:16:18.251Z", 
            "StorageClass": "STANDARD", 
            "Key": "84562/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2021-07-14T23:16:19.226Z", 
            "ETag": "2021-07-14T23:16:19.226Z", 
            "StorageClass": "STANDARD", 
            "Key": "84562/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:16:19.683" endtime="20210714 23:16:19.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:19.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:19.684" endtime="20210714 23:16:19.685"/>
</kw>
<status status="PASS" starttime="20210714 23:16:19.275" endtime="20210714 23:16:19.685"/>
</kw>
<msg timestamp="20210714 23:16:19.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:19.275" endtime="20210714 23:16:19.685"/>
</kw>
<msg timestamp="20210714 23:16:19.686" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "845...</msg>
<status status="PASS" starttime="20210714 23:16:19.274" endtime="20210714 23:16:19.686"/>
</kw>
<msg timestamp="20210714 23:16:19.686" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:16.822Z", 
            "ETag": "2021-07-14T23:16:16.822Z", 
            "StorageClass": "STANDARD", 
            "Key": "845...</msg>
<status status="PASS" starttime="20210714 23:16:19.274" endtime="20210714 23:16:19.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:19.686" endtime="20210714 23:16:19.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:16.406" endtime="20210714 23:16:19.687"/>
</test>
<test id="s1-s8-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:19.692" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:20.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:20.267" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:19.691" endtime="20210714 23:16:20.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:20.268" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:20 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:20.267" endtime="20210714 23:16:20.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:20.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:20.268" endtime="20210714 23:16:20.268"/>
</kw>
<status status="PASS" starttime="20210714 23:16:19.690" endtime="20210714 23:16:20.269"/>
</kw>
<msg timestamp="20210714 23:16:20.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:19.690" endtime="20210714 23:16:20.269"/>
</kw>
<msg timestamp="20210714 23:16:20.269" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:19.689" endtime="20210714 23:16:20.270"/>
</kw>
<msg timestamp="20210714 23:16:20.270" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:19.688" endtime="20210714 23:16:20.270"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:20.274" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:20.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:20.277" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:16:20.272" endtime="20210714 23:16:20.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:20.278" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:16:20.278" endtime="20210714 23:16:20.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:20.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:20.278" endtime="20210714 23:16:20.279"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.271" endtime="20210714 23:16:20.279"/>
</kw>
<msg timestamp="20210714 23:16:20.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:20.271" endtime="20210714 23:16:20.279"/>
</kw>
<msg timestamp="20210714 23:16:20.280" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:16:20.271" endtime="20210714 23:16:20.280"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:20.283" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:20.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:20.286" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:16:20.281" endtime="20210714 23:16:20.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:20.287" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:16:20.286" endtime="20210714 23:16:20.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:20.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:20.287" endtime="20210714 23:16:20.287"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.281" endtime="20210714 23:16:20.288"/>
</kw>
<msg timestamp="20210714 23:16:20.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:20.280" endtime="20210714 23:16:20.288"/>
</kw>
<msg timestamp="20210714 23:16:20.288" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:16:20.280" endtime="20210714 23:16:20.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:20.288" endtime="20210714 23:16:20.289"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.270" endtime="20210714 23:16:20.289"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:19.688" endtime="20210714 23:16:20.289"/>
</test>
<test id="s1-s8-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:20.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:20.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:20.756" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:20.293" endtime="20210714 23:16:20.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:20.758" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:20 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:20.757" endtime="20210714 23:16:20.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:20.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:20.758" endtime="20210714 23:16:20.758"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.292" endtime="20210714 23:16:20.759"/>
</kw>
<msg timestamp="20210714 23:16:20.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:20.292" endtime="20210714 23:16:20.759"/>
</kw>
<msg timestamp="20210714 23:16:20.759" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:20.291" endtime="20210714 23:16:20.759"/>
</kw>
<msg timestamp="20210714 23:16:20.760" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:20.291" endtime="20210714 23:16:20.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:20.760" endtime="20210714 23:16:20.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:20.761" endtime="20210714 23:16:20.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:20.761" endtime="20210714 23:16:20.761"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:20.765" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:16:20.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:20.767" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210714 23:16:20.763" endtime="20210714 23:16:20.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:20.768" level="INFO">Rando</msg>
<status status="PASS" starttime="20210714 23:16:20.768" endtime="20210714 23:16:20.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:20.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:20.768" endtime="20210714 23:16:20.769"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.762" endtime="20210714 23:16:20.769"/>
</kw>
<msg timestamp="20210714 23:16:20.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:20.762" endtime="20210714 23:16:20.769"/>
</kw>
<msg timestamp="20210714 23:16:20.770" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20210714 23:16:20.762" endtime="20210714 23:16:20.770"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:20.772" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:20.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:20.775" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210714 23:16:20.771" endtime="20210714 23:16:20.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:20.775" level="INFO">Rando</msg>
<status status="PASS" starttime="20210714 23:16:20.775" endtime="20210714 23:16:20.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:20.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:20.776" endtime="20210714 23:16:20.776"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.770" endtime="20210714 23:16:20.776"/>
</kw>
<msg timestamp="20210714 23:16:20.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:20.770" endtime="20210714 23:16:20.777"/>
</kw>
<msg timestamp="20210714 23:16:20.777" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20210714 23:16:20.770" endtime="20210714 23:16:20.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:20.777" endtime="20210714 23:16:20.777"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:20.781" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:21.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:21.214" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:20.779" endtime="20210714 23:16:21.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:21.215" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:21 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:21.214" endtime="20210714 23:16:21.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:21.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:21.215" endtime="20210714 23:16:21.216"/>
</kw>
<status status="PASS" starttime="20210714 23:16:20.779" endtime="20210714 23:16:21.216"/>
</kw>
<msg timestamp="20210714 23:16:21.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:20.779" endtime="20210714 23:16:21.216"/>
</kw>
<msg timestamp="20210714 23:16:21.216" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:20.778" endtime="20210714 23:16:21.216"/>
</kw>
<msg timestamp="20210714 23:16:21.217" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:20.778" endtime="20210714 23:16:21.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:21.217" endtime="20210714 23:16:21.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:21.217" endtime="20210714 23:16:21.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:21.218" endtime="20210714 23:16:21.219"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:21.222" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:16:21.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:21.224" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210714 23:16:21.220" endtime="20210714 23:16:21.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:21.225" level="INFO">ndo</msg>
<status status="PASS" starttime="20210714 23:16:21.225" endtime="20210714 23:16:21.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:21.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:21.225" endtime="20210714 23:16:21.226"/>
</kw>
<status status="PASS" starttime="20210714 23:16:21.220" endtime="20210714 23:16:21.226"/>
</kw>
<msg timestamp="20210714 23:16:21.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:21.219" endtime="20210714 23:16:21.226"/>
</kw>
<msg timestamp="20210714 23:16:21.226" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20210714 23:16:21.219" endtime="20210714 23:16:21.227"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:21.229" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:21.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:21.232" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210714 23:16:21.228" endtime="20210714 23:16:21.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:21.232" level="INFO">ndo</msg>
<status status="PASS" starttime="20210714 23:16:21.232" endtime="20210714 23:16:21.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:21.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:21.233" endtime="20210714 23:16:21.233"/>
</kw>
<status status="PASS" starttime="20210714 23:16:21.227" endtime="20210714 23:16:21.234"/>
</kw>
<msg timestamp="20210714 23:16:21.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:21.227" endtime="20210714 23:16:21.234"/>
</kw>
<msg timestamp="20210714 23:16:21.234" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20210714 23:16:21.227" endtime="20210714 23:16:21.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:21.234" endtime="20210714 23:16:21.234"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:21.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:21.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:21.679" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:21.236" endtime="20210714 23:16:21.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:21.680" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:21 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:21.679" endtime="20210714 23:16:21.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:21.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:21.680" endtime="20210714 23:16:21.681"/>
</kw>
<status status="PASS" starttime="20210714 23:16:21.236" endtime="20210714 23:16:21.681"/>
</kw>
<msg timestamp="20210714 23:16:21.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:21.236" endtime="20210714 23:16:21.681"/>
</kw>
<msg timestamp="20210714 23:16:21.681" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:21.235" endtime="20210714 23:16:21.681"/>
</kw>
<msg timestamp="20210714 23:16:21.682" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:21.235" endtime="20210714 23:16:21.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:21.682" endtime="20210714 23:16:21.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:21.682" endtime="20210714 23:16:21.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:21.683" endtime="20210714 23:16:21.683"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:21.687" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:16:21.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:21.690" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:16:21.685" endtime="20210714 23:16:21.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:21.690" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210714 23:16:21.690" endtime="20210714 23:16:21.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:21.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:21.691" endtime="20210714 23:16:21.691"/>
</kw>
<status status="PASS" starttime="20210714 23:16:21.684" endtime="20210714 23:16:21.691"/>
</kw>
<msg timestamp="20210714 23:16:21.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:21.684" endtime="20210714 23:16:21.692"/>
</kw>
<msg timestamp="20210714 23:16:21.692" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:16:21.683" endtime="20210714 23:16:21.692"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:21.695" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:21.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:21.698" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:16:21.693" endtime="20210714 23:16:21.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:21.698" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210714 23:16:21.698" endtime="20210714 23:16:21.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:21.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:21.699" endtime="20210714 23:16:21.699"/>
</kw>
<status status="PASS" starttime="20210714 23:16:21.693" endtime="20210714 23:16:21.700"/>
</kw>
<msg timestamp="20210714 23:16:21.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:21.693" endtime="20210714 23:16:21.700"/>
</kw>
<msg timestamp="20210714 23:16:21.700" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:16:21.692" endtime="20210714 23:16:21.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:21.700" endtime="20210714 23:16:21.700"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:20.290" endtime="20210714 23:16:21.701"/>
</test>
<test id="s1-s8-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:21.705" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:22.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:16:22.347" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:21.704" endtime="20210714 23:16:22.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:22.348" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:22.347" endtime="20210714 23:16:22.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:22.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:22.348" endtime="20210714 23:16:22.349"/>
</kw>
<msg timestamp="20210714 23:16:22.349" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:21.703" endtime="20210714 23:16:22.349"/>
</kw>
<msg timestamp="20210714 23:16:22.349" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:21.702" endtime="20210714 23:16:22.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:22.350" endtime="20210714 23:16:22.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:21.701" endtime="20210714 23:16:22.350"/>
</test>
<test id="s1-s8-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:22.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:22.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:22.803" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:22.354" endtime="20210714 23:16:22.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:22.804" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:22 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:22.804" endtime="20210714 23:16:22.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:22.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:22.805" endtime="20210714 23:16:22.805"/>
</kw>
<status status="PASS" starttime="20210714 23:16:22.354" endtime="20210714 23:16:22.806"/>
</kw>
<msg timestamp="20210714 23:16:22.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:22.353" endtime="20210714 23:16:22.806"/>
</kw>
<msg timestamp="20210714 23:16:22.806" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:22.353" endtime="20210714 23:16:22.806"/>
</kw>
<msg timestamp="20210714 23:16:22.806" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:22.352" endtime="20210714 23:16:22.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:22.806" endtime="20210714 23:16:22.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:22.807" endtime="20210714 23:16:22.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:22.807" endtime="20210714 23:16:22.808"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:22.812" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:22.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:22.814" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:22.810" endtime="20210714 23:16:22.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:22.815" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:22.815" endtime="20210714 23:16:22.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:22.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:22.815" endtime="20210714 23:16:22.816"/>
</kw>
<status status="PASS" starttime="20210714 23:16:22.809" endtime="20210714 23:16:22.816"/>
</kw>
<msg timestamp="20210714 23:16:22.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:22.808" endtime="20210714 23:16:22.816"/>
</kw>
<msg timestamp="20210714 23:16:22.817" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:22.808" endtime="20210714 23:16:22.817"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:22.820" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:22.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:22.822" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:22.818" endtime="20210714 23:16:22.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:22.823" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:22.822" endtime="20210714 23:16:22.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:22.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:22.823" endtime="20210714 23:16:22.823"/>
</kw>
<status status="PASS" starttime="20210714 23:16:22.818" endtime="20210714 23:16:22.824"/>
</kw>
<msg timestamp="20210714 23:16:22.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:22.817" endtime="20210714 23:16:22.824"/>
</kw>
<msg timestamp="20210714 23:16:22.824" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:22.817" endtime="20210714 23:16:22.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:22.824" endtime="20210714 23:16:22.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:22.351" endtime="20210714 23:16:22.825"/>
</test>
<test id="s1-s8-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:22.830" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:23.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:23.283" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:22.828" endtime="20210714 23:16:23.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:23.285" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:23 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:23.284" endtime="20210714 23:16:23.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:23.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:23.285" endtime="20210714 23:16:23.285"/>
</kw>
<status status="PASS" starttime="20210714 23:16:22.827" endtime="20210714 23:16:23.286"/>
</kw>
<msg timestamp="20210714 23:16:23.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:22.827" endtime="20210714 23:16:23.286"/>
</kw>
<msg timestamp="20210714 23:16:23.286" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:22.827" endtime="20210714 23:16:23.286"/>
</kw>
<msg timestamp="20210714 23:16:23.286" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:22.826" endtime="20210714 23:16:23.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:23.286" endtime="20210714 23:16:23.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:23.287" endtime="20210714 23:16:23.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:23.287" endtime="20210714 23:16:23.288"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:23.291" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:23.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:23.293" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:23.289" endtime="20210714 23:16:23.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:23.294" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:23.294" endtime="20210714 23:16:23.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:23.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:23.294" endtime="20210714 23:16:23.295"/>
</kw>
<status status="PASS" starttime="20210714 23:16:23.288" endtime="20210714 23:16:23.295"/>
</kw>
<msg timestamp="20210714 23:16:23.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:23.288" endtime="20210714 23:16:23.295"/>
</kw>
<msg timestamp="20210714 23:16:23.296" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:23.288" endtime="20210714 23:16:23.296"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:23.299" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:23.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:23.301" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:23.297" endtime="20210714 23:16:23.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:23.302" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:23.301" endtime="20210714 23:16:23.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:23.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:23.302" endtime="20210714 23:16:23.303"/>
</kw>
<status status="PASS" starttime="20210714 23:16:23.297" endtime="20210714 23:16:23.303"/>
</kw>
<msg timestamp="20210714 23:16:23.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:23.296" endtime="20210714 23:16:23.303"/>
</kw>
<msg timestamp="20210714 23:16:23.303" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:23.296" endtime="20210714 23:16:23.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:23.303" endtime="20210714 23:16:23.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:22.825" endtime="20210714 23:16:23.304"/>
</test>
<test id="s1-s8-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:23.309" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:23.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:23.745" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:23.307" endtime="20210714 23:16:23.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:23.746" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:23 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:23.745" endtime="20210714 23:16:23.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:23.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:23.746" endtime="20210714 23:16:23.747"/>
</kw>
<status status="PASS" starttime="20210714 23:16:23.307" endtime="20210714 23:16:23.747"/>
</kw>
<msg timestamp="20210714 23:16:23.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:23.307" endtime="20210714 23:16:23.747"/>
</kw>
<msg timestamp="20210714 23:16:23.747" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:23.306" endtime="20210714 23:16:23.747"/>
</kw>
<msg timestamp="20210714 23:16:23.748" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:23.305" endtime="20210714 23:16:23.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:23.748" endtime="20210714 23:16:23.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:23.748" endtime="20210714 23:16:23.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:23.749" endtime="20210714 23:16:23.749"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:23.752" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:16:23.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:23.755" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210714 23:16:23.750" endtime="20210714 23:16:23.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:23.755" level="INFO">R</msg>
<status status="PASS" starttime="20210714 23:16:23.755" endtime="20210714 23:16:23.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:23.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:23.756" endtime="20210714 23:16:23.756"/>
</kw>
<status status="PASS" starttime="20210714 23:16:23.750" endtime="20210714 23:16:23.756"/>
</kw>
<msg timestamp="20210714 23:16:23.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:23.750" endtime="20210714 23:16:23.757"/>
</kw>
<msg timestamp="20210714 23:16:23.757" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20210714 23:16:23.749" endtime="20210714 23:16:23.757"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:23.760" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:23.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:23.762" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210714 23:16:23.758" endtime="20210714 23:16:23.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:23.763" level="INFO">R</msg>
<status status="PASS" starttime="20210714 23:16:23.762" endtime="20210714 23:16:23.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:23.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:23.763" endtime="20210714 23:16:23.764"/>
</kw>
<status status="PASS" starttime="20210714 23:16:23.758" endtime="20210714 23:16:23.764"/>
</kw>
<msg timestamp="20210714 23:16:23.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:23.757" endtime="20210714 23:16:23.764"/>
</kw>
<msg timestamp="20210714 23:16:23.764" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20210714 23:16:23.757" endtime="20210714 23:16:23.764"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:23.764" endtime="20210714 23:16:23.765"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:23.768" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:24.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:24.203" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:23.767" endtime="20210714 23:16:24.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:24.204" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:24 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:24.204" endtime="20210714 23:16:24.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:24.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:24.205" endtime="20210714 23:16:24.205"/>
</kw>
<status status="PASS" starttime="20210714 23:16:23.766" endtime="20210714 23:16:24.205"/>
</kw>
<msg timestamp="20210714 23:16:24.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:23.766" endtime="20210714 23:16:24.206"/>
</kw>
<msg timestamp="20210714 23:16:24.206" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:23.766" endtime="20210714 23:16:24.206"/>
</kw>
<msg timestamp="20210714 23:16:24.206" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:16:23.765" endtime="20210714 23:16:24.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:24.206" endtime="20210714 23:16:24.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:24.207" endtime="20210714 23:16:24.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:24.207" endtime="20210714 23:16:24.208"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:24.211" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:16:24.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:24.214" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210714 23:16:24.209" endtime="20210714 23:16:24.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:24.215" level="INFO">o</msg>
<status status="PASS" starttime="20210714 23:16:24.214" endtime="20210714 23:16:24.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:24.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:24.215" endtime="20210714 23:16:24.215"/>
</kw>
<status status="PASS" starttime="20210714 23:16:24.209" endtime="20210714 23:16:24.216"/>
</kw>
<msg timestamp="20210714 23:16:24.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:24.208" endtime="20210714 23:16:24.216"/>
</kw>
<msg timestamp="20210714 23:16:24.216" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20210714 23:16:24.208" endtime="20210714 23:16:24.216"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:24.219" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:24.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:24.221" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210714 23:16:24.217" endtime="20210714 23:16:24.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:24.222" level="INFO">o</msg>
<status status="PASS" starttime="20210714 23:16:24.221" endtime="20210714 23:16:24.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:24.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:24.222" endtime="20210714 23:16:24.223"/>
</kw>
<status status="PASS" starttime="20210714 23:16:24.217" endtime="20210714 23:16:24.223"/>
</kw>
<msg timestamp="20210714 23:16:24.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:24.217" endtime="20210714 23:16:24.223"/>
</kw>
<msg timestamp="20210714 23:16:24.223" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20210714 23:16:24.216" endtime="20210714 23:16:24.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:24.223" endtime="20210714 23:16:24.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:23.305" endtime="20210714 23:16:24.224"/>
</test>
<test id="s1-s8-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:24.230" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:24.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:24.650" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:24.227" endtime="20210714 23:16:24.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:24.651" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:24 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:24.651" endtime="20210714 23:16:24.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:24.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:24.652" endtime="20210714 23:16:24.652"/>
</kw>
<status status="PASS" starttime="20210714 23:16:24.227" endtime="20210714 23:16:24.652"/>
</kw>
<msg timestamp="20210714 23:16:24.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:24.227" endtime="20210714 23:16:24.653"/>
</kw>
<msg timestamp="20210714 23:16:24.653" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:24.226" endtime="20210714 23:16:24.653"/>
</kw>
<msg timestamp="20210714 23:16:24.653" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:24.225" endtime="20210714 23:16:24.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:24.653" endtime="20210714 23:16:24.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:24.654" endtime="20210714 23:16:24.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:24.654" endtime="20210714 23:16:24.655"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:24.658" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:16:24.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:24.660" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210714 23:16:24.656" endtime="20210714 23:16:24.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:24.661" level="INFO">ext</msg>
<status status="PASS" starttime="20210714 23:16:24.661" endtime="20210714 23:16:24.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:24.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:24.661" endtime="20210714 23:16:24.662"/>
</kw>
<status status="PASS" starttime="20210714 23:16:24.656" endtime="20210714 23:16:24.662"/>
</kw>
<msg timestamp="20210714 23:16:24.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:24.655" endtime="20210714 23:16:24.662"/>
</kw>
<msg timestamp="20210714 23:16:24.663" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20210714 23:16:24.655" endtime="20210714 23:16:24.663"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:24.666" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:24.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:24.668" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210714 23:16:24.664" endtime="20210714 23:16:24.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:24.669" level="INFO">ext</msg>
<status status="PASS" starttime="20210714 23:16:24.668" endtime="20210714 23:16:24.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:24.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:24.669" endtime="20210714 23:16:24.669"/>
</kw>
<status status="PASS" starttime="20210714 23:16:24.663" endtime="20210714 23:16:24.669"/>
</kw>
<msg timestamp="20210714 23:16:24.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:24.663" endtime="20210714 23:16:24.670"/>
</kw>
<msg timestamp="20210714 23:16:24.670" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20210714 23:16:24.663" endtime="20210714 23:16:24.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:24.670" endtime="20210714 23:16:24.670"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:24.674" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:25.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:25.108" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:24.672" endtime="20210714 23:16:25.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:25.109" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:16:25 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:25.108" endtime="20210714 23:16:25.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:25.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:25.109" endtime="20210714 23:16:25.110"/>
</kw>
<status status="PASS" starttime="20210714 23:16:24.672" endtime="20210714 23:16:25.110"/>
</kw>
<msg timestamp="20210714 23:16:25.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:24.672" endtime="20210714 23:16:25.111"/>
</kw>
<msg timestamp="20210714 23:16:25.111" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:24.671" endtime="20210714 23:16:25.111"/>
</kw>
<msg timestamp="20210714 23:16:25.111" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:16:24.671" endtime="20210714 23:16:25.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:25.111" endtime="20210714 23:16:25.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:25.112" endtime="20210714 23:16:25.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:25.112" endtime="20210714 23:16:25.113"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:25.116" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:25.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:25.118" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.114" endtime="20210714 23:16:25.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:25.119" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.118" endtime="20210714 23:16:25.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:25.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:25.119" endtime="20210714 23:16:25.119"/>
</kw>
<status status="PASS" starttime="20210714 23:16:25.113" endtime="20210714 23:16:25.120"/>
</kw>
<msg timestamp="20210714 23:16:25.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:25.113" endtime="20210714 23:16:25.120"/>
</kw>
<msg timestamp="20210714 23:16:25.120" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.113" endtime="20210714 23:16:25.120"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:25.123" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:25.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:25.125" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.122" endtime="20210714 23:16:25.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:25.126" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.126" endtime="20210714 23:16:25.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:25.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:25.126" endtime="20210714 23:16:25.127"/>
</kw>
<status status="PASS" starttime="20210714 23:16:25.121" endtime="20210714 23:16:25.127"/>
</kw>
<msg timestamp="20210714 23:16:25.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:25.121" endtime="20210714 23:16:25.127"/>
</kw>
<msg timestamp="20210714 23:16:25.128" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.120" endtime="20210714 23:16:25.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:25.128" endtime="20210714 23:16:25.128"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:24.224" endtime="20210714 23:16:25.128"/>
</test>
<test id="s1-s8-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:25.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:25.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:25.552" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:25.132" endtime="20210714 23:16:25.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:25.553" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:25 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:25.552" endtime="20210714 23:16:25.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:25.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:25.553" endtime="20210714 23:16:25.554"/>
</kw>
<status status="PASS" starttime="20210714 23:16:25.131" endtime="20210714 23:16:25.554"/>
</kw>
<msg timestamp="20210714 23:16:25.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:25.131" endtime="20210714 23:16:25.554"/>
</kw>
<msg timestamp="20210714 23:16:25.555" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:25.130" endtime="20210714 23:16:25.555"/>
</kw>
<msg timestamp="20210714 23:16:25.555" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:25.130" endtime="20210714 23:16:25.555"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:25.555" endtime="20210714 23:16:25.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:25.556" endtime="20210714 23:16:25.556"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:25.559" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:25.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:25.562" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.558" endtime="20210714 23:16:25.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:25.563" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.562" endtime="20210714 23:16:25.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:25.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:25.563" endtime="20210714 23:16:25.563"/>
</kw>
<status status="PASS" starttime="20210714 23:16:25.557" endtime="20210714 23:16:25.563"/>
</kw>
<msg timestamp="20210714 23:16:25.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:25.556" endtime="20210714 23:16:25.564"/>
</kw>
<msg timestamp="20210714 23:16:25.564" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.556" endtime="20210714 23:16:25.564"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:25.567" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:25.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:25.569" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.565" endtime="20210714 23:16:25.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:25.570" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.569" endtime="20210714 23:16:25.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:25.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:25.570" endtime="20210714 23:16:25.570"/>
</kw>
<status status="PASS" starttime="20210714 23:16:25.565" endtime="20210714 23:16:25.571"/>
</kw>
<msg timestamp="20210714 23:16:25.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:25.564" endtime="20210714 23:16:25.571"/>
</kw>
<msg timestamp="20210714 23:16:25.571" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:25.564" endtime="20210714 23:16:25.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:25.571" endtime="20210714 23:16:25.572"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:25.575" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:26.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:26.002" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:25.574" endtime="20210714 23:16:26.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:26.004" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:25 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:16:26.003" endtime="20210714 23:16:26.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:26.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:26.004" endtime="20210714 23:16:26.004"/>
</kw>
<status status="PASS" starttime="20210714 23:16:25.573" endtime="20210714 23:16:26.005"/>
</kw>
<msg timestamp="20210714 23:16:26.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:25.573" endtime="20210714 23:16:26.005"/>
</kw>
<msg timestamp="20210714 23:16:26.005" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:25.572" endtime="20210714 23:16:26.005"/>
</kw>
<msg timestamp="20210714 23:16:26.005" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:16:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:16:2...</msg>
<status status="PASS" starttime="20210714 23:16:25.572" endtime="20210714 23:16:26.005"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:26.006" endtime="20210714 23:16:26.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:26.006" endtime="20210714 23:16:26.006"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:26.010" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:26.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:26.012" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:26.008" endtime="20210714 23:16:26.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:26.013" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:26.012" endtime="20210714 23:16:26.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:26.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:26.013" endtime="20210714 23:16:26.014"/>
</kw>
<status status="PASS" starttime="20210714 23:16:26.007" endtime="20210714 23:16:26.014"/>
</kw>
<msg timestamp="20210714 23:16:26.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:26.007" endtime="20210714 23:16:26.014"/>
</kw>
<msg timestamp="20210714 23:16:26.014" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:26.007" endtime="20210714 23:16:26.014"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:26.018" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:26.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:26.020" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:26.016" endtime="20210714 23:16:26.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:26.021" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:26.020" endtime="20210714 23:16:26.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:26.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:26.021" endtime="20210714 23:16:26.021"/>
</kw>
<status status="PASS" starttime="20210714 23:16:26.015" endtime="20210714 23:16:26.022"/>
</kw>
<msg timestamp="20210714 23:16:26.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:26.015" endtime="20210714 23:16:26.022"/>
</kw>
<msg timestamp="20210714 23:16:26.022" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:16:26.015" endtime="20210714 23:16:26.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:16:26.022" endtime="20210714 23:16:26.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:25.129" endtime="20210714 23:16:26.023"/>
</test>
<test id="s1-s8-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:26.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:26.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:16:26.439" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.026" endtime="20210714 23:16:26.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:26.441" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.440" endtime="20210714 23:16:26.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:26.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:26.441" endtime="20210714 23:16:26.441"/>
</kw>
<msg timestamp="20210714 23:16:26.442" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.025" endtime="20210714 23:16:26.442"/>
</kw>
<msg timestamp="20210714 23:16:26.442" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.024" endtime="20210714 23:16:26.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:26.443" endtime="20210714 23:16:26.443"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:26.446" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:26.864" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:16:26.864" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.445" endtime="20210714 23:16:26.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:26.865" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.865" endtime="20210714 23:16:26.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:26.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:26.866" endtime="20210714 23:16:26.866"/>
</kw>
<msg timestamp="20210714 23:16:26.866" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.444" endtime="20210714 23:16:26.866"/>
</kw>
<msg timestamp="20210714 23:16:26.867" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.443" endtime="20210714 23:16:26.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:26.867" endtime="20210714 23:16:26.867"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:26.871" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-69807 --key 84562/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:27.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:16:27.277" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.869" endtime="20210714 23:16:27.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:27.278" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:27.277" endtime="20210714 23:16:27.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:27.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:27.278" endtime="20210714 23:16:27.279"/>
</kw>
<msg timestamp="20210714 23:16:27.279" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.868" endtime="20210714 23:16:27.279"/>
</kw>
<msg timestamp="20210714 23:16:27.279" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:16:26.867" endtime="20210714 23:16:27.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:27.280" endtime="20210714 23:16:27.280"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:26.024" endtime="20210714 23:16:27.280"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 23:16:07.627" endtime="20210714 23:16:27.282"/>
</suite>
<suite id="s1-s9" name="s3-generated-prefix-layout-objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:16:31.078" level="INFO">${random} = 50020</msg>
<status status="PASS" starttime="20210714 23:16:31.078" endtime="20210714 23:16:31.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:16:31.080" level="INFO">${PREFIX} = 50020</msg>
<status status="PASS" starttime="20210714 23:16:31.078" endtime="20210714 23:16:31.080"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.078" endtime="20210714 23:16:31.080"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.077" endtime="20210714 23:16:31.080"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:31.084" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:31.086" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:16:31.086" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 23:16:31.081" endtime="20210714 23:16:31.086"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:31.086" endtime="20210714 23:16:31.087"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:31.088" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:31.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:31.207" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 23:16:31.087" endtime="20210714 23:16:31.207"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:31.212" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:31.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:31.556" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.grid.uchicago.edu
 * epel: epel.mirror.constant.com
 * extras: atl.mirrors.clouvider.net
 * updates: mirro...</msg>
<status status="PASS" starttime="20210714 23:16:31.210" endtime="20210714 23:16:31.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:31.557" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.grid.uchicago.edu
 * epel: epel.mirror.constant.com
 * extras: atl.mirrors.clouvider.net
 * updates: mirror.umd.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 23:16:31.557" endtime="20210714 23:16:31.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:31.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:31.557" endtime="20210714 23:16:31.558"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.209" endtime="20210714 23:16:31.558"/>
</kw>
<msg timestamp="20210714 23:16:31.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:31.209" endtime="20210714 23:16:31.558"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.209" endtime="20210714 23:16:31.558"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.208" endtime="20210714 23:16:31.559"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.208" endtime="20210714 23:16:31.559"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.080" endtime="20210714 23:16:31.559"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.080" endtime="20210714 23:16:31.559"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:31.560" endtime="20210714 23:16:31.560"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:31.560" endtime="20210714 23:16:31.561"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:31.565" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:31.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:31.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:31.563" endtime="20210714 23:16:31.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:31.853" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:31.852" endtime="20210714 23:16:31.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:31.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:31.853" endtime="20210714 23:16:31.854"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.562" endtime="20210714 23:16:31.854"/>
</kw>
<msg timestamp="20210714 23:16:31.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:31.562" endtime="20210714 23:16:31.854"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.561" endtime="20210714 23:16:31.854"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:31.857" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:32.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:32.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:31.856" endtime="20210714 23:16:32.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:32.143" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:32.142" endtime="20210714 23:16:32.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:32.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:32.143" endtime="20210714 23:16:32.144"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.855" endtime="20210714 23:16:32.144"/>
</kw>
<msg timestamp="20210714 23:16:32.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:31.855" endtime="20210714 23:16:32.144"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.854" endtime="20210714 23:16:32.144"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:32.147" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:32.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:32.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:32.145" endtime="20210714 23:16:32.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:32.424" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:32.424" endtime="20210714 23:16:32.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:32.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:32.424" endtime="20210714 23:16:32.425"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.145" endtime="20210714 23:16:32.425"/>
</kw>
<msg timestamp="20210714 23:16:32.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:32.145" endtime="20210714 23:16:32.425"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.144" endtime="20210714 23:16:32.425"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:32.429" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:32.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:32.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:32.427" endtime="20210714 23:16:32.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:32.708" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:32.707" endtime="20210714 23:16:32.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:32.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:32.708" endtime="20210714 23:16:32.709"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.426" endtime="20210714 23:16:32.709"/>
</kw>
<msg timestamp="20210714 23:16:32.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:32.426" endtime="20210714 23:16:32.709"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.426" endtime="20210714 23:16:32.709"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.561" endtime="20210714 23:16:32.710"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.561" endtime="20210714 23:16:32.710"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.560" endtime="20210714 23:16:32.710"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.559" endtime="20210714 23:16:32.710"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:16:32.711" level="INFO">${postfix} = 61523</msg>
<status status="PASS" starttime="20210714 23:16:32.711" endtime="20210714 23:16:32.711"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 23:16:32.712" level="INFO">${bucket} = bucket-61523</msg>
<status status="PASS" starttime="20210714 23:16:32.711" endtime="20210714 23:16:32.712"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:32.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-61523 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:33.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:33.130" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-61523"
}</msg>
<status status="PASS" starttime="20210714 23:16:32.714" endtime="20210714 23:16:33.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:33.131" level="INFO">{
    "Location": "http://s3g:9878/bucket-61523"
}</msg>
<status status="PASS" starttime="20210714 23:16:33.130" endtime="20210714 23:16:33.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:33.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:33.131" endtime="20210714 23:16:33.131"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.714" endtime="20210714 23:16:33.132"/>
</kw>
<msg timestamp="20210714 23:16:33.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:32.713" endtime="20210714 23:16:33.132"/>
</kw>
<msg timestamp="20210714 23:16:33.132" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-61523"
}</msg>
<status status="PASS" starttime="20210714 23:16:32.713" endtime="20210714 23:16:33.132"/>
</kw>
<msg timestamp="20210714 23:16:33.132" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-61523"
}</msg>
<status status="PASS" starttime="20210714 23:16:32.713" endtime="20210714 23:16:33.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:33.132" endtime="20210714 23:16:33.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:33.133" endtime="20210714 23:16:33.133"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.712" endtime="20210714 23:16:33.133"/>
</kw>
<status status="PASS" starttime="20210714 23:16:32.710" endtime="20210714 23:16:33.133"/>
</kw>
<msg timestamp="20210714 23:16:33.134" level="INFO">${BUCKET} = bucket-61523</msg>
<status status="PASS" starttime="20210714 23:16:32.710" endtime="20210714 23:16:33.134"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:16:33.134" level="INFO">${BUCKET} = bucket-61523</msg>
<status status="PASS" starttime="20210714 23:16:33.134" endtime="20210714 23:16:33.134"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:16:33.134" endtime="20210714 23:16:33.135"/>
</kw>
<status status="PASS" starttime="20210714 23:16:31.077" endtime="20210714 23:16:33.135"/>
</kw>
<test id="s1-s9-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:33.139" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 23:16:33.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:33.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:33.137" endtime="20210714 23:16:33.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:33.142" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:33.142" endtime="20210714 23:16:33.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:33.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:33.143" endtime="20210714 23:16:33.143"/>
</kw>
<status status="PASS" starttime="20210714 23:16:33.137" endtime="20210714 23:16:33.143"/>
</kw>
<msg timestamp="20210714 23:16:33.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:33.136" endtime="20210714 23:16:33.144"/>
</kw>
<status status="PASS" starttime="20210714 23:16:33.136" endtime="20210714 23:16:33.144"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:33.147" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-61523 --key 50020/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:33.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:33.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:33.146" endtime="20210714 23:16:33.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:33.661" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:33.660" endtime="20210714 23:16:33.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:33.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:33.661" endtime="20210714 23:16:33.662"/>
</kw>
<status status="PASS" starttime="20210714 23:16:33.145" endtime="20210714 23:16:33.662"/>
</kw>
<msg timestamp="20210714 23:16:33.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:33.145" endtime="20210714 23:16:33.662"/>
</kw>
<msg timestamp="20210714 23:16:33.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:33.144" endtime="20210714 23:16:33.663"/>
</kw>
<msg timestamp="20210714 23:16:33.663" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:33.144" endtime="20210714 23:16:33.663"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:33.667" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-61523 --prefix 50020/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:34.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:34.094" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "500...</msg>
<status status="PASS" starttime="20210714 23:16:33.665" endtime="20210714 23:16:34.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:34.096" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "50020/deletetestapi/", 
            "Size": 0
        }, 
        {
            "LastModified": "2021-07-14T23:16:33.601Z", 
            "ETag": "2021-07-14T23:16:33.601Z", 
            "StorageClass": "STANDARD", 
            "Key": "50020/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:16:34.095" endtime="20210714 23:16:34.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:34.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:34.096" endtime="20210714 23:16:34.096"/>
</kw>
<status status="PASS" starttime="20210714 23:16:33.664" endtime="20210714 23:16:34.097"/>
</kw>
<msg timestamp="20210714 23:16:34.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:33.664" endtime="20210714 23:16:34.097"/>
</kw>
<msg timestamp="20210714 23:16:34.097" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "500...</msg>
<status status="PASS" starttime="20210714 23:16:33.663" endtime="20210714 23:16:34.097"/>
</kw>
<msg timestamp="20210714 23:16:34.097" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "500...</msg>
<status status="PASS" starttime="20210714 23:16:33.663" endtime="20210714 23:16:34.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:34.097" endtime="20210714 23:16:34.098"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:34.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523 --key 50020/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:34.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:34.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:34.100" endtime="20210714 23:16:34.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:34.514" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:34.513" endtime="20210714 23:16:34.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:34.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:34.514" endtime="20210714 23:16:34.515"/>
</kw>
<status status="PASS" starttime="20210714 23:16:34.099" endtime="20210714 23:16:34.515"/>
</kw>
<msg timestamp="20210714 23:16:34.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:34.099" endtime="20210714 23:16:34.515"/>
</kw>
<msg timestamp="20210714 23:16:34.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:34.098" endtime="20210714 23:16:34.515"/>
</kw>
<msg timestamp="20210714 23:16:34.516" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:34.098" endtime="20210714 23:16:34.516"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:34.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-61523 --prefix 50020/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:34.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:34.919" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "500...</msg>
<status status="PASS" starttime="20210714 23:16:34.518" endtime="20210714 23:16:34.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:34.920" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "50020/deletetestapi/", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:16:34.920" endtime="20210714 23:16:34.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:34.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:34.921" endtime="20210714 23:16:34.921"/>
</kw>
<status status="PASS" starttime="20210714 23:16:34.517" endtime="20210714 23:16:34.922"/>
</kw>
<msg timestamp="20210714 23:16:34.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:34.517" endtime="20210714 23:16:34.922"/>
</kw>
<msg timestamp="20210714 23:16:34.922" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "500...</msg>
<status status="PASS" starttime="20210714 23:16:34.516" endtime="20210714 23:16:34.922"/>
</kw>
<msg timestamp="20210714 23:16:34.922" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "500...</msg>
<status status="PASS" starttime="20210714 23:16:34.516" endtime="20210714 23:16:34.922"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:34.922" endtime="20210714 23:16:34.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>500</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20210714 23:16:34.924" level="FAIL">'{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "50020/deletetestapi/", 
            "Size": 0
        }
    ]
}' contains '500'</msg>
<status status="FAIL" starttime="20210714 23:16:34.923" endtime="20210714 23:16:34.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210714 23:16:33.135" endtime="20210714 23:16:34.924">'{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:16:33.520Z", 
            "ETag": "2021-07-14T23:16:33.520Z", 
            "StorageClass": "STANDARD", 
            "Key": "50020/deletetestapi/", 
            "Size": 0
        }
    ]
}' contains '500'</status>
</test>
<test id="s1-s9-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:34.929" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-61523/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:35.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:35.326" level="INFO">${output} =                            PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:34.927" endtime="20210714 23:16:35.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:35.327" level="INFO">                           PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:35.327" endtime="20210714 23:16:35.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:35.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:35.328" endtime="20210714 23:16:35.328"/>
</kw>
<status status="PASS" starttime="20210714 23:16:34.926" endtime="20210714 23:16:35.328"/>
</kw>
<msg timestamp="20210714 23:16:35.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:34.926" endtime="20210714 23:16:35.329"/>
</kw>
<msg timestamp="20210714 23:16:35.329" level="INFO">${output} =                            PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:34.926" endtime="20210714 23:16:35.329"/>
</kw>
<msg timestamp="20210714 23:16:35.329" level="INFO">${result} =                            PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:34.925" endtime="20210714 23:16:35.329"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:35.329" endtime="20210714 23:16:35.330"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:35.334" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523 --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:35.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:35.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:35.332" endtime="20210714 23:16:35.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:35.743" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:35.742" endtime="20210714 23:16:35.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:35.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:35.744" endtime="20210714 23:16:35.744"/>
</kw>
<status status="PASS" starttime="20210714 23:16:35.331" endtime="20210714 23:16:35.744"/>
</kw>
<msg timestamp="20210714 23:16:35.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:35.331" endtime="20210714 23:16:35.745"/>
</kw>
<msg timestamp="20210714 23:16:35.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:35.330" endtime="20210714 23:16:35.745"/>
</kw>
<msg timestamp="20210714 23:16:35.745" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:35.330" endtime="20210714 23:16:35.745"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:35.749" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-61523/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:36.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:36.155" level="INFO">${output} =                            PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:35.747" endtime="20210714 23:16:36.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:36.156" level="INFO">                           PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:36.155" endtime="20210714 23:16:36.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:36.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:36.156" endtime="20210714 23:16:36.157"/>
</kw>
<status status="PASS" starttime="20210714 23:16:35.747" endtime="20210714 23:16:36.157"/>
</kw>
<msg timestamp="20210714 23:16:36.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:35.746" endtime="20210714 23:16:36.157"/>
</kw>
<msg timestamp="20210714 23:16:36.157" level="INFO">${output} =                            PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:35.746" endtime="20210714 23:16:36.157"/>
</kw>
<msg timestamp="20210714 23:16:36.158" level="INFO">${result} =                            PRE 50020/</msg>
<status status="PASS" starttime="20210714 23:16:35.745" endtime="20210714 23:16:36.158"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:36.158" endtime="20210714 23:16:36.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:34.924" endtime="20210714 23:16:36.158"/>
</test>
<test id="s1-s9-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:36.163" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 23:16:36.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:36.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:36.161" endtime="20210714 23:16:36.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:36.166" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:36.165" endtime="20210714 23:16:36.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:36.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:36.166" endtime="20210714 23:16:36.167"/>
</kw>
<status status="PASS" starttime="20210714 23:16:36.160" endtime="20210714 23:16:36.167"/>
</kw>
<msg timestamp="20210714 23:16:36.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:36.160" endtime="20210714 23:16:36.167"/>
</kw>
<status status="PASS" starttime="20210714 23:16:36.159" endtime="20210714 23:16:36.167"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:36.171" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-61523/50020/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:36.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:36.712" level="INFO">${output} = Completed 29 Bytes/29 Bytes (197 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 23:16:36.169" endtime="20210714 23:16:36.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:36.713" level="INFO">Completed 29 Bytes/29 Bytes (197 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 23:16:36.712" endtime="20210714 23:16:36.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:36.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:36.713" endtime="20210714 23:16:36.714"/>
</kw>
<status status="PASS" starttime="20210714 23:16:36.169" endtime="20210714 23:16:36.714"/>
</kw>
<msg timestamp="20210714 23:16:36.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:36.168" endtime="20210714 23:16:36.714"/>
</kw>
<msg timestamp="20210714 23:16:36.715" level="INFO">${output} = Completed 29 Bytes/29 Bytes (197 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 23:16:36.168" endtime="20210714 23:16:36.715"/>
</kw>
<msg timestamp="20210714 23:16:36.715" level="INFO">${result} = Completed 29 Bytes/29 Bytes (197 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 23:16:36.167" endtime="20210714 23:16:36.715"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:36.719" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-61523/50020/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:37.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:37.119" level="INFO">${output} = 2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:36.717" endtime="20210714 23:16:37.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:37.121" level="INFO">2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:37.120" endtime="20210714 23:16:37.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:37.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:37.121" endtime="20210714 23:16:37.121"/>
</kw>
<status status="PASS" starttime="20210714 23:16:36.716" endtime="20210714 23:16:37.122"/>
</kw>
<msg timestamp="20210714 23:16:37.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:36.716" endtime="20210714 23:16:37.122"/>
</kw>
<msg timestamp="20210714 23:16:37.122" level="INFO">${output} = 2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:36.716" endtime="20210714 23:16:37.122"/>
</kw>
<msg timestamp="20210714 23:16:37.122" level="INFO">${result} = 2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:36.715" endtime="20210714 23:16:37.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:37.123" endtime="20210714 23:16:37.123"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:37.127" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523 --key 50020/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:37.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:37.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:37.125" endtime="20210714 23:16:37.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:37.537" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:37.536" endtime="20210714 23:16:37.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:37.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:37.537" endtime="20210714 23:16:37.538"/>
</kw>
<status status="PASS" starttime="20210714 23:16:37.125" endtime="20210714 23:16:37.538"/>
</kw>
<msg timestamp="20210714 23:16:37.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:37.124" endtime="20210714 23:16:37.538"/>
</kw>
<msg timestamp="20210714 23:16:37.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:37.124" endtime="20210714 23:16:37.539"/>
</kw>
<msg timestamp="20210714 23:16:37.539" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:37.123" endtime="20210714 23:16:37.539"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:37.543" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-61523/50020/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:37.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:37.955" level="INFO">${output} = 2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:37.541" endtime="20210714 23:16:37.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:37.956" level="INFO">2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:37.955" endtime="20210714 23:16:37.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:37.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:37.956" endtime="20210714 23:16:37.957"/>
</kw>
<status status="PASS" starttime="20210714 23:16:37.541" endtime="20210714 23:16:37.957"/>
</kw>
<msg timestamp="20210714 23:16:37.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:37.540" endtime="20210714 23:16:37.958"/>
</kw>
<msg timestamp="20210714 23:16:37.958" level="INFO">${output} = 2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:37.540" endtime="20210714 23:16:37.958"/>
</kw>
<msg timestamp="20210714 23:16:37.958" level="INFO">${result} = 2021-07-14 23:16:36          0 
2021-07-14 23:16:36         29 f1</msg>
<status status="PASS" starttime="20210714 23:16:37.539" endtime="20210714 23:16:37.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:37.958" endtime="20210714 23:16:37.959"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:37.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523 --key 50020/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:38.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:38.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:37.961" endtime="20210714 23:16:38.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:38.368" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:38.368" endtime="20210714 23:16:38.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:38.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:38.369" endtime="20210714 23:16:38.369"/>
</kw>
<status status="PASS" starttime="20210714 23:16:37.960" endtime="20210714 23:16:38.370"/>
</kw>
<msg timestamp="20210714 23:16:38.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:37.960" endtime="20210714 23:16:38.370"/>
</kw>
<msg timestamp="20210714 23:16:38.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:37.959" endtime="20210714 23:16:38.370"/>
</kw>
<msg timestamp="20210714 23:16:38.370" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:37.959" endtime="20210714 23:16:38.370"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:36.159" endtime="20210714 23:16:38.371"/>
</test>
<test id="s1-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:38.375" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 23:16:38.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:38.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:38.373" endtime="20210714 23:16:38.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:38.379" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:38.378" endtime="20210714 23:16:38.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:38.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:38.379" endtime="20210714 23:16:38.379"/>
</kw>
<status status="PASS" starttime="20210714 23:16:38.373" endtime="20210714 23:16:38.380"/>
</kw>
<msg timestamp="20210714 23:16:38.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:38.373" endtime="20210714 23:16:38.380"/>
</kw>
<status status="PASS" starttime="20210714 23:16:38.372" endtime="20210714 23:16:38.380"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:38.383" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-61523/50020/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:38.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:38.874" level="INFO">${output} = Completed 29 Bytes/29 Bytes (261 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.382" endtime="20210714 23:16:38.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:38.876" level="INFO">Completed 29 Bytes/29 Bytes (261 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.875" endtime="20210714 23:16:38.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:38.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:38.876" endtime="20210714 23:16:38.876"/>
</kw>
<status status="PASS" starttime="20210714 23:16:38.381" endtime="20210714 23:16:38.877"/>
</kw>
<msg timestamp="20210714 23:16:38.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:38.381" endtime="20210714 23:16:38.877"/>
</kw>
<msg timestamp="20210714 23:16:38.877" level="INFO">${output} = Completed 29 Bytes/29 Bytes (261 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.381" endtime="20210714 23:16:38.877"/>
</kw>
<msg timestamp="20210714 23:16:38.877" level="INFO">${result} = Completed 29 Bytes/29 Bytes (261 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-61523/50020/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.380" endtime="20210714 23:16:38.877"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:38.881" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-61523/50020/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:39.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:39.278" level="INFO">${output} = 2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.879" endtime="20210714 23:16:39.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:39.279" level="INFO">2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:39.278" endtime="20210714 23:16:39.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:39.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:39.279" endtime="20210714 23:16:39.280"/>
</kw>
<status status="PASS" starttime="20210714 23:16:38.879" endtime="20210714 23:16:39.280"/>
</kw>
<msg timestamp="20210714 23:16:39.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:38.879" endtime="20210714 23:16:39.280"/>
</kw>
<msg timestamp="20210714 23:16:39.280" level="INFO">${output} = 2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.878" endtime="20210714 23:16:39.280"/>
</kw>
<msg timestamp="20210714 23:16:39.281" level="INFO">${result} = 2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:38.878" endtime="20210714 23:16:39.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:39.281" endtime="20210714 23:16:39.281"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:39.285" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523 --key 50020/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:39.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:39.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:39.283" endtime="20210714 23:16:39.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:39.682" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:39.681" endtime="20210714 23:16:39.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:39.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:39.682" endtime="20210714 23:16:39.682"/>
</kw>
<status status="PASS" starttime="20210714 23:16:39.283" endtime="20210714 23:16:39.683"/>
</kw>
<msg timestamp="20210714 23:16:39.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:39.282" endtime="20210714 23:16:39.683"/>
</kw>
<msg timestamp="20210714 23:16:39.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:39.282" endtime="20210714 23:16:39.683"/>
</kw>
<msg timestamp="20210714 23:16:39.683" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:39.281" endtime="20210714 23:16:39.683"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:39.688" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-61523/50020/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:40.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:40.108" level="INFO">${output} = 2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:39.686" endtime="20210714 23:16:40.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:40.110" level="INFO">2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:40.109" endtime="20210714 23:16:40.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:40.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:40.110" endtime="20210714 23:16:40.110"/>
</kw>
<status status="PASS" starttime="20210714 23:16:39.685" endtime="20210714 23:16:40.111"/>
</kw>
<msg timestamp="20210714 23:16:40.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:39.685" endtime="20210714 23:16:40.111"/>
</kw>
<msg timestamp="20210714 23:16:40.111" level="INFO">${output} = 2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:39.684" endtime="20210714 23:16:40.111"/>
</kw>
<msg timestamp="20210714 23:16:40.112" level="INFO">${result} = 2021-07-14 23:16:38          0 
2021-07-14 23:16:38         29 filefile</msg>
<status status="PASS" starttime="20210714 23:16:39.684" endtime="20210714 23:16:40.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:40.112" endtime="20210714 23:16:40.112"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:40.116" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523 --key 50020/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:40.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:16:40.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:40.114" endtime="20210714 23:16:40.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:40.524" level="INFO"/>
<status status="PASS" starttime="20210714 23:16:40.524" endtime="20210714 23:16:40.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:40.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:40.525" endtime="20210714 23:16:40.525"/>
</kw>
<status status="PASS" starttime="20210714 23:16:40.114" endtime="20210714 23:16:40.525"/>
</kw>
<msg timestamp="20210714 23:16:40.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:16:40.113" endtime="20210714 23:16:40.526"/>
</kw>
<msg timestamp="20210714 23:16:40.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:16:40.113" endtime="20210714 23:16:40.526"/>
</kw>
<msg timestamp="20210714 23:16:40.526" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:16:40.112" endtime="20210714 23:16:40.526"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:38.371" endtime="20210714 23:16:40.526"/>
</test>
<test id="s1-s9-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:16:40.530" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-61523-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:16:40.948" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:16:40.948" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 23:16:40.529" endtime="20210714 23:16:40.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:16:40.949" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 23:16:40.948" endtime="20210714 23:16:40.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:16:40.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:16:40.949" endtime="20210714 23:16:40.950"/>
</kw>
<msg timestamp="20210714 23:16:40.950" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 23:16:40.528" endtime="20210714 23:16:40.950"/>
</kw>
<msg timestamp="20210714 23:16:40.950" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 23:16:40.528" endtime="20210714 23:16:40.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:16:40.951" endtime="20210714 23:16:40.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:16:40.527" endtime="20210714 23:16:40.951"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210714 23:16:31.023" endtime="20210714 23:16:40.952"/>
</suite>
<suite id="s1-s10" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s10-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s10-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:39:38.080" endtime="20210714 22:39:38.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:38.087" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:39:38.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:39:38.172" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 14 Jul 2021 22:39:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 14 Jul 2021 22:26:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20210714 22:39:38.082" endtime="20210714 22:39:38.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:39:38.173" level="INFO">HTTP/1.1 200 OK
Date: Wed, 14 Jul 2021 22:39:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 14 Jul 2021 22:26:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210714 22:39:38.172" endtime="20210714 22:39:38.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:39:38.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:39:38.173" endtime="20210714 22:39:38.174"/>
</kw>
<status status="PASS" starttime="20210714 22:39:38.081" endtime="20210714 22:39:38.174"/>
</kw>
<msg timestamp="20210714 22:39:38.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:38.081" endtime="20210714 22:39:38.174"/>
</kw>
<msg timestamp="20210714 22:39:38.175" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 14 Jul 2021 22:39:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 14 Jul 2021 22:26:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20210714 22:39:38.081" endtime="20210714 22:39:38.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:39:38.175" endtime="20210714 22:39:38.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:39:38.079" endtime="20210714 22:39:38.176"/>
</test>
<test id="s1-s10-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:39:38.177" endtime="20210714 22:39:38.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:39:38.181" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:33.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:33.830" level="INFO">${output} = 2021-07-14 22:39:39,648 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 22:39:39,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 22:39:38.179" endtime="20210714 22:40:33.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:33.831" level="INFO">2021-07-14 22:39:39,648 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 22:39:39,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 22:39:39,747 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 22:39:40,802 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-07-14 22:39:40,803 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2021-07-14 22:39:40,805 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-07-14 22:39:40,809 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-07-14 22:39:40,813 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-07-14 22:39:40,856 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-67053, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-14 22:39:40,886 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-00555, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-14 22:39:40,894 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-43755, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-14 22:39:40,903 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-91161, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-14 22:39:40,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-85828, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-14 22:39:40,925 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67053/bucket-0-85928, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,947 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00555/bucket-0-09150, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,958 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43755/bucket-0-42045, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,973 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-91161/bucket-0-31982, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,979 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-85828/bucket-0-56965, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,985 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67053/bucket-1-29685, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,991 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00555/bucket-1-03763, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:40,996 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43755/bucket-1-74544, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,002 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-91161/bucket-1-47328, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,007 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-85828/bucket-1-10250, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,013 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67053/bucket-2-59101, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,019 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00555/bucket-2-76587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,025 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43755/bucket-2-18263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,031 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-91161/bucket-2-11174, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,037 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-85828/bucket-2-56723, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,043 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67053/bucket-3-92094, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,048 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00555/bucket-3-40123, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,055 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43755/bucket-3-86619, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,061 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-91161/bucket-3-36861, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,068 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-85828/bucket-3-07692, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,073 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67053/bucket-4-04707, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,078 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00555/bucket-4-33007, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,084 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43755/bucket-4-94908, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,089 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-91161/bucket-4-03502, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,095 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-85828/bucket-4-77940, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 22:39:41,624 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-14 22:39:41,828 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 22:39:41,828 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D71C37B04C2D-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 22:39:41,829 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-07-14 22:39:41,829 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 22:39:42,837 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2021-07-14 22:39:43,838 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2021-07-14 22:39:44,838 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2021-07-14 22:39:45,839 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2021-07-14 22:39:46,839 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2021-07-14 22:39:47,840 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-07-14 22:39:48,840 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-07-14 22:39:49,841 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-07-14 22:39:50,841 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-07-14 22:39:51,842 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-07-14 22:39:52,842 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-07-14 22:39:53,843 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-07-14 22:39:54,843 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-07-14 22:39:55,844 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2021-07-14 22:39:56,845 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2021-07-14 22:39:57,845 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2021-07-14 22:39:58,846 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2021-07-14 22:39:59,847 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2021-07-14 22:40:00,847 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2021-07-14 22:40:01,847 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2021-07-14 22:40:02,848 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2021-07-14 22:40:03,849 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2021-07-14 22:40:04,849 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2021-07-14 22:40:05,849 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2021-07-14 22:40:06,850 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2021-07-14 22:40:07,850 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2021-07-14 22:40:08,851 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2021-07-14 22:40:09,851 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2021-07-14 22:40:10,852 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2021-07-14 22:40:11,852 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2021-07-14 22:40:12,853 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2021-07-14 22:40:13,853 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-07-14 22:40:14,854 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-07-14 22:40:15,854 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-07-14 22:40:16,856 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2021-07-14 22:40:17,857 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2021-07-14 22:40:18,857 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2021-07-14 22:40:19,862 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2021-07-14 22:40:20,863 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2021-07-14 22:40:21,863 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2021-07-14 22:40:22,864 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2021-07-14 22:40:23,864 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-07-14 22:40:24,865 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-07-14 22:40:25,865 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2021-07-14 22:40:26,866 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2021-07-14 22:40:27,867 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2021-07-14 22:40:28,867 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: a3b9c37a397ad4188041dd80621bdeefc46885f2
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,080
Average Time spent in bucket creation: 00:00:00,128
Average Time spent in key creation: 00:00:02,212
Average Time spent in key write: 00:00:00,768
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:53,540
***************************************************</msg>
<status status="PASS" starttime="20210714 22:40:33.831" endtime="20210714 22:40:33.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:33.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:33.832" endtime="20210714 22:40:33.832"/>
</kw>
<status status="PASS" starttime="20210714 22:39:38.179" endtime="20210714 22:40:33.833"/>
</kw>
<msg timestamp="20210714 22:40:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:39:38.178" endtime="20210714 22:40:33.833"/>
</kw>
<msg timestamp="20210714 22:40:33.833" level="INFO">${result} = 2021-07-14 22:39:39,648 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 22:39:39,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 22:39:38.178" endtime="20210714 22:40:33.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:33.834" endtime="20210714 22:40:33.834"/>
</kw>
<status status="PASS" starttime="20210714 22:40:33.833" endtime="20210714 22:40:33.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:33.834" endtime="20210714 22:40:33.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:39:38.177" endtime="20210714 22:40:33.835"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210714 22:39:38.057" endtime="20210714 22:40:33.836"/>
</suite>
<suite id="s1-s10-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s10-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:33.844" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:35.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:35.065" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210714 22:40:33.843" endtime="20210714 22:40:35.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:35.066" level="INFO">om</msg>
<status status="PASS" starttime="20210714 22:40:35.065" endtime="20210714 22:40:35.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:35.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:35.066" endtime="20210714 22:40:35.067"/>
</kw>
<status status="PASS" starttime="20210714 22:40:33.842" endtime="20210714 22:40:35.067"/>
</kw>
<msg timestamp="20210714 22:40:35.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:33.842" endtime="20210714 22:40:35.067"/>
</kw>
<msg timestamp="20210714 22:40:35.068" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210714 22:40:33.841" endtime="20210714 22:40:35.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:35.068" endtime="20210714 22:40:35.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:35.071" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:36.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:36.266" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210714 22:40:35.069" endtime="20210714 22:40:36.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:36.267" level="INFO">om</msg>
<status status="PASS" starttime="20210714 22:40:36.266" endtime="20210714 22:40:36.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:36.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:36.267" endtime="20210714 22:40:36.268"/>
</kw>
<status status="PASS" starttime="20210714 22:40:35.069" endtime="20210714 22:40:36.268"/>
</kw>
<msg timestamp="20210714 22:40:36.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:35.069" endtime="20210714 22:40:36.268"/>
</kw>
<msg timestamp="20210714 22:40:36.268" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210714 22:40:35.068" endtime="20210714 22:40:36.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:36.269" endtime="20210714 22:40:36.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:40:33.841" endtime="20210714 22:40:36.269"/>
</test>
<test id="s1-s10-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:36.274" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:37.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:37.518" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210714 22:40:36.272" endtime="20210714 22:40:37.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:37.519" level="INFO">scm</msg>
<status status="PASS" starttime="20210714 22:40:37.519" endtime="20210714 22:40:37.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:37.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:37.520" endtime="20210714 22:40:37.520"/>
</kw>
<status status="PASS" starttime="20210714 22:40:36.271" endtime="20210714 22:40:37.520"/>
</kw>
<msg timestamp="20210714 22:40:37.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:36.271" endtime="20210714 22:40:37.521"/>
</kw>
<msg timestamp="20210714 22:40:37.521" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210714 22:40:36.271" endtime="20210714 22:40:37.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:37.521" endtime="20210714 22:40:37.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:37.524" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:38.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:38.676" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210714 22:40:37.523" endtime="20210714 22:40:38.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:38.677" level="INFO">scm</msg>
<status status="PASS" starttime="20210714 22:40:38.676" endtime="20210714 22:40:38.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:38.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:38.677" endtime="20210714 22:40:38.678"/>
</kw>
<status status="PASS" starttime="20210714 22:40:37.522" endtime="20210714 22:40:38.678"/>
</kw>
<msg timestamp="20210714 22:40:38.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:37.522" endtime="20210714 22:40:38.678"/>
</kw>
<msg timestamp="20210714 22:40:38.679" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210714 22:40:37.521" endtime="20210714 22:40:38.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:38.679" endtime="20210714 22:40:38.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:40:36.270" endtime="20210714 22:40:38.679"/>
</test>
<test id="s1-s10-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:38.684" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:39.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:39.772" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210714 22:40:38.682" endtime="20210714 22:40:39.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:39.773" level="INFO">om</msg>
<status status="PASS" starttime="20210714 22:40:39.772" endtime="20210714 22:40:39.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:39.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:39.773" endtime="20210714 22:40:39.774"/>
</kw>
<status status="PASS" starttime="20210714 22:40:38.682" endtime="20210714 22:40:39.774"/>
</kw>
<msg timestamp="20210714 22:40:39.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:38.681" endtime="20210714 22:40:39.774"/>
</kw>
<msg timestamp="20210714 22:40:39.775" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210714 22:40:38.681" endtime="20210714 22:40:39.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:39.775" endtime="20210714 22:40:39.775"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:39.775" endtime="20210714 22:40:39.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:39.779" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:40.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:40.801" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210714 22:40:39.777" endtime="20210714 22:40:40.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:40.802" level="INFO">om</msg>
<status status="PASS" starttime="20210714 22:40:40.802" endtime="20210714 22:40:40.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:40.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:40.803" endtime="20210714 22:40:40.803"/>
</kw>
<status status="PASS" starttime="20210714 22:40:39.776" endtime="20210714 22:40:40.803"/>
</kw>
<msg timestamp="20210714 22:40:40.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:39.776" endtime="20210714 22:40:40.804"/>
</kw>
<msg timestamp="20210714 22:40:40.804" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210714 22:40:39.776" endtime="20210714 22:40:40.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:40.804" endtime="20210714 22:40:40.805"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:40.805" endtime="20210714 22:40:40.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:40:38.680" endtime="20210714 22:40:40.805"/>
</test>
<test id="s1-s10-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:40.809" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:41.992" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:40:41.992" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210714 22:40:40.808" endtime="20210714 22:40:41.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:41.993" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210714 22:40:41.992" endtime="20210714 22:40:41.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:41.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:41.993" endtime="20210714 22:40:41.994"/>
</kw>
<msg timestamp="20210714 22:40:41.994" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210714 22:40:40.807" endtime="20210714 22:40:41.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:41.994" endtime="20210714 22:40:41.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:41.997" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:42.984" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:40:42.984" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210714 22:40:41.995" endtime="20210714 22:40:42.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:42.986" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210714 22:40:42.985" endtime="20210714 22:40:42.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:42.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:42.986" endtime="20210714 22:40:42.986"/>
</kw>
<msg timestamp="20210714 22:40:42.987" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210714 22:40:41.995" endtime="20210714 22:40:42.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:42.987" endtime="20210714 22:40:42.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:40:40.806" endtime="20210714 22:40:42.987"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210714 22:40:33.837" endtime="20210714 22:40:42.989"/>
</suite>
<suite id="s1-s10-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:40:43.001" level="INFO">${random} = 83319</msg>
<status status="PASS" starttime="20210714 22:40:43.001" endtime="20210714 22:40:43.001"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:40:43.003" level="INFO">${source} = 83319-source</msg>
<status status="PASS" starttime="20210714 22:40:43.001" endtime="20210714 22:40:43.003"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:40:43.004" level="INFO">${target} = 83319-target</msg>
<status status="PASS" starttime="20210714 22:40:43.003" endtime="20210714 22:40:43.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:43.007" level="INFO">Running command 'ozone sh volume create 83319-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:45.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:45.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:40:43.005" endtime="20210714 22:40:45.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:45.897" level="INFO"/>
<status status="PASS" starttime="20210714 22:40:45.896" endtime="20210714 22:40:45.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:45.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:45.897" endtime="20210714 22:40:45.898"/>
</kw>
<status status="PASS" starttime="20210714 22:40:43.005" endtime="20210714 22:40:45.898"/>
</kw>
<msg timestamp="20210714 22:40:45.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:43.005" endtime="20210714 22:40:45.898"/>
</kw>
<status status="PASS" starttime="20210714 22:40:43.004" endtime="20210714 22:40:45.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:45.902" level="INFO">Running command 'ozone sh volume create 83319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:48.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:48.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:40:45.900" endtime="20210714 22:40:48.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:48.695" level="INFO"/>
<status status="PASS" starttime="20210714 22:40:48.695" endtime="20210714 22:40:48.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:48.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:48.696" endtime="20210714 22:40:48.696"/>
</kw>
<status status="PASS" starttime="20210714 22:40:45.900" endtime="20210714 22:40:48.696"/>
</kw>
<msg timestamp="20210714 22:40:48.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:45.899" endtime="20210714 22:40:48.697"/>
</kw>
<status status="PASS" starttime="20210714 22:40:45.899" endtime="20210714 22:40:48.697"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:40:48.697" endtime="20210714 22:40:48.697"/>
</kw>
<status status="PASS" starttime="20210714 22:40:43.000" endtime="20210714 22:40:48.698"/>
</kw>
<test id="s1-s10-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:40:48.699" endtime="20210714 22:40:48.699"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:48.703" level="INFO">Running command 'ozone sh bucket link 83319-source/no-such-bucket 83319-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:51.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:51.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:40:48.701" endtime="20210714 22:40:51.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:51.313" level="INFO"/>
<status status="PASS" starttime="20210714 22:40:51.312" endtime="20210714 22:40:51.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:51.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:51.313" endtime="20210714 22:40:51.314"/>
</kw>
<status status="PASS" starttime="20210714 22:40:48.700" endtime="20210714 22:40:51.314"/>
</kw>
<msg timestamp="20210714 22:40:51.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:48.700" endtime="20210714 22:40:51.314"/>
</kw>
<status status="PASS" starttime="20210714 22:40:48.699" endtime="20210714 22:40:51.314"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:51.317" level="INFO">Running command 'ozone sh key list 83319-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:53.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:40:53.969" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210714 22:40:51.315" endtime="20210714 22:40:53.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:53.970" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210714 22:40:53.969" endtime="20210714 22:40:53.970"/>
</kw>
<msg timestamp="20210714 22:40:53.970" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210714 22:40:51.314" endtime="20210714 22:40:53.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:40:53.970" endtime="20210714 22:40:53.971"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:40:48.698" endtime="20210714 22:40:53.971"/>
</test>
<test id="s1-s10-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:40:53.972" endtime="20210714 22:40:53.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:53.976" level="INFO">Running command 'ozone sh bucket link 83319-source/bucket1 83319-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:56.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:56.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:40:53.974" endtime="20210714 22:40:56.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:56.750" level="INFO"/>
<status status="PASS" starttime="20210714 22:40:56.749" endtime="20210714 22:40:56.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:56.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:56.750" endtime="20210714 22:40:56.750"/>
</kw>
<status status="PASS" starttime="20210714 22:40:53.974" endtime="20210714 22:40:56.751"/>
</kw>
<msg timestamp="20210714 22:40:56.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:53.973" endtime="20210714 22:40:56.751"/>
</kw>
<status status="PASS" starttime="20210714 22:40:53.973" endtime="20210714 22:40:56.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:56.755" level="INFO">Running command 'ozone sh bucket create 83319-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:40:59.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:40:59.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:40:56.753" endtime="20210714 22:40:59.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:40:59.455" level="INFO"/>
<status status="PASS" starttime="20210714 22:40:59.454" endtime="20210714 22:40:59.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:40:59.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:40:59.455" endtime="20210714 22:40:59.455"/>
</kw>
<status status="PASS" starttime="20210714 22:40:56.752" endtime="20210714 22:40:59.456"/>
</kw>
<msg timestamp="20210714 22:40:59.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:56.752" endtime="20210714 22:40:59.456"/>
</kw>
<status status="PASS" starttime="20210714 22:40:56.751" endtime="20210714 22:40:59.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:40:59.460" level="INFO">Running command 'ozone sh key put 83319-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:04.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:04.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:40:59.458" endtime="20210714 22:41:04.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:04.268" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:04.267" endtime="20210714 22:41:04.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:04.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:04.268" endtime="20210714 22:41:04.269"/>
</kw>
<status status="PASS" starttime="20210714 22:40:59.457" endtime="20210714 22:41:04.269"/>
</kw>
<msg timestamp="20210714 22:41:04.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:40:59.457" endtime="20210714 22:41:04.269"/>
</kw>
<status status="PASS" starttime="20210714 22:40:59.456" endtime="20210714 22:41:04.269"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:41:04.271" level="INFO">${postfix} = 48335</msg>
<status status="PASS" starttime="20210714 22:41:04.271" endtime="20210714 22:41:04.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:41:04.271" level="INFO">${tmpfile} = /tmp/tempkey-48335</msg>
<status status="PASS" starttime="20210714 22:41:04.271" endtime="20210714 22:41:04.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:04.275" level="INFO">Running command 'ozone sh key get 83319-target/link1/key1 /tmp/tempkey-48335 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:08.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:08.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:04.273" endtime="20210714 22:41:08.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:08.692" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:08.691" endtime="20210714 22:41:08.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:08.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:08.692" endtime="20210714 22:41:08.693"/>
</kw>
<status status="PASS" starttime="20210714 22:41:04.272" endtime="20210714 22:41:08.693"/>
</kw>
<msg timestamp="20210714 22:41:08.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:04.272" endtime="20210714 22:41:08.693"/>
</kw>
<status status="PASS" starttime="20210714 22:41:04.272" endtime="20210714 22:41:08.693"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210714 22:41:08.695" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-48335 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:08.698" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210714 22:41:08.694" endtime="20210714 22:41:08.698"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:08.702" level="INFO">Running command 'rm -f /tmp/tempkey-48335 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:08.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:08.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:08.700" endtime="20210714 22:41:08.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:08.705" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:08.705" endtime="20210714 22:41:08.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:08.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:08.706" endtime="20210714 22:41:08.706"/>
</kw>
<status status="PASS" starttime="20210714 22:41:08.699" endtime="20210714 22:41:08.706"/>
</kw>
<msg timestamp="20210714 22:41:08.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:08.699" endtime="20210714 22:41:08.707"/>
</kw>
<status status="PASS" starttime="20210714 22:41:08.698" endtime="20210714 22:41:08.707"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:41:08.707" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210714 22:41:08.707" endtime="20210714 22:41:08.707"/>
</kw>
<msg timestamp="20210714 22:41:08.708" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210714 22:41:04.270" endtime="20210714 22:41:08.708"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210714 22:41:08.708" endtime="20210714 22:41:08.708"/>
</kw>
<status status="PASS" starttime="20210714 22:41:04.269" endtime="20210714 22:41:08.708"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:40:53.971" endtime="20210714 22:41:08.708"/>
</test>
<test id="s1-s10-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:08.710" endtime="20210714 22:41:08.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:08.713" level="INFO">Running command 'ozone sh key put 83319-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:13.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:13.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:08.711" endtime="20210714 22:41:13.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:13.217" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:13.217" endtime="20210714 22:41:13.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:13.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:13.217" endtime="20210714 22:41:13.218"/>
</kw>
<status status="PASS" starttime="20210714 22:41:08.711" endtime="20210714 22:41:13.218"/>
</kw>
<msg timestamp="20210714 22:41:13.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:08.711" endtime="20210714 22:41:13.218"/>
</kw>
<status status="PASS" starttime="20210714 22:41:08.710" endtime="20210714 22:41:13.219"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:41:13.220" level="INFO">${postfix} = 62937</msg>
<status status="PASS" starttime="20210714 22:41:13.220" endtime="20210714 22:41:13.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:41:13.221" level="INFO">${tmpfile} = /tmp/tempkey-62937</msg>
<status status="PASS" starttime="20210714 22:41:13.220" endtime="20210714 22:41:13.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:13.224" level="INFO">Running command 'ozone sh key get 83319-source/bucket1/key2 /tmp/tempkey-62937 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:17.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:17.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:13.222" endtime="20210714 22:41:17.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:17.807" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:17.806" endtime="20210714 22:41:17.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:17.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:17.807" endtime="20210714 22:41:17.808"/>
</kw>
<status status="PASS" starttime="20210714 22:41:13.222" endtime="20210714 22:41:17.809"/>
</kw>
<msg timestamp="20210714 22:41:17.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:13.221" endtime="20210714 22:41:17.809"/>
</kw>
<status status="PASS" starttime="20210714 22:41:13.221" endtime="20210714 22:41:17.809"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210714 22:41:17.814" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-62937 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:17.816" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210714 22:41:17.810" endtime="20210714 22:41:17.816"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:17.820" level="INFO">Running command 'rm -f /tmp/tempkey-62937 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:17.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:17.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:17.818" endtime="20210714 22:41:17.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:17.823" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:17.822" endtime="20210714 22:41:17.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:17.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:17.823" endtime="20210714 22:41:17.824"/>
</kw>
<status status="PASS" starttime="20210714 22:41:17.818" endtime="20210714 22:41:17.824"/>
</kw>
<msg timestamp="20210714 22:41:17.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:17.817" endtime="20210714 22:41:17.825"/>
</kw>
<status status="PASS" starttime="20210714 22:41:17.817" endtime="20210714 22:41:17.825"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:41:17.825" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210714 22:41:17.825" endtime="20210714 22:41:17.825"/>
</kw>
<msg timestamp="20210714 22:41:17.826" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210714 22:41:13.219" endtime="20210714 22:41:17.826"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210714 22:41:17.826" endtime="20210714 22:41:17.826"/>
</kw>
<status status="PASS" starttime="20210714 22:41:13.219" endtime="20210714 22:41:17.826"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:08.709" endtime="20210714 22:41:17.826"/>
</test>
<test id="s1-s10-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:17.827" endtime="20210714 22:41:17.828"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:17.831" level="INFO">Running command 'ozone sh key list 83319-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:20.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:20.878" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210714 22:41:17.829" endtime="20210714 22:41:20.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:20.879" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210714 22:41:20.878" endtime="20210714 22:41:20.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:20.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:20.879" endtime="20210714 22:41:20.880"/>
</kw>
<status status="PASS" starttime="20210714 22:41:17.828" endtime="20210714 22:41:20.880"/>
</kw>
<msg timestamp="20210714 22:41:20.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:17.828" endtime="20210714 22:41:20.880"/>
</kw>
<msg timestamp="20210714 22:41:20.881" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20210714 22:41:17.828" endtime="20210714 22:41:20.881"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:20.884" level="INFO">Running command 'ozone sh key list 83319-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:23.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:23.878" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210714 22:41:20.882" endtime="20210714 22:41:23.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:23.880" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210714 22:41:23.879" endtime="20210714 22:41:23.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:23.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:23.880" endtime="20210714 22:41:23.880"/>
</kw>
<status status="PASS" starttime="20210714 22:41:20.881" endtime="20210714 22:41:23.881"/>
</kw>
<msg timestamp="20210714 22:41:23.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:20.881" endtime="20210714 22:41:23.881"/>
</kw>
<msg timestamp="20210714 22:41:23.881" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210714 22:41:20.881" endtime="20210714 22:41:23.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:41:23.881" endtime="20210714 22:41:23.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:41:23.882" endtime="20210714 22:41:23.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:41:23.883" endtime="20210714 22:41:23.883"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:17.827" endtime="20210714 22:41:23.883"/>
</test>
<test id="s1-s10-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:23.884" endtime="20210714 22:41:23.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:23.888" level="INFO">Running command 'ozone sh key delete 83319-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:26.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:26.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:23.886" endtime="20210714 22:41:26.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:26.809" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:26.808" endtime="20210714 22:41:26.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:26.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:26.810" endtime="20210714 22:41:26.810"/>
</kw>
<status status="PASS" starttime="20210714 22:41:23.885" endtime="20210714 22:41:26.810"/>
</kw>
<msg timestamp="20210714 22:41:26.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:23.885" endtime="20210714 22:41:26.811"/>
</kw>
<status status="PASS" starttime="20210714 22:41:23.885" endtime="20210714 22:41:26.811"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:26.814" level="INFO">Running command 'ozone sh key list 83319-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:29.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:29.762" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210714 22:41:26.812" endtime="20210714 22:41:29.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:29.764" level="INFO">key1</msg>
<status status="PASS" starttime="20210714 22:41:29.763" endtime="20210714 22:41:29.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:29.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:29.764" endtime="20210714 22:41:29.764"/>
</kw>
<status status="PASS" starttime="20210714 22:41:26.812" endtime="20210714 22:41:29.765"/>
</kw>
<msg timestamp="20210714 22:41:29.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:26.811" endtime="20210714 22:41:29.765"/>
</kw>
<msg timestamp="20210714 22:41:29.765" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210714 22:41:26.811" endtime="20210714 22:41:29.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:41:29.765" endtime="20210714 22:41:29.766"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:23.883" endtime="20210714 22:41:29.766"/>
</test>
<test id="s1-s10-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:29.767" endtime="20210714 22:41:29.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:29.770" level="INFO">Running command 'ozone sh bucket list 83319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:32.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:32.780" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210714 22:41:29.769" endtime="20210714 22:41:32.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:32.782" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:40:51.258Z",
  "modificationTime" : "2021-07-14T22:40:51.258Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:40:56.693Z",
  "modificationTime" : "2021-07-14T22:40:56.693Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210714 22:41:32.781" endtime="20210714 22:41:32.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:32.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:32.782" endtime="20210714 22:41:32.783"/>
</kw>
<status status="PASS" starttime="20210714 22:41:29.768" endtime="20210714 22:41:32.783"/>
</kw>
<msg timestamp="20210714 22:41:32.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:29.768" endtime="20210714 22:41:32.783"/>
</kw>
<msg timestamp="20210714 22:41:32.783" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210714 22:41:29.768" endtime="20210714 22:41:32.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:41:32.784" endtime="20210714 22:41:32.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:41:32.784" endtime="20210714 22:41:32.784"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:29.766" endtime="20210714 22:41:32.785"/>
</test>
<test id="s1-s10-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:32.786" endtime="20210714 22:41:32.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:32.789" level="INFO">Running command 'ozone sh bucket info 83319-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:35.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:35.638" level="INFO">${output} = 83319-source bucket1</msg>
<status status="PASS" starttime="20210714 22:41:32.788" endtime="20210714 22:41:35.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:35.639" level="INFO">83319-source bucket1</msg>
<status status="PASS" starttime="20210714 22:41:35.638" endtime="20210714 22:41:35.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:35.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:35.639" endtime="20210714 22:41:35.640"/>
</kw>
<status status="PASS" starttime="20210714 22:41:32.787" endtime="20210714 22:41:35.640"/>
</kw>
<msg timestamp="20210714 22:41:35.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:32.787" endtime="20210714 22:41:35.640"/>
</kw>
<msg timestamp="20210714 22:41:35.640" level="INFO">${result} = 83319-source bucket1</msg>
<status status="PASS" starttime="20210714 22:41:32.786" endtime="20210714 22:41:35.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:41:35.641" endtime="20210714 22:41:35.641"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:32.785" endtime="20210714 22:41:35.641"/>
</test>
<test id="s1-s10-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:35.642" endtime="20210714 22:41:35.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:35.649" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 83319-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:38.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:38.543" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:41:35.646" endtime="20210714 22:41:38.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:38.544" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:41:38.543" endtime="20210714 22:41:38.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:38.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:38.544" endtime="20210714 22:41:38.544"/>
</kw>
<status status="PASS" starttime="20210714 22:41:35.644" endtime="20210714 22:41:38.545"/>
</kw>
<msg timestamp="20210714 22:41:38.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:35.643" endtime="20210714 22:41:38.545"/>
</kw>
<status status="PASS" starttime="20210714 22:41:35.643" endtime="20210714 22:41:38.545"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:38.550" level="INFO">Running command 'ozone sh bucket getacl 83319-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:41.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:41.495" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210714 22:41:38.548" endtime="20210714 22:41:41.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:41.496" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210714 22:41:41.495" endtime="20210714 22:41:41.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:41.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:41.496" endtime="20210714 22:41:41.497"/>
</kw>
<status status="PASS" starttime="20210714 22:41:38.547" endtime="20210714 22:41:41.497"/>
</kw>
<msg timestamp="20210714 22:41:41.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:38.547" endtime="20210714 22:41:41.497"/>
</kw>
<msg timestamp="20210714 22:41:41.498" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210714 22:41:38.546" endtime="20210714 22:41:41.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:41:41.498" endtime="20210714 22:41:41.498"/>
</kw>
<status status="PASS" starttime="20210714 22:41:38.545" endtime="20210714 22:41:41.498"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:41.503" level="INFO">Running command 'ozone sh bucket getacl 83319-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:44.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:44.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:41.501" endtime="20210714 22:41:44.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:44.293" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:44.293" endtime="20210714 22:41:44.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:44.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:44.294" endtime="20210714 22:41:44.294"/>
</kw>
<status status="PASS" starttime="20210714 22:41:41.501" endtime="20210714 22:41:44.294"/>
</kw>
<msg timestamp="20210714 22:41:44.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:41.500" endtime="20210714 22:41:44.295"/>
</kw>
<msg timestamp="20210714 22:41:44.295" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210714 22:41:41.500" endtime="20210714 22:41:44.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:41:44.295" endtime="20210714 22:41:44.295"/>
</kw>
<status status="PASS" starttime="20210714 22:41:41.498" endtime="20210714 22:41:44.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:44.299" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 83319-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:46.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:46.943" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:41:44.297" endtime="20210714 22:41:46.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:46.944" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:41:46.943" endtime="20210714 22:41:46.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:46.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:46.944" endtime="20210714 22:41:46.945"/>
</kw>
<status status="PASS" starttime="20210714 22:41:44.297" endtime="20210714 22:41:46.945"/>
</kw>
<msg timestamp="20210714 22:41:46.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:44.296" endtime="20210714 22:41:46.945"/>
</kw>
<status status="PASS" starttime="20210714 22:41:44.296" endtime="20210714 22:41:46.946"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:46.951" level="INFO">Running command 'ozone sh bucket getacl 83319-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:49.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:49.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:46.949" endtime="20210714 22:41:49.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:49.878" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:49.877" endtime="20210714 22:41:49.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:49.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:49.878" endtime="20210714 22:41:49.878"/>
</kw>
<status status="PASS" starttime="20210714 22:41:46.948" endtime="20210714 22:41:49.879"/>
</kw>
<msg timestamp="20210714 22:41:49.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:46.948" endtime="20210714 22:41:49.879"/>
</kw>
<msg timestamp="20210714 22:41:49.879" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210714 22:41:46.947" endtime="20210714 22:41:49.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:41:49.879" endtime="20210714 22:41:49.880"/>
</kw>
<status status="PASS" starttime="20210714 22:41:46.946" endtime="20210714 22:41:49.880"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:49.884" level="INFO">Running command 'ozone sh bucket getacl 83319-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:52.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:52.698" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210714 22:41:49.882" endtime="20210714 22:41:52.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:52.699" level="INFO">READ</msg>
<status status="PASS" starttime="20210714 22:41:52.698" endtime="20210714 22:41:52.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:52.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:52.699" endtime="20210714 22:41:52.700"/>
</kw>
<status status="PASS" starttime="20210714 22:41:49.882" endtime="20210714 22:41:52.700"/>
</kw>
<msg timestamp="20210714 22:41:52.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:49.881" endtime="20210714 22:41:52.701"/>
</kw>
<msg timestamp="20210714 22:41:52.701" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210714 22:41:49.881" endtime="20210714 22:41:52.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:41:52.701" endtime="20210714 22:41:52.701"/>
</kw>
<status status="PASS" starttime="20210714 22:41:49.880" endtime="20210714 22:41:52.702"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:35.642" endtime="20210714 22:41:52.702"/>
</test>
<test id="s1-s10-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:41:52.703" endtime="20210714 22:41:52.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:52.707" level="INFO">Running command 'ozone sh bucket link 83319-source/bucket2 83319-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:55.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:41:55.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:52.705" endtime="20210714 22:41:55.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:55.392" level="INFO"/>
<status status="PASS" starttime="20210714 22:41:55.391" endtime="20210714 22:41:55.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:41:55.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:41:55.392" endtime="20210714 22:41:55.393"/>
</kw>
<status status="PASS" starttime="20210714 22:41:52.704" endtime="20210714 22:41:55.393"/>
</kw>
<msg timestamp="20210714 22:41:55.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:52.704" endtime="20210714 22:41:55.393"/>
</kw>
<status status="PASS" starttime="20210714 22:41:52.704" endtime="20210714 22:41:55.393"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:55.396" level="INFO">Running command 'ozone sh bucket create 83319-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:41:58.198" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:41:58.198" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210714 22:41:55.394" endtime="20210714 22:41:58.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:41:58.199" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210714 22:41:58.198" endtime="20210714 22:41:58.199"/>
</kw>
<msg timestamp="20210714 22:41:58.199" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210714 22:41:55.394" endtime="20210714 22:41:58.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:41:58.199" endtime="20210714 22:41:58.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:41:58.204" level="INFO">Running command 'ozone sh bucket create 83319-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:00.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:00.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:41:58.202" endtime="20210714 22:42:00.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:00.941" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:00.940" endtime="20210714 22:42:00.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:00.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:00.941" endtime="20210714 22:42:00.942"/>
</kw>
<status status="PASS" starttime="20210714 22:41:58.201" endtime="20210714 22:42:00.942"/>
</kw>
<msg timestamp="20210714 22:42:00.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:41:58.201" endtime="20210714 22:42:00.942"/>
</kw>
<status status="PASS" starttime="20210714 22:41:58.200" endtime="20210714 22:42:00.943"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:00.945" level="INFO">Running command 'ozone sh bucket link 83319-source/bucket1 83319-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:03.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:42:03.519" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210714 22:42:00.943" endtime="20210714 22:42:03.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:03.521" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210714 22:42:03.520" endtime="20210714 22:42:03.521"/>
</kw>
<msg timestamp="20210714 22:42:03.521" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210714 22:42:00.943" endtime="20210714 22:42:03.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:03.521" endtime="20210714 22:42:03.522"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:41:52.702" endtime="20210714 22:42:03.522"/>
</test>
<test id="s1-s10-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.523" endtime="20210714 22:42:03.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.524" endtime="20210714 22:42:03.524"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:42:03.522" endtime="20210714 22:42:03.524"/>
</test>
<test id="s1-s10-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.525" endtime="20210714 22:42:03.526"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.526" endtime="20210714 22:42:03.526"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:42:03.524" endtime="20210714 22:42:03.526"/>
</test>
<test id="s1-s10-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.527" endtime="20210714 22:42:03.527"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.528" endtime="20210714 22:42:03.528"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:42:03.526" endtime="20210714 22:42:03.528"/>
</test>
<test id="s1-s10-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:03.529" endtime="20210714 22:42:03.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:03.533" level="INFO">Running command 'ozone sh bucket link 83319-target/loop1 83319-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:06.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:06.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:03.531" endtime="20210714 22:42:06.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:06.301" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:06.300" endtime="20210714 22:42:06.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:06.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:06.301" endtime="20210714 22:42:06.302"/>
</kw>
<status status="PASS" starttime="20210714 22:42:03.530" endtime="20210714 22:42:06.302"/>
</kw>
<msg timestamp="20210714 22:42:06.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:03.530" endtime="20210714 22:42:06.303"/>
</kw>
<status status="PASS" starttime="20210714 22:42:03.530" endtime="20210714 22:42:06.303"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:06.306" level="INFO">Running command 'ozone sh bucket link 83319-target/loop2 83319-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:09.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:09.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:06.304" endtime="20210714 22:42:09.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:09.151" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:09.151" endtime="20210714 22:42:09.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:09.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:09.152" endtime="20210714 22:42:09.152"/>
</kw>
<status status="PASS" starttime="20210714 22:42:06.304" endtime="20210714 22:42:09.152"/>
</kw>
<msg timestamp="20210714 22:42:09.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:06.303" endtime="20210714 22:42:09.153"/>
</kw>
<status status="PASS" starttime="20210714 22:42:06.303" endtime="20210714 22:42:09.153"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:09.156" level="INFO">Running command 'ozone sh bucket link 83319-target/loop3 83319-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:12.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:12.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:09.155" endtime="20210714 22:42:12.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:12.055" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:12.054" endtime="20210714 22:42:12.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:12.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:12.055" endtime="20210714 22:42:12.055"/>
</kw>
<status status="PASS" starttime="20210714 22:42:09.154" endtime="20210714 22:42:12.056"/>
</kw>
<msg timestamp="20210714 22:42:12.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:09.154" endtime="20210714 22:42:12.056"/>
</kw>
<status status="PASS" starttime="20210714 22:42:09.153" endtime="20210714 22:42:12.056"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:12.059" level="INFO">Running command 'ozone sh key list 83319-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:14.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:42:14.792" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210714 22:42:12.057" endtime="20210714 22:42:14.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:14.793" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210714 22:42:14.792" endtime="20210714 22:42:14.793"/>
</kw>
<msg timestamp="20210714 22:42:14.793" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210714 22:42:12.056" endtime="20210714 22:42:14.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:14.794" endtime="20210714 22:42:14.794"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:42:03.528" endtime="20210714 22:42:14.794"/>
</test>
<test id="s1-s10-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:14.796" endtime="20210714 22:42:14.796"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:14.799" level="INFO">Running command 'ozone sh bucket link 83319-source/bucket1 83319-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:17.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:17.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:14.797" endtime="20210714 22:42:17.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:17.646" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:17.646" endtime="20210714 22:42:17.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:17.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:17.647" endtime="20210714 22:42:17.647"/>
</kw>
<status status="PASS" starttime="20210714 22:42:14.797" endtime="20210714 22:42:17.648"/>
</kw>
<msg timestamp="20210714 22:42:17.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:14.797" endtime="20210714 22:42:17.648"/>
</kw>
<status status="PASS" starttime="20210714 22:42:14.796" endtime="20210714 22:42:17.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:17.653" level="INFO">Running command 'ozone sh key put 83319-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:25.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:25.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:17.651" endtime="20210714 22:42:25.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:25.021" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:25.021" endtime="20210714 22:42:25.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:25.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:25.022" endtime="20210714 22:42:25.022"/>
</kw>
<status status="PASS" starttime="20210714 22:42:17.649" endtime="20210714 22:42:25.023"/>
</kw>
<msg timestamp="20210714 22:42:25.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:17.649" endtime="20210714 22:42:25.023"/>
</kw>
<status status="PASS" starttime="20210714 22:42:17.648" endtime="20210714 22:42:25.023"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:42:25.025" level="INFO">${postfix} = 77673</msg>
<status status="PASS" starttime="20210714 22:42:25.024" endtime="20210714 22:42:25.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:42:25.025" level="INFO">${tmpfile} = /tmp/tempkey-77673</msg>
<status status="PASS" starttime="20210714 22:42:25.025" endtime="20210714 22:42:25.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:25.029" level="INFO">Running command 'ozone sh key get 83319-target/link1/key3 /tmp/tempkey-77673 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:29.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:29.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:25.027" endtime="20210714 22:42:29.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:29.357" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:29.356" endtime="20210714 22:42:29.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:29.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:29.357" endtime="20210714 22:42:29.357"/>
</kw>
<status status="PASS" starttime="20210714 22:42:25.026" endtime="20210714 22:42:29.358"/>
</kw>
<msg timestamp="20210714 22:42:29.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:25.026" endtime="20210714 22:42:29.358"/>
</kw>
<status status="PASS" starttime="20210714 22:42:25.025" endtime="20210714 22:42:29.358"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210714 22:42:29.360" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-77673 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:29.362" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210714 22:42:29.358" endtime="20210714 22:42:29.362"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:29.366" level="INFO">Running command 'rm -f /tmp/tempkey-77673 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:29.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:29.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:29.364" endtime="20210714 22:42:29.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:29.369" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:29.369" endtime="20210714 22:42:29.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:29.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:29.369" endtime="20210714 22:42:29.370"/>
</kw>
<status status="PASS" starttime="20210714 22:42:29.364" endtime="20210714 22:42:29.370"/>
</kw>
<msg timestamp="20210714 22:42:29.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:29.363" endtime="20210714 22:42:29.370"/>
</kw>
<status status="PASS" starttime="20210714 22:42:29.363" endtime="20210714 22:42:29.371"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:42:29.371" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210714 22:42:29.371" endtime="20210714 22:42:29.371"/>
</kw>
<msg timestamp="20210714 22:42:29.372" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210714 22:42:25.024" endtime="20210714 22:42:29.372"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210714 22:42:29.372" endtime="20210714 22:42:29.372"/>
</kw>
<status status="PASS" starttime="20210714 22:42:25.023" endtime="20210714 22:42:29.372"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:42:14.795" endtime="20210714 22:42:29.372"/>
</test>
<test id="s1-s10-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:42:29.374" endtime="20210714 22:42:29.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:29.377" level="INFO">Running command 'ozone sh bucket delete 83319-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:32.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:32.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:29.375" endtime="20210714 22:42:32.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:32.084" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:32.083" endtime="20210714 22:42:32.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:32.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:32.084" endtime="20210714 22:42:32.085"/>
</kw>
<status status="PASS" starttime="20210714 22:42:29.375" endtime="20210714 22:42:32.085"/>
</kw>
<msg timestamp="20210714 22:42:32.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:29.375" endtime="20210714 22:42:32.085"/>
</kw>
<status status="PASS" starttime="20210714 22:42:29.374" endtime="20210714 22:42:32.085"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:32.089" level="INFO">Running command 'ozone sh bucket list 83319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:35.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:35.012" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210714 22:42:32.087" endtime="20210714 22:42:35.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:35.013" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:42:00.879Z",
  "modificationTime" : "2021-07-14T22:42:00.879Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:40:51.258Z",
  "modificationTime" : "2021-07-14T22:40:51.258Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:41:55.291Z",
  "modificationTime" : "2021-07-14T22:41:55.291Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:42:17.547Z",
  "modificationTime" : "2021-07-14T22:42:17.547Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:42:11.897Z",
  "modificationTime" : "2021-07-14T22:42:11.897Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:42:06.150Z",
  "modificationTime" : "2021-07-14T22:42:06.150Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-14T22:42:09.009Z",
  "modificationTime" : "2021-07-14T22:42:09.009Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83319-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210714 22:42:35.012" endtime="20210714 22:42:35.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:35.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:35.013" endtime="20210714 22:42:35.014"/>
</kw>
<status status="PASS" starttime="20210714 22:42:32.086" endtime="20210714 22:42:35.014"/>
</kw>
<msg timestamp="20210714 22:42:35.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:32.086" endtime="20210714 22:42:35.014"/>
</kw>
<msg timestamp="20210714 22:42:35.015" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "83319-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210714 22:42:32.085" endtime="20210714 22:42:35.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:35.015" endtime="20210714 22:42:35.015"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:35.019" level="INFO">Running command 'ozone sh key list 83319-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:38.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:38.085" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20210714 22:42:35.017" endtime="20210714 22:42:38.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:38.086" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20210714 22:42:38.086" endtime="20210714 22:42:38.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:38.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:38.087" endtime="20210714 22:42:38.087"/>
</kw>
<status status="PASS" starttime="20210714 22:42:35.016" endtime="20210714 22:42:38.087"/>
</kw>
<msg timestamp="20210714 22:42:38.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:35.016" endtime="20210714 22:42:38.088"/>
</kw>
<msg timestamp="20210714 22:42:38.088" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20210714 22:42:35.015" endtime="20210714 22:42:38.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:38.088" endtime="20210714 22:42:38.088"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210714 22:42:29.373" endtime="20210714 22:42:38.089"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20210714 22:40:42.990" endtime="20210714 22:42:38.090"/>
</suite>
<suite id="s1-s10-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:42:38.110" level="INFO">${random} = 96167</msg>
<status status="PASS" starttime="20210714 22:42:38.110" endtime="20210714 22:42:38.110"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:42:38.111" level="INFO">${prefix} = 96167</msg>
<status status="PASS" starttime="20210714 22:42:38.110" endtime="20210714 22:42:38.111"/>
</kw>
<status status="PASS" starttime="20210714 22:42:38.109" endtime="20210714 22:42:38.111"/>
</kw>
<test id="s1-s10-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:38.115" level="INFO">Running command 'ozone sh volume info /96167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:40.726" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:42:40.726" level="INFO">${output} = VOLUME_NOT_FOUND Volume 96167-rpcbasic is not found</msg>
<status status="PASS" starttime="20210714 22:42:38.114" endtime="20210714 22:42:40.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:40.727" level="INFO">VOLUME_NOT_FOUND Volume 96167-rpcbasic is not found</msg>
<status status="PASS" starttime="20210714 22:42:40.727" endtime="20210714 22:42:40.728"/>
</kw>
<msg timestamp="20210714 22:42:40.728" level="INFO">${result} = VOLUME_NOT_FOUND Volume 96167-rpcbasic is not found</msg>
<status status="PASS" starttime="20210714 22:42:38.113" endtime="20210714 22:42:40.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:40.728" endtime="20210714 22:42:40.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:40.732" level="INFO">Running command 'ozone sh volume create /96167-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:43.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:43.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:40.730" endtime="20210714 22:42:43.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:43.499" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:43.499" endtime="20210714 22:42:43.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:43.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:43.499" endtime="20210714 22:42:43.500"/>
</kw>
<status status="PASS" starttime="20210714 22:42:40.730" endtime="20210714 22:42:43.500"/>
</kw>
<msg timestamp="20210714 22:42:43.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:40.729" endtime="20210714 22:42:43.501"/>
</kw>
<msg timestamp="20210714 22:42:43.501" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:42:40.728" endtime="20210714 22:42:43.501"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:43.501" endtime="20210714 22:42:43.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:43.505" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="96167-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:46.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:46.588" level="INFO">${output} = {
  "metadata": {},
  "name": "96167-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:42:43.503" endtime="20210714 22:42:46.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:46.589" level="INFO">{
  "metadata": {},
  "name": "96167-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:42:43.347Z",
  "modificationTime": "2021-07-14T22:42:43.347Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:42:46.589" endtime="20210714 22:42:46.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:46.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:46.590" endtime="20210714 22:42:46.590"/>
</kw>
<status status="PASS" starttime="20210714 22:42:43.503" endtime="20210714 22:42:46.591"/>
</kw>
<msg timestamp="20210714 22:42:46.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:43.502" endtime="20210714 22:42:46.591"/>
</kw>
<msg timestamp="20210714 22:42:46.591" level="INFO">${result} = {
  "metadata": {},
  "name": "96167-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:42:43.501" endtime="20210714 22:42:46.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:46.591" endtime="20210714 22:42:46.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:46.595" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="96167-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:49.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:49.664" level="INFO">${output} = {
  "metadata": {},
  "name": "96167-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:42:46.593" endtime="20210714 22:42:49.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:49.665" level="INFO">{
  "metadata": {},
  "name": "96167-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:42:43.347Z",
  "modificationTime": "2021-07-14T22:42:43.347Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:42:49.665" endtime="20210714 22:42:49.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:49.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:49.666" endtime="20210714 22:42:49.666"/>
</kw>
<status status="PASS" starttime="20210714 22:42:46.593" endtime="20210714 22:42:49.666"/>
</kw>
<msg timestamp="20210714 22:42:49.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:46.592" endtime="20210714 22:42:49.667"/>
</kw>
<msg timestamp="20210714 22:42:49.667" level="INFO">${result} = {
  "metadata": {},
  "name": "96167-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:42:46.592" endtime="20210714 22:42:49.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:42:49.667" endtime="20210714 22:42:49.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:49.671" level="INFO">Running command 'ozone sh volume setquota /96167-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:52.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:52.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:49.669" endtime="20210714 22:42:52.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:52.473" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:52.472" endtime="20210714 22:42:52.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:52.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:52.473" endtime="20210714 22:42:52.474"/>
</kw>
<status status="PASS" starttime="20210714 22:42:49.669" endtime="20210714 22:42:52.474"/>
</kw>
<msg timestamp="20210714 22:42:52.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:49.668" endtime="20210714 22:42:52.474"/>
</kw>
<status status="PASS" starttime="20210714 22:42:49.668" endtime="20210714 22:42:52.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:52.478" level="INFO">Running command 'ozone sh volume info /96167-rpcbasic | jq -r '. | select(.name=="96167-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:55.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:55.413" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:42:52.476" endtime="20210714 22:42:55.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:55.414" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:42:55.413" endtime="20210714 22:42:55.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:55.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:55.414" endtime="20210714 22:42:55.415"/>
</kw>
<status status="PASS" starttime="20210714 22:42:52.476" endtime="20210714 22:42:55.415"/>
</kw>
<msg timestamp="20210714 22:42:55.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:52.475" endtime="20210714 22:42:55.415"/>
</kw>
<msg timestamp="20210714 22:42:55.415" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:42:52.475" endtime="20210714 22:42:55.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:42:55.416" endtime="20210714 22:42:55.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:55.420" level="INFO">Running command 'ozone sh bucket create /96167-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:42:58.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:42:58.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:42:55.417" endtime="20210714 22:42:58.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:42:58.286" level="INFO"/>
<status status="PASS" starttime="20210714 22:42:58.285" endtime="20210714 22:42:58.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:42:58.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:42:58.286" endtime="20210714 22:42:58.287"/>
</kw>
<status status="PASS" starttime="20210714 22:42:55.417" endtime="20210714 22:42:58.287"/>
</kw>
<msg timestamp="20210714 22:42:58.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:55.417" endtime="20210714 22:42:58.287"/>
</kw>
<status status="PASS" starttime="20210714 22:42:55.416" endtime="20210714 22:42:58.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:42:58.291" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:01.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:01.360" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210714 22:42:58.289" endtime="20210714 22:43:01.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:01.361" level="INFO">DISK</msg>
<status status="PASS" starttime="20210714 22:43:01.360" endtime="20210714 22:43:01.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:01.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:01.361" endtime="20210714 22:43:01.362"/>
</kw>
<status status="PASS" starttime="20210714 22:42:58.288" endtime="20210714 22:43:01.362"/>
</kw>
<msg timestamp="20210714 22:43:01.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:42:58.288" endtime="20210714 22:43:01.362"/>
</kw>
<msg timestamp="20210714 22:43:01.363" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210714 22:42:58.287" endtime="20210714 22:43:01.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:43:01.363" endtime="20210714 22:43:01.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:01.367" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:04.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:04.348" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:43:01.365" endtime="20210714 22:43:04.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:04.349" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:43:04.348" endtime="20210714 22:43:04.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:04.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:04.349" endtime="20210714 22:43:04.350"/>
</kw>
<status status="PASS" starttime="20210714 22:43:01.364" endtime="20210714 22:43:04.350"/>
</kw>
<msg timestamp="20210714 22:43:04.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:01.364" endtime="20210714 22:43:04.350"/>
</kw>
<msg timestamp="20210714 22:43:04.351" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:43:01.363" endtime="20210714 22:43:04.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:43:04.351" endtime="20210714 22:43:04.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:04.355" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:07.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:07.402" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210714 22:43:04.353" endtime="20210714 22:43:07.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:07.403" level="INFO">100</msg>
<status status="PASS" starttime="20210714 22:43:07.402" endtime="20210714 22:43:07.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:07.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:07.403" endtime="20210714 22:43:07.404"/>
</kw>
<status status="PASS" starttime="20210714 22:43:04.352" endtime="20210714 22:43:07.404"/>
</kw>
<msg timestamp="20210714 22:43:07.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:04.352" endtime="20210714 22:43:07.404"/>
</kw>
<msg timestamp="20210714 22:43:07.404" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210714 22:43:04.351" endtime="20210714 22:43:07.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:43:07.405" endtime="20210714 22:43:07.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:07.408" level="INFO">Running command 'ozone sh bucket setquota /96167-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:10.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:10.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:07.407" endtime="20210714 22:43:10.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:10.117" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:10.117" endtime="20210714 22:43:10.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:10.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:10.118" endtime="20210714 22:43:10.118"/>
</kw>
<status status="PASS" starttime="20210714 22:43:07.406" endtime="20210714 22:43:10.118"/>
</kw>
<msg timestamp="20210714 22:43:10.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:07.406" endtime="20210714 22:43:10.119"/>
</kw>
<status status="PASS" starttime="20210714 22:43:07.405" endtime="20210714 22:43:10.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:10.123" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:13.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:13.024" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:43:10.121" endtime="20210714 22:43:13.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:13.025" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210714 22:43:13.024" endtime="20210714 22:43:13.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:13.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:13.025" endtime="20210714 22:43:13.026"/>
</kw>
<status status="PASS" starttime="20210714 22:43:10.120" endtime="20210714 22:43:13.026"/>
</kw>
<msg timestamp="20210714 22:43:13.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:10.120" endtime="20210714 22:43:13.026"/>
</kw>
<msg timestamp="20210714 22:43:13.027" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:43:10.119" endtime="20210714 22:43:13.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:43:13.027" endtime="20210714 22:43:13.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:13.031" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:16.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:16.089" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210714 22:43:13.029" endtime="20210714 22:43:16.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:16.090" level="INFO">1000</msg>
<status status="PASS" starttime="20210714 22:43:16.089" endtime="20210714 22:43:16.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:16.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:16.090" endtime="20210714 22:43:16.091"/>
</kw>
<status status="PASS" starttime="20210714 22:43:13.028" endtime="20210714 22:43:16.091"/>
</kw>
<msg timestamp="20210714 22:43:16.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:13.028" endtime="20210714 22:43:16.091"/>
</kw>
<msg timestamp="20210714 22:43:16.092" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210714 22:43:13.027" endtime="20210714 22:43:16.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:43:16.092" endtime="20210714 22:43:16.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:16.096" level="INFO">Running command 'ozone sh bucket list /96167-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:19.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:19.163" level="INFO">${output} = 96167-rpcbasic</msg>
<status status="PASS" starttime="20210714 22:43:16.094" endtime="20210714 22:43:19.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:19.164" level="INFO">96167-rpcbasic</msg>
<status status="PASS" starttime="20210714 22:43:19.164" endtime="20210714 22:43:19.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:19.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:19.165" endtime="20210714 22:43:19.165"/>
</kw>
<status status="PASS" starttime="20210714 22:43:16.093" endtime="20210714 22:43:19.166"/>
</kw>
<msg timestamp="20210714 22:43:19.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:16.093" endtime="20210714 22:43:19.166"/>
</kw>
<msg timestamp="20210714 22:43:19.166" level="INFO">${result} = 96167-rpcbasic</msg>
<status status="PASS" starttime="20210714 22:43:16.092" endtime="20210714 22:43:19.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:43:19.166" endtime="20210714 22:43:19.167"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:19.171" level="INFO">Running command 'ozone sh key put /96167-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:23.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:23.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:19.169" endtime="20210714 22:43:23.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:23.761" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:23.760" endtime="20210714 22:43:23.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:23.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:23.761" endtime="20210714 22:43:23.762"/>
</kw>
<status status="PASS" starttime="20210714 22:43:19.168" endtime="20210714 22:43:23.762"/>
</kw>
<msg timestamp="20210714 22:43:23.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:19.168" endtime="20210714 22:43:23.762"/>
</kw>
<status status="PASS" starttime="20210714 22:43:19.168" endtime="20210714 22:43:23.763"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:23.766" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:23.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:23.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:23.764" endtime="20210714 22:43:23.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:23.769" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:23.769" endtime="20210714 22:43:23.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:23.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:23.769" endtime="20210714 22:43:23.770"/>
</kw>
<status status="PASS" starttime="20210714 22:43:23.764" endtime="20210714 22:43:23.770"/>
</kw>
<msg timestamp="20210714 22:43:23.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:23.763" endtime="20210714 22:43:23.770"/>
</kw>
<status status="PASS" starttime="20210714 22:43:23.763" endtime="20210714 22:43:23.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:23.773" level="INFO">Running command 'ozone sh key get /96167-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:28.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:28.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:23.772" endtime="20210714 22:43:28.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:28.197" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:28.196" endtime="20210714 22:43:28.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:28.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:28.197" endtime="20210714 22:43:28.198"/>
</kw>
<status status="PASS" starttime="20210714 22:43:23.772" endtime="20210714 22:43:28.198"/>
</kw>
<msg timestamp="20210714 22:43:28.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:23.771" endtime="20210714 22:43:28.198"/>
</kw>
<status status="PASS" starttime="20210714 22:43:23.771" endtime="20210714 22:43:28.198"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:28.202" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:28.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:28.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:28.200" endtime="20210714 22:43:28.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:28.205" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:28.204" endtime="20210714 22:43:28.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:28.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:28.205" endtime="20210714 22:43:28.205"/>
</kw>
<status status="PASS" starttime="20210714 22:43:28.199" endtime="20210714 22:43:28.206"/>
</kw>
<msg timestamp="20210714 22:43:28.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:28.199" endtime="20210714 22:43:28.206"/>
</kw>
<status status="PASS" starttime="20210714 22:43:28.199" endtime="20210714 22:43:28.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:28.210" level="INFO">Running command 'ozone sh key put -t RATIS /96167-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:33.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:33.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:28.208" endtime="20210714 22:43:33.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:33.064" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:33.064" endtime="20210714 22:43:33.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:33.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:33.065" endtime="20210714 22:43:33.065"/>
</kw>
<status status="PASS" starttime="20210714 22:43:28.208" endtime="20210714 22:43:33.066"/>
</kw>
<msg timestamp="20210714 22:43:33.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:28.208" endtime="20210714 22:43:33.066"/>
</kw>
<status status="PASS" starttime="20210714 22:43:28.207" endtime="20210714 22:43:33.066"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:33.070" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:33.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:33.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:33.068" endtime="20210714 22:43:33.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:33.073" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:33.072" endtime="20210714 22:43:33.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:33.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:33.073" endtime="20210714 22:43:33.074"/>
</kw>
<status status="PASS" starttime="20210714 22:43:33.067" endtime="20210714 22:43:33.074"/>
</kw>
<msg timestamp="20210714 22:43:33.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:33.067" endtime="20210714 22:43:33.074"/>
</kw>
<status status="PASS" starttime="20210714 22:43:33.066" endtime="20210714 22:43:33.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:33.077" level="INFO">Running command 'ozone sh key get /96167-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:37.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:37.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:33.076" endtime="20210714 22:43:37.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:37.288" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:37.288" endtime="20210714 22:43:37.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:37.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:37.289" endtime="20210714 22:43:37.289"/>
</kw>
<status status="PASS" starttime="20210714 22:43:33.075" endtime="20210714 22:43:37.290"/>
</kw>
<msg timestamp="20210714 22:43:37.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:33.075" endtime="20210714 22:43:37.290"/>
</kw>
<status status="PASS" starttime="20210714 22:43:33.074" endtime="20210714 22:43:37.290"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:37.293" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:37.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:37.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:37.291" endtime="20210714 22:43:37.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:37.296" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:37.296" endtime="20210714 22:43:37.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:37.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:37.297" endtime="20210714 22:43:37.297"/>
</kw>
<status status="PASS" starttime="20210714 22:43:37.291" endtime="20210714 22:43:37.298"/>
</kw>
<msg timestamp="20210714 22:43:37.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:37.291" endtime="20210714 22:43:37.298"/>
</kw>
<status status="PASS" starttime="20210714 22:43:37.290" endtime="20210714 22:43:37.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:37.301" level="INFO">Running command 'ozone sh key info /96167-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:40.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:40.326" level="INFO">${output} = {
  "volumeName": "96167-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:43:30.896Z",
  "modificationTime": "2021-07-14T22:43:32.562Z",
...</msg>
<status status="PASS" starttime="20210714 22:43:37.300" endtime="20210714 22:43:40.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:40.327" level="INFO">{
  "volumeName": "96167-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:43:30.896Z",
  "modificationTime": "2021-07-14T22:43:32.562Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:43:40.326" endtime="20210714 22:43:40.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:40.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:40.327" endtime="20210714 22:43:40.328"/>
</kw>
<status status="PASS" starttime="20210714 22:43:37.299" endtime="20210714 22:43:40.328"/>
</kw>
<msg timestamp="20210714 22:43:40.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:37.299" endtime="20210714 22:43:40.328"/>
</kw>
<msg timestamp="20210714 22:43:40.329" level="INFO">${result} = {
  "volumeName": "96167-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:43:30.896Z",
  "modificationTime": "2021-07-14T22:43:32.562Z",
...</msg>
<status status="PASS" starttime="20210714 22:43:37.298" endtime="20210714 22:43:40.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:43:40.329" endtime="20210714 22:43:40.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:40.332" level="INFO">Running command 'ozone sh key delete /96167-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:43.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:43.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:40.331" endtime="20210714 22:43:43.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:43.097" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:43.096" endtime="20210714 22:43:43.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:43.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:43.097" endtime="20210714 22:43:43.098"/>
</kw>
<status status="PASS" starttime="20210714 22:43:40.330" endtime="20210714 22:43:43.098"/>
</kw>
<msg timestamp="20210714 22:43:43.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:40.330" endtime="20210714 22:43:43.098"/>
</kw>
<status status="PASS" starttime="20210714 22:43:40.329" endtime="20210714 22:43:43.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:43.102" level="INFO">Running command 'ozone sh key cp /96167-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:47.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:47.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:43.100" endtime="20210714 22:43:47.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:47.895" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:47.895" endtime="20210714 22:43:47.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:47.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:47.895" endtime="20210714 22:43:47.896"/>
</kw>
<status status="PASS" starttime="20210714 22:43:43.100" endtime="20210714 22:43:47.896"/>
</kw>
<msg timestamp="20210714 22:43:47.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:43.099" endtime="20210714 22:43:47.896"/>
</kw>
<status status="PASS" starttime="20210714 22:43:43.098" endtime="20210714 22:43:47.897"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:47.900" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:47.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:47.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:47.898" endtime="20210714 22:43:47.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:47.903" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:47.903" endtime="20210714 22:43:47.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:47.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:47.903" endtime="20210714 22:43:47.904"/>
</kw>
<status status="PASS" starttime="20210714 22:43:47.898" endtime="20210714 22:43:47.904"/>
</kw>
<msg timestamp="20210714 22:43:47.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:47.897" endtime="20210714 22:43:47.904"/>
</kw>
<status status="PASS" starttime="20210714 22:43:47.897" endtime="20210714 22:43:47.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:47.908" level="INFO">Running command 'ozone sh key get /96167-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:52.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:52.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:47.906" endtime="20210714 22:43:52.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:52.078" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:52.077" endtime="20210714 22:43:52.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:52.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:52.078" endtime="20210714 22:43:52.078"/>
</kw>
<status status="PASS" starttime="20210714 22:43:47.905" endtime="20210714 22:43:52.079"/>
</kw>
<msg timestamp="20210714 22:43:52.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:47.905" endtime="20210714 22:43:52.079"/>
</kw>
<status status="PASS" starttime="20210714 22:43:47.904" endtime="20210714 22:43:52.079"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:52.082" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:52.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:52.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:52.080" endtime="20210714 22:43:52.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:52.085" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:52.085" endtime="20210714 22:43:52.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:52.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:52.086" endtime="20210714 22:43:52.086"/>
</kw>
<status status="PASS" starttime="20210714 22:43:52.080" endtime="20210714 22:43:52.086"/>
</kw>
<msg timestamp="20210714 22:43:52.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:52.080" endtime="20210714 22:43:52.087"/>
</kw>
<status status="PASS" starttime="20210714 22:43:52.079" endtime="20210714 22:43:52.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:52.090" level="INFO">Running command 'ozone sh key delete /96167-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:54.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:43:54.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:52.088" endtime="20210714 22:43:54.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:54.726" level="INFO"/>
<status status="PASS" starttime="20210714 22:43:54.725" endtime="20210714 22:43:54.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:43:54.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:43:54.726" endtime="20210714 22:43:54.727"/>
</kw>
<status status="PASS" starttime="20210714 22:43:52.088" endtime="20210714 22:43:54.727"/>
</kw>
<msg timestamp="20210714 22:43:54.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:52.087" endtime="20210714 22:43:54.727"/>
</kw>
<status status="PASS" starttime="20210714 22:43:52.087" endtime="20210714 22:43:54.727"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:54.730" level="INFO">Running command 'ozone sh key get /96167-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:43:57.491" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:43:57.491" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:43:54.728" endtime="20210714 22:43:57.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:43:57.492" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:43:57.491" endtime="20210714 22:43:57.492"/>
</kw>
<msg timestamp="20210714 22:43:57.492" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:43:54.728" endtime="20210714 22:43:57.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:43:57.493" endtime="20210714 22:43:57.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:43:57.496" level="INFO">Running command 'ozone sh key get --force /96167-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:02.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:02.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:43:57.494" endtime="20210714 22:44:02.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:02.036" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:02.035" endtime="20210714 22:44:02.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:02.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:02.036" endtime="20210714 22:44:02.037"/>
</kw>
<status status="PASS" starttime="20210714 22:43:57.494" endtime="20210714 22:44:02.037"/>
</kw>
<msg timestamp="20210714 22:44:02.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:43:57.494" endtime="20210714 22:44:02.037"/>
</kw>
<msg timestamp="20210714 22:44:02.038" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:43:57.493" endtime="20210714 22:44:02.038"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:44:02.038" endtime="20210714 22:44:02.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:02.042" level="INFO">Running command 'ozone sh key info /96167-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:04.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:04.921" level="INFO">${output} = {
  "volumeName": "96167-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:43:21.735Z",
  "modificationTime": "2021-07-14T22:43:23.264Z",
  "ozo...</msg>
<status status="PASS" starttime="20210714 22:44:02.040" endtime="20210714 22:44:04.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:04.922" level="INFO">{
  "volumeName": "96167-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:43:21.735Z",
  "modificationTime": "2021-07-14T22:43:23.264Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:44:04.921" endtime="20210714 22:44:04.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:04.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:04.922" endtime="20210714 22:44:04.923"/>
</kw>
<status status="PASS" starttime="20210714 22:44:02.039" endtime="20210714 22:44:04.923"/>
</kw>
<msg timestamp="20210714 22:44:04.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:02.039" endtime="20210714 22:44:04.923"/>
</kw>
<msg timestamp="20210714 22:44:04.923" level="INFO">${result} = {
  "volumeName": "96167-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:43:21.735Z",
  "modificationTime": "2021-07-14T22:43:23.264Z",
  "ozo...</msg>
<status status="PASS" starttime="20210714 22:44:02.038" endtime="20210714 22:44:04.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:44:04.924" endtime="20210714 22:44:04.924"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:04.927" level="INFO">Running command 'ozone sh key list /96167-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:07.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:07.768" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210714 22:44:04.926" endtime="20210714 22:44:07.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:07.770" level="INFO">key1</msg>
<status status="PASS" starttime="20210714 22:44:07.769" endtime="20210714 22:44:07.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:07.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:07.770" endtime="20210714 22:44:07.771"/>
</kw>
<status status="PASS" starttime="20210714 22:44:04.925" endtime="20210714 22:44:07.771"/>
</kw>
<msg timestamp="20210714 22:44:07.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:04.925" endtime="20210714 22:44:07.771"/>
</kw>
<msg timestamp="20210714 22:44:07.771" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210714 22:44:04.924" endtime="20210714 22:44:07.771"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:07.771" endtime="20210714 22:44:07.772"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:07.777" level="INFO">Running command 'ozone sh key rename /96167-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:10.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:10.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:07.773" endtime="20210714 22:44:10.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:10.440" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:10.439" endtime="20210714 22:44:10.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:10.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:10.440" endtime="20210714 22:44:10.441"/>
</kw>
<status status="PASS" starttime="20210714 22:44:07.773" endtime="20210714 22:44:10.441"/>
</kw>
<msg timestamp="20210714 22:44:10.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:07.773" endtime="20210714 22:44:10.441"/>
</kw>
<status status="PASS" starttime="20210714 22:44:07.772" endtime="20210714 22:44:10.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:10.445" level="INFO">Running command 'ozone sh key list /96167-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:13.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:13.408" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210714 22:44:10.443" endtime="20210714 22:44:13.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:13.409" level="INFO">key2</msg>
<status status="PASS" starttime="20210714 22:44:13.408" endtime="20210714 22:44:13.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:13.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:13.409" endtime="20210714 22:44:13.410"/>
</kw>
<status status="PASS" starttime="20210714 22:44:10.443" endtime="20210714 22:44:13.410"/>
</kw>
<msg timestamp="20210714 22:44:13.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:10.442" endtime="20210714 22:44:13.410"/>
</kw>
<msg timestamp="20210714 22:44:13.411" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210714 22:44:10.442" endtime="20210714 22:44:13.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:13.411" endtime="20210714 22:44:13.411"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:13.415" level="INFO">Running command 'ozone sh key delete /96167-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:16.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:16.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:13.413" endtime="20210714 22:44:16.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:16.216" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:16.215" endtime="20210714 22:44:16.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:16.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:16.216" endtime="20210714 22:44:16.216"/>
</kw>
<status status="PASS" starttime="20210714 22:44:13.412" endtime="20210714 22:44:16.217"/>
</kw>
<msg timestamp="20210714 22:44:16.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:13.412" endtime="20210714 22:44:16.217"/>
</kw>
<status status="PASS" starttime="20210714 22:44:13.411" endtime="20210714 22:44:16.217"/>
</kw>
<status status="PASS" starttime="20210714 22:43:19.167" endtime="20210714 22:44:16.217"/>
</kw>
<status status="PASS" starttime="20210714 22:43:19.167" endtime="20210714 22:44:16.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:16.221" level="INFO">Running command 'ozone sh volume clrquota --space-quota /96167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:18.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:18.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:16.219" endtime="20210714 22:44:18.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:18.977" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:18.976" endtime="20210714 22:44:18.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:18.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:18.977" endtime="20210714 22:44:18.978"/>
</kw>
<status status="PASS" starttime="20210714 22:44:16.218" endtime="20210714 22:44:18.978"/>
</kw>
<msg timestamp="20210714 22:44:18.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:16.218" endtime="20210714 22:44:18.978"/>
</kw>
<status status="PASS" starttime="20210714 22:44:16.217" endtime="20210714 22:44:18.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:18.982" level="INFO">Running command 'ozone sh volume info /96167-rpcbasic | jq -r '. | select(.name=="96167-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:21.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:21.976" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:18.980" endtime="20210714 22:44:21.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:21.977" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:21.976" endtime="20210714 22:44:21.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:21.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:21.977" endtime="20210714 22:44:21.978"/>
</kw>
<status status="PASS" starttime="20210714 22:44:18.980" endtime="20210714 22:44:21.978"/>
</kw>
<msg timestamp="20210714 22:44:21.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:18.980" endtime="20210714 22:44:21.978"/>
</kw>
<msg timestamp="20210714 22:44:21.978" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:18.979" endtime="20210714 22:44:21.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:21.979" endtime="20210714 22:44:21.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:21.983" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /96167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:24.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:24.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:21.981" endtime="20210714 22:44:24.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:24.710" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:24.709" endtime="20210714 22:44:24.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:24.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:24.710" endtime="20210714 22:44:24.711"/>
</kw>
<status status="PASS" starttime="20210714 22:44:21.980" endtime="20210714 22:44:24.711"/>
</kw>
<msg timestamp="20210714 22:44:24.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:21.980" endtime="20210714 22:44:24.712"/>
</kw>
<status status="PASS" starttime="20210714 22:44:21.979" endtime="20210714 22:44:24.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:24.715" level="INFO">Running command 'ozone sh volume info /96167-rpcbasic | jq -r '. | select(.name=="96167-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:27.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:27.631" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:24.714" endtime="20210714 22:44:27.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:27.632" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:27.631" endtime="20210714 22:44:27.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:27.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:27.632" endtime="20210714 22:44:27.633"/>
</kw>
<status status="PASS" starttime="20210714 22:44:24.713" endtime="20210714 22:44:27.633"/>
</kw>
<msg timestamp="20210714 22:44:27.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:24.713" endtime="20210714 22:44:27.634"/>
</kw>
<msg timestamp="20210714 22:44:27.634" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:24.712" endtime="20210714 22:44:27.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:27.634" endtime="20210714 22:44:27.634"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:27.638" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /96167-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:30.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:30.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:27.636" endtime="20210714 22:44:30.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:30.347" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:30.346" endtime="20210714 22:44:30.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:30.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:30.347" endtime="20210714 22:44:30.348"/>
</kw>
<status status="PASS" starttime="20210714 22:44:27.635" endtime="20210714 22:44:30.348"/>
</kw>
<msg timestamp="20210714 22:44:30.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:27.635" endtime="20210714 22:44:30.349"/>
</kw>
<status status="PASS" starttime="20210714 22:44:27.635" endtime="20210714 22:44:30.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:30.352" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:33.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:33.369" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:30.351" endtime="20210714 22:44:33.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:33.370" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:33.369" endtime="20210714 22:44:33.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:33.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:33.370" endtime="20210714 22:44:33.371"/>
</kw>
<status status="PASS" starttime="20210714 22:44:30.350" endtime="20210714 22:44:33.371"/>
</kw>
<msg timestamp="20210714 22:44:33.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:30.350" endtime="20210714 22:44:33.371"/>
</kw>
<msg timestamp="20210714 22:44:33.372" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:30.349" endtime="20210714 22:44:33.372"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:33.372" endtime="20210714 22:44:33.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:33.376" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /96167-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:35.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:35.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:33.374" endtime="20210714 22:44:35.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:35.986" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:35.985" endtime="20210714 22:44:35.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:35.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:35.986" endtime="20210714 22:44:35.987"/>
</kw>
<status status="PASS" starttime="20210714 22:44:33.373" endtime="20210714 22:44:35.987"/>
</kw>
<msg timestamp="20210714 22:44:35.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:33.373" endtime="20210714 22:44:35.987"/>
</kw>
<status status="PASS" starttime="20210714 22:44:33.372" endtime="20210714 22:44:35.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:35.991" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:38.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:38.818" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:35.989" endtime="20210714 22:44:38.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:38.819" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:38.818" endtime="20210714 22:44:38.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:38.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:38.819" endtime="20210714 22:44:38.820"/>
</kw>
<status status="PASS" starttime="20210714 22:44:35.988" endtime="20210714 22:44:38.820"/>
</kw>
<msg timestamp="20210714 22:44:38.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:35.988" endtime="20210714 22:44:38.820"/>
</kw>
<msg timestamp="20210714 22:44:38.821" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:35.987" endtime="20210714 22:44:38.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:38.821" endtime="20210714 22:44:38.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:38.826" level="INFO">Running command 'ozone sh bucket delete /96167-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:41.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:41.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:38.823" endtime="20210714 22:44:41.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:41.310" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:41.310" endtime="20210714 22:44:41.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:41.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:41.311" endtime="20210714 22:44:41.311"/>
</kw>
<status status="PASS" starttime="20210714 22:44:38.822" endtime="20210714 22:44:41.312"/>
</kw>
<msg timestamp="20210714 22:44:41.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:38.822" endtime="20210714 22:44:41.312"/>
</kw>
<status status="PASS" starttime="20210714 22:44:38.821" endtime="20210714 22:44:41.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:41.316" level="INFO">Running command 'ozone sh volume delete /96167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:43.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:43.984" level="INFO">${output} = Volume 96167-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210714 22:44:41.314" endtime="20210714 22:44:43.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:43.985" level="INFO">Volume 96167-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210714 22:44:43.984" endtime="20210714 22:44:43.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:43.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:43.985" endtime="20210714 22:44:43.986"/>
</kw>
<status status="PASS" starttime="20210714 22:44:41.313" endtime="20210714 22:44:43.986"/>
</kw>
<msg timestamp="20210714 22:44:43.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:41.313" endtime="20210714 22:44:43.986"/>
</kw>
<status status="PASS" starttime="20210714 22:44:41.312" endtime="20210714 22:44:43.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:43.990" level="INFO">Running command 'ozone sh volume create /96167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:46.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:46.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:43.988" endtime="20210714 22:44:46.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:46.777" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:46.777" endtime="20210714 22:44:46.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:46.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:46.778" endtime="20210714 22:44:46.778"/>
</kw>
<status status="PASS" starttime="20210714 22:44:43.988" endtime="20210714 22:44:46.778"/>
</kw>
<msg timestamp="20210714 22:44:46.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:43.987" endtime="20210714 22:44:46.779"/>
</kw>
<status status="PASS" starttime="20210714 22:44:43.987" endtime="20210714 22:44:46.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:46.783" level="INFO">Running command 'ozone sh volume info /96167-rpcbasic | jq -r '. | select(.name=="96167-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:49.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:49.854" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:46.781" endtime="20210714 22:44:49.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:49.855" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:49.855" endtime="20210714 22:44:49.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:49.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:49.856" endtime="20210714 22:44:49.856"/>
</kw>
<status status="PASS" starttime="20210714 22:44:46.780" endtime="20210714 22:44:49.856"/>
</kw>
<msg timestamp="20210714 22:44:49.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:46.780" endtime="20210714 22:44:49.857"/>
</kw>
<msg timestamp="20210714 22:44:49.857" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:46.779" endtime="20210714 22:44:49.857"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:49.857" endtime="20210714 22:44:49.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:49.861" level="INFO">Running command 'ozone sh volume info /96167-rpcbasic | jq -r '. | select(.name=="96167-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:52.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:52.867" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:49.859" endtime="20210714 22:44:52.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:52.869" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:52.868" endtime="20210714 22:44:52.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:52.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:52.869" endtime="20210714 22:44:52.870"/>
</kw>
<status status="PASS" starttime="20210714 22:44:49.859" endtime="20210714 22:44:52.870"/>
</kw>
<msg timestamp="20210714 22:44:52.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:49.859" endtime="20210714 22:44:52.870"/>
</kw>
<msg timestamp="20210714 22:44:52.871" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:49.858" endtime="20210714 22:44:52.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:52.871" endtime="20210714 22:44:52.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:52.874" level="INFO">Running command 'ozone sh bucket create /96167-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:55.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:55.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:44:52.873" endtime="20210714 22:44:55.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:55.549" level="INFO"/>
<status status="PASS" starttime="20210714 22:44:55.549" endtime="20210714 22:44:55.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:55.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:55.550" endtime="20210714 22:44:55.550"/>
</kw>
<status status="PASS" starttime="20210714 22:44:52.872" endtime="20210714 22:44:55.551"/>
</kw>
<msg timestamp="20210714 22:44:55.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:52.872" endtime="20210714 22:44:55.551"/>
</kw>
<status status="PASS" starttime="20210714 22:44:52.871" endtime="20210714 22:44:55.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:55.555" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:44:58.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:44:58.449" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:55.553" endtime="20210714 22:44:58.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:44:58.450" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:44:58.450" endtime="20210714 22:44:58.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:44:58.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:44:58.451" endtime="20210714 22:44:58.451"/>
</kw>
<status status="PASS" starttime="20210714 22:44:55.552" endtime="20210714 22:44:58.451"/>
</kw>
<msg timestamp="20210714 22:44:58.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:55.552" endtime="20210714 22:44:58.452"/>
</kw>
<msg timestamp="20210714 22:44:58.452" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:55.551" endtime="20210714 22:44:58.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:44:58.452" endtime="20210714 22:44:58.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:44:58.456" level="INFO">Running command 'ozone sh bucket info /96167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:01.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:01.385" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:44:58.454" endtime="20210714 22:45:01.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:01.386" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:45:01.386" endtime="20210714 22:45:01.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:01.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:01.387" endtime="20210714 22:45:01.387"/>
</kw>
<status status="PASS" starttime="20210714 22:44:58.454" endtime="20210714 22:45:01.387"/>
</kw>
<msg timestamp="20210714 22:45:01.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:44:58.453" endtime="20210714 22:45:01.388"/>
</kw>
<msg timestamp="20210714 22:45:01.388" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:44:58.452" endtime="20210714 22:45:01.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:01.388" endtime="20210714 22:45:01.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:01.392" level="INFO">Running command 'ozone sh bucket delete /96167-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:04.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:04.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:01.390" endtime="20210714 22:45:04.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:04.033" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:04.032" endtime="20210714 22:45:04.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:04.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:04.033" endtime="20210714 22:45:04.033"/>
</kw>
<status status="PASS" starttime="20210714 22:45:01.390" endtime="20210714 22:45:04.034"/>
</kw>
<msg timestamp="20210714 22:45:04.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:01.389" endtime="20210714 22:45:04.034"/>
</kw>
<status status="PASS" starttime="20210714 22:45:01.389" endtime="20210714 22:45:04.034"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:04.038" level="INFO">Running command 'ozone sh volume delete /96167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:06.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:06.802" level="INFO">${output} = Volume 96167-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210714 22:45:04.036" endtime="20210714 22:45:06.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:06.803" level="INFO">Volume 96167-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210714 22:45:06.802" endtime="20210714 22:45:06.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:06.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:06.803" endtime="20210714 22:45:06.804"/>
</kw>
<status status="PASS" starttime="20210714 22:45:04.035" endtime="20210714 22:45:06.804"/>
</kw>
<msg timestamp="20210714 22:45:06.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:04.035" endtime="20210714 22:45:06.804"/>
</kw>
<status status="PASS" starttime="20210714 22:45:04.034" endtime="20210714 22:45:06.804"/>
</kw>
<status status="PASS" starttime="20210714 22:42:38.112" endtime="20210714 22:45:06.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:42:38.111" endtime="20210714 22:45:06.805"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20210714 22:42:38.093" endtime="20210714 22:45:06.806"/>
</suite>
<suite id="s1-s10-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:45:06.815" level="INFO">${random} = 64520</msg>
<status status="PASS" starttime="20210714 22:45:06.814" endtime="20210714 22:45:06.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:45:06.815" level="INFO">${prefix} = 64520</msg>
<status status="PASS" starttime="20210714 22:45:06.815" endtime="20210714 22:45:06.815"/>
</kw>
<status status="PASS" starttime="20210714 22:45:06.814" endtime="20210714 22:45:06.815"/>
</kw>
<test id="s1-s10-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:45:06.816" endtime="20210714 22:45:06.817"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:06.820" level="INFO">Running command 'ozone sh volume info o3://om:9862/64520-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:09.478" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:45:09.478" level="INFO">${output} = VOLUME_NOT_FOUND Volume 64520-rpcwoport is not found</msg>
<status status="PASS" starttime="20210714 22:45:06.818" endtime="20210714 22:45:09.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:09.479" level="INFO">VOLUME_NOT_FOUND Volume 64520-rpcwoport is not found</msg>
<status status="PASS" starttime="20210714 22:45:09.479" endtime="20210714 22:45:09.479"/>
</kw>
<msg timestamp="20210714 22:45:09.480" level="INFO">${result} = VOLUME_NOT_FOUND Volume 64520-rpcwoport is not found</msg>
<status status="PASS" starttime="20210714 22:45:06.817" endtime="20210714 22:45:09.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:45:09.480" endtime="20210714 22:45:09.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:09.484" level="INFO">Running command 'ozone sh volume create o3://om:9862/64520-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:12.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:12.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:09.482" endtime="20210714 22:45:12.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:12.167" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:12.166" endtime="20210714 22:45:12.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:12.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:12.167" endtime="20210714 22:45:12.168"/>
</kw>
<status status="PASS" starttime="20210714 22:45:09.481" endtime="20210714 22:45:12.168"/>
</kw>
<msg timestamp="20210714 22:45:12.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:09.481" endtime="20210714 22:45:12.168"/>
</kw>
<msg timestamp="20210714 22:45:12.168" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:45:09.480" endtime="20210714 22:45:12.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:45:12.168" endtime="20210714 22:45:12.169"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:12.174" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="64520-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:15.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:15.042" level="INFO">${output} = {
  "metadata": {},
  "name": "64520-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" starttime="20210714 22:45:12.170" endtime="20210714 22:45:15.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:15.043" level="INFO">{
  "metadata": {},
  "name": "64520-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:45:12.117Z",
  "modificationTime": "2021-07-14T22:45:12.117Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:45:15.043" endtime="20210714 22:45:15.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:15.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:15.044" endtime="20210714 22:45:15.044"/>
</kw>
<status status="PASS" starttime="20210714 22:45:12.170" endtime="20210714 22:45:15.044"/>
</kw>
<msg timestamp="20210714 22:45:15.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:12.170" endtime="20210714 22:45:15.045"/>
</kw>
<msg timestamp="20210714 22:45:15.045" level="INFO">${result} = {
  "metadata": {},
  "name": "64520-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" starttime="20210714 22:45:12.169" endtime="20210714 22:45:15.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:45:15.045" endtime="20210714 22:45:15.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:15.049" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64520-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:17.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:17.901" level="INFO">${output} = {
  "metadata": {},
  "name": "64520-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" starttime="20210714 22:45:15.047" endtime="20210714 22:45:17.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:17.902" level="INFO">{
  "metadata": {},
  "name": "64520-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:45:12.117Z",
  "modificationTime": "2021-07-14T22:45:12.117Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:45:17.901" endtime="20210714 22:45:17.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:17.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:17.902" endtime="20210714 22:45:17.903"/>
</kw>
<status status="PASS" starttime="20210714 22:45:15.046" endtime="20210714 22:45:17.903"/>
</kw>
<msg timestamp="20210714 22:45:17.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:15.046" endtime="20210714 22:45:17.903"/>
</kw>
<msg timestamp="20210714 22:45:17.903" level="INFO">${result} = {
  "metadata": {},
  "name": "64520-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" starttime="20210714 22:45:15.045" endtime="20210714 22:45:17.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:45:17.904" endtime="20210714 22:45:17.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:17.907" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/64520-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:20.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:20.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:17.906" endtime="20210714 22:45:20.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:20.417" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:20.417" endtime="20210714 22:45:20.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:20.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:20.418" endtime="20210714 22:45:20.418"/>
</kw>
<status status="PASS" starttime="20210714 22:45:17.905" endtime="20210714 22:45:20.418"/>
</kw>
<msg timestamp="20210714 22:45:20.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:17.905" endtime="20210714 22:45:20.419"/>
</kw>
<status status="PASS" starttime="20210714 22:45:17.904" endtime="20210714 22:45:20.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:20.422" level="INFO">Running command 'ozone sh volume info o3://om:9862/64520-rpcwoport | jq -r '. | select(.name=="64520-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:23.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:23.294" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:45:20.421" endtime="20210714 22:45:23.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:23.296" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:45:23.295" endtime="20210714 22:45:23.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:23.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:23.296" endtime="20210714 22:45:23.297"/>
</kw>
<status status="PASS" starttime="20210714 22:45:20.420" endtime="20210714 22:45:23.297"/>
</kw>
<msg timestamp="20210714 22:45:23.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:20.420" endtime="20210714 22:45:23.297"/>
</kw>
<msg timestamp="20210714 22:45:23.297" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:45:20.419" endtime="20210714 22:45:23.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:23.297" endtime="20210714 22:45:23.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:23.301" level="INFO">Running command 'ozone sh bucket create o3://om:9862/64520-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:26.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:26.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:23.299" endtime="20210714 22:45:26.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:26.040" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:26.040" endtime="20210714 22:45:26.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:26.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:26.041" endtime="20210714 22:45:26.042"/>
</kw>
<status status="PASS" starttime="20210714 22:45:23.299" endtime="20210714 22:45:26.042"/>
</kw>
<msg timestamp="20210714 22:45:26.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:23.299" endtime="20210714 22:45:26.042"/>
</kw>
<status status="PASS" starttime="20210714 22:45:23.298" endtime="20210714 22:45:26.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:26.046" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:28.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:28.997" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210714 22:45:26.044" endtime="20210714 22:45:28.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:28.998" level="INFO">DISK</msg>
<status status="PASS" starttime="20210714 22:45:28.997" endtime="20210714 22:45:28.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:28.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:28.998" endtime="20210714 22:45:28.999"/>
</kw>
<status status="PASS" starttime="20210714 22:45:26.044" endtime="20210714 22:45:28.999"/>
</kw>
<msg timestamp="20210714 22:45:28.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:26.043" endtime="20210714 22:45:28.999"/>
</kw>
<msg timestamp="20210714 22:45:29.000" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210714 22:45:26.043" endtime="20210714 22:45:29.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:29.000" endtime="20210714 22:45:29.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:29.004" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:31.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:31.990" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:45:29.002" endtime="20210714 22:45:31.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:31.991" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:45:31.990" endtime="20210714 22:45:31.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:31.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:31.991" endtime="20210714 22:45:31.992"/>
</kw>
<status status="PASS" starttime="20210714 22:45:29.001" endtime="20210714 22:45:31.992"/>
</kw>
<msg timestamp="20210714 22:45:31.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:29.001" endtime="20210714 22:45:31.992"/>
</kw>
<msg timestamp="20210714 22:45:31.992" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:45:29.000" endtime="20210714 22:45:31.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:31.993" endtime="20210714 22:45:31.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:31.997" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:35.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:35.053" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210714 22:45:31.995" endtime="20210714 22:45:35.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:35.054" level="INFO">100</msg>
<status status="PASS" starttime="20210714 22:45:35.053" endtime="20210714 22:45:35.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:35.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:35.054" endtime="20210714 22:45:35.055"/>
</kw>
<status status="PASS" starttime="20210714 22:45:31.994" endtime="20210714 22:45:35.055"/>
</kw>
<msg timestamp="20210714 22:45:35.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:31.994" endtime="20210714 22:45:35.055"/>
</kw>
<msg timestamp="20210714 22:45:35.055" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210714 22:45:31.993" endtime="20210714 22:45:35.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:35.056" endtime="20210714 22:45:35.056"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:35.059" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/64520-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:37.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:37.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:35.057" endtime="20210714 22:45:37.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:37.953" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:37.952" endtime="20210714 22:45:37.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:37.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:37.953" endtime="20210714 22:45:37.954"/>
</kw>
<status status="PASS" starttime="20210714 22:45:35.057" endtime="20210714 22:45:37.954"/>
</kw>
<msg timestamp="20210714 22:45:37.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:35.057" endtime="20210714 22:45:37.954"/>
</kw>
<status status="PASS" starttime="20210714 22:45:35.056" endtime="20210714 22:45:37.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:37.959" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:40.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:40.877" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:45:37.957" endtime="20210714 22:45:40.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:40.878" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210714 22:45:40.877" endtime="20210714 22:45:40.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:40.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:40.878" endtime="20210714 22:45:40.879"/>
</kw>
<status status="PASS" starttime="20210714 22:45:37.956" endtime="20210714 22:45:40.879"/>
</kw>
<msg timestamp="20210714 22:45:40.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:37.956" endtime="20210714 22:45:40.879"/>
</kw>
<msg timestamp="20210714 22:45:40.880" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:45:37.955" endtime="20210714 22:45:40.880"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:40.880" endtime="20210714 22:45:40.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:40.884" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:43.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:43.840" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210714 22:45:40.882" endtime="20210714 22:45:43.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:43.841" level="INFO">1000</msg>
<status status="PASS" starttime="20210714 22:45:43.841" endtime="20210714 22:45:43.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:43.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:43.842" endtime="20210714 22:45:43.842"/>
</kw>
<status status="PASS" starttime="20210714 22:45:40.881" endtime="20210714 22:45:43.842"/>
</kw>
<msg timestamp="20210714 22:45:43.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:40.881" endtime="20210714 22:45:43.843"/>
</kw>
<msg timestamp="20210714 22:45:43.843" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210714 22:45:40.880" endtime="20210714 22:45:43.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:43.843" endtime="20210714 22:45:43.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:43.847" level="INFO">Running command 'ozone sh bucket list o3://om:9862/64520-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:46.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:46.642" level="INFO">${output} = 64520-rpcwoport</msg>
<status status="PASS" starttime="20210714 22:45:43.845" endtime="20210714 22:45:46.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:46.643" level="INFO">64520-rpcwoport</msg>
<status status="PASS" starttime="20210714 22:45:46.643" endtime="20210714 22:45:46.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:46.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:46.644" endtime="20210714 22:45:46.644"/>
</kw>
<status status="PASS" starttime="20210714 22:45:43.845" endtime="20210714 22:45:46.645"/>
</kw>
<msg timestamp="20210714 22:45:46.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:43.844" endtime="20210714 22:45:46.645"/>
</kw>
<msg timestamp="20210714 22:45:46.645" level="INFO">${result} = 64520-rpcwoport</msg>
<status status="PASS" starttime="20210714 22:45:43.843" endtime="20210714 22:45:46.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:45:46.645" endtime="20210714 22:45:46.646"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:46.650" level="INFO">Running command 'ozone sh key put o3://om:9862/64520-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:53.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:53.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:46.648" endtime="20210714 22:45:53.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:53.799" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:53.798" endtime="20210714 22:45:53.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:53.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:53.799" endtime="20210714 22:45:53.800"/>
</kw>
<status status="PASS" starttime="20210714 22:45:46.647" endtime="20210714 22:45:53.800"/>
</kw>
<msg timestamp="20210714 22:45:53.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:46.647" endtime="20210714 22:45:53.800"/>
</kw>
<status status="PASS" starttime="20210714 22:45:46.647" endtime="20210714 22:45:53.800"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:53.804" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:53.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:53.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:53.802" endtime="20210714 22:45:53.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:53.807" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:53.806" endtime="20210714 22:45:53.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:53.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:53.807" endtime="20210714 22:45:53.807"/>
</kw>
<status status="PASS" starttime="20210714 22:45:53.801" endtime="20210714 22:45:53.808"/>
</kw>
<msg timestamp="20210714 22:45:53.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:53.801" endtime="20210714 22:45:53.808"/>
</kw>
<status status="PASS" starttime="20210714 22:45:53.801" endtime="20210714 22:45:53.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:53.811" level="INFO">Running command 'ozone sh key get o3://om:9862/64520-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:58.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:58.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:53.810" endtime="20210714 22:45:58.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:58.355" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:58.355" endtime="20210714 22:45:58.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:58.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:58.356" endtime="20210714 22:45:58.356"/>
</kw>
<status status="PASS" starttime="20210714 22:45:53.809" endtime="20210714 22:45:58.357"/>
</kw>
<msg timestamp="20210714 22:45:58.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:53.809" endtime="20210714 22:45:58.357"/>
</kw>
<status status="PASS" starttime="20210714 22:45:53.808" endtime="20210714 22:45:58.357"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:58.360" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:45:58.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:45:58.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:58.358" endtime="20210714 22:45:58.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:45:58.363" level="INFO"/>
<status status="PASS" starttime="20210714 22:45:58.363" endtime="20210714 22:45:58.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:45:58.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:45:58.364" endtime="20210714 22:45:58.364"/>
</kw>
<status status="PASS" starttime="20210714 22:45:58.358" endtime="20210714 22:45:58.364"/>
</kw>
<msg timestamp="20210714 22:45:58.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:58.358" endtime="20210714 22:45:58.365"/>
</kw>
<status status="PASS" starttime="20210714 22:45:58.357" endtime="20210714 22:45:58.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:45:58.368" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/64520-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:02.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:02.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:45:58.366" endtime="20210714 22:46:02.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:02.984" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:02.984" endtime="20210714 22:46:02.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:02.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:02.985" endtime="20210714 22:46:02.985"/>
</kw>
<status status="PASS" starttime="20210714 22:45:58.366" endtime="20210714 22:46:02.985"/>
</kw>
<msg timestamp="20210714 22:46:02.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:45:58.366" endtime="20210714 22:46:02.986"/>
</kw>
<status status="PASS" starttime="20210714 22:45:58.365" endtime="20210714 22:46:02.986"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:02.989" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:02.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:02.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:02.988" endtime="20210714 22:46:02.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:02.993" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:02.992" endtime="20210714 22:46:02.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:02.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:02.993" endtime="20210714 22:46:02.993"/>
</kw>
<status status="PASS" starttime="20210714 22:46:02.987" endtime="20210714 22:46:02.994"/>
</kw>
<msg timestamp="20210714 22:46:02.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:02.987" endtime="20210714 22:46:02.994"/>
</kw>
<status status="PASS" starttime="20210714 22:46:02.986" endtime="20210714 22:46:02.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:02.997" level="INFO">Running command 'ozone sh key get o3://om:9862/64520-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:07.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:07.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:02.995" endtime="20210714 22:46:07.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:07.488" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:07.488" endtime="20210714 22:46:07.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:07.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:07.489" endtime="20210714 22:46:07.489"/>
</kw>
<status status="PASS" starttime="20210714 22:46:02.995" endtime="20210714 22:46:07.490"/>
</kw>
<msg timestamp="20210714 22:46:07.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:02.995" endtime="20210714 22:46:07.490"/>
</kw>
<status status="PASS" starttime="20210714 22:46:02.994" endtime="20210714 22:46:07.490"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:07.493" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:07.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:07.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:07.491" endtime="20210714 22:46:07.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:07.496" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:07.496" endtime="20210714 22:46:07.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:07.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:07.497" endtime="20210714 22:46:07.497"/>
</kw>
<status status="PASS" starttime="20210714 22:46:07.491" endtime="20210714 22:46:07.497"/>
</kw>
<msg timestamp="20210714 22:46:07.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:07.491" endtime="20210714 22:46:07.497"/>
</kw>
<status status="PASS" starttime="20210714 22:46:07.490" endtime="20210714 22:46:07.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:07.501" level="INFO">Running command 'ozone sh key info o3://om:9862/64520-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:10.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:10.497" level="INFO">${output} = {
  "volumeName": "64520-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:46:01.042Z",
  "modificationTime": "2021-07-14T22:46:02.604Z",...</msg>
<status status="PASS" starttime="20210714 22:46:07.499" endtime="20210714 22:46:10.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:10.498" level="INFO">{
  "volumeName": "64520-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:46:01.042Z",
  "modificationTime": "2021-07-14T22:46:02.604Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:46:10.497" endtime="20210714 22:46:10.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:10.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:10.498" endtime="20210714 22:46:10.499"/>
</kw>
<status status="PASS" starttime="20210714 22:46:07.499" endtime="20210714 22:46:10.499"/>
</kw>
<msg timestamp="20210714 22:46:10.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:07.499" endtime="20210714 22:46:10.499"/>
</kw>
<msg timestamp="20210714 22:46:10.499" level="INFO">${result} = {
  "volumeName": "64520-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:46:01.042Z",
  "modificationTime": "2021-07-14T22:46:02.604Z",...</msg>
<status status="PASS" starttime="20210714 22:46:07.498" endtime="20210714 22:46:10.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:46:10.500" endtime="20210714 22:46:10.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:10.503" level="INFO">Running command 'ozone sh key delete o3://om:9862/64520-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:13.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:13.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:10.501" endtime="20210714 22:46:13.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:13.232" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:13.231" endtime="20210714 22:46:13.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:13.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:13.232" endtime="20210714 22:46:13.233"/>
</kw>
<status status="PASS" starttime="20210714 22:46:10.501" endtime="20210714 22:46:13.233"/>
</kw>
<msg timestamp="20210714 22:46:13.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:10.501" endtime="20210714 22:46:13.233"/>
</kw>
<status status="PASS" starttime="20210714 22:46:10.500" endtime="20210714 22:46:13.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:13.237" level="INFO">Running command 'ozone sh key cp o3://om:9862/64520-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:17.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:17.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:13.235" endtime="20210714 22:46:17.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:17.980" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:17.979" endtime="20210714 22:46:17.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:17.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:17.980" endtime="20210714 22:46:17.981"/>
</kw>
<status status="PASS" starttime="20210714 22:46:13.234" endtime="20210714 22:46:17.981"/>
</kw>
<msg timestamp="20210714 22:46:17.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:13.234" endtime="20210714 22:46:17.981"/>
</kw>
<status status="PASS" starttime="20210714 22:46:13.234" endtime="20210714 22:46:17.981"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:17.985" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:17.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:17.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:17.983" endtime="20210714 22:46:17.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:17.988" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:17.988" endtime="20210714 22:46:17.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:17.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:17.988" endtime="20210714 22:46:17.989"/>
</kw>
<status status="PASS" starttime="20210714 22:46:17.982" endtime="20210714 22:46:17.989"/>
</kw>
<msg timestamp="20210714 22:46:17.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:17.982" endtime="20210714 22:46:17.989"/>
</kw>
<status status="PASS" starttime="20210714 22:46:17.982" endtime="20210714 22:46:17.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:17.993" level="INFO">Running command 'ozone sh key get o3://om:9862/64520-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:22.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:22.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:17.991" endtime="20210714 22:46:22.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:22.357" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:22.356" endtime="20210714 22:46:22.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:22.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:22.357" endtime="20210714 22:46:22.358"/>
</kw>
<status status="PASS" starttime="20210714 22:46:17.991" endtime="20210714 22:46:22.358"/>
</kw>
<msg timestamp="20210714 22:46:22.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:17.990" endtime="20210714 22:46:22.358"/>
</kw>
<status status="PASS" starttime="20210714 22:46:17.990" endtime="20210714 22:46:22.359"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:22.362" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:22.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:22.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:22.360" endtime="20210714 22:46:22.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:22.365" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:22.365" endtime="20210714 22:46:22.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:22.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:22.365" endtime="20210714 22:46:22.366"/>
</kw>
<status status="PASS" starttime="20210714 22:46:22.359" endtime="20210714 22:46:22.366"/>
</kw>
<msg timestamp="20210714 22:46:22.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:22.359" endtime="20210714 22:46:22.366"/>
</kw>
<status status="PASS" starttime="20210714 22:46:22.359" endtime="20210714 22:46:22.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:22.370" level="INFO">Running command 'ozone sh key delete o3://om:9862/64520-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:25.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:25.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:22.368" endtime="20210714 22:46:25.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:25.227" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:25.227" endtime="20210714 22:46:25.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:25.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:25.228" endtime="20210714 22:46:25.228"/>
</kw>
<status status="PASS" starttime="20210714 22:46:22.367" endtime="20210714 22:46:25.229"/>
</kw>
<msg timestamp="20210714 22:46:25.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:22.367" endtime="20210714 22:46:25.229"/>
</kw>
<status status="PASS" starttime="20210714 22:46:22.367" endtime="20210714 22:46:25.229"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:25.232" level="INFO">Running command 'ozone sh key get o3://om:9862/64520-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:27.885" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:46:27.885" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:46:25.230" endtime="20210714 22:46:27.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:27.886" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:46:27.886" endtime="20210714 22:46:27.886"/>
</kw>
<msg timestamp="20210714 22:46:27.887" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:46:25.229" endtime="20210714 22:46:27.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:46:27.887" endtime="20210714 22:46:27.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:27.891" level="INFO">Running command 'ozone sh key get --force o3://om:9862/64520-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:32.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:32.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:27.889" endtime="20210714 22:46:32.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:32.183" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:32.182" endtime="20210714 22:46:32.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:32.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:32.183" endtime="20210714 22:46:32.184"/>
</kw>
<status status="PASS" starttime="20210714 22:46:27.888" endtime="20210714 22:46:32.184"/>
</kw>
<msg timestamp="20210714 22:46:32.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:27.888" endtime="20210714 22:46:32.184"/>
</kw>
<msg timestamp="20210714 22:46:32.185" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:46:27.887" endtime="20210714 22:46:32.185"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:46:32.185" endtime="20210714 22:46:32.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:32.189" level="INFO">Running command 'ozone sh key info o3://om:9862/64520-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:35.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:35.073" level="INFO">${output} = {
  "volumeName": "64520-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:45:49.489Z",
  "modificationTime": "2021-07-14T22:45:53.367Z",
  "oz...</msg>
<status status="PASS" starttime="20210714 22:46:32.187" endtime="20210714 22:46:35.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:35.074" level="INFO">{
  "volumeName": "64520-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:45:49.489Z",
  "modificationTime": "2021-07-14T22:45:53.367Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20210714 22:46:35.073" endtime="20210714 22:46:35.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:35.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:35.074" endtime="20210714 22:46:35.075"/>
</kw>
<status status="PASS" starttime="20210714 22:46:32.186" endtime="20210714 22:46:35.075"/>
</kw>
<msg timestamp="20210714 22:46:35.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:32.186" endtime="20210714 22:46:35.075"/>
</kw>
<msg timestamp="20210714 22:46:35.076" level="INFO">${result} = {
  "volumeName": "64520-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:45:49.489Z",
  "modificationTime": "2021-07-14T22:45:53.367Z",
  "oz...</msg>
<status status="PASS" starttime="20210714 22:46:32.185" endtime="20210714 22:46:35.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:46:35.076" endtime="20210714 22:46:35.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:35.080" level="INFO">Running command 'ozone sh key list o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:38.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:38.093" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210714 22:46:35.078" endtime="20210714 22:46:38.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:38.094" level="INFO">key1</msg>
<status status="PASS" starttime="20210714 22:46:38.093" endtime="20210714 22:46:38.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:38.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:38.094" endtime="20210714 22:46:38.095"/>
</kw>
<status status="PASS" starttime="20210714 22:46:35.077" endtime="20210714 22:46:38.095"/>
</kw>
<msg timestamp="20210714 22:46:38.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:35.077" endtime="20210714 22:46:38.095"/>
</kw>
<msg timestamp="20210714 22:46:38.096" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210714 22:46:35.076" endtime="20210714 22:46:38.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:46:38.096" endtime="20210714 22:46:38.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:38.100" level="INFO">Running command 'ozone sh key rename o3://om:9862/64520-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:40.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:40.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:38.098" endtime="20210714 22:46:40.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:40.837" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:40.836" endtime="20210714 22:46:40.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:40.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:40.837" endtime="20210714 22:46:40.837"/>
</kw>
<status status="PASS" starttime="20210714 22:46:38.097" endtime="20210714 22:46:40.838"/>
</kw>
<msg timestamp="20210714 22:46:40.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:38.097" endtime="20210714 22:46:40.838"/>
</kw>
<status status="PASS" starttime="20210714 22:46:38.096" endtime="20210714 22:46:40.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:40.841" level="INFO">Running command 'ozone sh key list o3://om:9862/64520-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:43.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:43.765" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210714 22:46:40.840" endtime="20210714 22:46:43.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:43.766" level="INFO">key2</msg>
<status status="PASS" starttime="20210714 22:46:43.765" endtime="20210714 22:46:43.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:43.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:43.766" endtime="20210714 22:46:43.767"/>
</kw>
<status status="PASS" starttime="20210714 22:46:40.839" endtime="20210714 22:46:43.767"/>
</kw>
<msg timestamp="20210714 22:46:43.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:40.839" endtime="20210714 22:46:43.768"/>
</kw>
<msg timestamp="20210714 22:46:43.768" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210714 22:46:40.838" endtime="20210714 22:46:43.768"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:46:43.768" endtime="20210714 22:46:43.768"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:43.772" level="INFO">Running command 'ozone sh key delete o3://om:9862/64520-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:46.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:46.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:43.770" endtime="20210714 22:46:46.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:46.552" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:46.551" endtime="20210714 22:46:46.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:46.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:46.552" endtime="20210714 22:46:46.552"/>
</kw>
<status status="PASS" starttime="20210714 22:46:43.769" endtime="20210714 22:46:46.553"/>
</kw>
<msg timestamp="20210714 22:46:46.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:43.769" endtime="20210714 22:46:46.553"/>
</kw>
<status status="PASS" starttime="20210714 22:46:43.769" endtime="20210714 22:46:46.553"/>
</kw>
<status status="PASS" starttime="20210714 22:45:46.646" endtime="20210714 22:46:46.553"/>
</kw>
<status status="PASS" starttime="20210714 22:45:46.646" endtime="20210714 22:46:46.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:46.557" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/64520-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:49.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:49.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:46.555" endtime="20210714 22:46:49.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:49.266" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:49.265" endtime="20210714 22:46:49.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:49.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:49.266" endtime="20210714 22:46:49.266"/>
</kw>
<status status="PASS" starttime="20210714 22:46:46.554" endtime="20210714 22:46:49.267"/>
</kw>
<msg timestamp="20210714 22:46:49.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:46.554" endtime="20210714 22:46:49.267"/>
</kw>
<status status="PASS" starttime="20210714 22:46:46.553" endtime="20210714 22:46:49.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:49.271" level="INFO">Running command 'ozone sh volume info o3://om:9862/64520-rpcwoport | jq -r '. | select(.name=="64520-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:52.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:52.198" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:46:49.269" endtime="20210714 22:46:52.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:52.199" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:46:52.199" endtime="20210714 22:46:52.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:52.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:52.200" endtime="20210714 22:46:52.201"/>
</kw>
<status status="PASS" starttime="20210714 22:46:49.269" endtime="20210714 22:46:52.201"/>
</kw>
<msg timestamp="20210714 22:46:52.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:49.268" endtime="20210714 22:46:52.201"/>
</kw>
<msg timestamp="20210714 22:46:52.202" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:46:49.267" endtime="20210714 22:46:52.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:46:52.202" endtime="20210714 22:46:52.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:52.206" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/64520-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:54.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:54.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:52.204" endtime="20210714 22:46:54.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:54.972" level="INFO"/>
<status status="PASS" starttime="20210714 22:46:54.971" endtime="20210714 22:46:54.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:54.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:54.972" endtime="20210714 22:46:54.973"/>
</kw>
<status status="PASS" starttime="20210714 22:46:52.203" endtime="20210714 22:46:54.973"/>
</kw>
<msg timestamp="20210714 22:46:54.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:52.203" endtime="20210714 22:46:54.973"/>
</kw>
<status status="PASS" starttime="20210714 22:46:52.202" endtime="20210714 22:46:54.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:54.977" level="INFO">Running command 'ozone sh volume info o3://om:9862/64520-rpcwoport | jq -r '. | select(.name=="64520-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:46:57.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:46:57.831" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:46:54.975" endtime="20210714 22:46:57.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:46:57.832" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:46:57.831" endtime="20210714 22:46:57.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:46:57.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:46:57.832" endtime="20210714 22:46:57.833"/>
</kw>
<status status="PASS" starttime="20210714 22:46:54.975" endtime="20210714 22:46:57.833"/>
</kw>
<msg timestamp="20210714 22:46:57.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:54.975" endtime="20210714 22:46:57.833"/>
</kw>
<msg timestamp="20210714 22:46:57.834" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:46:54.974" endtime="20210714 22:46:57.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:46:57.834" endtime="20210714 22:46:57.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:46:57.838" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/64520-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:00.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:00.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:46:57.836" endtime="20210714 22:47:00.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:00.519" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:00.519" endtime="20210714 22:47:00.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:00.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:00.520" endtime="20210714 22:47:00.520"/>
</kw>
<status status="PASS" starttime="20210714 22:46:57.835" endtime="20210714 22:47:00.520"/>
</kw>
<msg timestamp="20210714 22:47:00.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:46:57.835" endtime="20210714 22:47:00.521"/>
</kw>
<status status="PASS" starttime="20210714 22:46:57.834" endtime="20210714 22:47:00.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:00.524" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:03.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:03.317" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:47:00.523" endtime="20210714 22:47:03.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:03.318" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:47:03.317" endtime="20210714 22:47:03.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:03.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:03.318" endtime="20210714 22:47:03.319"/>
</kw>
<status status="PASS" starttime="20210714 22:47:00.522" endtime="20210714 22:47:03.319"/>
</kw>
<msg timestamp="20210714 22:47:03.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:00.522" endtime="20210714 22:47:03.319"/>
</kw>
<msg timestamp="20210714 22:47:03.320" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:47:00.521" endtime="20210714 22:47:03.320"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:47:03.320" endtime="20210714 22:47:03.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:03.324" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/64520-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:06.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:06.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:03.322" endtime="20210714 22:47:06.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:06.071" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:06.070" endtime="20210714 22:47:06.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:06.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:06.071" endtime="20210714 22:47:06.072"/>
</kw>
<status status="PASS" starttime="20210714 22:47:03.322" endtime="20210714 22:47:06.072"/>
</kw>
<msg timestamp="20210714 22:47:06.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:03.321" endtime="20210714 22:47:06.072"/>
</kw>
<status status="PASS" starttime="20210714 22:47:03.320" endtime="20210714 22:47:06.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:06.076" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:08.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:08.840" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:47:06.074" endtime="20210714 22:47:08.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:08.841" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:47:08.841" endtime="20210714 22:47:08.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:08.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:08.842" endtime="20210714 22:47:08.842"/>
</kw>
<status status="PASS" starttime="20210714 22:47:06.074" endtime="20210714 22:47:08.843"/>
</kw>
<msg timestamp="20210714 22:47:08.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:06.074" endtime="20210714 22:47:08.843"/>
</kw>
<msg timestamp="20210714 22:47:08.843" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:47:06.073" endtime="20210714 22:47:08.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:47:08.843" endtime="20210714 22:47:08.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:08.847" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/64520-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:11.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:11.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:08.845" endtime="20210714 22:47:11.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:11.520" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:11.520" endtime="20210714 22:47:11.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:11.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:11.520" endtime="20210714 22:47:11.521"/>
</kw>
<status status="PASS" starttime="20210714 22:47:08.845" endtime="20210714 22:47:11.521"/>
</kw>
<msg timestamp="20210714 22:47:11.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:08.845" endtime="20210714 22:47:11.522"/>
</kw>
<status status="PASS" starttime="20210714 22:47:08.844" endtime="20210714 22:47:11.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:11.525" level="INFO">Running command 'ozone sh volume delete o3://om:9862/64520-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:14.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:14.252" level="INFO">${output} = Volume 64520-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210714 22:47:11.523" endtime="20210714 22:47:14.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:14.254" level="INFO">Volume 64520-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210714 22:47:14.253" endtime="20210714 22:47:14.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:14.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:14.254" endtime="20210714 22:47:14.254"/>
</kw>
<status status="PASS" starttime="20210714 22:47:11.523" endtime="20210714 22:47:14.255"/>
</kw>
<msg timestamp="20210714 22:47:14.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:11.523" endtime="20210714 22:47:14.255"/>
</kw>
<status status="PASS" starttime="20210714 22:47:11.522" endtime="20210714 22:47:14.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:14.260" level="INFO">Running command 'ozone sh volume create o3://om:9862/64520-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:16.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:16.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:14.258" endtime="20210714 22:47:16.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:16.859" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:16.858" endtime="20210714 22:47:16.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:16.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:16.859" endtime="20210714 22:47:16.859"/>
</kw>
<status status="PASS" starttime="20210714 22:47:14.257" endtime="20210714 22:47:16.860"/>
</kw>
<msg timestamp="20210714 22:47:16.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:14.256" endtime="20210714 22:47:16.860"/>
</kw>
<status status="PASS" starttime="20210714 22:47:14.256" endtime="20210714 22:47:16.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:16.864" level="INFO">Running command 'ozone sh volume info o3://om:9862/64520-rpcwoport | jq -r '. | select(.name=="64520-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:19.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:19.727" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:47:16.862" endtime="20210714 22:47:19.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:19.729" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:47:19.728" endtime="20210714 22:47:19.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:19.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:19.729" endtime="20210714 22:47:19.729"/>
</kw>
<status status="PASS" starttime="20210714 22:47:16.862" endtime="20210714 22:47:19.730"/>
</kw>
<msg timestamp="20210714 22:47:19.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:16.861" endtime="20210714 22:47:19.730"/>
</kw>
<msg timestamp="20210714 22:47:19.730" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:47:16.860" endtime="20210714 22:47:19.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:47:19.730" endtime="20210714 22:47:19.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:19.735" level="INFO">Running command 'ozone sh volume info o3://om:9862/64520-rpcwoport | jq -r '. | select(.name=="64520-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:22.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:22.561" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:47:19.733" endtime="20210714 22:47:22.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:22.563" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:47:22.562" endtime="20210714 22:47:22.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:22.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:22.563" endtime="20210714 22:47:22.564"/>
</kw>
<status status="PASS" starttime="20210714 22:47:19.732" endtime="20210714 22:47:22.564"/>
</kw>
<msg timestamp="20210714 22:47:22.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:19.732" endtime="20210714 22:47:22.564"/>
</kw>
<msg timestamp="20210714 22:47:22.564" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:47:19.731" endtime="20210714 22:47:22.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:47:22.565" endtime="20210714 22:47:22.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:22.568" level="INFO">Running command 'ozone sh bucket create o3://om:9862/64520-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:25.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:25.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:22.566" endtime="20210714 22:47:25.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:25.271" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:25.271" endtime="20210714 22:47:25.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:25.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:25.272" endtime="20210714 22:47:25.272"/>
</kw>
<status status="PASS" starttime="20210714 22:47:22.566" endtime="20210714 22:47:25.273"/>
</kw>
<msg timestamp="20210714 22:47:25.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:22.566" endtime="20210714 22:47:25.273"/>
</kw>
<status status="PASS" starttime="20210714 22:47:22.565" endtime="20210714 22:47:25.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:25.276" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:28.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:28.357" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:47:25.275" endtime="20210714 22:47:28.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:28.358" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:47:28.357" endtime="20210714 22:47:28.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:28.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:28.359" endtime="20210714 22:47:28.359"/>
</kw>
<status status="PASS" starttime="20210714 22:47:25.274" endtime="20210714 22:47:28.359"/>
</kw>
<msg timestamp="20210714 22:47:28.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:25.274" endtime="20210714 22:47:28.360"/>
</kw>
<msg timestamp="20210714 22:47:28.360" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:47:25.273" endtime="20210714 22:47:28.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:47:28.360" endtime="20210714 22:47:28.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:28.364" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64520-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:31.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:31.306" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:47:28.362" endtime="20210714 22:47:31.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:31.307" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:47:31.306" endtime="20210714 22:47:31.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:31.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:31.307" endtime="20210714 22:47:31.308"/>
</kw>
<status status="PASS" starttime="20210714 22:47:28.362" endtime="20210714 22:47:31.308"/>
</kw>
<msg timestamp="20210714 22:47:31.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:28.361" endtime="20210714 22:47:31.308"/>
</kw>
<msg timestamp="20210714 22:47:31.309" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:47:28.361" endtime="20210714 22:47:31.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:47:31.309" endtime="20210714 22:47:31.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:31.313" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/64520-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:33.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:33.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:31.311" endtime="20210714 22:47:33.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:33.950" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:33.949" endtime="20210714 22:47:33.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:33.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:33.950" endtime="20210714 22:47:33.950"/>
</kw>
<status status="PASS" starttime="20210714 22:47:31.310" endtime="20210714 22:47:33.951"/>
</kw>
<msg timestamp="20210714 22:47:33.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:31.310" endtime="20210714 22:47:33.951"/>
</kw>
<status status="PASS" starttime="20210714 22:47:31.309" endtime="20210714 22:47:33.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:33.954" level="INFO">Running command 'ozone sh volume delete o3://om:9862/64520-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:36.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:36.570" level="INFO">${output} = Volume 64520-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210714 22:47:33.953" endtime="20210714 22:47:36.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:36.571" level="INFO">Volume 64520-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210714 22:47:36.570" endtime="20210714 22:47:36.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:36.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:36.571" endtime="20210714 22:47:36.572"/>
</kw>
<status status="PASS" starttime="20210714 22:47:33.952" endtime="20210714 22:47:36.572"/>
</kw>
<msg timestamp="20210714 22:47:36.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:33.952" endtime="20210714 22:47:36.572"/>
</kw>
<status status="PASS" starttime="20210714 22:47:33.951" endtime="20210714 22:47:36.573"/>
</kw>
<status status="PASS" starttime="20210714 22:45:06.817" endtime="20210714 22:47:36.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:45:06.816" endtime="20210714 22:47:36.573"/>
</test>
<test id="s1-s10-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:47:36.574" endtime="20210714 22:47:36.575"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:36.579" level="INFO">Running command 'ozone sh volume create o3://om:9862/64520-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:39.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:39.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:36.577" endtime="20210714 22:47:39.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:39.218" level="INFO"/>
<status status="PASS" starttime="20210714 22:47:39.217" endtime="20210714 22:47:39.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:39.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:39.218" endtime="20210714 22:47:39.219"/>
</kw>
<status status="PASS" starttime="20210714 22:47:36.576" endtime="20210714 22:47:39.219"/>
</kw>
<msg timestamp="20210714 22:47:39.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:36.576" endtime="20210714 22:47:39.220"/>
</kw>
<status status="PASS" starttime="20210714 22:47:36.575" endtime="20210714 22:47:39.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:39.223" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64520-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:42.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:42.075" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:47:39.221" endtime="20210714 22:47:42.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:42.076" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:47:42.076" endtime="20210714 22:47:42.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:42.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:42.077" endtime="20210714 22:47:42.077"/>
</kw>
<status status="PASS" starttime="20210714 22:47:39.221" endtime="20210714 22:47:42.077"/>
</kw>
<msg timestamp="20210714 22:47:42.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:39.221" endtime="20210714 22:47:42.078"/>
</kw>
<msg timestamp="20210714 22:47:42.078" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:47:39.220" endtime="20210714 22:47:42.078"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:47:42.078" endtime="20210714 22:47:42.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:42.082" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/64520-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:44.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:44.782" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210714 22:47:42.080" endtime="20210714 22:47:44.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:44.783" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210714 22:47:44.782" endtime="20210714 22:47:44.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:44.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:44.783" endtime="20210714 22:47:44.784"/>
</kw>
<status status="PASS" starttime="20210714 22:47:42.080" endtime="20210714 22:47:44.784"/>
</kw>
<msg timestamp="20210714 22:47:44.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:42.080" endtime="20210714 22:47:44.784"/>
</kw>
<msg timestamp="20210714 22:47:44.785" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210714 22:47:42.079" endtime="20210714 22:47:44.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:44.788" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64520-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:47.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:47.621" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:47:44.786" endtime="20210714 22:47:47.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:47.622" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:47:47.621" endtime="20210714 22:47:47.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:47.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:47.622" endtime="20210714 22:47:47.623"/>
</kw>
<status status="PASS" starttime="20210714 22:47:44.786" endtime="20210714 22:47:47.623"/>
</kw>
<msg timestamp="20210714 22:47:47.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:44.785" endtime="20210714 22:47:47.623"/>
</kw>
<msg timestamp="20210714 22:47:47.623" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:47:44.785" endtime="20210714 22:47:47.624"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:47:47.624" endtime="20210714 22:47:47.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:47.639" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/64520-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:50.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:50.332" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:47:47.637" endtime="20210714 22:47:50.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:50.333" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:47:50.333" endtime="20210714 22:47:50.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:50.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:50.334" endtime="20210714 22:47:50.334"/>
</kw>
<status status="PASS" starttime="20210714 22:47:47.626" endtime="20210714 22:47:50.334"/>
</kw>
<msg timestamp="20210714 22:47:50.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:47.626" endtime="20210714 22:47:50.335"/>
</kw>
<msg timestamp="20210714 22:47:50.335" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:47:47.625" endtime="20210714 22:47:50.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:50.338" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64520-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:53.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:53.403" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:47:50.336" endtime="20210714 22:47:53.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:53.404" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:47:53.404" endtime="20210714 22:47:53.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:53.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:53.405" endtime="20210714 22:47:53.405"/>
</kw>
<status status="PASS" starttime="20210714 22:47:50.336" endtime="20210714 22:47:53.406"/>
</kw>
<msg timestamp="20210714 22:47:53.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:50.336" endtime="20210714 22:47:53.406"/>
</kw>
<msg timestamp="20210714 22:47:53.406" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:47:50.335" endtime="20210714 22:47:53.406"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:47:53.406" endtime="20210714 22:47:53.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:53.410" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/64520-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:56.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:56.011" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:47:53.409" endtime="20210714 22:47:56.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:56.012" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:47:56.011" endtime="20210714 22:47:56.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:56.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:56.012" endtime="20210714 22:47:56.013"/>
</kw>
<status status="PASS" starttime="20210714 22:47:53.408" endtime="20210714 22:47:56.013"/>
</kw>
<msg timestamp="20210714 22:47:56.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:53.408" endtime="20210714 22:47:56.013"/>
</kw>
<msg timestamp="20210714 22:47:56.014" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:47:53.407" endtime="20210714 22:47:56.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:56.017" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64520-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:47:58.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:47:58.917" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210714 22:47:56.015" endtime="20210714 22:47:58.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:47:58.919" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:47:58.918" endtime="20210714 22:47:58.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:47:58.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:47:58.919" endtime="20210714 22:47:58.920"/>
</kw>
<status status="PASS" starttime="20210714 22:47:56.015" endtime="20210714 22:47:58.920"/>
</kw>
<msg timestamp="20210714 22:47:58.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:56.014" endtime="20210714 22:47:58.920"/>
</kw>
<msg timestamp="20210714 22:47:58.920" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210714 22:47:56.014" endtime="20210714 22:47:58.920"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:47:58.921" endtime="20210714 22:47:58.921"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:47:58.921" endtime="20210714 22:47:58.922"/>
</kw>
<status status="PASS" starttime="20210714 22:47:36.575" endtime="20210714 22:47:58.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:47:36.574" endtime="20210714 22:47:58.922"/>
</test>
<test id="s1-s10-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:47:58.924" endtime="20210714 22:47:58.924"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:47:58.928" level="INFO">Running command 'ozone sh bucket create o3://om:9862/64520-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:01.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:01.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:47:58.926" endtime="20210714 22:48:01.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:01.644" level="INFO"/>
<status status="PASS" starttime="20210714 22:48:01.643" endtime="20210714 22:48:01.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:01.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:01.644" endtime="20210714 22:48:01.645"/>
</kw>
<status status="PASS" starttime="20210714 22:47:58.926" endtime="20210714 22:48:01.645"/>
</kw>
<msg timestamp="20210714 22:48:01.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:47:58.925" endtime="20210714 22:48:01.645"/>
</kw>
<status status="PASS" starttime="20210714 22:47:58.925" endtime="20210714 22:48:01.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:01.650" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64520-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:04.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:04.546" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:01.647" endtime="20210714 22:48:04.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:04.548" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:04.547" endtime="20210714 22:48:04.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:04.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:04.548" endtime="20210714 22:48:04.549"/>
</kw>
<status status="PASS" starttime="20210714 22:48:01.647" endtime="20210714 22:48:04.549"/>
</kw>
<msg timestamp="20210714 22:48:04.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:01.646" endtime="20210714 22:48:04.549"/>
</kw>
<msg timestamp="20210714 22:48:04.549" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:01.646" endtime="20210714 22:48:04.550"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:04.550" endtime="20210714 22:48:04.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:04.554" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/64520-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:07.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:07.373" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210714 22:48:04.552" endtime="20210714 22:48:07.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:07.374" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210714 22:48:07.374" endtime="20210714 22:48:07.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:07.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:07.375" endtime="20210714 22:48:07.375"/>
</kw>
<status status="PASS" starttime="20210714 22:48:04.551" endtime="20210714 22:48:07.375"/>
</kw>
<msg timestamp="20210714 22:48:07.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:04.551" endtime="20210714 22:48:07.376"/>
</kw>
<msg timestamp="20210714 22:48:07.376" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210714 22:48:04.550" endtime="20210714 22:48:07.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:07.379" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64520-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:10.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:10.279" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:07.378" endtime="20210714 22:48:10.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:10.281" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:10.280" endtime="20210714 22:48:10.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:10.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:10.281" endtime="20210714 22:48:10.281"/>
</kw>
<status status="PASS" starttime="20210714 22:48:07.377" endtime="20210714 22:48:10.282"/>
</kw>
<msg timestamp="20210714 22:48:10.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:07.377" endtime="20210714 22:48:10.282"/>
</kw>
<msg timestamp="20210714 22:48:10.282" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:07.376" endtime="20210714 22:48:10.282"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:10.282" endtime="20210714 22:48:10.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:10.287" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/64520-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:12.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:12.922" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:48:10.285" endtime="20210714 22:48:12.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:12.923" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:48:12.922" endtime="20210714 22:48:12.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:12.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:12.923" endtime="20210714 22:48:12.924"/>
</kw>
<status status="PASS" starttime="20210714 22:48:10.284" endtime="20210714 22:48:12.924"/>
</kw>
<msg timestamp="20210714 22:48:12.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:10.284" endtime="20210714 22:48:12.924"/>
</kw>
<msg timestamp="20210714 22:48:12.925" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:48:10.283" endtime="20210714 22:48:12.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:12.928" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64520-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:15.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:15.767" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:12.926" endtime="20210714 22:48:15.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:15.768" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:15.767" endtime="20210714 22:48:15.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:15.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:15.768" endtime="20210714 22:48:15.769"/>
</kw>
<status status="PASS" starttime="20210714 22:48:12.926" endtime="20210714 22:48:15.769"/>
</kw>
<msg timestamp="20210714 22:48:15.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:12.926" endtime="20210714 22:48:15.769"/>
</kw>
<msg timestamp="20210714 22:48:15.770" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:12.925" endtime="20210714 22:48:15.770"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:15.770" endtime="20210714 22:48:15.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:15.774" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/64520-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:18.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:18.523" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:15.772" endtime="20210714 22:48:18.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:18.524" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:18.523" endtime="20210714 22:48:18.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:18.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:18.524" endtime="20210714 22:48:18.525"/>
</kw>
<status status="PASS" starttime="20210714 22:48:15.771" endtime="20210714 22:48:18.525"/>
</kw>
<msg timestamp="20210714 22:48:18.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:15.771" endtime="20210714 22:48:18.525"/>
</kw>
<msg timestamp="20210714 22:48:18.525" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:15.771" endtime="20210714 22:48:18.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:18.529" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64520-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:21.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:21.305" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210714 22:48:18.527" endtime="20210714 22:48:21.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:21.306" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:21.305" endtime="20210714 22:48:21.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:21.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:21.306" endtime="20210714 22:48:21.307"/>
</kw>
<status status="PASS" starttime="20210714 22:48:18.527" endtime="20210714 22:48:21.307"/>
</kw>
<msg timestamp="20210714 22:48:21.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:18.526" endtime="20210714 22:48:21.307"/>
</kw>
<msg timestamp="20210714 22:48:21.308" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210714 22:48:18.526" endtime="20210714 22:48:21.308"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:21.308" endtime="20210714 22:48:21.308"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:21.308" endtime="20210714 22:48:21.309"/>
</kw>
<status status="PASS" starttime="20210714 22:47:58.924" endtime="20210714 22:48:21.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:47:58.923" endtime="20210714 22:48:21.309"/>
</test>
<test id="s1-s10-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:48:21.310" endtime="20210714 22:48:21.311"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:21.314" level="INFO">Running command 'ozone sh key put o3://om:9862/64520-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:25.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:25.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:48:21.313" endtime="20210714 22:48:25.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:25.975" level="INFO"/>
<status status="PASS" starttime="20210714 22:48:25.974" endtime="20210714 22:48:25.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:25.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:25.975" endtime="20210714 22:48:25.975"/>
</kw>
<status status="PASS" starttime="20210714 22:48:21.312" endtime="20210714 22:48:25.976"/>
</kw>
<msg timestamp="20210714 22:48:25.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:21.312" endtime="20210714 22:48:25.976"/>
</kw>
<status status="PASS" starttime="20210714 22:48:21.311" endtime="20210714 22:48:25.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:25.979" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64520-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:28.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:28.860" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:25.978" endtime="20210714 22:48:28.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:28.861" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:28.860" endtime="20210714 22:48:28.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:28.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:28.861" endtime="20210714 22:48:28.862"/>
</kw>
<status status="PASS" starttime="20210714 22:48:25.977" endtime="20210714 22:48:28.862"/>
</kw>
<msg timestamp="20210714 22:48:28.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:25.977" endtime="20210714 22:48:28.863"/>
</kw>
<msg timestamp="20210714 22:48:28.863" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:25.976" endtime="20210714 22:48:28.863"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:28.863" endtime="20210714 22:48:28.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:28.867" level="INFO">Running command 'ozone sh key addacl o3://om:9862/64520-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:31.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:31.448" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:48:28.865" endtime="20210714 22:48:31.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:31.449" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:48:31.448" endtime="20210714 22:48:31.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:31.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:31.449" endtime="20210714 22:48:31.450"/>
</kw>
<status status="PASS" starttime="20210714 22:48:28.864" endtime="20210714 22:48:31.450"/>
</kw>
<msg timestamp="20210714 22:48:31.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:28.864" endtime="20210714 22:48:31.450"/>
</kw>
<msg timestamp="20210714 22:48:31.451" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210714 22:48:28.864" endtime="20210714 22:48:31.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:31.454" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64520-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:34.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:34.402" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:31.452" endtime="20210714 22:48:34.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:34.403" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:34.402" endtime="20210714 22:48:34.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:34.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:34.403" endtime="20210714 22:48:34.404"/>
</kw>
<status status="PASS" starttime="20210714 22:48:31.452" endtime="20210714 22:48:34.404"/>
</kw>
<msg timestamp="20210714 22:48:34.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:31.452" endtime="20210714 22:48:34.404"/>
</kw>
<msg timestamp="20210714 22:48:34.405" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:31.451" endtime="20210714 22:48:34.405"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:34.405" endtime="20210714 22:48:34.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:34.409" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/64520-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:37.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:37.040" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:48:34.407" endtime="20210714 22:48:37.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:37.042" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:48:37.041" endtime="20210714 22:48:37.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:37.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:37.042" endtime="20210714 22:48:37.042"/>
</kw>
<status status="PASS" starttime="20210714 22:48:34.407" endtime="20210714 22:48:37.043"/>
</kw>
<msg timestamp="20210714 22:48:37.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:34.406" endtime="20210714 22:48:37.043"/>
</kw>
<msg timestamp="20210714 22:48:37.043" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210714 22:48:34.406" endtime="20210714 22:48:37.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:37.047" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64520-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:39.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:39.704" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:37.045" endtime="20210714 22:48:39.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:39.706" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:39.705" endtime="20210714 22:48:39.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:39.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:39.706" endtime="20210714 22:48:39.707"/>
</kw>
<status status="PASS" starttime="20210714 22:48:37.044" endtime="20210714 22:48:39.707"/>
</kw>
<msg timestamp="20210714 22:48:39.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:37.044" endtime="20210714 22:48:39.707"/>
</kw>
<msg timestamp="20210714 22:48:39.707" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:48:37.043" endtime="20210714 22:48:39.707"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:39.707" endtime="20210714 22:48:39.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:39.711" level="INFO">Running command 'ozone sh key setacl o3://om:9862/64520-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:42.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:42.452" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:39.709" endtime="20210714 22:48:42.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:42.453" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:42.452" endtime="20210714 22:48:42.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:42.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:42.453" endtime="20210714 22:48:42.454"/>
</kw>
<status status="PASS" starttime="20210714 22:48:39.709" endtime="20210714 22:48:42.454"/>
</kw>
<msg timestamp="20210714 22:48:42.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:39.709" endtime="20210714 22:48:42.454"/>
</kw>
<msg timestamp="20210714 22:48:42.455" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:39.708" endtime="20210714 22:48:42.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:42.458" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64520-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:45.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:45.440" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210714 22:48:42.456" endtime="20210714 22:48:45.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:45.441" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:45.441" endtime="20210714 22:48:45.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:45.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:45.442" endtime="20210714 22:48:45.442"/>
</kw>
<status status="PASS" starttime="20210714 22:48:42.456" endtime="20210714 22:48:45.442"/>
</kw>
<msg timestamp="20210714 22:48:45.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:42.455" endtime="20210714 22:48:45.443"/>
</kw>
<msg timestamp="20210714 22:48:45.443" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210714 22:48:42.455" endtime="20210714 22:48:45.443"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:45.443" endtime="20210714 22:48:45.443"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:45.444" endtime="20210714 22:48:45.444"/>
</kw>
<status status="PASS" starttime="20210714 22:48:21.311" endtime="20210714 22:48:45.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:48:21.309" endtime="20210714 22:48:45.445"/>
</test>
<test id="s1-s10-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:48:45.446" endtime="20210714 22:48:45.446"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:45.450" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:48.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:48.296" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210714 22:48:45.448" endtime="20210714 22:48:48.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:48.297" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210714 22:48:48.296" endtime="20210714 22:48:48.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:48.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:48.297" endtime="20210714 22:48:48.298"/>
</kw>
<status status="PASS" starttime="20210714 22:48:45.448" endtime="20210714 22:48:48.298"/>
</kw>
<msg timestamp="20210714 22:48:48.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:45.448" endtime="20210714 22:48:48.298"/>
</kw>
<status status="PASS" starttime="20210714 22:48:45.447" endtime="20210714 22:48:48.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:48.303" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:51.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:51.161" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210714 22:48:48.301" endtime="20210714 22:48:51.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:51.163" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:51.162" endtime="20210714 22:48:51.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:51.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:51.163" endtime="20210714 22:48:51.163"/>
</kw>
<status status="PASS" starttime="20210714 22:48:48.300" endtime="20210714 22:48:51.164"/>
</kw>
<msg timestamp="20210714 22:48:51.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:48.299" endtime="20210714 22:48:51.164"/>
</kw>
<msg timestamp="20210714 22:48:51.164" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210714 22:48:48.299" endtime="20210714 22:48:51.164"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:51.164" endtime="20210714 22:48:51.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:51.169" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:53.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:53.931" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210714 22:48:51.167" endtime="20210714 22:48:53.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:53.933" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210714 22:48:53.932" endtime="20210714 22:48:53.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:53.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:53.933" endtime="20210714 22:48:53.933"/>
</kw>
<status status="PASS" starttime="20210714 22:48:51.166" endtime="20210714 22:48:53.934"/>
</kw>
<msg timestamp="20210714 22:48:53.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:51.166" endtime="20210714 22:48:53.934"/>
</kw>
<msg timestamp="20210714 22:48:53.934" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210714 22:48:51.165" endtime="20210714 22:48:53.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:53.937" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:56.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:56.849" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210714 22:48:53.936" endtime="20210714 22:48:56.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:56.850" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:48:56.849" endtime="20210714 22:48:56.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:56.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:56.850" endtime="20210714 22:48:56.851"/>
</kw>
<status status="PASS" starttime="20210714 22:48:53.935" endtime="20210714 22:48:56.851"/>
</kw>
<msg timestamp="20210714 22:48:56.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:53.935" endtime="20210714 22:48:56.851"/>
</kw>
<msg timestamp="20210714 22:48:56.851" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210714 22:48:53.934" endtime="20210714 22:48:56.851"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:48:56.851" endtime="20210714 22:48:56.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:56.856" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:48:59.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:48:59.558" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:56.854" endtime="20210714 22:48:59.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:48:59.559" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:59.559" endtime="20210714 22:48:59.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:48:59.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:48:59.560" endtime="20210714 22:48:59.560"/>
</kw>
<status status="PASS" starttime="20210714 22:48:56.853" endtime="20210714 22:48:59.560"/>
</kw>
<msg timestamp="20210714 22:48:59.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:56.853" endtime="20210714 22:48:59.560"/>
</kw>
<msg timestamp="20210714 22:48:59.561" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210714 22:48:56.852" endtime="20210714 22:48:59.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:48:59.564" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:02.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:02.524" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210714 22:48:59.562" endtime="20210714 22:49:02.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:02.525" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:49:02.524" endtime="20210714 22:49:02.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:02.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:02.525" endtime="20210714 22:49:02.526"/>
</kw>
<status status="PASS" starttime="20210714 22:48:59.562" endtime="20210714 22:49:02.526"/>
</kw>
<msg timestamp="20210714 22:49:02.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:48:59.562" endtime="20210714 22:49:02.526"/>
</kw>
<msg timestamp="20210714 22:49:02.527" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210714 22:48:59.561" endtime="20210714 22:49:02.527"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:49:02.527" endtime="20210714 22:49:02.527"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:49:02.527" endtime="20210714 22:49:02.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:02.531" level="INFO">Running command 'ozone sh key put o3://om:9862/64520-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:07.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:07.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:02.529" endtime="20210714 22:49:07.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:07.085" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:07.085" endtime="20210714 22:49:07.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:07.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:07.086" endtime="20210714 22:49:07.086"/>
</kw>
<status status="PASS" starttime="20210714 22:49:02.529" endtime="20210714 22:49:07.086"/>
</kw>
<msg timestamp="20210714 22:49:07.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:02.529" endtime="20210714 22:49:07.087"/>
</kw>
<status status="PASS" starttime="20210714 22:49:02.528" endtime="20210714 22:49:07.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:07.090" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64520-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:09.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:09.935" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:49:07.088" endtime="20210714 22:49:09.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:09.936" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210714 22:49:09.935" endtime="20210714 22:49:09.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:09.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:09.936" endtime="20210714 22:49:09.937"/>
</kw>
<status status="PASS" starttime="20210714 22:49:07.088" endtime="20210714 22:49:09.937"/>
</kw>
<msg timestamp="20210714 22:49:09.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:07.087" endtime="20210714 22:49:09.937"/>
</kw>
<msg timestamp="20210714 22:49:09.938" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20210714 22:49:07.087" endtime="20210714 22:49:09.938"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:49:09.938" endtime="20210714 22:49:09.938"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210714 22:49:09.938" endtime="20210714 22:49:09.939"/>
</kw>
<status status="PASS" starttime="20210714 22:48:45.447" endtime="20210714 22:49:09.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:48:45.445" endtime="20210714 22:49:09.939"/>
</test>
<test id="s1-s10-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:49:09.940" endtime="20210714 22:49:09.941"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:09.944" level="INFO">Running command 'ozone sh volume info o3:///64520-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:12.656" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:49:12.656" level="INFO">${output} = VOLUME_NOT_FOUND Volume 64520-rpcwport is not found</msg>
<status status="PASS" starttime="20210714 22:49:09.943" endtime="20210714 22:49:12.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:12.657" level="INFO">VOLUME_NOT_FOUND Volume 64520-rpcwport is not found</msg>
<status status="PASS" starttime="20210714 22:49:12.656" endtime="20210714 22:49:12.657"/>
</kw>
<msg timestamp="20210714 22:49:12.657" level="INFO">${result} = VOLUME_NOT_FOUND Volume 64520-rpcwport is not found</msg>
<status status="PASS" starttime="20210714 22:49:09.942" endtime="20210714 22:49:12.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:49:12.657" endtime="20210714 22:49:12.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:12.661" level="INFO">Running command 'ozone sh volume create o3:///64520-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:15.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:15.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:12.659" endtime="20210714 22:49:15.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:15.269" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:15.268" endtime="20210714 22:49:15.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:15.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:15.269" endtime="20210714 22:49:15.270"/>
</kw>
<status status="PASS" starttime="20210714 22:49:12.659" endtime="20210714 22:49:15.270"/>
</kw>
<msg timestamp="20210714 22:49:15.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:12.659" endtime="20210714 22:49:15.270"/>
</kw>
<msg timestamp="20210714 22:49:15.270" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:49:12.658" endtime="20210714 22:49:15.270"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:49:15.270" endtime="20210714 22:49:15.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:15.274" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="64520-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:18.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:18.167" level="INFO">${output} = {
  "metadata": {},
  "name": "64520-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:49:15.272" endtime="20210714 22:49:18.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:18.169" level="INFO">{
  "metadata": {},
  "name": "64520-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:49:15.093Z",
  "modificationTime": "2021-07-14T22:49:15.093Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:49:18.168" endtime="20210714 22:49:18.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:18.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:18.169" endtime="20210714 22:49:18.170"/>
</kw>
<status status="PASS" starttime="20210714 22:49:15.272" endtime="20210714 22:49:18.170"/>
</kw>
<msg timestamp="20210714 22:49:18.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:15.272" endtime="20210714 22:49:18.170"/>
</kw>
<msg timestamp="20210714 22:49:18.170" level="INFO">${result} = {
  "metadata": {},
  "name": "64520-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:49:15.271" endtime="20210714 22:49:18.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:49:18.171" endtime="20210714 22:49:18.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:18.174" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64520-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:21.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:21.117" level="INFO">${output} = {
  "metadata": {},
  "name": "64520-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:49:18.172" endtime="20210714 22:49:21.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:21.118" level="INFO">{
  "metadata": {},
  "name": "64520-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:49:15.093Z",
  "modificationTime": "2021-07-14T22:49:15.093Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:49:21.118" endtime="20210714 22:49:21.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:21.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:21.119" endtime="20210714 22:49:21.119"/>
</kw>
<status status="PASS" starttime="20210714 22:49:18.172" endtime="20210714 22:49:21.120"/>
</kw>
<msg timestamp="20210714 22:49:21.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:18.172" endtime="20210714 22:49:21.120"/>
</kw>
<msg timestamp="20210714 22:49:21.120" level="INFO">${result} = {
  "metadata": {},
  "name": "64520-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07...</msg>
<status status="PASS" starttime="20210714 22:49:18.171" endtime="20210714 22:49:21.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:49:21.120" endtime="20210714 22:49:21.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:21.124" level="INFO">Running command 'ozone sh volume setquota o3:///64520-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:23.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:23.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:21.122" endtime="20210714 22:49:23.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:23.923" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:23.923" endtime="20210714 22:49:23.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:23.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:23.923" endtime="20210714 22:49:23.924"/>
</kw>
<status status="PASS" starttime="20210714 22:49:21.122" endtime="20210714 22:49:23.924"/>
</kw>
<msg timestamp="20210714 22:49:23.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:21.121" endtime="20210714 22:49:23.925"/>
</kw>
<status status="PASS" starttime="20210714 22:49:21.121" endtime="20210714 22:49:23.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:23.929" level="INFO">Running command 'ozone sh volume info o3:///64520-rpcwport | jq -r '. | select(.name=="64520-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:27.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:27.108" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:49:23.927" endtime="20210714 22:49:27.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:27.109" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:49:27.109" endtime="20210714 22:49:27.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:27.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:27.110" endtime="20210714 22:49:27.110"/>
</kw>
<status status="PASS" starttime="20210714 22:49:23.926" endtime="20210714 22:49:27.110"/>
</kw>
<msg timestamp="20210714 22:49:27.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:23.926" endtime="20210714 22:49:27.111"/>
</kw>
<msg timestamp="20210714 22:49:27.111" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:49:23.925" endtime="20210714 22:49:27.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:27.111" endtime="20210714 22:49:27.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:27.115" level="INFO">Running command 'ozone sh bucket create o3:///64520-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:29.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:29.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:27.113" endtime="20210714 22:49:29.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:29.932" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:29.931" endtime="20210714 22:49:29.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:29.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:29.932" endtime="20210714 22:49:29.933"/>
</kw>
<status status="PASS" starttime="20210714 22:49:27.112" endtime="20210714 22:49:29.933"/>
</kw>
<msg timestamp="20210714 22:49:29.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:27.112" endtime="20210714 22:49:29.933"/>
</kw>
<status status="PASS" starttime="20210714 22:49:27.112" endtime="20210714 22:49:29.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:29.937" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:32.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:32.876" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210714 22:49:29.935" endtime="20210714 22:49:32.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:32.877" level="INFO">DISK</msg>
<status status="PASS" starttime="20210714 22:49:32.877" endtime="20210714 22:49:32.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:32.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:32.878" endtime="20210714 22:49:32.878"/>
</kw>
<status status="PASS" starttime="20210714 22:49:29.935" endtime="20210714 22:49:32.879"/>
</kw>
<msg timestamp="20210714 22:49:32.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:29.935" endtime="20210714 22:49:32.879"/>
</kw>
<msg timestamp="20210714 22:49:32.879" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210714 22:49:29.934" endtime="20210714 22:49:32.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:32.879" endtime="20210714 22:49:32.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:32.883" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:35.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:35.902" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:49:32.881" endtime="20210714 22:49:35.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:35.903" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:49:35.902" endtime="20210714 22:49:35.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:35.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:35.903" endtime="20210714 22:49:35.904"/>
</kw>
<status status="PASS" starttime="20210714 22:49:32.881" endtime="20210714 22:49:35.904"/>
</kw>
<msg timestamp="20210714 22:49:35.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:32.880" endtime="20210714 22:49:35.904"/>
</kw>
<msg timestamp="20210714 22:49:35.904" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:49:32.880" endtime="20210714 22:49:35.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:35.905" endtime="20210714 22:49:35.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:35.909" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:39.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:39.012" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210714 22:49:35.907" endtime="20210714 22:49:39.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:39.013" level="INFO">100</msg>
<status status="PASS" starttime="20210714 22:49:39.012" endtime="20210714 22:49:39.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:39.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:39.014" endtime="20210714 22:49:39.014"/>
</kw>
<status status="PASS" starttime="20210714 22:49:35.906" endtime="20210714 22:49:39.014"/>
</kw>
<msg timestamp="20210714 22:49:39.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:35.906" endtime="20210714 22:49:39.015"/>
</kw>
<msg timestamp="20210714 22:49:39.015" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210714 22:49:35.905" endtime="20210714 22:49:39.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:39.015" endtime="20210714 22:49:39.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:39.018" level="INFO">Running command 'ozone sh bucket setquota o3:///64520-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:41.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:41.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:39.017" endtime="20210714 22:49:41.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:41.465" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:41.464" endtime="20210714 22:49:41.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:41.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:41.465" endtime="20210714 22:49:41.466"/>
</kw>
<status status="PASS" starttime="20210714 22:49:39.016" endtime="20210714 22:49:41.466"/>
</kw>
<msg timestamp="20210714 22:49:41.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:39.016" endtime="20210714 22:49:41.466"/>
</kw>
<status status="PASS" starttime="20210714 22:49:39.015" endtime="20210714 22:49:41.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:41.470" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:44.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:44.382" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:49:41.468" endtime="20210714 22:49:44.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:44.383" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210714 22:49:44.382" endtime="20210714 22:49:44.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:44.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:44.383" endtime="20210714 22:49:44.384"/>
</kw>
<status status="PASS" starttime="20210714 22:49:41.468" endtime="20210714 22:49:44.384"/>
</kw>
<msg timestamp="20210714 22:49:44.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:41.468" endtime="20210714 22:49:44.384"/>
</kw>
<msg timestamp="20210714 22:49:44.384" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:49:41.467" endtime="20210714 22:49:44.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:44.385" endtime="20210714 22:49:44.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:44.389" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:47.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:47.159" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210714 22:49:44.387" endtime="20210714 22:49:47.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:47.161" level="INFO">1000</msg>
<status status="PASS" starttime="20210714 22:49:47.160" endtime="20210714 22:49:47.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:47.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:47.161" endtime="20210714 22:49:47.161"/>
</kw>
<status status="PASS" starttime="20210714 22:49:44.386" endtime="20210714 22:49:47.162"/>
</kw>
<msg timestamp="20210714 22:49:47.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:44.386" endtime="20210714 22:49:47.162"/>
</kw>
<msg timestamp="20210714 22:49:47.162" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210714 22:49:44.385" endtime="20210714 22:49:47.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:47.162" endtime="20210714 22:49:47.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:47.166" level="INFO">Running command 'ozone sh bucket list o3:///64520-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:50.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:50.116" level="INFO">${output} = 64520-rpcwport</msg>
<status status="PASS" starttime="20210714 22:49:47.165" endtime="20210714 22:49:50.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:50.117" level="INFO">64520-rpcwport</msg>
<status status="PASS" starttime="20210714 22:49:50.116" endtime="20210714 22:49:50.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:50.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:50.118" endtime="20210714 22:49:50.118"/>
</kw>
<status status="PASS" starttime="20210714 22:49:47.164" endtime="20210714 22:49:50.118"/>
</kw>
<msg timestamp="20210714 22:49:50.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:47.164" endtime="20210714 22:49:50.119"/>
</kw>
<msg timestamp="20210714 22:49:50.119" level="INFO">${result} = 64520-rpcwport</msg>
<status status="PASS" starttime="20210714 22:49:47.163" endtime="20210714 22:49:50.119"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:49:50.119" endtime="20210714 22:49:50.119"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:50.123" level="INFO">Running command 'ozone sh key put o3:///64520-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:54.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:54.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:50.122" endtime="20210714 22:49:54.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:54.742" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:54.741" endtime="20210714 22:49:54.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:54.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:54.742" endtime="20210714 22:49:54.743"/>
</kw>
<status status="PASS" starttime="20210714 22:49:50.121" endtime="20210714 22:49:54.743"/>
</kw>
<msg timestamp="20210714 22:49:54.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:50.121" endtime="20210714 22:49:54.743"/>
</kw>
<status status="PASS" starttime="20210714 22:49:50.120" endtime="20210714 22:49:54.744"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:54.747" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:54.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:54.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:54.745" endtime="20210714 22:49:54.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:54.750" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:54.749" endtime="20210714 22:49:54.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:54.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:54.750" endtime="20210714 22:49:54.751"/>
</kw>
<status status="PASS" starttime="20210714 22:49:54.744" endtime="20210714 22:49:54.751"/>
</kw>
<msg timestamp="20210714 22:49:54.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:54.744" endtime="20210714 22:49:54.751"/>
</kw>
<status status="PASS" starttime="20210714 22:49:54.744" endtime="20210714 22:49:54.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:54.754" level="INFO">Running command 'ozone sh key get o3:///64520-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:58.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:58.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:54.753" endtime="20210714 22:49:58.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:58.960" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:58.959" endtime="20210714 22:49:58.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:58.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:58.960" endtime="20210714 22:49:58.961"/>
</kw>
<status status="PASS" starttime="20210714 22:49:54.752" endtime="20210714 22:49:58.961"/>
</kw>
<msg timestamp="20210714 22:49:58.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:54.752" endtime="20210714 22:49:58.961"/>
</kw>
<status status="PASS" starttime="20210714 22:49:54.751" endtime="20210714 22:49:58.961"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:58.966" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:49:58.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:49:58.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:58.963" endtime="20210714 22:49:58.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:49:58.969" level="INFO"/>
<status status="PASS" starttime="20210714 22:49:58.968" endtime="20210714 22:49:58.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:49:58.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:49:58.969" endtime="20210714 22:49:58.970"/>
</kw>
<status status="PASS" starttime="20210714 22:49:58.962" endtime="20210714 22:49:58.970"/>
</kw>
<msg timestamp="20210714 22:49:58.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:58.962" endtime="20210714 22:49:58.970"/>
</kw>
<status status="PASS" starttime="20210714 22:49:58.962" endtime="20210714 22:49:58.970"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:49:58.973" level="INFO">Running command 'ozone sh key put -t RATIS o3:///64520-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:03.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:03.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:49:58.972" endtime="20210714 22:50:03.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:03.634" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:03.633" endtime="20210714 22:50:03.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:03.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:03.634" endtime="20210714 22:50:03.635"/>
</kw>
<status status="PASS" starttime="20210714 22:49:58.971" endtime="20210714 22:50:03.635"/>
</kw>
<msg timestamp="20210714 22:50:03.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:49:58.971" endtime="20210714 22:50:03.635"/>
</kw>
<status status="PASS" starttime="20210714 22:49:58.970" endtime="20210714 22:50:03.636"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:03.639" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:03.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:03.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:03.637" endtime="20210714 22:50:03.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:03.642" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:03.642" endtime="20210714 22:50:03.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:03.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:03.642" endtime="20210714 22:50:03.643"/>
</kw>
<status status="PASS" starttime="20210714 22:50:03.636" endtime="20210714 22:50:03.643"/>
</kw>
<msg timestamp="20210714 22:50:03.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:03.636" endtime="20210714 22:50:03.643"/>
</kw>
<status status="PASS" starttime="20210714 22:50:03.636" endtime="20210714 22:50:03.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:03.647" level="INFO">Running command 'ozone sh key get o3:///64520-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:08.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:08.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:03.645" endtime="20210714 22:50:08.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:08.165" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:08.164" endtime="20210714 22:50:08.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:08.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:08.165" endtime="20210714 22:50:08.166"/>
</kw>
<status status="PASS" starttime="20210714 22:50:03.644" endtime="20210714 22:50:08.166"/>
</kw>
<msg timestamp="20210714 22:50:08.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:03.644" endtime="20210714 22:50:08.166"/>
</kw>
<status status="PASS" starttime="20210714 22:50:03.644" endtime="20210714 22:50:08.166"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:08.170" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:08.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:08.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:08.168" endtime="20210714 22:50:08.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:08.173" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:08.172" endtime="20210714 22:50:08.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:08.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:08.173" endtime="20210714 22:50:08.173"/>
</kw>
<status status="PASS" starttime="20210714 22:50:08.167" endtime="20210714 22:50:08.174"/>
</kw>
<msg timestamp="20210714 22:50:08.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:08.167" endtime="20210714 22:50:08.174"/>
</kw>
<status status="PASS" starttime="20210714 22:50:08.167" endtime="20210714 22:50:08.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:08.179" level="INFO">Running command 'ozone sh key info o3:///64520-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:11.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:11.350" level="INFO">${output} = {
  "volumeName": "64520-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:50:01.750Z",
  "modificationTime": "2021-07-14T22:50:03.168Z",
...</msg>
<status status="PASS" starttime="20210714 22:50:08.176" endtime="20210714 22:50:11.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:11.351" level="INFO">{
  "volumeName": "64520-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:50:01.750Z",
  "modificationTime": "2021-07-14T22:50:03.168Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:50:11.350" endtime="20210714 22:50:11.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:11.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:11.352" endtime="20210714 22:50:11.352"/>
</kw>
<status status="PASS" starttime="20210714 22:50:08.175" endtime="20210714 22:50:11.352"/>
</kw>
<msg timestamp="20210714 22:50:11.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:08.175" endtime="20210714 22:50:11.353"/>
</kw>
<msg timestamp="20210714 22:50:11.353" level="INFO">${result} = {
  "volumeName": "64520-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:50:01.750Z",
  "modificationTime": "2021-07-14T22:50:03.168Z",
...</msg>
<status status="PASS" starttime="20210714 22:50:08.174" endtime="20210714 22:50:11.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:50:11.353" endtime="20210714 22:50:11.353"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:11.357" level="INFO">Running command 'ozone sh key delete o3:///64520-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:13.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:13.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:11.355" endtime="20210714 22:50:13.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:13.999" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:13.999" endtime="20210714 22:50:14.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:14.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:14.000" endtime="20210714 22:50:14.000"/>
</kw>
<status status="PASS" starttime="20210714 22:50:11.355" endtime="20210714 22:50:14.000"/>
</kw>
<msg timestamp="20210714 22:50:14.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:11.354" endtime="20210714 22:50:14.001"/>
</kw>
<status status="PASS" starttime="20210714 22:50:11.354" endtime="20210714 22:50:14.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:14.004" level="INFO">Running command 'ozone sh key cp o3:///64520-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:18.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:18.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:14.003" endtime="20210714 22:50:18.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:18.796" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:18.795" endtime="20210714 22:50:18.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:18.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:18.796" endtime="20210714 22:50:18.796"/>
</kw>
<status status="PASS" starttime="20210714 22:50:14.002" endtime="20210714 22:50:18.797"/>
</kw>
<msg timestamp="20210714 22:50:18.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:14.002" endtime="20210714 22:50:18.797"/>
</kw>
<status status="PASS" starttime="20210714 22:50:14.001" endtime="20210714 22:50:18.797"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:18.800" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:18.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:18.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:18.799" endtime="20210714 22:50:18.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:18.804" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:18.803" endtime="20210714 22:50:18.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:18.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:18.804" endtime="20210714 22:50:18.804"/>
</kw>
<status status="PASS" starttime="20210714 22:50:18.798" endtime="20210714 22:50:18.805"/>
</kw>
<msg timestamp="20210714 22:50:18.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:18.798" endtime="20210714 22:50:18.805"/>
</kw>
<status status="PASS" starttime="20210714 22:50:18.797" endtime="20210714 22:50:18.805"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:18.808" level="INFO">Running command 'ozone sh key get o3:///64520-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:23.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:23.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:18.807" endtime="20210714 22:50:23.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:23.333" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:23.332" endtime="20210714 22:50:23.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:23.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:23.333" endtime="20210714 22:50:23.333"/>
</kw>
<status status="PASS" starttime="20210714 22:50:18.806" endtime="20210714 22:50:23.334"/>
</kw>
<msg timestamp="20210714 22:50:23.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:18.806" endtime="20210714 22:50:23.334"/>
</kw>
<status status="PASS" starttime="20210714 22:50:18.805" endtime="20210714 22:50:23.334"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:23.338" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:23.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:23.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:23.336" endtime="20210714 22:50:23.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:23.341" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:23.340" endtime="20210714 22:50:23.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:23.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:23.341" endtime="20210714 22:50:23.342"/>
</kw>
<status status="PASS" starttime="20210714 22:50:23.335" endtime="20210714 22:50:23.342"/>
</kw>
<msg timestamp="20210714 22:50:23.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:23.335" endtime="20210714 22:50:23.342"/>
</kw>
<status status="PASS" starttime="20210714 22:50:23.334" endtime="20210714 22:50:23.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:23.345" level="INFO">Running command 'ozone sh key delete o3:///64520-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:26.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:26.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:23.344" endtime="20210714 22:50:26.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:26.179" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:26.178" endtime="20210714 22:50:26.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:26.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:26.179" endtime="20210714 22:50:26.180"/>
</kw>
<status status="PASS" starttime="20210714 22:50:23.343" endtime="20210714 22:50:26.180"/>
</kw>
<msg timestamp="20210714 22:50:26.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:23.343" endtime="20210714 22:50:26.180"/>
</kw>
<status status="PASS" starttime="20210714 22:50:23.342" endtime="20210714 22:50:26.180"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:26.183" level="INFO">Running command 'ozone sh key get o3:///64520-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:28.750" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:50:28.750" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:50:26.181" endtime="20210714 22:50:28.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:28.751" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:50:28.750" endtime="20210714 22:50:28.751"/>
</kw>
<msg timestamp="20210714 22:50:28.751" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:50:26.180" endtime="20210714 22:50:28.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:50:28.752" endtime="20210714 22:50:28.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:28.755" level="INFO">Running command 'ozone sh key get --force o3:///64520-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:33.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:33.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:28.754" endtime="20210714 22:50:33.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:33.314" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:33.314" endtime="20210714 22:50:33.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:33.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:33.315" endtime="20210714 22:50:33.315"/>
</kw>
<status status="PASS" starttime="20210714 22:50:28.753" endtime="20210714 22:50:33.315"/>
</kw>
<msg timestamp="20210714 22:50:33.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:28.753" endtime="20210714 22:50:33.316"/>
</kw>
<msg timestamp="20210714 22:50:33.316" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:50:28.752" endtime="20210714 22:50:33.316"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:50:33.316" endtime="20210714 22:50:33.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:33.320" level="INFO">Running command 'ozone sh key info o3:///64520-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:36.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:36.310" level="INFO">${output} = {
  "volumeName": "64520-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:49:52.646Z",
  "modificationTime": "2021-07-14T22:49:54.352Z",
  "ozo...</msg>
<status status="PASS" starttime="20210714 22:50:33.318" endtime="20210714 22:50:36.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:36.311" level="INFO">{
  "volumeName": "64520-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:49:52.646Z",
  "modificationTime": "2021-07-14T22:49:54.352Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:50:36.311" endtime="20210714 22:50:36.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:36.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:36.312" endtime="20210714 22:50:36.312"/>
</kw>
<status status="PASS" starttime="20210714 22:50:33.318" endtime="20210714 22:50:36.313"/>
</kw>
<msg timestamp="20210714 22:50:36.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:33.317" endtime="20210714 22:50:36.313"/>
</kw>
<msg timestamp="20210714 22:50:36.313" level="INFO">${result} = {
  "volumeName": "64520-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:49:52.646Z",
  "modificationTime": "2021-07-14T22:49:54.352Z",
  "ozo...</msg>
<status status="PASS" starttime="20210714 22:50:33.317" endtime="20210714 22:50:36.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:50:36.313" endtime="20210714 22:50:36.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:36.318" level="INFO">Running command 'ozone sh key list o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:39.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:39.251" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210714 22:50:36.316" endtime="20210714 22:50:39.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:39.252" level="INFO">key1</msg>
<status status="PASS" starttime="20210714 22:50:39.252" endtime="20210714 22:50:39.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:39.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:39.253" endtime="20210714 22:50:39.253"/>
</kw>
<status status="PASS" starttime="20210714 22:50:36.315" endtime="20210714 22:50:39.254"/>
</kw>
<msg timestamp="20210714 22:50:39.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:36.315" endtime="20210714 22:50:39.254"/>
</kw>
<msg timestamp="20210714 22:50:39.254" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210714 22:50:36.314" endtime="20210714 22:50:39.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:50:39.254" endtime="20210714 22:50:39.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:39.258" level="INFO">Running command 'ozone sh key rename o3:///64520-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:41.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:41.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:39.256" endtime="20210714 22:50:41.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:41.829" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:41.829" endtime="20210714 22:50:41.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:41.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:41.830" endtime="20210714 22:50:41.830"/>
</kw>
<status status="PASS" starttime="20210714 22:50:39.256" endtime="20210714 22:50:41.830"/>
</kw>
<msg timestamp="20210714 22:50:41.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:39.255" endtime="20210714 22:50:41.831"/>
</kw>
<status status="PASS" starttime="20210714 22:50:39.255" endtime="20210714 22:50:41.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:41.834" level="INFO">Running command 'ozone sh key list o3:///64520-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:44.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:44.842" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210714 22:50:41.832" endtime="20210714 22:50:44.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:44.843" level="INFO">key2</msg>
<status status="PASS" starttime="20210714 22:50:44.842" endtime="20210714 22:50:44.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:44.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:44.843" endtime="20210714 22:50:44.844"/>
</kw>
<status status="PASS" starttime="20210714 22:50:41.832" endtime="20210714 22:50:44.844"/>
</kw>
<msg timestamp="20210714 22:50:44.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:41.832" endtime="20210714 22:50:44.844"/>
</kw>
<msg timestamp="20210714 22:50:44.844" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210714 22:50:41.831" endtime="20210714 22:50:44.844"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:50:44.844" endtime="20210714 22:50:44.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:44.848" level="INFO">Running command 'ozone sh key delete o3:///64520-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:47.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:47.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:44.847" endtime="20210714 22:50:47.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:47.601" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:47.600" endtime="20210714 22:50:47.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:47.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:47.601" endtime="20210714 22:50:47.601"/>
</kw>
<status status="PASS" starttime="20210714 22:50:44.846" endtime="20210714 22:50:47.602"/>
</kw>
<msg timestamp="20210714 22:50:47.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:44.846" endtime="20210714 22:50:47.602"/>
</kw>
<status status="PASS" starttime="20210714 22:50:44.845" endtime="20210714 22:50:47.602"/>
</kw>
<status status="PASS" starttime="20210714 22:49:50.120" endtime="20210714 22:50:47.602"/>
</kw>
<status status="PASS" starttime="20210714 22:49:50.119" endtime="20210714 22:50:47.602"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:47.606" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///64520-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:50.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:50.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:47.604" endtime="20210714 22:50:50.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:50.334" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:50.333" endtime="20210714 22:50:50.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:50.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:50.334" endtime="20210714 22:50:50.335"/>
</kw>
<status status="PASS" starttime="20210714 22:50:47.603" endtime="20210714 22:50:50.335"/>
</kw>
<msg timestamp="20210714 22:50:50.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:47.603" endtime="20210714 22:50:50.335"/>
</kw>
<status status="PASS" starttime="20210714 22:50:47.602" endtime="20210714 22:50:50.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:50.339" level="INFO">Running command 'ozone sh volume info o3:///64520-rpcwport | jq -r '. | select(.name=="64520-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:53.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:53.388" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:50:50.337" endtime="20210714 22:50:53.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:53.389" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:50:53.388" endtime="20210714 22:50:53.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:53.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:53.389" endtime="20210714 22:50:53.390"/>
</kw>
<status status="PASS" starttime="20210714 22:50:50.336" endtime="20210714 22:50:53.390"/>
</kw>
<msg timestamp="20210714 22:50:53.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:50.336" endtime="20210714 22:50:53.390"/>
</kw>
<msg timestamp="20210714 22:50:53.391" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:50:50.335" endtime="20210714 22:50:53.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:50:53.391" endtime="20210714 22:50:53.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:53.394" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///64520-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:56.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:56.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:53.393" endtime="20210714 22:50:56.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:56.035" level="INFO"/>
<status status="PASS" starttime="20210714 22:50:56.035" endtime="20210714 22:50:56.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:56.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:56.036" endtime="20210714 22:50:56.036"/>
</kw>
<status status="PASS" starttime="20210714 22:50:53.392" endtime="20210714 22:50:56.036"/>
</kw>
<msg timestamp="20210714 22:50:56.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:53.392" endtime="20210714 22:50:56.037"/>
</kw>
<status status="PASS" starttime="20210714 22:50:53.391" endtime="20210714 22:50:56.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:56.040" level="INFO">Running command 'ozone sh volume info o3:///64520-rpcwport | jq -r '. | select(.name=="64520-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:50:58.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:50:58.984" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:50:56.039" endtime="20210714 22:50:58.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:50:58.985" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:50:58.984" endtime="20210714 22:50:58.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:50:58.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:50:58.985" endtime="20210714 22:50:58.986"/>
</kw>
<status status="PASS" starttime="20210714 22:50:56.038" endtime="20210714 22:50:58.986"/>
</kw>
<msg timestamp="20210714 22:50:58.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:56.038" endtime="20210714 22:50:58.986"/>
</kw>
<msg timestamp="20210714 22:50:58.987" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:50:56.037" endtime="20210714 22:50:58.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:50:58.987" endtime="20210714 22:50:58.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:50:58.990" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///64520-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:01.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:01.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:50:58.989" endtime="20210714 22:51:01.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:01.864" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:01.863" endtime="20210714 22:51:01.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:01.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:01.864" endtime="20210714 22:51:01.865"/>
</kw>
<status status="PASS" starttime="20210714 22:50:58.988" endtime="20210714 22:51:01.865"/>
</kw>
<msg timestamp="20210714 22:51:01.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:50:58.988" endtime="20210714 22:51:01.865"/>
</kw>
<status status="PASS" starttime="20210714 22:50:58.987" endtime="20210714 22:51:01.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:01.869" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:04.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:04.808" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:51:01.868" endtime="20210714 22:51:04.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:04.809" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:51:04.808" endtime="20210714 22:51:04.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:04.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:04.809" endtime="20210714 22:51:04.810"/>
</kw>
<status status="PASS" starttime="20210714 22:51:01.867" endtime="20210714 22:51:04.810"/>
</kw>
<msg timestamp="20210714 22:51:04.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:01.866" endtime="20210714 22:51:04.810"/>
</kw>
<msg timestamp="20210714 22:51:04.811" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:51:01.866" endtime="20210714 22:51:04.811"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:04.811" endtime="20210714 22:51:04.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:04.814" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///64520-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:07.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:07.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:04.813" endtime="20210714 22:51:07.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:07.597" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:07.596" endtime="20210714 22:51:07.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:07.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:07.597" endtime="20210714 22:51:07.597"/>
</kw>
<status status="PASS" starttime="20210714 22:51:04.812" endtime="20210714 22:51:07.598"/>
</kw>
<msg timestamp="20210714 22:51:07.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:04.812" endtime="20210714 22:51:07.598"/>
</kw>
<status status="PASS" starttime="20210714 22:51:04.811" endtime="20210714 22:51:07.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:07.602" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:10.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:10.477" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:51:07.600" endtime="20210714 22:51:10.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:10.478" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:51:10.477" endtime="20210714 22:51:10.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:10.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:10.478" endtime="20210714 22:51:10.479"/>
</kw>
<status status="PASS" starttime="20210714 22:51:07.599" endtime="20210714 22:51:10.479"/>
</kw>
<msg timestamp="20210714 22:51:10.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:07.599" endtime="20210714 22:51:10.479"/>
</kw>
<msg timestamp="20210714 22:51:10.479" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:51:07.598" endtime="20210714 22:51:10.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:10.480" endtime="20210714 22:51:10.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:10.483" level="INFO">Running command 'ozone sh bucket delete o3:///64520-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:13.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:13.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:10.482" endtime="20210714 22:51:13.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:13.143" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:13.143" endtime="20210714 22:51:13.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:13.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:13.144" endtime="20210714 22:51:13.144"/>
</kw>
<status status="PASS" starttime="20210714 22:51:10.481" endtime="20210714 22:51:13.144"/>
</kw>
<msg timestamp="20210714 22:51:13.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:10.481" endtime="20210714 22:51:13.145"/>
</kw>
<status status="PASS" starttime="20210714 22:51:10.480" endtime="20210714 22:51:13.145"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:13.148" level="INFO">Running command 'ozone sh volume delete o3:///64520-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:15.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:15.817" level="INFO">${output} = Volume 64520-rpcwport is deleted</msg>
<status status="PASS" starttime="20210714 22:51:13.146" endtime="20210714 22:51:15.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:15.818" level="INFO">Volume 64520-rpcwport is deleted</msg>
<status status="PASS" starttime="20210714 22:51:15.817" endtime="20210714 22:51:15.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:15.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:15.818" endtime="20210714 22:51:15.819"/>
</kw>
<status status="PASS" starttime="20210714 22:51:13.146" endtime="20210714 22:51:15.819"/>
</kw>
<msg timestamp="20210714 22:51:15.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:13.146" endtime="20210714 22:51:15.819"/>
</kw>
<status status="PASS" starttime="20210714 22:51:13.145" endtime="20210714 22:51:15.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:15.823" level="INFO">Running command 'ozone sh volume create o3:///64520-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:18.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:18.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:15.821" endtime="20210714 22:51:18.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:18.512" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:18.511" endtime="20210714 22:51:18.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:18.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:18.512" endtime="20210714 22:51:18.513"/>
</kw>
<status status="PASS" starttime="20210714 22:51:15.821" endtime="20210714 22:51:18.513"/>
</kw>
<msg timestamp="20210714 22:51:18.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:15.821" endtime="20210714 22:51:18.513"/>
</kw>
<status status="PASS" starttime="20210714 22:51:15.820" endtime="20210714 22:51:18.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:18.517" level="INFO">Running command 'ozone sh volume info o3:///64520-rpcwport | jq -r '. | select(.name=="64520-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:21.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:21.273" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:51:18.515" endtime="20210714 22:51:21.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:21.274" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:51:21.273" endtime="20210714 22:51:21.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:21.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:21.274" endtime="20210714 22:51:21.275"/>
</kw>
<status status="PASS" starttime="20210714 22:51:18.515" endtime="20210714 22:51:21.275"/>
</kw>
<msg timestamp="20210714 22:51:21.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:18.514" endtime="20210714 22:51:21.275"/>
</kw>
<msg timestamp="20210714 22:51:21.275" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:51:18.513" endtime="20210714 22:51:21.275"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:21.276" endtime="20210714 22:51:21.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:21.280" level="INFO">Running command 'ozone sh volume info o3:///64520-rpcwport | jq -r '. | select(.name=="64520-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:24.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:24.168" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:51:21.278" endtime="20210714 22:51:24.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:24.169" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:51:24.169" endtime="20210714 22:51:24.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:24.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:24.170" endtime="20210714 22:51:24.170"/>
</kw>
<status status="PASS" starttime="20210714 22:51:21.277" endtime="20210714 22:51:24.170"/>
</kw>
<msg timestamp="20210714 22:51:24.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:21.277" endtime="20210714 22:51:24.171"/>
</kw>
<msg timestamp="20210714 22:51:24.171" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:51:21.276" endtime="20210714 22:51:24.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:24.171" endtime="20210714 22:51:24.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:24.175" level="INFO">Running command 'ozone sh bucket create o3:///64520-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:26.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:26.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:24.173" endtime="20210714 22:51:26.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:26.901" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:26.900" endtime="20210714 22:51:26.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:26.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:26.901" endtime="20210714 22:51:26.901"/>
</kw>
<status status="PASS" starttime="20210714 22:51:24.172" endtime="20210714 22:51:26.902"/>
</kw>
<msg timestamp="20210714 22:51:26.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:24.172" endtime="20210714 22:51:26.902"/>
</kw>
<status status="PASS" starttime="20210714 22:51:24.172" endtime="20210714 22:51:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:26.906" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:29.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:29.932" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:51:26.905" endtime="20210714 22:51:29.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:29.933" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:51:29.933" endtime="20210714 22:51:29.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:29.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:29.933" endtime="20210714 22:51:29.934"/>
</kw>
<status status="PASS" starttime="20210714 22:51:26.904" endtime="20210714 22:51:29.934"/>
</kw>
<msg timestamp="20210714 22:51:29.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:26.903" endtime="20210714 22:51:29.934"/>
</kw>
<msg timestamp="20210714 22:51:29.935" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:51:26.902" endtime="20210714 22:51:29.935"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:29.935" endtime="20210714 22:51:29.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:29.939" level="INFO">Running command 'ozone sh bucket info o3:///64520-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:32.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:32.802" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:51:29.937" endtime="20210714 22:51:32.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:32.803" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:51:32.802" endtime="20210714 22:51:32.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:32.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:32.803" endtime="20210714 22:51:32.804"/>
</kw>
<status status="PASS" starttime="20210714 22:51:29.936" endtime="20210714 22:51:32.804"/>
</kw>
<msg timestamp="20210714 22:51:32.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:29.936" endtime="20210714 22:51:32.804"/>
</kw>
<msg timestamp="20210714 22:51:32.805" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:51:29.935" endtime="20210714 22:51:32.805"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:32.805" endtime="20210714 22:51:32.805"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:32.809" level="INFO">Running command 'ozone sh bucket delete o3:///64520-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:35.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:35.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:32.807" endtime="20210714 22:51:35.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:35.596" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:35.595" endtime="20210714 22:51:35.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:35.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:35.596" endtime="20210714 22:51:35.597"/>
</kw>
<status status="PASS" starttime="20210714 22:51:32.806" endtime="20210714 22:51:35.597"/>
</kw>
<msg timestamp="20210714 22:51:35.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:32.806" endtime="20210714 22:51:35.597"/>
</kw>
<status status="PASS" starttime="20210714 22:51:32.805" endtime="20210714 22:51:35.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:35.601" level="INFO">Running command 'ozone sh volume delete o3:///64520-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:38.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:38.312" level="INFO">${output} = Volume 64520-rpcwport is deleted</msg>
<status status="PASS" starttime="20210714 22:51:35.599" endtime="20210714 22:51:38.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:38.313" level="INFO">Volume 64520-rpcwport is deleted</msg>
<status status="PASS" starttime="20210714 22:51:38.313" endtime="20210714 22:51:38.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:38.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:38.314" endtime="20210714 22:51:38.314"/>
</kw>
<status status="PASS" starttime="20210714 22:51:35.598" endtime="20210714 22:51:38.315"/>
</kw>
<msg timestamp="20210714 22:51:38.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:35.598" endtime="20210714 22:51:38.315"/>
</kw>
<status status="PASS" starttime="20210714 22:51:35.597" endtime="20210714 22:51:38.315"/>
</kw>
<status status="PASS" starttime="20210714 22:49:09.941" endtime="20210714 22:51:38.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:49:09.940" endtime="20210714 22:51:38.316"/>
</test>
<test id="s1-s10-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:51:38.317" endtime="20210714 22:51:38.318"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:38.322" level="INFO">Running command 'ozone sh volume info /64520-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:41.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:51:41.050" level="INFO">${output} = VOLUME_NOT_FOUND Volume 64520-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210714 22:51:38.320" endtime="20210714 22:51:41.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:41.051" level="INFO">VOLUME_NOT_FOUND Volume 64520-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210714 22:51:41.050" endtime="20210714 22:51:41.051"/>
</kw>
<msg timestamp="20210714 22:51:41.051" level="INFO">${result} = VOLUME_NOT_FOUND Volume 64520-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210714 22:51:38.319" endtime="20210714 22:51:41.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:51:41.051" endtime="20210714 22:51:41.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:41.055" level="INFO">Running command 'ozone sh volume create /64520-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:43.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:43.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:41.053" endtime="20210714 22:51:43.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:43.672" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:43.671" endtime="20210714 22:51:43.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:43.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:43.672" endtime="20210714 22:51:43.673"/>
</kw>
<status status="PASS" starttime="20210714 22:51:41.053" endtime="20210714 22:51:43.673"/>
</kw>
<msg timestamp="20210714 22:51:43.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:41.053" endtime="20210714 22:51:43.673"/>
</kw>
<msg timestamp="20210714 22:51:43.674" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:51:41.052" endtime="20210714 22:51:43.674"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:51:43.674" endtime="20210714 22:51:43.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:43.678" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="64520-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:46.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:46.541" level="INFO">${output} = {
  "metadata": {},
  "name": "64520-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" starttime="20210714 22:51:43.676" endtime="20210714 22:51:46.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:46.543" level="INFO">{
  "metadata": {},
  "name": "64520-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:51:43.494Z",
  "modificationTime": "2021-07-14T22:51:43.494Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:51:46.542" endtime="20210714 22:51:46.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:46.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:46.543" endtime="20210714 22:51:46.543"/>
</kw>
<status status="PASS" starttime="20210714 22:51:43.675" endtime="20210714 22:51:46.544"/>
</kw>
<msg timestamp="20210714 22:51:46.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:43.675" endtime="20210714 22:51:46.544"/>
</kw>
<msg timestamp="20210714 22:51:46.544" level="INFO">${result} = {
  "metadata": {},
  "name": "64520-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" starttime="20210714 22:51:43.674" endtime="20210714 22:51:46.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:51:46.544" endtime="20210714 22:51:46.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:46.548" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64520-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:49.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:49.506" level="INFO">${output} = {
  "metadata": {},
  "name": "64520-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" starttime="20210714 22:51:46.546" endtime="20210714 22:51:49.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:49.507" level="INFO">{
  "metadata": {},
  "name": "64520-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-14T22:51:43.494Z",
  "modificationTime": "2021-07-14T22:51:43.494Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210714 22:51:49.507" endtime="20210714 22:51:49.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:49.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:49.508" endtime="20210714 22:51:49.508"/>
</kw>
<status status="PASS" starttime="20210714 22:51:46.546" endtime="20210714 22:51:49.508"/>
</kw>
<msg timestamp="20210714 22:51:49.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:46.546" endtime="20210714 22:51:49.509"/>
</kw>
<msg timestamp="20210714 22:51:49.509" level="INFO">${result} = {
  "metadata": {},
  "name": "64520-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" starttime="20210714 22:51:46.545" endtime="20210714 22:51:49.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:51:49.509" endtime="20210714 22:51:49.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:49.513" level="INFO">Running command 'ozone sh volume setquota /64520-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:52.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:52.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:49.511" endtime="20210714 22:51:52.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:52.198" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:52.198" endtime="20210714 22:51:52.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:52.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:52.199" endtime="20210714 22:51:52.200"/>
</kw>
<status status="PASS" starttime="20210714 22:51:49.510" endtime="20210714 22:51:52.200"/>
</kw>
<msg timestamp="20210714 22:51:52.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:49.510" endtime="20210714 22:51:52.200"/>
</kw>
<status status="PASS" starttime="20210714 22:51:49.510" endtime="20210714 22:51:52.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:52.204" level="INFO">Running command 'ozone sh volume info /64520-rpcwoscheme | jq -r '. | select(.name=="64520-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:55.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:55.129" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:51:52.202" endtime="20210714 22:51:55.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:55.130" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:51:55.129" endtime="20210714 22:51:55.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:55.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:55.130" endtime="20210714 22:51:55.131"/>
</kw>
<status status="PASS" starttime="20210714 22:51:52.202" endtime="20210714 22:51:55.131"/>
</kw>
<msg timestamp="20210714 22:51:55.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:52.201" endtime="20210714 22:51:55.131"/>
</kw>
<msg timestamp="20210714 22:51:55.132" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:51:52.200" endtime="20210714 22:51:55.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:51:55.132" endtime="20210714 22:51:55.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:55.135" level="INFO">Running command 'ozone sh bucket create /64520-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:51:57.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:51:57.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:51:55.134" endtime="20210714 22:51:57.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:51:57.931" level="INFO"/>
<status status="PASS" starttime="20210714 22:51:57.931" endtime="20210714 22:51:57.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:51:57.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:51:57.932" endtime="20210714 22:51:57.932"/>
</kw>
<status status="PASS" starttime="20210714 22:51:55.133" endtime="20210714 22:51:57.933"/>
</kw>
<msg timestamp="20210714 22:51:57.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:55.133" endtime="20210714 22:51:57.933"/>
</kw>
<status status="PASS" starttime="20210714 22:51:55.132" endtime="20210714 22:51:57.933"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:51:57.936" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:01.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:01.027" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210714 22:51:57.935" endtime="20210714 22:52:01.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:01.028" level="INFO">DISK</msg>
<status status="PASS" starttime="20210714 22:52:01.027" endtime="20210714 22:52:01.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:01.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:01.028" endtime="20210714 22:52:01.029"/>
</kw>
<status status="PASS" starttime="20210714 22:51:57.934" endtime="20210714 22:52:01.029"/>
</kw>
<msg timestamp="20210714 22:52:01.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:51:57.934" endtime="20210714 22:52:01.029"/>
</kw>
<msg timestamp="20210714 22:52:01.029" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210714 22:51:57.933" endtime="20210714 22:52:01.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:52:01.030" endtime="20210714 22:52:01.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:01.034" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:03.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:03.982" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:52:01.032" endtime="20210714 22:52:03.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:03.984" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210714 22:52:03.983" endtime="20210714 22:52:03.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:03.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:03.984" endtime="20210714 22:52:03.984"/>
</kw>
<status status="PASS" starttime="20210714 22:52:01.031" endtime="20210714 22:52:03.985"/>
</kw>
<msg timestamp="20210714 22:52:03.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:01.031" endtime="20210714 22:52:03.985"/>
</kw>
<msg timestamp="20210714 22:52:03.985" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210714 22:52:01.030" endtime="20210714 22:52:03.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:52:03.985" endtime="20210714 22:52:03.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:03.989" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:06.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:06.965" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210714 22:52:03.988" endtime="20210714 22:52:06.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:06.966" level="INFO">100</msg>
<status status="PASS" starttime="20210714 22:52:06.965" endtime="20210714 22:52:06.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:06.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:06.966" endtime="20210714 22:52:06.967"/>
</kw>
<status status="PASS" starttime="20210714 22:52:03.987" endtime="20210714 22:52:06.967"/>
</kw>
<msg timestamp="20210714 22:52:06.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:03.987" endtime="20210714 22:52:06.967"/>
</kw>
<msg timestamp="20210714 22:52:06.967" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210714 22:52:03.986" endtime="20210714 22:52:06.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:52:06.968" endtime="20210714 22:52:06.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:06.971" level="INFO">Running command 'ozone sh bucket setquota /64520-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:09.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:09.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:06.970" endtime="20210714 22:52:09.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:09.773" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:09.773" endtime="20210714 22:52:09.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:09.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:09.774" endtime="20210714 22:52:09.774"/>
</kw>
<status status="PASS" starttime="20210714 22:52:06.969" endtime="20210714 22:52:09.775"/>
</kw>
<msg timestamp="20210714 22:52:09.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:06.969" endtime="20210714 22:52:09.775"/>
</kw>
<status status="PASS" starttime="20210714 22:52:06.968" endtime="20210714 22:52:09.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:09.779" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:12.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:12.540" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:52:09.777" endtime="20210714 22:52:12.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:12.541" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210714 22:52:12.540" endtime="20210714 22:52:12.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:12.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:12.541" endtime="20210714 22:52:12.542"/>
</kw>
<status status="PASS" starttime="20210714 22:52:09.776" endtime="20210714 22:52:12.542"/>
</kw>
<msg timestamp="20210714 22:52:12.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:09.776" endtime="20210714 22:52:12.542"/>
</kw>
<msg timestamp="20210714 22:52:12.543" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210714 22:52:09.775" endtime="20210714 22:52:12.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:52:12.543" endtime="20210714 22:52:12.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:12.547" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:15.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:15.463" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210714 22:52:12.545" endtime="20210714 22:52:15.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:15.464" level="INFO">1000</msg>
<status status="PASS" starttime="20210714 22:52:15.463" endtime="20210714 22:52:15.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:15.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:15.464" endtime="20210714 22:52:15.465"/>
</kw>
<status status="PASS" starttime="20210714 22:52:12.544" endtime="20210714 22:52:15.465"/>
</kw>
<msg timestamp="20210714 22:52:15.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:12.544" endtime="20210714 22:52:15.465"/>
</kw>
<msg timestamp="20210714 22:52:15.466" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210714 22:52:12.543" endtime="20210714 22:52:15.466"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:52:15.466" endtime="20210714 22:52:15.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:15.470" level="INFO">Running command 'ozone sh bucket list /64520-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:18.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:18.441" level="INFO">${output} = 64520-rpcwoscheme</msg>
<status status="PASS" starttime="20210714 22:52:15.468" endtime="20210714 22:52:18.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:18.442" level="INFO">64520-rpcwoscheme</msg>
<status status="PASS" starttime="20210714 22:52:18.441" endtime="20210714 22:52:18.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:18.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:18.442" endtime="20210714 22:52:18.443"/>
</kw>
<status status="PASS" starttime="20210714 22:52:15.467" endtime="20210714 22:52:18.443"/>
</kw>
<msg timestamp="20210714 22:52:18.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:15.467" endtime="20210714 22:52:18.443"/>
</kw>
<msg timestamp="20210714 22:52:18.443" level="INFO">${result} = 64520-rpcwoscheme</msg>
<status status="PASS" starttime="20210714 22:52:15.466" endtime="20210714 22:52:18.444"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:52:18.444" endtime="20210714 22:52:18.444"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:18.448" level="INFO">Running command 'ozone sh key put /64520-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:23.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:23.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:18.446" endtime="20210714 22:52:23.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:23.195" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:23.194" endtime="20210714 22:52:23.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:23.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:23.195" endtime="20210714 22:52:23.196"/>
</kw>
<status status="PASS" starttime="20210714 22:52:18.446" endtime="20210714 22:52:23.196"/>
</kw>
<msg timestamp="20210714 22:52:23.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:18.446" endtime="20210714 22:52:23.196"/>
</kw>
<status status="PASS" starttime="20210714 22:52:18.445" endtime="20210714 22:52:23.196"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:23.199" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:23.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:23.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:23.198" endtime="20210714 22:52:23.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:23.203" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:23.202" endtime="20210714 22:52:23.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:23.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:23.203" endtime="20210714 22:52:23.203"/>
</kw>
<status status="PASS" starttime="20210714 22:52:23.197" endtime="20210714 22:52:23.204"/>
</kw>
<msg timestamp="20210714 22:52:23.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:23.197" endtime="20210714 22:52:23.204"/>
</kw>
<status status="PASS" starttime="20210714 22:52:23.196" endtime="20210714 22:52:23.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:23.207" level="INFO">Running command 'ozone sh key get /64520-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:27.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:27.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:23.206" endtime="20210714 22:52:27.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:27.678" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:27.677" endtime="20210714 22:52:27.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:27.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:27.678" endtime="20210714 22:52:27.678"/>
</kw>
<status status="PASS" starttime="20210714 22:52:23.205" endtime="20210714 22:52:27.679"/>
</kw>
<msg timestamp="20210714 22:52:27.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:23.205" endtime="20210714 22:52:27.679"/>
</kw>
<status status="PASS" starttime="20210714 22:52:23.204" endtime="20210714 22:52:27.679"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:27.683" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:27.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:27.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:27.681" endtime="20210714 22:52:27.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:27.686" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:27.686" endtime="20210714 22:52:27.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:27.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:27.686" endtime="20210714 22:52:27.687"/>
</kw>
<status status="PASS" starttime="20210714 22:52:27.680" endtime="20210714 22:52:27.687"/>
</kw>
<msg timestamp="20210714 22:52:27.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:27.680" endtime="20210714 22:52:27.687"/>
</kw>
<status status="PASS" starttime="20210714 22:52:27.679" endtime="20210714 22:52:27.688"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:27.691" level="INFO">Running command 'ozone sh key put -t RATIS /64520-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:32.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:32.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:27.689" endtime="20210714 22:52:32.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:32.239" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:32.238" endtime="20210714 22:52:32.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:32.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:32.239" endtime="20210714 22:52:32.239"/>
</kw>
<status status="PASS" starttime="20210714 22:52:27.689" endtime="20210714 22:52:32.240"/>
</kw>
<msg timestamp="20210714 22:52:32.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:27.688" endtime="20210714 22:52:32.240"/>
</kw>
<status status="PASS" starttime="20210714 22:52:27.688" endtime="20210714 22:52:32.240"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:32.243" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:32.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:32.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:32.242" endtime="20210714 22:52:32.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:32.246" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:32.246" endtime="20210714 22:52:32.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:32.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:32.247" endtime="20210714 22:52:32.247"/>
</kw>
<status status="PASS" starttime="20210714 22:52:32.241" endtime="20210714 22:52:32.247"/>
</kw>
<msg timestamp="20210714 22:52:32.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:32.241" endtime="20210714 22:52:32.248"/>
</kw>
<status status="PASS" starttime="20210714 22:52:32.240" endtime="20210714 22:52:32.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:32.251" level="INFO">Running command 'ozone sh key get /64520-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:36.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:36.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:32.249" endtime="20210714 22:52:36.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:36.578" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:36.577" endtime="20210714 22:52:36.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:36.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:36.578" endtime="20210714 22:52:36.579"/>
</kw>
<status status="PASS" starttime="20210714 22:52:32.249" endtime="20210714 22:52:36.579"/>
</kw>
<msg timestamp="20210714 22:52:36.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:32.248" endtime="20210714 22:52:36.579"/>
</kw>
<status status="PASS" starttime="20210714 22:52:32.248" endtime="20210714 22:52:36.579"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:36.583" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:36.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:36.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:36.581" endtime="20210714 22:52:36.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:36.586" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:36.585" endtime="20210714 22:52:36.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:36.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:36.586" endtime="20210714 22:52:36.587"/>
</kw>
<status status="PASS" starttime="20210714 22:52:36.580" endtime="20210714 22:52:36.587"/>
</kw>
<msg timestamp="20210714 22:52:36.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:36.580" endtime="20210714 22:52:36.587"/>
</kw>
<status status="PASS" starttime="20210714 22:52:36.580" endtime="20210714 22:52:36.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:36.591" level="INFO">Running command 'ozone sh key info /64520-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:39.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:39.497" level="INFO">${output} = {
  "volumeName": "64520-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:52:30.207Z",
  "modificationTime": "2021-07-14T22:52:31.762Z...</msg>
<status status="PASS" starttime="20210714 22:52:36.589" endtime="20210714 22:52:39.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:39.498" level="INFO">{
  "volumeName": "64520-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:52:30.207Z",
  "modificationTime": "2021-07-14T22:52:31.762Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:52:39.497" endtime="20210714 22:52:39.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:39.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:39.498" endtime="20210714 22:52:39.499"/>
</kw>
<status status="PASS" starttime="20210714 22:52:36.588" endtime="20210714 22:52:39.499"/>
</kw>
<msg timestamp="20210714 22:52:39.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:36.588" endtime="20210714 22:52:39.499"/>
</kw>
<msg timestamp="20210714 22:52:39.500" level="INFO">${result} = {
  "volumeName": "64520-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:52:30.207Z",
  "modificationTime": "2021-07-14T22:52:31.762Z...</msg>
<status status="PASS" starttime="20210714 22:52:36.587" endtime="20210714 22:52:39.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:52:39.500" endtime="20210714 22:52:39.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:39.503" level="INFO">Running command 'ozone sh key delete /64520-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:42.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:42.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:39.502" endtime="20210714 22:52:42.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:42.332" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:42.331" endtime="20210714 22:52:42.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:42.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:42.332" endtime="20210714 22:52:42.333"/>
</kw>
<status status="PASS" starttime="20210714 22:52:39.501" endtime="20210714 22:52:42.333"/>
</kw>
<msg timestamp="20210714 22:52:42.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:39.501" endtime="20210714 22:52:42.333"/>
</kw>
<status status="PASS" starttime="20210714 22:52:39.500" endtime="20210714 22:52:42.334"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:42.337" level="INFO">Running command 'ozone sh key cp /64520-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:47.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:47.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:42.335" endtime="20210714 22:52:47.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:47.270" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:47.269" endtime="20210714 22:52:47.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:47.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:47.270" endtime="20210714 22:52:47.271"/>
</kw>
<status status="PASS" starttime="20210714 22:52:42.335" endtime="20210714 22:52:47.271"/>
</kw>
<msg timestamp="20210714 22:52:47.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:42.335" endtime="20210714 22:52:47.271"/>
</kw>
<status status="PASS" starttime="20210714 22:52:42.334" endtime="20210714 22:52:47.272"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:47.275" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:47.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:47.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:47.273" endtime="20210714 22:52:47.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:47.278" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:47.277" endtime="20210714 22:52:47.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:47.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:47.278" endtime="20210714 22:52:47.279"/>
</kw>
<status status="PASS" starttime="20210714 22:52:47.272" endtime="20210714 22:52:47.279"/>
</kw>
<msg timestamp="20210714 22:52:47.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:47.272" endtime="20210714 22:52:47.279"/>
</kw>
<status status="PASS" starttime="20210714 22:52:47.272" endtime="20210714 22:52:47.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:47.283" level="INFO">Running command 'ozone sh key get /64520-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:51.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:51.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:47.281" endtime="20210714 22:52:51.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:51.530" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:51.529" endtime="20210714 22:52:51.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:51.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:51.530" endtime="20210714 22:52:51.531"/>
</kw>
<status status="PASS" starttime="20210714 22:52:47.280" endtime="20210714 22:52:51.531"/>
</kw>
<msg timestamp="20210714 22:52:51.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:47.280" endtime="20210714 22:52:51.531"/>
</kw>
<status status="PASS" starttime="20210714 22:52:47.280" endtime="20210714 22:52:51.531"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:51.535" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:51.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:51.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:51.533" endtime="20210714 22:52:51.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:51.538" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:51.537" endtime="20210714 22:52:51.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:51.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:51.538" endtime="20210714 22:52:51.538"/>
</kw>
<status status="PASS" starttime="20210714 22:52:51.532" endtime="20210714 22:52:51.539"/>
</kw>
<msg timestamp="20210714 22:52:51.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:51.532" endtime="20210714 22:52:51.539"/>
</kw>
<status status="PASS" starttime="20210714 22:52:51.532" endtime="20210714 22:52:51.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:51.542" level="INFO">Running command 'ozone sh key delete /64520-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:54.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:52:54.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:51.541" endtime="20210714 22:52:54.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:54.292" level="INFO"/>
<status status="PASS" starttime="20210714 22:52:54.292" endtime="20210714 22:52:54.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:52:54.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:52:54.293" endtime="20210714 22:52:54.293"/>
</kw>
<status status="PASS" starttime="20210714 22:52:51.540" endtime="20210714 22:52:54.294"/>
</kw>
<msg timestamp="20210714 22:52:54.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:51.540" endtime="20210714 22:52:54.294"/>
</kw>
<status status="PASS" starttime="20210714 22:52:51.539" endtime="20210714 22:52:54.294"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:54.297" level="INFO">Running command 'ozone sh key get /64520-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:52:56.962" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:52:56.963" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:52:54.295" endtime="20210714 22:52:56.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:52:56.964" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:52:56.963" endtime="20210714 22:52:56.964"/>
</kw>
<msg timestamp="20210714 22:52:56.964" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210714 22:52:54.294" endtime="20210714 22:52:56.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:52:56.964" endtime="20210714 22:52:56.965"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:52:56.968" level="INFO">Running command 'ozone sh key get --force /64520-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:01.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:01.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:52:56.966" endtime="20210714 22:53:01.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:01.342" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:01.342" endtime="20210714 22:53:01.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:01.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:01.343" endtime="20210714 22:53:01.343"/>
</kw>
<status status="PASS" starttime="20210714 22:52:56.966" endtime="20210714 22:53:01.343"/>
</kw>
<msg timestamp="20210714 22:53:01.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:52:56.966" endtime="20210714 22:53:01.344"/>
</kw>
<msg timestamp="20210714 22:53:01.344" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:52:56.965" endtime="20210714 22:53:01.344"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:53:01.344" endtime="20210714 22:53:01.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:01.348" level="INFO">Running command 'ozone sh key info /64520-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:04.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:04.385" level="INFO">${output} = {
  "volumeName": "64520-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:52:21.101Z",
  "modificationTime": "2021-07-14T22:52:22.711Z",
  "...</msg>
<status status="PASS" starttime="20210714 22:53:01.346" endtime="20210714 22:53:04.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:04.386" level="INFO">{
  "volumeName": "64520-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:52:21.101Z",
  "modificationTime": "2021-07-14T22:52:22.711Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210714 22:53:04.385" endtime="20210714 22:53:04.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:04.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:04.386" endtime="20210714 22:53:04.387"/>
</kw>
<status status="PASS" starttime="20210714 22:53:01.346" endtime="20210714 22:53:04.387"/>
</kw>
<msg timestamp="20210714 22:53:04.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:01.345" endtime="20210714 22:53:04.388"/>
</kw>
<msg timestamp="20210714 22:53:04.388" level="INFO">${result} = {
  "volumeName": "64520-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-07-14T22:52:21.101Z",
  "modificationTime": "2021-07-14T22:52:22.711Z",
  "...</msg>
<status status="PASS" starttime="20210714 22:53:01.344" endtime="20210714 22:53:04.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:53:04.388" endtime="20210714 22:53:04.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:04.392" level="INFO">Running command 'ozone sh key list /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:07.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:07.509" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210714 22:53:04.390" endtime="20210714 22:53:07.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:07.510" level="INFO">key1</msg>
<status status="PASS" starttime="20210714 22:53:07.510" endtime="20210714 22:53:07.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:07.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:07.511" endtime="20210714 22:53:07.511"/>
</kw>
<status status="PASS" starttime="20210714 22:53:04.390" endtime="20210714 22:53:07.511"/>
</kw>
<msg timestamp="20210714 22:53:07.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:04.389" endtime="20210714 22:53:07.512"/>
</kw>
<msg timestamp="20210714 22:53:07.512" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210714 22:53:04.388" endtime="20210714 22:53:07.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:07.512" endtime="20210714 22:53:07.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:07.516" level="INFO">Running command 'ozone sh key rename /64520-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:10.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:10.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:07.514" endtime="20210714 22:53:10.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:10.298" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:10.297" endtime="20210714 22:53:10.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:10.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:10.298" endtime="20210714 22:53:10.299"/>
</kw>
<status status="PASS" starttime="20210714 22:53:07.513" endtime="20210714 22:53:10.299"/>
</kw>
<msg timestamp="20210714 22:53:10.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:07.513" endtime="20210714 22:53:10.299"/>
</kw>
<status status="PASS" starttime="20210714 22:53:07.513" endtime="20210714 22:53:10.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:10.303" level="INFO">Running command 'ozone sh key list /64520-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:13.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:13.291" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210714 22:53:10.301" endtime="20210714 22:53:13.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:13.292" level="INFO">key2</msg>
<status status="PASS" starttime="20210714 22:53:13.291" endtime="20210714 22:53:13.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:13.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:13.292" endtime="20210714 22:53:13.293"/>
</kw>
<status status="PASS" starttime="20210714 22:53:10.301" endtime="20210714 22:53:13.293"/>
</kw>
<msg timestamp="20210714 22:53:13.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:10.300" endtime="20210714 22:53:13.293"/>
</kw>
<msg timestamp="20210714 22:53:13.293" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210714 22:53:10.300" endtime="20210714 22:53:13.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:13.293" endtime="20210714 22:53:13.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:13.297" level="INFO">Running command 'ozone sh key delete /64520-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:16.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:16.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:13.296" endtime="20210714 22:53:16.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:16.096" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:16.095" endtime="20210714 22:53:16.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:16.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:16.096" endtime="20210714 22:53:16.097"/>
</kw>
<status status="PASS" starttime="20210714 22:53:13.295" endtime="20210714 22:53:16.098"/>
</kw>
<msg timestamp="20210714 22:53:16.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:13.295" endtime="20210714 22:53:16.098"/>
</kw>
<status status="PASS" starttime="20210714 22:53:13.294" endtime="20210714 22:53:16.098"/>
</kw>
<status status="PASS" starttime="20210714 22:52:18.444" endtime="20210714 22:53:16.098"/>
</kw>
<status status="PASS" starttime="20210714 22:52:18.444" endtime="20210714 22:53:16.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:16.101" level="INFO">Running command 'ozone sh volume clrquota --space-quota /64520-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:18.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:18.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:16.100" endtime="20210714 22:53:18.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:18.778" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:18.777" endtime="20210714 22:53:18.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:18.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:18.778" endtime="20210714 22:53:18.779"/>
</kw>
<status status="PASS" starttime="20210714 22:53:16.099" endtime="20210714 22:53:18.779"/>
</kw>
<msg timestamp="20210714 22:53:18.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:16.099" endtime="20210714 22:53:18.779"/>
</kw>
<status status="PASS" starttime="20210714 22:53:16.098" endtime="20210714 22:53:18.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:18.783" level="INFO">Running command 'ozone sh volume info /64520-rpcwoscheme | jq -r '. | select(.name=="64520-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:21.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:21.815" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:18.781" endtime="20210714 22:53:21.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:21.816" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:21.815" endtime="20210714 22:53:21.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:21.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:21.816" endtime="20210714 22:53:21.817"/>
</kw>
<status status="PASS" starttime="20210714 22:53:18.781" endtime="20210714 22:53:21.817"/>
</kw>
<msg timestamp="20210714 22:53:21.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:18.780" endtime="20210714 22:53:21.817"/>
</kw>
<msg timestamp="20210714 22:53:21.818" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:18.780" endtime="20210714 22:53:21.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:21.818" endtime="20210714 22:53:21.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:21.822" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /64520-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:24.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:24.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:21.820" endtime="20210714 22:53:24.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:24.569" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:24.568" endtime="20210714 22:53:24.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:24.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:24.569" endtime="20210714 22:53:24.570"/>
</kw>
<status status="PASS" starttime="20210714 22:53:21.819" endtime="20210714 22:53:24.570"/>
</kw>
<msg timestamp="20210714 22:53:24.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:21.819" endtime="20210714 22:53:24.570"/>
</kw>
<status status="PASS" starttime="20210714 22:53:21.818" endtime="20210714 22:53:24.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:24.574" level="INFO">Running command 'ozone sh volume info /64520-rpcwoscheme | jq -r '. | select(.name=="64520-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:27.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:27.577" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:24.572" endtime="20210714 22:53:27.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:27.578" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:27.578" endtime="20210714 22:53:27.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:27.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:27.579" endtime="20210714 22:53:27.579"/>
</kw>
<status status="PASS" starttime="20210714 22:53:24.572" endtime="20210714 22:53:27.579"/>
</kw>
<msg timestamp="20210714 22:53:27.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:24.571" endtime="20210714 22:53:27.580"/>
</kw>
<msg timestamp="20210714 22:53:27.580" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:24.571" endtime="20210714 22:53:27.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:27.580" endtime="20210714 22:53:27.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:27.584" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /64520-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:30.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:30.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:27.582" endtime="20210714 22:53:30.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:30.394" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:30.393" endtime="20210714 22:53:30.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:30.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:30.394" endtime="20210714 22:53:30.394"/>
</kw>
<status status="PASS" starttime="20210714 22:53:27.582" endtime="20210714 22:53:30.395"/>
</kw>
<msg timestamp="20210714 22:53:30.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:27.581" endtime="20210714 22:53:30.395"/>
</kw>
<status status="PASS" starttime="20210714 22:53:27.580" endtime="20210714 22:53:30.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:30.399" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:33.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:33.220" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:30.397" endtime="20210714 22:53:33.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:33.221" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:33.220" endtime="20210714 22:53:33.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:33.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:33.221" endtime="20210714 22:53:33.222"/>
</kw>
<status status="PASS" starttime="20210714 22:53:30.396" endtime="20210714 22:53:33.222"/>
</kw>
<msg timestamp="20210714 22:53:33.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:30.396" endtime="20210714 22:53:33.222"/>
</kw>
<msg timestamp="20210714 22:53:33.223" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:30.395" endtime="20210714 22:53:33.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:33.223" endtime="20210714 22:53:33.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:33.228" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /64520-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:35.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:35.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:33.225" endtime="20210714 22:53:35.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:35.925" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:35.924" endtime="20210714 22:53:35.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:35.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:35.925" endtime="20210714 22:53:35.925"/>
</kw>
<status status="PASS" starttime="20210714 22:53:33.224" endtime="20210714 22:53:35.926"/>
</kw>
<msg timestamp="20210714 22:53:35.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:33.224" endtime="20210714 22:53:35.926"/>
</kw>
<status status="PASS" starttime="20210714 22:53:33.223" endtime="20210714 22:53:35.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:35.930" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:38.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:38.866" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:35.928" endtime="20210714 22:53:38.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:38.867" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:38.866" endtime="20210714 22:53:38.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:38.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:38.867" endtime="20210714 22:53:38.868"/>
</kw>
<status status="PASS" starttime="20210714 22:53:35.927" endtime="20210714 22:53:38.868"/>
</kw>
<msg timestamp="20210714 22:53:38.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:35.927" endtime="20210714 22:53:38.868"/>
</kw>
<msg timestamp="20210714 22:53:38.868" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:35.926" endtime="20210714 22:53:38.868"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:38.868" endtime="20210714 22:53:38.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:38.873" level="INFO">Running command 'ozone sh bucket delete /64520-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:41.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:41.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:38.870" endtime="20210714 22:53:41.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:41.623" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:41.622" endtime="20210714 22:53:41.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:41.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:41.623" endtime="20210714 22:53:41.624"/>
</kw>
<status status="PASS" starttime="20210714 22:53:38.870" endtime="20210714 22:53:41.624"/>
</kw>
<msg timestamp="20210714 22:53:41.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:38.870" endtime="20210714 22:53:41.624"/>
</kw>
<status status="PASS" starttime="20210714 22:53:38.869" endtime="20210714 22:53:41.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:41.628" level="INFO">Running command 'ozone sh volume delete /64520-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:44.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:44.130" level="INFO">${output} = Volume 64520-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210714 22:53:41.626" endtime="20210714 22:53:44.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:44.132" level="INFO">Volume 64520-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210714 22:53:44.131" endtime="20210714 22:53:44.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:44.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:44.132" endtime="20210714 22:53:44.132"/>
</kw>
<status status="PASS" starttime="20210714 22:53:41.625" endtime="20210714 22:53:44.133"/>
</kw>
<msg timestamp="20210714 22:53:44.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:41.625" endtime="20210714 22:53:44.133"/>
</kw>
<status status="PASS" starttime="20210714 22:53:41.625" endtime="20210714 22:53:44.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:44.136" level="INFO">Running command 'ozone sh volume create /64520-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:46.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:46.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:44.135" endtime="20210714 22:53:46.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:46.804" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:46.804" endtime="20210714 22:53:46.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:46.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:46.805" endtime="20210714 22:53:46.805"/>
</kw>
<status status="PASS" starttime="20210714 22:53:44.134" endtime="20210714 22:53:46.805"/>
</kw>
<msg timestamp="20210714 22:53:46.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:44.134" endtime="20210714 22:53:46.806"/>
</kw>
<status status="PASS" starttime="20210714 22:53:44.133" endtime="20210714 22:53:46.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:46.809" level="INFO">Running command 'ozone sh volume info /64520-rpcwoscheme | jq -r '. | select(.name=="64520-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:49.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:49.736" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:46.808" endtime="20210714 22:53:49.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:49.738" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:49.737" endtime="20210714 22:53:49.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:49.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:49.738" endtime="20210714 22:53:49.738"/>
</kw>
<status status="PASS" starttime="20210714 22:53:46.807" endtime="20210714 22:53:49.739"/>
</kw>
<msg timestamp="20210714 22:53:49.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:46.807" endtime="20210714 22:53:49.739"/>
</kw>
<msg timestamp="20210714 22:53:49.739" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:46.806" endtime="20210714 22:53:49.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:49.739" endtime="20210714 22:53:49.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:49.743" level="INFO">Running command 'ozone sh volume info /64520-rpcwoscheme | jq -r '. | select(.name=="64520-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:52.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:52.642" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:49.741" endtime="20210714 22:53:52.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:52.644" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:52.643" endtime="20210714 22:53:52.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:52.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:52.644" endtime="20210714 22:53:52.644"/>
</kw>
<status status="PASS" starttime="20210714 22:53:49.741" endtime="20210714 22:53:52.645"/>
</kw>
<msg timestamp="20210714 22:53:52.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:49.741" endtime="20210714 22:53:52.645"/>
</kw>
<msg timestamp="20210714 22:53:52.645" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:49.740" endtime="20210714 22:53:52.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:52.645" endtime="20210714 22:53:52.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:52.650" level="INFO">Running command 'ozone sh bucket create /64520-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:55.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:55.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:53:52.648" endtime="20210714 22:53:55.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:55.439" level="INFO"/>
<status status="PASS" starttime="20210714 22:53:55.439" endtime="20210714 22:53:55.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:55.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:55.440" endtime="20210714 22:53:55.440"/>
</kw>
<status status="PASS" starttime="20210714 22:53:52.647" endtime="20210714 22:53:55.441"/>
</kw>
<msg timestamp="20210714 22:53:55.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:52.647" endtime="20210714 22:53:55.441"/>
</kw>
<status status="PASS" starttime="20210714 22:53:52.646" endtime="20210714 22:53:55.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:55.445" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:53:58.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:53:58.373" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:55.443" endtime="20210714 22:53:58.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:53:58.374" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:53:58.374" endtime="20210714 22:53:58.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:53:58.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:53:58.375" endtime="20210714 22:53:58.375"/>
</kw>
<status status="PASS" starttime="20210714 22:53:55.442" endtime="20210714 22:53:58.375"/>
</kw>
<msg timestamp="20210714 22:53:58.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:55.442" endtime="20210714 22:53:58.376"/>
</kw>
<msg timestamp="20210714 22:53:58.376" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:55.441" endtime="20210714 22:53:58.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:53:58.376" endtime="20210714 22:53:58.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:53:58.380" level="INFO">Running command 'ozone sh bucket info /64520-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:01.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:01.158" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210714 22:53:58.378" endtime="20210714 22:54:01.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:01.159" level="INFO">-1</msg>
<status status="PASS" starttime="20210714 22:54:01.158" endtime="20210714 22:54:01.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:01.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:01.159" endtime="20210714 22:54:01.160"/>
</kw>
<status status="PASS" starttime="20210714 22:53:58.378" endtime="20210714 22:54:01.160"/>
</kw>
<msg timestamp="20210714 22:54:01.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:53:58.377" endtime="20210714 22:54:01.160"/>
</kw>
<msg timestamp="20210714 22:54:01.161" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210714 22:53:58.377" endtime="20210714 22:54:01.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:01.161" endtime="20210714 22:54:01.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:01.165" level="INFO">Running command 'ozone sh bucket delete /64520-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:03.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:03.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:01.163" endtime="20210714 22:54:03.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:03.736" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:03.735" endtime="20210714 22:54:03.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:03.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:03.736" endtime="20210714 22:54:03.737"/>
</kw>
<status status="PASS" starttime="20210714 22:54:01.162" endtime="20210714 22:54:03.737"/>
</kw>
<msg timestamp="20210714 22:54:03.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:01.162" endtime="20210714 22:54:03.737"/>
</kw>
<status status="PASS" starttime="20210714 22:54:01.161" endtime="20210714 22:54:03.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:03.741" level="INFO">Running command 'ozone sh volume delete /64520-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:06.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:06.416" level="INFO">${output} = Volume 64520-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210714 22:54:03.739" endtime="20210714 22:54:06.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:06.417" level="INFO">Volume 64520-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210714 22:54:06.417" endtime="20210714 22:54:06.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:06.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:06.418" endtime="20210714 22:54:06.418"/>
</kw>
<status status="PASS" starttime="20210714 22:54:03.738" endtime="20210714 22:54:06.419"/>
</kw>
<msg timestamp="20210714 22:54:06.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:03.738" endtime="20210714 22:54:06.419"/>
</kw>
<status status="PASS" starttime="20210714 22:54:03.737" endtime="20210714 22:54:06.419"/>
</kw>
<status status="PASS" starttime="20210714 22:51:38.318" endtime="20210714 22:54:06.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:51:38.316" endtime="20210714 22:54:06.419"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20210714 22:45:06.807" endtime="20210714 22:54:06.421"/>
</suite>
<status status="PASS" starttime="20210714 22:39:38.032" endtime="20210714 22:54:06.424"/>
</suite>
<suite id="s1-s11" name="Gdpr" source="/opt/hadoop/smoketest/gdpr">
<suite id="s1-s11-s1" name="Gdpr" source="/opt/hadoop/smoketest/gdpr/gdpr.robot">
<kw name="Generate volume" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:54:10.210" level="INFO">${random} = orkuc</msg>
<status status="PASS" starttime="20210714 22:54:10.210" endtime="20210714 22:54:10.210"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:54:10.211" level="INFO">${volume} = orkuc</msg>
<status status="PASS" starttime="20210714 22:54:10.210" endtime="20210714 22:54:10.211"/>
</kw>
<status status="PASS" starttime="20210714 22:54:10.209" endtime="20210714 22:54:10.211"/>
</kw>
<test id="s1-s11-s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:10.216" level="INFO">Running command 'ozone sh volume create /orkuc --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:12.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:12.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:10.213" endtime="20210714 22:54:12.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:12.797" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:12.796" endtime="20210714 22:54:12.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:12.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:12.797" endtime="20210714 22:54:12.798"/>
</kw>
<status status="PASS" starttime="20210714 22:54:10.213" endtime="20210714 22:54:12.798"/>
</kw>
<msg timestamp="20210714 22:54:12.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:10.213" endtime="20210714 22:54:12.798"/>
</kw>
<status status="PASS" starttime="20210714 22:54:10.212" endtime="20210714 22:54:12.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/mybucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:12.802" level="INFO">Running command 'ozone sh bucket create /orkuc/mybucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:15.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:15.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:12.800" endtime="20210714 22:54:15.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:15.363" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:15.363" endtime="20210714 22:54:15.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:15.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:15.364" endtime="20210714 22:54:15.364"/>
</kw>
<status status="PASS" starttime="20210714 22:54:12.800" endtime="20210714 22:54:15.364"/>
</kw>
<msg timestamp="20210714 22:54:15.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:12.799" endtime="20210714 22:54:15.365"/>
</kw>
<status status="PASS" starttime="20210714 22:54:12.799" endtime="20210714 22:54:15.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:15.368" level="INFO">Running command 'ozone sh bucket info /orkuc/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:18.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:18.322" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20210714 22:54:15.366" endtime="20210714 22:54:18.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:18.323" level="INFO">null</msg>
<status status="PASS" starttime="20210714 22:54:18.322" endtime="20210714 22:54:18.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:18.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:18.323" endtime="20210714 22:54:18.324"/>
</kw>
<status status="PASS" starttime="20210714 22:54:15.366" endtime="20210714 22:54:18.324"/>
</kw>
<msg timestamp="20210714 22:54:18.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:15.366" endtime="20210714 22:54:18.324"/>
</kw>
<msg timestamp="20210714 22:54:18.324" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20210714 22:54:15.365" endtime="20210714 22:54:18.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:18.325" endtime="20210714 22:54:18.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket1/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:18.328" level="INFO">Running command 'ozone sh key put /orkuc/mybucket1/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:22.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:22.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:18.326" endtime="20210714 22:54:22.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:22.976" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:22.975" endtime="20210714 22:54:22.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:22.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:22.976" endtime="20210714 22:54:22.976"/>
</kw>
<status status="PASS" starttime="20210714 22:54:18.326" endtime="20210714 22:54:22.977"/>
</kw>
<msg timestamp="20210714 22:54:22.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:18.326" endtime="20210714 22:54:22.977"/>
</kw>
<status status="PASS" starttime="20210714 22:54:18.325" endtime="20210714 22:54:22.977"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:22.980" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:22.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:22.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:22.978" endtime="20210714 22:54:22.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:22.984" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:22.983" endtime="20210714 22:54:22.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:22.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:22.984" endtime="20210714 22:54:22.984"/>
</kw>
<status status="PASS" starttime="20210714 22:54:22.978" endtime="20210714 22:54:22.985"/>
</kw>
<msg timestamp="20210714 22:54:22.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:22.978" endtime="20210714 22:54:22.985"/>
</kw>
<status status="PASS" starttime="20210714 22:54:22.977" endtime="20210714 22:54:22.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:22.988" level="INFO">Running command 'ozone sh key info /orkuc/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:25.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:25.809" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20210714 22:54:22.986" endtime="20210714 22:54:25.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:25.810" level="INFO">null</msg>
<status status="PASS" starttime="20210714 22:54:25.809" endtime="20210714 22:54:25.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:25.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:25.810" endtime="20210714 22:54:25.811"/>
</kw>
<status status="PASS" starttime="20210714 22:54:22.986" endtime="20210714 22:54:25.811"/>
</kw>
<msg timestamp="20210714 22:54:25.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:22.986" endtime="20210714 22:54:25.811"/>
</kw>
<msg timestamp="20210714 22:54:25.812" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20210714 22:54:22.985" endtime="20210714 22:54:25.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:25.812" endtime="20210714 22:54:25.812"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket1/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:25.816" level="INFO">Running command 'ozone sh key delete /orkuc/mybucket1/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:28.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:28.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:25.814" endtime="20210714 22:54:28.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:28.556" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:28.556" endtime="20210714 22:54:28.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:28.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:28.557" endtime="20210714 22:54:28.557"/>
</kw>
<status status="PASS" starttime="20210714 22:54:25.813" endtime="20210714 22:54:28.557"/>
</kw>
<msg timestamp="20210714 22:54:28.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:25.813" endtime="20210714 22:54:28.558"/>
</kw>
<status status="PASS" starttime="20210714 22:54:25.812" endtime="20210714 22:54:28.558"/>
</kw>
<status status="PASS" starttime="20210714 22:54:10.212" endtime="20210714 22:54:28.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:54:10.211" endtime="20210714 22:54:28.558"/>
</test>
<test id="s1-s11-s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:28.564" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /orkuc/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:31.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:31.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:28.562" endtime="20210714 22:54:31.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:31.113" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:31.112" endtime="20210714 22:54:31.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:31.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:31.113" endtime="20210714 22:54:31.114"/>
</kw>
<status status="PASS" starttime="20210714 22:54:28.561" endtime="20210714 22:54:31.114"/>
</kw>
<msg timestamp="20210714 22:54:31.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:28.561" endtime="20210714 22:54:31.114"/>
</kw>
<status status="PASS" starttime="20210714 22:54:28.561" endtime="20210714 22:54:31.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:31.118" level="INFO">Running command 'ozone sh bucket info /orkuc/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:34.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:34.143" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20210714 22:54:31.116" endtime="20210714 22:54:34.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:34.145" level="INFO">true</msg>
<status status="PASS" starttime="20210714 22:54:34.144" endtime="20210714 22:54:34.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:34.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:34.145" endtime="20210714 22:54:34.145"/>
</kw>
<status status="PASS" starttime="20210714 22:54:31.115" endtime="20210714 22:54:34.146"/>
</kw>
<msg timestamp="20210714 22:54:34.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:31.115" endtime="20210714 22:54:34.146"/>
</kw>
<msg timestamp="20210714 22:54:34.146" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20210714 22:54:31.114" endtime="20210714 22:54:34.146"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:34.146" endtime="20210714 22:54:34.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket2/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:34.150" level="INFO">Running command 'ozone sh key put /orkuc/mybucket2/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:38.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:38.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:34.148" endtime="20210714 22:54:38.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:38.916" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:38.915" endtime="20210714 22:54:38.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:38.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:38.916" endtime="20210714 22:54:38.917"/>
</kw>
<status status="PASS" starttime="20210714 22:54:34.148" endtime="20210714 22:54:38.917"/>
</kw>
<msg timestamp="20210714 22:54:38.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:34.147" endtime="20210714 22:54:38.917"/>
</kw>
<status status="PASS" starttime="20210714 22:54:34.147" endtime="20210714 22:54:38.917"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:38.920" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:38.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:38.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:38.919" endtime="20210714 22:54:38.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:38.923" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:38.923" endtime="20210714 22:54:38.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:38.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:38.924" endtime="20210714 22:54:38.924"/>
</kw>
<status status="PASS" starttime="20210714 22:54:38.918" endtime="20210714 22:54:38.924"/>
</kw>
<msg timestamp="20210714 22:54:38.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:38.918" endtime="20210714 22:54:38.925"/>
</kw>
<status status="PASS" starttime="20210714 22:54:38.917" endtime="20210714 22:54:38.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:38.928" level="INFO">Running command 'ozone sh key info /orkuc/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:41.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:41.967" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20210714 22:54:38.926" endtime="20210714 22:54:41.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:41.968" level="INFO">true</msg>
<status status="PASS" starttime="20210714 22:54:41.967" endtime="20210714 22:54:41.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:41.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:41.968" endtime="20210714 22:54:41.969"/>
</kw>
<status status="PASS" starttime="20210714 22:54:38.926" endtime="20210714 22:54:41.969"/>
</kw>
<msg timestamp="20210714 22:54:41.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:38.926" endtime="20210714 22:54:41.970"/>
</kw>
<msg timestamp="20210714 22:54:41.970" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20210714 22:54:38.925" endtime="20210714 22:54:41.970"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:41.970" endtime="20210714 22:54:41.970"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket2/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:41.975" level="INFO">Running command 'ozone sh key delete /orkuc/mybucket2/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:44.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:44.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:41.972" endtime="20210714 22:54:44.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:44.471" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:44.470" endtime="20210714 22:54:44.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:44.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:44.471" endtime="20210714 22:54:44.472"/>
</kw>
<status status="PASS" starttime="20210714 22:54:41.971" endtime="20210714 22:54:44.472"/>
</kw>
<msg timestamp="20210714 22:54:44.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:41.971" endtime="20210714 22:54:44.472"/>
</kw>
<status status="PASS" starttime="20210714 22:54:41.970" endtime="20210714 22:54:44.473"/>
</kw>
<status status="PASS" starttime="20210714 22:54:28.560" endtime="20210714 22:54:44.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:54:28.559" endtime="20210714 22:54:44.473"/>
</test>
<test id="s1-s11-s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:44.478" level="INFO">Running command 'ozone sh bucket create -g=true /orkuc/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:47.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:47.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:44.476" endtime="20210714 22:54:47.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:47.226" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:47.225" endtime="20210714 22:54:47.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:47.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:47.226" endtime="20210714 22:54:47.227"/>
</kw>
<status status="PASS" starttime="20210714 22:54:44.476" endtime="20210714 22:54:47.227"/>
</kw>
<msg timestamp="20210714 22:54:47.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:44.475" endtime="20210714 22:54:47.227"/>
</kw>
<status status="PASS" starttime="20210714 22:54:44.475" endtime="20210714 22:54:47.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:47.231" level="INFO">Running command 'ozone sh bucket info /orkuc/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:50.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:50.157" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20210714 22:54:47.229" endtime="20210714 22:54:50.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:50.158" level="INFO">true</msg>
<status status="PASS" starttime="20210714 22:54:50.157" endtime="20210714 22:54:50.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:50.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:50.158" endtime="20210714 22:54:50.159"/>
</kw>
<status status="PASS" starttime="20210714 22:54:47.228" endtime="20210714 22:54:50.159"/>
</kw>
<msg timestamp="20210714 22:54:50.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:47.228" endtime="20210714 22:54:50.159"/>
</kw>
<msg timestamp="20210714 22:54:50.159" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20210714 22:54:47.227" endtime="20210714 22:54:50.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:50.160" endtime="20210714 22:54:50.160"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket3/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:50.163" level="INFO">Running command 'ozone sh key put /orkuc/mybucket3/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:54.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:54.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:50.161" endtime="20210714 22:54:54.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:54.592" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:54.592" endtime="20210714 22:54:54.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:54.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:54.592" endtime="20210714 22:54:54.593"/>
</kw>
<status status="PASS" starttime="20210714 22:54:50.161" endtime="20210714 22:54:54.593"/>
</kw>
<msg timestamp="20210714 22:54:54.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:50.161" endtime="20210714 22:54:54.593"/>
</kw>
<status status="PASS" starttime="20210714 22:54:50.160" endtime="20210714 22:54:54.594"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:54.597" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:54.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:54.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:54.595" endtime="20210714 22:54:54.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:54.600" level="INFO"/>
<status status="PASS" starttime="20210714 22:54:54.600" endtime="20210714 22:54:54.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:54.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:54.600" endtime="20210714 22:54:54.601"/>
</kw>
<status status="PASS" starttime="20210714 22:54:54.594" endtime="20210714 22:54:54.601"/>
</kw>
<msg timestamp="20210714 22:54:54.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:54.594" endtime="20210714 22:54:54.601"/>
</kw>
<status status="PASS" starttime="20210714 22:54:54.594" endtime="20210714 22:54:54.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:54.605" level="INFO">Running command 'ozone sh key info /orkuc/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:54:57.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:54:57.475" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20210714 22:54:54.603" endtime="20210714 22:54:57.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:54:57.476" level="INFO">true</msg>
<status status="PASS" starttime="20210714 22:54:57.475" endtime="20210714 22:54:57.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:54:57.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:54:57.476" endtime="20210714 22:54:57.477"/>
</kw>
<status status="PASS" starttime="20210714 22:54:54.602" endtime="20210714 22:54:57.477"/>
</kw>
<msg timestamp="20210714 22:54:57.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:54.602" endtime="20210714 22:54:57.477"/>
</kw>
<msg timestamp="20210714 22:54:57.477" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20210714 22:54:54.602" endtime="20210714 22:54:57.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:54:57.478" endtime="20210714 22:54:57.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket3/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:54:57.481" level="INFO">Running command 'ozone sh key delete /orkuc/mybucket3/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:00.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:00.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:54:57.479" endtime="20210714 22:55:00.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:00.217" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:00.216" endtime="20210714 22:55:00.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:00.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:00.217" endtime="20210714 22:55:00.217"/>
</kw>
<status status="PASS" starttime="20210714 22:54:57.479" endtime="20210714 22:55:00.218"/>
</kw>
<msg timestamp="20210714 22:55:00.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:54:57.479" endtime="20210714 22:55:00.218"/>
</kw>
<status status="PASS" starttime="20210714 22:54:57.478" endtime="20210714 22:55:00.218"/>
</kw>
<status status="PASS" starttime="20210714 22:54:44.474" endtime="20210714 22:55:00.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:54:44.474" endtime="20210714 22:55:00.218"/>
</test>
<test id="s1-s11-s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:00.223" level="INFO">Running command 'ozone sh bucket create /orkuc/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:02.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:02.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:00.221" endtime="20210714 22:55:02.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:02.965" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:02.965" endtime="20210714 22:55:02.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:02.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:02.966" endtime="20210714 22:55:02.966"/>
</kw>
<status status="PASS" starttime="20210714 22:55:00.221" endtime="20210714 22:55:02.966"/>
</kw>
<msg timestamp="20210714 22:55:02.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:00.221" endtime="20210714 22:55:02.967"/>
</kw>
<status status="PASS" starttime="20210714 22:55:00.220" endtime="20210714 22:55:02.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:02.970" level="INFO">Running command 'ozone sh bucket info /orkuc/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:05.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:05.938" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20210714 22:55:02.969" endtime="20210714 22:55:05.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:05.939" level="INFO">null</msg>
<status status="PASS" starttime="20210714 22:55:05.938" endtime="20210714 22:55:05.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:05.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:05.939" endtime="20210714 22:55:05.940"/>
</kw>
<status status="PASS" starttime="20210714 22:55:02.968" endtime="20210714 22:55:05.940"/>
</kw>
<msg timestamp="20210714 22:55:05.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:02.968" endtime="20210714 22:55:05.940"/>
</kw>
<msg timestamp="20210714 22:55:05.940" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20210714 22:55:02.967" endtime="20210714 22:55:05.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:55:05.941" endtime="20210714 22:55:05.941"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket4/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:05.944" level="INFO">Running command 'ozone sh key put /orkuc/mybucket4/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:10.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:10.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:05.942" endtime="20210714 22:55:10.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:10.667" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:10.667" endtime="20210714 22:55:10.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:10.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:10.668" endtime="20210714 22:55:10.668"/>
</kw>
<status status="PASS" starttime="20210714 22:55:05.942" endtime="20210714 22:55:10.668"/>
</kw>
<msg timestamp="20210714 22:55:10.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:05.942" endtime="20210714 22:55:10.669"/>
</kw>
<status status="PASS" starttime="20210714 22:55:05.941" endtime="20210714 22:55:10.669"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:10.672" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:10.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:10.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:10.671" endtime="20210714 22:55:10.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:10.676" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:10.675" endtime="20210714 22:55:10.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:10.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:10.676" endtime="20210714 22:55:10.676"/>
</kw>
<status status="PASS" starttime="20210714 22:55:10.670" endtime="20210714 22:55:10.676"/>
</kw>
<msg timestamp="20210714 22:55:10.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:10.670" endtime="20210714 22:55:10.677"/>
</kw>
<status status="PASS" starttime="20210714 22:55:10.669" endtime="20210714 22:55:10.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:10.680" level="INFO">Running command 'ozone sh key info /orkuc/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:13.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:13.637" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20210714 22:55:10.678" endtime="20210714 22:55:13.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:13.638" level="INFO">null</msg>
<status status="PASS" starttime="20210714 22:55:13.637" endtime="20210714 22:55:13.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:13.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:13.638" endtime="20210714 22:55:13.639"/>
</kw>
<status status="PASS" starttime="20210714 22:55:10.678" endtime="20210714 22:55:13.639"/>
</kw>
<msg timestamp="20210714 22:55:13.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:10.678" endtime="20210714 22:55:13.639"/>
</kw>
<msg timestamp="20210714 22:55:13.639" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20210714 22:55:10.677" endtime="20210714 22:55:13.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:55:13.639" endtime="20210714 22:55:13.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket4/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:13.644" level="INFO">Running command 'ozone sh key delete /orkuc/mybucket4/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:16.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:16.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:13.641" endtime="20210714 22:55:16.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:16.310" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:16.309" endtime="20210714 22:55:16.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:16.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:16.310" endtime="20210714 22:55:16.311"/>
</kw>
<status status="PASS" starttime="20210714 22:55:13.641" endtime="20210714 22:55:16.311"/>
</kw>
<msg timestamp="20210714 22:55:16.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:13.640" endtime="20210714 22:55:16.311"/>
</kw>
<status status="PASS" starttime="20210714 22:55:13.640" endtime="20210714 22:55:16.312"/>
</kw>
<status status="PASS" starttime="20210714 22:55:00.220" endtime="20210714 22:55:16.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:55:00.219" endtime="20210714 22:55:16.312"/>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="PASS" starttime="20210714 22:54:10.186" endtime="20210714 22:55:16.313"/>
</suite>
<status status="PASS" starttime="20210714 22:54:10.163" endtime="20210714 22:55:16.315"/>
</suite>
<suite id="s1-s12" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s12-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Unsecure Cluster">
<kw name="Get Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token get</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:20.109" level="INFO">Running command 'ozone sh token get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:21.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:21.828" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:20.104" endtime="20210714 22:55:21.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:21.829" level="INFO">Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:21.828" endtime="20210714 22:55:21.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:21.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:21.829" endtime="20210714 22:55:21.830"/>
</kw>
<status status="PASS" starttime="20210714 22:55:20.104" endtime="20210714 22:55:21.830"/>
</kw>
<msg timestamp="20210714 22:55:21.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:20.104" endtime="20210714 22:55:21.830"/>
</kw>
<msg timestamp="20210714 22:55:21.831" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:20.103" endtime="20210714 22:55:21.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token get</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:21.831" endtime="20210714 22:55:21.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:21.831" endtime="20210714 22:55:21.832"/>
</kw>
<status status="PASS" starttime="20210714 22:55:20.103" endtime="20210714 22:55:21.832"/>
</kw>
<kw name="Renew Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:21.836" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:23.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:23.499" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:21.834" endtime="20210714 22:55:23.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:23.501" level="INFO">Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:23.500" endtime="20210714 22:55:23.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:23.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:23.501" endtime="20210714 22:55:23.501"/>
</kw>
<status status="PASS" starttime="20210714 22:55:21.833" endtime="20210714 22:55:23.502"/>
</kw>
<msg timestamp="20210714 22:55:23.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:21.833" endtime="20210714 22:55:23.502"/>
</kw>
<msg timestamp="20210714 22:55:23.502" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:21.832" endtime="20210714 22:55:23.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token renew</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:23.502" endtime="20210714 22:55:23.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:23.503" endtime="20210714 22:55:23.503"/>
</kw>
<status status="PASS" starttime="20210714 22:55:21.832" endtime="20210714 22:55:23.503"/>
</kw>
<kw name="Cancel Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:23.506" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:25.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:25.187" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:23.505" endtime="20210714 22:55:25.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:25.188" level="INFO">Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:25.187" endtime="20210714 22:55:25.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:25.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:25.189" endtime="20210714 22:55:25.189"/>
</kw>
<status status="PASS" starttime="20210714 22:55:23.504" endtime="20210714 22:55:25.189"/>
</kw>
<msg timestamp="20210714 22:55:25.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:23.504" endtime="20210714 22:55:25.190"/>
</kw>
<msg timestamp="20210714 22:55:25.190" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20210714 22:55:23.504" endtime="20210714 22:55:25.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token cancel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:25.190" endtime="20210714 22:55:25.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:25.190" endtime="20210714 22:55:25.191"/>
</kw>
<status status="PASS" starttime="20210714 22:55:23.503" endtime="20210714 22:55:25.191"/>
</kw>
<status status="PASS" starttime="20210714 22:55:20.103" endtime="20210714 22:55:25.191"/>
</kw>
<status status="PASS" starttime="20210714 22:55:20.102" endtime="20210714 22:55:25.191"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:55:25.191" endtime="20210714 22:55:25.192"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:25.195" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:26.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:26.909" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210714 22:55:25.193" endtime="20210714 22:55:26.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:26.910" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210714 22:55:26.909" endtime="20210714 22:55:26.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:26.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:26.910" endtime="20210714 22:55:26.911"/>
</kw>
<status status="PASS" starttime="20210714 22:55:25.193" endtime="20210714 22:55:26.911"/>
</kw>
<msg timestamp="20210714 22:55:26.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:25.192" endtime="20210714 22:55:26.911"/>
</kw>
<msg timestamp="20210714 22:55:26.912" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210714 22:55:25.192" endtime="20210714 22:55:26.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:55:26.912" endtime="20210714 22:55:26.912"/>
</kw>
<status status="PASS" starttime="20210714 22:55:25.192" endtime="20210714 22:55:26.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:55:20.101" endtime="20210714 22:55:26.912"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20210714 22:55:20.057" endtime="20210714 22:55:26.914"/>
</suite>
<suite id="s1-s13" name="s3-link" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:55:30.722" level="INFO">${random} = 27714</msg>
<status status="PASS" starttime="20210714 22:55:30.722" endtime="20210714 22:55:30.722"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:55:30.724" level="INFO">${PREFIX} = 27714</msg>
<status status="PASS" starttime="20210714 22:55:30.723" endtime="20210714 22:55:30.724"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.722" endtime="20210714 22:55:30.724"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.722" endtime="20210714 22:55:30.724"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:30.728" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:30.730" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:55:30.730" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:55:30.725" endtime="20210714 22:55:30.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:55:30.730" endtime="20210714 22:55:30.731"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:30.733" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:30.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:30.860" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:55:30.731" endtime="20210714 22:55:30.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:30.865" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:54.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:54.327" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package aw...</msg>
<status status="PASS" starttime="20210714 22:55:30.863" endtime="20210714 22:55:54.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:54.329" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:55:54.328" endtime="20210714 22:55:54.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:54.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:54.329" endtime="20210714 22:55:54.329"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.863" endtime="20210714 22:55:54.330"/>
</kw>
<msg timestamp="20210714 22:55:54.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:30.862" endtime="20210714 22:55:54.330"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.862" endtime="20210714 22:55:54.330"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.862" endtime="20210714 22:55:54.330"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.861" endtime="20210714 22:55:54.330"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.725" endtime="20210714 22:55:54.331"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.724" endtime="20210714 22:55:54.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:55:54.332" endtime="20210714 22:55:54.332"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:55:54.332" endtime="20210714 22:55:54.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:54.336" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:54.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:54.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:54.335" endtime="20210714 22:55:54.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:54.629" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:54.629" endtime="20210714 22:55:54.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:54.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:54.629" endtime="20210714 22:55:54.630"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.334" endtime="20210714 22:55:54.630"/>
</kw>
<msg timestamp="20210714 22:55:54.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:54.334" endtime="20210714 22:55:54.630"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.333" endtime="20210714 22:55:54.630"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:54.633" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:54.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:54.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:54.632" endtime="20210714 22:55:54.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:54.910" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:54.910" endtime="20210714 22:55:54.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:54.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:54.911" endtime="20210714 22:55:54.911"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.631" endtime="20210714 22:55:54.911"/>
</kw>
<msg timestamp="20210714 22:55:54.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:54.631" endtime="20210714 22:55:54.911"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.631" endtime="20210714 22:55:54.912"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:54.915" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:55.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:55.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:54.913" endtime="20210714 22:55:55.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:55.206" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:55.206" endtime="20210714 22:55:55.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:55.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:55.206" endtime="20210714 22:55:55.207"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.912" endtime="20210714 22:55:55.207"/>
</kw>
<msg timestamp="20210714 22:55:55.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:54.912" endtime="20210714 22:55:55.207"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.912" endtime="20210714 22:55:55.208"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:55.211" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:55.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:55:55.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:55.209" endtime="20210714 22:55:55.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:55:55.489" level="INFO"/>
<status status="PASS" starttime="20210714 22:55:55.488" endtime="20210714 22:55:55.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:55:55.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:55:55.489" endtime="20210714 22:55:55.489"/>
</kw>
<status status="PASS" starttime="20210714 22:55:55.208" endtime="20210714 22:55:55.490"/>
</kw>
<msg timestamp="20210714 22:55:55.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:55.208" endtime="20210714 22:55:55.490"/>
</kw>
<status status="PASS" starttime="20210714 22:55:55.208" endtime="20210714 22:55:55.490"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.333" endtime="20210714 22:55:55.490"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.333" endtime="20210714 22:55:55.490"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.331" endtime="20210714 22:55:55.490"/>
</kw>
<status status="PASS" starttime="20210714 22:55:54.331" endtime="20210714 22:55:55.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:55:55.491" endtime="20210714 22:55:55.491"/>
</kw>
<msg timestamp="20210714 22:55:55.491" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:55:55.491" endtime="20210714 22:55:55.492"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:55:55.492" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:55:55.492" endtime="20210714 22:55:55.492"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:55.496" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:55:58.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:55:58.126" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210714 22:55:55.494" endtime="20210714 22:55:58.126"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:55:58.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:58.127" endtime="20210714 22:55:58.127"/>
</kw>
<msg timestamp="20210714 22:55:58.128" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20210714 22:55:55.493" endtime="20210714 22:55:58.128"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:55:58.128" endtime="20210714 22:55:58.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:55:58.132" level="INFO">Running command 'ozone sh volume create o3://om/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:00.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:00.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:55:58.130" endtime="20210714 22:56:00.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:00.718" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:00.718" endtime="20210714 22:56:00.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:00.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:00.719" endtime="20210714 22:56:00.719"/>
</kw>
<status status="PASS" starttime="20210714 22:55:58.129" endtime="20210714 22:56:00.719"/>
</kw>
<msg timestamp="20210714 22:56:00.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:55:58.129" endtime="20210714 22:56:00.720"/>
</kw>
<status status="PASS" starttime="20210714 22:55:58.128" endtime="20210714 22:56:00.720"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:00.723" level="INFO">Running command 'ozone sh bucket create o3://om/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:03.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:03.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:00.721" endtime="20210714 22:56:03.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:03.450" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:03.450" endtime="20210714 22:56:03.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:03.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:03.451" endtime="20210714 22:56:03.451"/>
</kw>
<status status="PASS" starttime="20210714 22:56:00.721" endtime="20210714 22:56:03.451"/>
</kw>
<msg timestamp="20210714 22:56:03.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:00.721" endtime="20210714 22:56:03.451"/>
</kw>
<status status="PASS" starttime="20210714 22:56:00.720" endtime="20210714 22:56:03.452"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:03.455" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:06.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:06.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:03.453" endtime="20210714 22:56:06.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:06.096" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:06.096" endtime="20210714 22:56:06.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:06.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:06.096" endtime="20210714 22:56:06.097"/>
</kw>
<status status="PASS" starttime="20210714 22:56:03.453" endtime="20210714 22:56:06.097"/>
</kw>
<msg timestamp="20210714 22:56:06.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:03.453" endtime="20210714 22:56:06.098"/>
</kw>
<status status="PASS" starttime="20210714 22:56:03.452" endtime="20210714 22:56:06.098"/>
</kw>
<status status="PASS" starttime="20210714 22:56:03.452" endtime="20210714 22:56:06.098"/>
</kw>
<status status="PASS" starttime="20210714 22:55:55.493" endtime="20210714 22:56:06.098"/>
</kw>
<status status="PASS" starttime="20210714 22:55:55.492" endtime="20210714 22:56:06.098"/>
</kw>
<status status="PASS" starttime="20210714 22:55:30.721" endtime="20210714 22:56:06.098"/>
</kw>
<suite id="s1-s13-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:06.107" level="INFO">${random} = 89137</msg>
<status status="PASS" starttime="20210714 22:56:06.107" endtime="20210714 22:56:06.107"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:06.109" level="INFO">${PREFIX} = 89137</msg>
<status status="PASS" starttime="20210714 22:56:06.108" endtime="20210714 22:56:06.109"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.107" endtime="20210714 22:56:06.109"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.106" endtime="20210714 22:56:06.109"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:06.111" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:06.113" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:06.113" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:06.110" endtime="20210714 22:56:06.113"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:06.114" endtime="20210714 22:56:06.114"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:06.116" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:06.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:06.250" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:06.114" endtime="20210714 22:56:06.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:06.254" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:06.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:06.599" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:06.252" endtime="20210714 22:56:06.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:06.601" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:06.600" endtime="20210714 22:56:06.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:06.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:06.601" endtime="20210714 22:56:06.601"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.252" endtime="20210714 22:56:06.602"/>
</kw>
<msg timestamp="20210714 22:56:06.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:06.252" endtime="20210714 22:56:06.602"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.251" endtime="20210714 22:56:06.602"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.251" endtime="20210714 22:56:06.602"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.250" endtime="20210714 22:56:06.602"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.109" endtime="20210714 22:56:06.602"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.109" endtime="20210714 22:56:06.603"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:06.604" endtime="20210714 22:56:06.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:06.604" endtime="20210714 22:56:06.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:06.608" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:06.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:06.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:06.606" endtime="20210714 22:56:06.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:06.890" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:06.889" endtime="20210714 22:56:06.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:06.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:06.890" endtime="20210714 22:56:06.890"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.606" endtime="20210714 22:56:06.891"/>
</kw>
<msg timestamp="20210714 22:56:06.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:06.606" endtime="20210714 22:56:06.891"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.605" endtime="20210714 22:56:06.891"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:06.894" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:07.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:07.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:06.892" endtime="20210714 22:56:07.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:07.176" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:07.176" endtime="20210714 22:56:07.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:07.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:07.177" endtime="20210714 22:56:07.177"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.892" endtime="20210714 22:56:07.177"/>
</kw>
<msg timestamp="20210714 22:56:07.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:06.892" endtime="20210714 22:56:07.178"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.891" endtime="20210714 22:56:07.178"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:07.181" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:07.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:07.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:07.179" endtime="20210714 22:56:07.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:07.460" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:07.459" endtime="20210714 22:56:07.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:07.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:07.460" endtime="20210714 22:56:07.461"/>
</kw>
<status status="PASS" starttime="20210714 22:56:07.179" endtime="20210714 22:56:07.461"/>
</kw>
<msg timestamp="20210714 22:56:07.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:07.178" endtime="20210714 22:56:07.461"/>
</kw>
<status status="PASS" starttime="20210714 22:56:07.178" endtime="20210714 22:56:07.461"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:07.464" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:07.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:07.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:07.462" endtime="20210714 22:56:07.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:07.744" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:07.743" endtime="20210714 22:56:07.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:07.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:07.744" endtime="20210714 22:56:07.744"/>
</kw>
<status status="PASS" starttime="20210714 22:56:07.462" endtime="20210714 22:56:07.745"/>
</kw>
<msg timestamp="20210714 22:56:07.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:07.462" endtime="20210714 22:56:07.745"/>
</kw>
<status status="PASS" starttime="20210714 22:56:07.461" endtime="20210714 22:56:07.745"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.605" endtime="20210714 22:56:07.745"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.605" endtime="20210714 22:56:07.745"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.603" endtime="20210714 22:56:07.745"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.603" endtime="20210714 22:56:07.746"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:07.746" endtime="20210714 22:56:07.747"/>
</kw>
<msg timestamp="20210714 22:56:07.747" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:07.746" endtime="20210714 22:56:07.747"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:07.747" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:07.747" endtime="20210714 22:56:07.747"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:07.750" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:10.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:10.722" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:07.748" endtime="20210714 22:56:10.722"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:10.723" endtime="20210714 22:56:10.723"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:10.723" endtime="20210714 22:56:10.724"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:10.724" endtime="20210714 22:56:10.724"/>
</kw>
<msg timestamp="20210714 22:56:10.724" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:07.748" endtime="20210714 22:56:10.724"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:10.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:10.725" endtime="20210714 22:56:10.725"/>
</kw>
<status status="PASS" starttime="20210714 22:56:07.748" endtime="20210714 22:56:10.725"/>
</kw>
<status status="PASS" starttime="20210714 22:56:07.747" endtime="20210714 22:56:10.725"/>
</kw>
<status status="PASS" starttime="20210714 22:56:06.106" endtime="20210714 22:56:10.725"/>
</kw>
<test id="s1-s13-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:10.730" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:56:10.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:10.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:10.728" endtime="20210714 22:56:10.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:10.733" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:10.732" endtime="20210714 22:56:10.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:10.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:10.733" endtime="20210714 22:56:10.734"/>
</kw>
<status status="PASS" starttime="20210714 22:56:10.727" endtime="20210714 22:56:10.734"/>
</kw>
<msg timestamp="20210714 22:56:10.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:10.727" endtime="20210714 22:56:10.734"/>
</kw>
<status status="PASS" starttime="20210714 22:56:10.727" endtime="20210714 22:56:10.734"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:10.738" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:13.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:13.642" level="INFO">${output} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20210714 22:56:10.736" endtime="20210714 22:56:13.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:13.643" level="INFO">Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20210714 22:56:13.642" endtime="20210714 22:56:13.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:13.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:13.643" endtime="20210714 22:56:13.644"/>
</kw>
<status status="PASS" starttime="20210714 22:56:10.736" endtime="20210714 22:56:13.644"/>
</kw>
<msg timestamp="20210714 22:56:13.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:10.735" endtime="20210714 22:56:13.644"/>
</kw>
<msg timestamp="20210714 22:56:13.645" level="INFO">${output} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20210714 22:56:10.735" endtime="20210714 22:56:13.645"/>
</kw>
<msg timestamp="20210714 22:56:13.645" level="INFO">${result} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20210714 22:56:10.734" endtime="20210714 22:56:13.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:13.645" endtime="20210714 22:56:13.645"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:13.649" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:14.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:14.144" level="INFO">${output} = Completed 29 Bytes/29 Bytes (247 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20210714 22:56:13.647" endtime="20210714 22:56:14.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:14.145" level="INFO">Completed 29 Bytes/29 Bytes (247 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20210714 22:56:14.144" endtime="20210714 22:56:14.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:14.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:14.145" endtime="20210714 22:56:14.146"/>
</kw>
<status status="PASS" starttime="20210714 22:56:13.647" endtime="20210714 22:56:14.146"/>
</kw>
<msg timestamp="20210714 22:56:14.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:13.647" endtime="20210714 22:56:14.146"/>
</kw>
<msg timestamp="20210714 22:56:14.146" level="INFO">${output} = Completed 29 Bytes/29 Bytes (247 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20210714 22:56:13.646" endtime="20210714 22:56:14.146"/>
</kw>
<msg timestamp="20210714 22:56:14.146" level="INFO">${result} = Completed 29 Bytes/29 Bytes (247 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20210714 22:56:13.646" endtime="20210714 22:56:14.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:14.147" endtime="20210714 22:56:14.147"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:14.151" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:14.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:14.594" level="INFO">${output} =                            PRE dir1/
2021-07-14 22:56:13         29 testfile</msg>
<status status="PASS" starttime="20210714 22:56:14.149" endtime="20210714 22:56:14.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:14.595" level="INFO">                           PRE dir1/
2021-07-14 22:56:13         29 testfile</msg>
<status status="PASS" starttime="20210714 22:56:14.595" endtime="20210714 22:56:14.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:14.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:14.596" endtime="20210714 22:56:14.596"/>
</kw>
<status status="PASS" starttime="20210714 22:56:14.149" endtime="20210714 22:56:14.597"/>
</kw>
<msg timestamp="20210714 22:56:14.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:14.148" endtime="20210714 22:56:14.597"/>
</kw>
<msg timestamp="20210714 22:56:14.597" level="INFO">${output} =                            PRE dir1/
2021-07-14 22:56:13         29 testfile</msg>
<status status="PASS" starttime="20210714 22:56:14.148" endtime="20210714 22:56:14.597"/>
</kw>
<msg timestamp="20210714 22:56:14.597" level="INFO">${result} =                            PRE dir1/
2021-07-14 22:56:13         29 testfile</msg>
<status status="PASS" starttime="20210714 22:56:14.147" endtime="20210714 22:56:14.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:14.597" endtime="20210714 22:56:14.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:14.598" endtime="20210714 22:56:14.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:14.598" endtime="20210714 22:56:14.599"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:14.603" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:15.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:15.009" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:56:14.601" endtime="20210714 22:56:15.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:15.010" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:56:15.009" endtime="20210714 22:56:15.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:15.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:15.010" endtime="20210714 22:56:15.011"/>
</kw>
<status status="PASS" starttime="20210714 22:56:14.600" endtime="20210714 22:56:15.011"/>
</kw>
<msg timestamp="20210714 22:56:15.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:14.600" endtime="20210714 22:56:15.011"/>
</kw>
<msg timestamp="20210714 22:56:15.011" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:56:14.599" endtime="20210714 22:56:15.012"/>
</kw>
<msg timestamp="20210714 22:56:15.012" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:56:14.599" endtime="20210714 22:56:15.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:15.012" endtime="20210714 22:56:15.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:15.012" endtime="20210714 22:56:15.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:15.013" endtime="20210714 22:56:15.013"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:15.017" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:15.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:15.415" level="INFO">${output} = 2021-07-14 22:56:14         29 file</msg>
<status status="PASS" starttime="20210714 22:56:15.015" endtime="20210714 22:56:15.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:15.416" level="INFO">2021-07-14 22:56:14         29 file</msg>
<status status="PASS" starttime="20210714 22:56:15.415" endtime="20210714 22:56:15.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:15.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:15.416" endtime="20210714 22:56:15.416"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.015" endtime="20210714 22:56:15.417"/>
</kw>
<msg timestamp="20210714 22:56:15.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:15.014" endtime="20210714 22:56:15.417"/>
</kw>
<msg timestamp="20210714 22:56:15.417" level="INFO">${output} = 2021-07-14 22:56:14         29 file</msg>
<status status="PASS" starttime="20210714 22:56:15.014" endtime="20210714 22:56:15.417"/>
</kw>
<msg timestamp="20210714 22:56:15.417" level="INFO">${result} = 2021-07-14 22:56:14         29 file</msg>
<status status="PASS" starttime="20210714 22:56:15.013" endtime="20210714 22:56:15.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:15.418" endtime="20210714 22:56:15.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:15.418" endtime="20210714 22:56:15.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:15.419" endtime="20210714 22:56:15.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:10.725" endtime="20210714 22:56:15.419"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:56:06.098" endtime="20210714 22:56:15.421"/>
</suite>
<suite id="s1-s13-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:15.437" level="INFO">${random} = 89395</msg>
<status status="PASS" starttime="20210714 22:56:15.436" endtime="20210714 22:56:15.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:15.438" level="INFO">${PREFIX} = 89395</msg>
<status status="PASS" starttime="20210714 22:56:15.437" endtime="20210714 22:56:15.438"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.436" endtime="20210714 22:56:15.438"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.436" endtime="20210714 22:56:15.438"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:15.441" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:15.443" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:15.443" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:15.439" endtime="20210714 22:56:15.443"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:15.443" endtime="20210714 22:56:15.444"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:15.445" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:15.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:15.562" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:15.444" endtime="20210714 22:56:15.562"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:15.566" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:15.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:15.911" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:15.564" endtime="20210714 22:56:15.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:15.912" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:15.911" endtime="20210714 22:56:15.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:15.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:15.912" endtime="20210714 22:56:15.912"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.564" endtime="20210714 22:56:15.913"/>
</kw>
<msg timestamp="20210714 22:56:15.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:15.564" endtime="20210714 22:56:15.913"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.563" endtime="20210714 22:56:15.913"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.563" endtime="20210714 22:56:15.913"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.562" endtime="20210714 22:56:15.913"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.439" endtime="20210714 22:56:15.914"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.438" endtime="20210714 22:56:15.914"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:15.915" endtime="20210714 22:56:15.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:15.915" endtime="20210714 22:56:15.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:15.919" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:16.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:16.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:15.917" endtime="20210714 22:56:16.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:16.200" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:16.200" endtime="20210714 22:56:16.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:16.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:16.201" endtime="20210714 22:56:16.201"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.916" endtime="20210714 22:56:16.201"/>
</kw>
<msg timestamp="20210714 22:56:16.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:15.916" endtime="20210714 22:56:16.202"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.916" endtime="20210714 22:56:16.202"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:16.205" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:16.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:16.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:16.203" endtime="20210714 22:56:16.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:16.485" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:16.484" endtime="20210714 22:56:16.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:16.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:16.485" endtime="20210714 22:56:16.486"/>
</kw>
<status status="PASS" starttime="20210714 22:56:16.203" endtime="20210714 22:56:16.486"/>
</kw>
<msg timestamp="20210714 22:56:16.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:16.202" endtime="20210714 22:56:16.486"/>
</kw>
<status status="PASS" starttime="20210714 22:56:16.202" endtime="20210714 22:56:16.486"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:16.489" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:16.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:16.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:16.488" endtime="20210714 22:56:16.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:16.769" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:16.768" endtime="20210714 22:56:16.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:16.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:16.769" endtime="20210714 22:56:16.769"/>
</kw>
<status status="PASS" starttime="20210714 22:56:16.487" endtime="20210714 22:56:16.770"/>
</kw>
<msg timestamp="20210714 22:56:16.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:16.487" endtime="20210714 22:56:16.770"/>
</kw>
<status status="PASS" starttime="20210714 22:56:16.486" endtime="20210714 22:56:16.770"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:16.773" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:17.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:17.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:16.771" endtime="20210714 22:56:17.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:17.059" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:17.058" endtime="20210714 22:56:17.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:17.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:17.059" endtime="20210714 22:56:17.059"/>
</kw>
<status status="PASS" starttime="20210714 22:56:16.771" endtime="20210714 22:56:17.060"/>
</kw>
<msg timestamp="20210714 22:56:17.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:16.771" endtime="20210714 22:56:17.060"/>
</kw>
<status status="PASS" starttime="20210714 22:56:16.770" endtime="20210714 22:56:17.060"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.916" endtime="20210714 22:56:17.060"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.915" endtime="20210714 22:56:17.060"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.914" endtime="20210714 22:56:17.061"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.914" endtime="20210714 22:56:17.061"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:17.061" endtime="20210714 22:56:17.061"/>
</kw>
<msg timestamp="20210714 22:56:17.062" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:17.061" endtime="20210714 22:56:17.062"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:17.062" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:17.062" endtime="20210714 22:56:17.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:17.065" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:19.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:19.988" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:17.063" endtime="20210714 22:56:19.989"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:19.989" endtime="20210714 22:56:19.990"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:19.990" endtime="20210714 22:56:19.990"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:19.990" endtime="20210714 22:56:19.991"/>
</kw>
<msg timestamp="20210714 22:56:19.991" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:17.063" endtime="20210714 22:56:19.991"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:19.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:19.991" endtime="20210714 22:56:19.991"/>
</kw>
<status status="PASS" starttime="20210714 22:56:17.063" endtime="20210714 22:56:19.992"/>
</kw>
<status status="PASS" starttime="20210714 22:56:17.062" endtime="20210714 22:56:19.992"/>
</kw>
<status status="PASS" starttime="20210714 22:56:15.435" endtime="20210714 22:56:19.992"/>
</kw>
<test id="s1-s13-s2-t1" name="Bobo3 Client Test">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 /opt/hadoop/smoketest/s3/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:19.997" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:23.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:23.751" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20210714 22:56:19.994" endtime="20210714 22:56:23.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:23.752" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 3.516s

OK
{'ResponseMetadata': {'RequestId': '6f7f9ead-abd3-4efb-b222-50087f22d404', 'HostId': 'y0mKF9aZhh4j8tV', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:20 GMT, Wed, 14 Jul 2021 22:56:20 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:20 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/boto-bucket999', 'server': 'Ozone', 'x-amz-id-2': 'y0mKF9aZhh4j8tV', 'x-amz-request-id': '6f7f9ead-abd3-4efb-b222-50087f22d404', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/boto-bucket999'}
None
None
None
{'ResponseMetadata': {'RequestId': '72d3bd7a-00e9-4b06-b581-ff45f0596b1c', 'HostId': 'ZKPFFyWgDF7H', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:21 GMT, Wed, 14 Jul 2021 22:56:21 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:21 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/bucket-ffqzvbfhgt', 'server': 'Ozone', 'x-amz-id-2': 'ZKPFFyWgDF7H', 'x-amz-request-id': '72d3bd7a-00e9-4b06-b581-ff45f0596b1c', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-ffqzvbfhgt'}
{'ResponseMetadata': {'RequestId': 'cef928cb-06f6-45dd-805b-46bd7394baf4', 'HostId': 'P2jZBwMWi', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'P2jZBwMWi', 'x-amz-request-id': 'cef928cb-06f6-45dd-805b-46bd7394baf4', 'content-length': '455'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'boto-bucket999', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 56, 20, 345000, tzinfo=tzlocal())}, {'Name': 'bucket-ffqzvbfhgt', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 56, 22, 12000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 56, 6, 37000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '4705d5aa-4462-4e35-94dd-3931396f6f92', 'HostId': 'IZkFhkDH48pW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'IZkFhkDH48pW', 'x-amz-request-id': '4705d5aa-4462-4e35-94dd-3931396f6f92', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '33cb644e-42ed-4bf6-87d9-76d7ddb90945', 'HostId': 'hZfXpbrDOUGlR', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'hZfXpbrDOUGlR', 'x-amz-request-id': '33cb644e-42ed-4bf6-87d9-76d7ddb90945'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '03f43c46-019e-4760-8b9f-586ffb316cbe', 'HostId': 'V04AtT0jLf5Zoh', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'etag': '2021-07-14T22:56:22.220Z', 'last-modified': 'Wed, 14 Jul 2021 22:56:22 GMT', 'server': 'Ozone', 'x-amz-id-2': 'V04AtT0jLf5Zoh', 'x-amz-request-id': '03f43c46-019e-4760-8b9f-586ffb316cbe', 'content-length': '3811'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2021, 7, 14, 22, 56, 22, tzinfo=tzutc()), 'ContentLength': 3811, 'ETag': '2021-07-14T22:56:22.220Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2021, 7, 14, 22, 56, 22, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'e925747e-fdbb-4c2c-9761-960e93343051', 'HostId': 'nt9sRpZq', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'nt9sRpZq', 'x-amz-request-id': 'e925747e-fdbb-4c2c-9761-960e93343051', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': 'df45289e-479b-4a3e-aa6b-d0df2797817d', 'HostId': 'uMPQkB66g', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'etag': '2021-07-14T22:56:20.668Z', 'last-modified': 'Wed, 14 Jul 2021 22:56:20 GMT', 'server': 'Ozone', 'x-amz-id-2': 'uMPQkB66g', 'x-amz-request-id': 'df45289e-479b-4a3e-aa6b-d0df2797817d', 'content-length': '3811'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2021, 7, 14, 22, 56, 20, tzinfo=tzutc()), 'ContentLength': 3811, 'ETag': '2021-07-14T22:56:20.668Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2021, 7, 14, 22, 56, 22, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '85867c8f-2ce3-4f1f-80f5-f8bab7cc6949', 'HostId': 'tMouR43ZDc', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:22 GMT, Wed, 14 Jul 2021 22:56:22 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:22 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'tMouR43ZDc', 'x-amz-request-id': '85867c8f-2ce3-4f1f-80f5-f8bab7cc6949', 'content-length': '284'}, 'RetryAttempts': 0}, 'Bucket': 'link', 'Key': 'sgukprfvqm', 'UploadId': 'c5e27401-9ade-44f7-ab46-d920a9c4049a-106581418478403743'}
{'ResponseMetadata': {'RequestId': '49f9c139-428f-47a2-8e99-f12695422fdc', 'HostId': '1c1cxdTWXxxpdt', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:56:23 GMT, Wed, 14 Jul 2021 22:56:23 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:56:23 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': '1c1cxdTWXxxpdt', 'x-amz-request-id': '49f9c139-428f-47a2-8e99-f12695422fdc', 'content-length': '310'}, 'RetryAttempts': 0}, 'Location': 'link', 'Bucket': 'link', 'Key': 'sgukprfvqm', 'ETag': '1403de271d7093af83d5d711e6d5ae492f45e555193e05d5496265c09dbc7982'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20210714 22:56:23.751" endtime="20210714 22:56:23.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:23.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:23.752" endtime="20210714 22:56:23.753"/>
</kw>
<status status="PASS" starttime="20210714 22:56:19.994" endtime="20210714 22:56:23.753"/>
</kw>
<msg timestamp="20210714 22:56:23.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:19.994" endtime="20210714 22:56:23.753"/>
</kw>
<msg timestamp="20210714 22:56:23.754" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20210714 22:56:19.993" endtime="20210714 22:56:23.754"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20210714 22:56:19.992" endtime="20210714 22:56:23.754"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20210714 22:56:15.423" endtime="20210714 22:56:23.755"/>
</suite>
<suite id="s1-s13-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:23.767" level="INFO">${random} = 85612</msg>
<status status="PASS" starttime="20210714 22:56:23.767" endtime="20210714 22:56:23.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:23.769" level="INFO">${PREFIX} = 85612</msg>
<status status="PASS" starttime="20210714 22:56:23.768" endtime="20210714 22:56:23.769"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.767" endtime="20210714 22:56:23.769"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.767" endtime="20210714 22:56:23.769"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:23.772" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:23.775" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:23.775" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:23.770" endtime="20210714 22:56:23.775"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:23.776" endtime="20210714 22:56:23.776"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:23.778" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:23.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:23.904" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:23.776" endtime="20210714 22:56:23.904"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:23.908" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:24.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:24.253" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:23.906" endtime="20210714 22:56:24.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:24.254" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:24.254" endtime="20210714 22:56:24.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:24.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:24.255" endtime="20210714 22:56:24.255"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.906" endtime="20210714 22:56:24.255"/>
</kw>
<msg timestamp="20210714 22:56:24.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:23.906" endtime="20210714 22:56:24.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.905" endtime="20210714 22:56:24.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.905" endtime="20210714 22:56:24.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.904" endtime="20210714 22:56:24.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.770" endtime="20210714 22:56:24.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.770" endtime="20210714 22:56:24.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:24.258" endtime="20210714 22:56:24.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:24.258" endtime="20210714 22:56:24.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:24.263" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:24.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:24.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:24.262" endtime="20210714 22:56:24.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:24.545" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:24.544" endtime="20210714 22:56:24.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:24.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:24.545" endtime="20210714 22:56:24.546"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.261" endtime="20210714 22:56:24.546"/>
</kw>
<msg timestamp="20210714 22:56:24.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:24.261" endtime="20210714 22:56:24.546"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.259" endtime="20210714 22:56:24.546"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:24.549" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:24.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:24.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:24.547" endtime="20210714 22:56:24.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:24.830" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:24.829" endtime="20210714 22:56:24.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:24.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:24.830" endtime="20210714 22:56:24.830"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.547" endtime="20210714 22:56:24.831"/>
</kw>
<msg timestamp="20210714 22:56:24.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:24.547" endtime="20210714 22:56:24.831"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.546" endtime="20210714 22:56:24.831"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:24.834" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:25.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:25.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:24.832" endtime="20210714 22:56:25.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:25.113" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:25.113" endtime="20210714 22:56:25.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:25.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:25.114" endtime="20210714 22:56:25.114"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.832" endtime="20210714 22:56:25.114"/>
</kw>
<msg timestamp="20210714 22:56:25.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:24.832" endtime="20210714 22:56:25.115"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.831" endtime="20210714 22:56:25.115"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:25.118" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:25.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:25.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:25.116" endtime="20210714 22:56:25.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:25.400" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:25.400" endtime="20210714 22:56:25.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:25.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:25.401" endtime="20210714 22:56:25.401"/>
</kw>
<status status="PASS" starttime="20210714 22:56:25.116" endtime="20210714 22:56:25.402"/>
</kw>
<msg timestamp="20210714 22:56:25.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:25.115" endtime="20210714 22:56:25.402"/>
</kw>
<status status="PASS" starttime="20210714 22:56:25.115" endtime="20210714 22:56:25.402"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.259" endtime="20210714 22:56:25.402"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.259" endtime="20210714 22:56:25.402"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.257" endtime="20210714 22:56:25.402"/>
</kw>
<status status="PASS" starttime="20210714 22:56:24.257" endtime="20210714 22:56:25.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:25.403" endtime="20210714 22:56:25.403"/>
</kw>
<msg timestamp="20210714 22:56:25.403" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:25.403" endtime="20210714 22:56:25.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:25.404" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:25.403" endtime="20210714 22:56:25.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:25.407" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:28.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:28.321" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:25.405" endtime="20210714 22:56:28.321"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:28.322" endtime="20210714 22:56:28.323"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:28.323" endtime="20210714 22:56:28.323"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:28.323" endtime="20210714 22:56:28.323"/>
</kw>
<msg timestamp="20210714 22:56:28.324" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:25.405" endtime="20210714 22:56:28.324"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:28.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:28.324" endtime="20210714 22:56:28.324"/>
</kw>
<status status="PASS" starttime="20210714 22:56:25.404" endtime="20210714 22:56:28.324"/>
</kw>
<status status="PASS" starttime="20210714 22:56:25.404" endtime="20210714 22:56:28.325"/>
</kw>
<status status="PASS" starttime="20210714 22:56:23.766" endtime="20210714 22:56:28.325"/>
</kw>
<test id="s1-s13-s3-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:28.327" level="INFO">${postfix} = 21154</msg>
<status status="PASS" starttime="20210714 22:56:28.326" endtime="20210714 22:56:28.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:56:28.327" level="INFO">${bucket} = bucket-21154</msg>
<status status="PASS" starttime="20210714 22:56:28.327" endtime="20210714 22:56:28.327"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:28.332" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-21154 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:28.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:28.750" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-21154"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.329" endtime="20210714 22:56:28.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:28.751" level="INFO">{
    "Location": "http://s3g:9878/bucket-21154"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.750" endtime="20210714 22:56:28.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:28.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:28.751" endtime="20210714 22:56:28.751"/>
</kw>
<status status="PASS" starttime="20210714 22:56:28.329" endtime="20210714 22:56:28.752"/>
</kw>
<msg timestamp="20210714 22:56:28.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:28.329" endtime="20210714 22:56:28.752"/>
</kw>
<msg timestamp="20210714 22:56:28.752" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-21154"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.328" endtime="20210714 22:56:28.752"/>
</kw>
<msg timestamp="20210714 22:56:28.752" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-21154"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.328" endtime="20210714 22:56:28.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:28.753" endtime="20210714 22:56:28.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:28.753" endtime="20210714 22:56:28.754"/>
</kw>
<status status="PASS" starttime="20210714 22:56:28.327" endtime="20210714 22:56:28.754"/>
</kw>
<status status="PASS" starttime="20210714 22:56:28.326" endtime="20210714 22:56:28.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:28.325" endtime="20210714 22:56:28.754"/>
</test>
<test id="s1-s13-s3-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arg>${BUCKET}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:28.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:29.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:29.170" level="INFO">${output} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.758" endtime="20210714 22:56:29.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:29.171" level="INFO">{
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210714 22:56:29.171" endtime="20210714 22:56:29.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:29.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:29.171" endtime="20210714 22:56:29.172"/>
</kw>
<status status="PASS" starttime="20210714 22:56:28.757" endtime="20210714 22:56:29.172"/>
</kw>
<msg timestamp="20210714 22:56:29.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:28.757" endtime="20210714 22:56:29.172"/>
</kw>
<msg timestamp="20210714 22:56:29.173" level="INFO">${output} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.757" endtime="20210714 22:56:29.173"/>
</kw>
<msg timestamp="20210714 22:56:29.173" level="INFO">${result} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210714 22:56:28.756" endtime="20210714 22:56:29.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:29.173" endtime="20210714 22:56:29.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:29.174" endtime="20210714 22:56:29.174"/>
</kw>
<status status="PASS" starttime="20210714 22:56:28.756" endtime="20210714 22:56:29.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:28.755" endtime="20210714 22:56:29.174"/>
</test>
<test id="s1-s13-s3-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:29.179" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:29.781" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:56:29.781" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:56:29.177" endtime="20210714 22:56:29.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:29.782" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:56:29.781" endtime="20210714 22:56:29.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:29.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:29.782" endtime="20210714 22:56:29.783"/>
</kw>
<msg timestamp="20210714 22:56:29.783" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:56:29.176" endtime="20210714 22:56:29.783"/>
</kw>
<msg timestamp="20210714 22:56:29.783" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:56:29.176" endtime="20210714 22:56:29.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:29.784" endtime="20210714 22:56:29.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:29.175" endtime="20210714 22:56:29.784"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:56:23.758" endtime="20210714 22:56:29.786"/>
</suite>
<suite id="s1-s13-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:29.798" level="INFO">${random} = 08348</msg>
<status status="PASS" starttime="20210714 22:56:29.798" endtime="20210714 22:56:29.798"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:29.800" level="INFO">${PREFIX} = 08348</msg>
<status status="PASS" starttime="20210714 22:56:29.798" endtime="20210714 22:56:29.800"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.798" endtime="20210714 22:56:29.800"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.797" endtime="20210714 22:56:29.800"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:29.803" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:29.805" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:29.805" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:29.801" endtime="20210714 22:56:29.805"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:29.805" endtime="20210714 22:56:29.806"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:29.808" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:29.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:29.944" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:29.806" endtime="20210714 22:56:29.944"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:29.948" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:30.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:30.297" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:29.946" endtime="20210714 22:56:30.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:30.298" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:30.298" endtime="20210714 22:56:30.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:30.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:30.299" endtime="20210714 22:56:30.300"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.946" endtime="20210714 22:56:30.300"/>
</kw>
<msg timestamp="20210714 22:56:30.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:29.946" endtime="20210714 22:56:30.300"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.945" endtime="20210714 22:56:30.300"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.945" endtime="20210714 22:56:30.301"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.944" endtime="20210714 22:56:30.301"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.800" endtime="20210714 22:56:30.301"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.800" endtime="20210714 22:56:30.301"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:30.302" endtime="20210714 22:56:30.303"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:30.304" endtime="20210714 22:56:30.304"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:30.308" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:30.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:30.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:30.306" endtime="20210714 22:56:30.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:30.592" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:30.592" endtime="20210714 22:56:30.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:30.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:30.593" endtime="20210714 22:56:30.593"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.306" endtime="20210714 22:56:30.593"/>
</kw>
<msg timestamp="20210714 22:56:30.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:30.305" endtime="20210714 22:56:30.594"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.305" endtime="20210714 22:56:30.594"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:30.597" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:30.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:30.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:30.595" endtime="20210714 22:56:30.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:30.877" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:30.877" endtime="20210714 22:56:30.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:30.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:30.878" endtime="20210714 22:56:30.878"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.595" endtime="20210714 22:56:30.878"/>
</kw>
<msg timestamp="20210714 22:56:30.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:30.595" endtime="20210714 22:56:30.879"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.594" endtime="20210714 22:56:30.879"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:30.882" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:31.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:31.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:30.880" endtime="20210714 22:56:31.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:31.168" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:31.167" endtime="20210714 22:56:31.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:31.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:31.168" endtime="20210714 22:56:31.169"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.880" endtime="20210714 22:56:31.169"/>
</kw>
<msg timestamp="20210714 22:56:31.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:30.879" endtime="20210714 22:56:31.169"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.879" endtime="20210714 22:56:31.170"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:31.173" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:31.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:31.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:31.171" endtime="20210714 22:56:31.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:31.458" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:31.457" endtime="20210714 22:56:31.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:31.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:31.458" endtime="20210714 22:56:31.459"/>
</kw>
<status status="PASS" starttime="20210714 22:56:31.171" endtime="20210714 22:56:31.459"/>
</kw>
<msg timestamp="20210714 22:56:31.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:31.170" endtime="20210714 22:56:31.459"/>
</kw>
<status status="PASS" starttime="20210714 22:56:31.170" endtime="20210714 22:56:31.460"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.305" endtime="20210714 22:56:31.460"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.304" endtime="20210714 22:56:31.460"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.302" endtime="20210714 22:56:31.460"/>
</kw>
<status status="PASS" starttime="20210714 22:56:30.301" endtime="20210714 22:56:31.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:31.461" endtime="20210714 22:56:31.461"/>
</kw>
<msg timestamp="20210714 22:56:31.461" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:31.460" endtime="20210714 22:56:31.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:31.462" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:31.462" endtime="20210714 22:56:31.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:31.466" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:34.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:34.550" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:31.464" endtime="20210714 22:56:34.551"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:34.551" endtime="20210714 22:56:34.552"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:34.552" endtime="20210714 22:56:34.552"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:34.552" endtime="20210714 22:56:34.552"/>
</kw>
<msg timestamp="20210714 22:56:34.553" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:31.463" endtime="20210714 22:56:34.553"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:34.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:34.553" endtime="20210714 22:56:34.553"/>
</kw>
<status status="PASS" starttime="20210714 22:56:31.463" endtime="20210714 22:56:34.554"/>
</kw>
<status status="PASS" starttime="20210714 22:56:31.462" endtime="20210714 22:56:34.554"/>
</kw>
<status status="PASS" starttime="20210714 22:56:29.797" endtime="20210714 22:56:34.554"/>
</kw>
<test id="s1-s13-s4-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create link" library="commonawslib">
<arg>to-be-deleted</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:34.560" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:37.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:37.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:34.558" endtime="20210714 22:56:37.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:37.412" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:37.411" endtime="20210714 22:56:37.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:37.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:37.412" endtime="20210714 22:56:37.413"/>
</kw>
<status status="PASS" starttime="20210714 22:56:34.557" endtime="20210714 22:56:37.413"/>
</kw>
<msg timestamp="20210714 22:56:37.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:34.557" endtime="20210714 22:56:37.413"/>
</kw>
<status status="PASS" starttime="20210714 22:56:34.556" endtime="20210714 22:56:37.413"/>
</kw>
<status status="PASS" starttime="20210714 22:56:34.556" endtime="20210714 22:56:37.414"/>
</kw>
<msg timestamp="20210714 22:56:37.414" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20210714 22:56:34.555" endtime="20210714 22:56:37.414"/>
</kw>
<msg timestamp="20210714 22:56:37.414" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20210714 22:56:34.555" endtime="20210714 22:56:37.414"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:37.419" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:37.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:37.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:37.417" endtime="20210714 22:56:37.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:37.840" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:37.839" endtime="20210714 22:56:37.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:37.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:37.840" endtime="20210714 22:56:37.840"/>
</kw>
<status status="PASS" starttime="20210714 22:56:37.416" endtime="20210714 22:56:37.841"/>
</kw>
<msg timestamp="20210714 22:56:37.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:37.416" endtime="20210714 22:56:37.841"/>
</kw>
<msg timestamp="20210714 22:56:37.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:37.415" endtime="20210714 22:56:37.841"/>
</kw>
<status status="PASS" starttime="20210714 22:56:37.414" endtime="20210714 22:56:37.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:34.554" endtime="20210714 22:56:37.842"/>
</test>
<test id="s1-s13-s4-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:37.846" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:38.252" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:56:38.252" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:56:37.844" endtime="20210714 22:56:38.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:38.253" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:56:38.252" endtime="20210714 22:56:38.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:38.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:38.253" endtime="20210714 22:56:38.254"/>
</kw>
<msg timestamp="20210714 22:56:38.254" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:56:37.843" endtime="20210714 22:56:38.254"/>
</kw>
<msg timestamp="20210714 22:56:38.254" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:56:37.843" endtime="20210714 22:56:38.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:38.254" endtime="20210714 22:56:38.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:37.842" endtime="20210714 22:56:38.255"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:56:29.789" endtime="20210714 22:56:38.256"/>
</suite>
<suite id="s1-s13-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:38.266" level="INFO">${random} = 41946</msg>
<status status="PASS" starttime="20210714 22:56:38.265" endtime="20210714 22:56:38.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:38.267" level="INFO">${PREFIX} = 41946</msg>
<status status="PASS" starttime="20210714 22:56:38.266" endtime="20210714 22:56:38.267"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.265" endtime="20210714 22:56:38.267"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.265" endtime="20210714 22:56:38.267"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:38.270" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:38.272" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:38.272" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:38.268" endtime="20210714 22:56:38.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:38.272" endtime="20210714 22:56:38.273"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:38.274" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:38.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:38.398" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:38.273" endtime="20210714 22:56:38.398"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:38.402" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:38.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:38.748" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:38.400" endtime="20210714 22:56:38.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:38.750" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:38.749" endtime="20210714 22:56:38.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:38.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:38.750" endtime="20210714 22:56:38.750"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.400" endtime="20210714 22:56:38.751"/>
</kw>
<msg timestamp="20210714 22:56:38.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:38.400" endtime="20210714 22:56:38.751"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.399" endtime="20210714 22:56:38.751"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.399" endtime="20210714 22:56:38.751"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.398" endtime="20210714 22:56:38.752"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.268" endtime="20210714 22:56:38.752"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.267" endtime="20210714 22:56:38.752"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:38.753" endtime="20210714 22:56:38.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:38.754" endtime="20210714 22:56:38.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:38.757" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:39.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:39.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:38.756" endtime="20210714 22:56:39.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:39.041" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:39.040" endtime="20210714 22:56:39.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:39.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:39.041" endtime="20210714 22:56:39.041"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.755" endtime="20210714 22:56:39.042"/>
</kw>
<msg timestamp="20210714 22:56:39.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:38.755" endtime="20210714 22:56:39.042"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.755" endtime="20210714 22:56:39.042"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:39.045" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:39.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:39.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:39.043" endtime="20210714 22:56:39.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:39.323" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:39.322" endtime="20210714 22:56:39.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:39.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:39.323" endtime="20210714 22:56:39.323"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.043" endtime="20210714 22:56:39.324"/>
</kw>
<msg timestamp="20210714 22:56:39.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:39.043" endtime="20210714 22:56:39.324"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.042" endtime="20210714 22:56:39.324"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:39.327" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:39.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:39.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:39.325" endtime="20210714 22:56:39.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:39.607" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:39.606" endtime="20210714 22:56:39.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:39.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:39.607" endtime="20210714 22:56:39.607"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.325" endtime="20210714 22:56:39.608"/>
</kw>
<msg timestamp="20210714 22:56:39.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:39.324" endtime="20210714 22:56:39.608"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.324" endtime="20210714 22:56:39.608"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:39.612" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:39.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:39.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:39.610" endtime="20210714 22:56:39.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:39.893" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:39.893" endtime="20210714 22:56:39.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:39.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:39.894" endtime="20210714 22:56:39.894"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.609" endtime="20210714 22:56:39.894"/>
</kw>
<msg timestamp="20210714 22:56:39.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:39.609" endtime="20210714 22:56:39.895"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.608" endtime="20210714 22:56:39.895"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.755" endtime="20210714 22:56:39.895"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.754" endtime="20210714 22:56:39.895"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.752" endtime="20210714 22:56:39.895"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.752" endtime="20210714 22:56:39.895"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:39.896" endtime="20210714 22:56:39.896"/>
</kw>
<msg timestamp="20210714 22:56:39.896" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:39.895" endtime="20210714 22:56:39.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:39.897" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:39.896" endtime="20210714 22:56:39.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:39.900" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:42.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:42.839" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:39.898" endtime="20210714 22:56:42.839"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:42.839" endtime="20210714 22:56:42.840"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:42.840" endtime="20210714 22:56:42.840"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:42.840" endtime="20210714 22:56:42.841"/>
</kw>
<msg timestamp="20210714 22:56:42.841" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:39.898" endtime="20210714 22:56:42.841"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:42.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:42.841" endtime="20210714 22:56:42.841"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.897" endtime="20210714 22:56:42.842"/>
</kw>
<status status="PASS" starttime="20210714 22:56:39.897" endtime="20210714 22:56:42.842"/>
</kw>
<status status="PASS" starttime="20210714 22:56:38.265" endtime="20210714 22:56:42.842"/>
</kw>
<test id="s1-s13-s5-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:42.847" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:43.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:43.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:42.845" endtime="20210714 22:56:43.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:43.248" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:43.247" endtime="20210714 22:56:43.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:43.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:43.248" endtime="20210714 22:56:43.249"/>
</kw>
<status status="PASS" starttime="20210714 22:56:42.844" endtime="20210714 22:56:43.249"/>
</kw>
<msg timestamp="20210714 22:56:43.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:42.844" endtime="20210714 22:56:43.249"/>
</kw>
<msg timestamp="20210714 22:56:43.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:42.844" endtime="20210714 22:56:43.250"/>
</kw>
<msg timestamp="20210714 22:56:43.250" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:56:42.843" endtime="20210714 22:56:43.250"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:43.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:43.658" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:56:43.658" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:56:43.251" endtime="20210714 22:56:43.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:43.659" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:56:43.659" endtime="20210714 22:56:43.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:43.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:43.659" endtime="20210714 22:56:43.660"/>
</kw>
<msg timestamp="20210714 22:56:43.660" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:56:43.251" endtime="20210714 22:56:43.660"/>
</kw>
<msg timestamp="20210714 22:56:43.661" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:56:43.250" endtime="20210714 22:56:43.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:43.661" endtime="20210714 22:56:43.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:43.661" endtime="20210714 22:56:43.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:42.842" endtime="20210714 22:56:43.662"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:56:38.257" endtime="20210714 22:56:43.663"/>
</suite>
<suite id="s1-s13-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:43.672" level="INFO">${random} = 56248</msg>
<status status="PASS" starttime="20210714 22:56:43.672" endtime="20210714 22:56:43.673"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:43.674" level="INFO">${PREFIX} = 56248</msg>
<status status="PASS" starttime="20210714 22:56:43.673" endtime="20210714 22:56:43.674"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.672" endtime="20210714 22:56:43.674"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.672" endtime="20210714 22:56:43.674"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:43.677" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:43.679" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:43.679" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:43.675" endtime="20210714 22:56:43.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:43.679" endtime="20210714 22:56:43.680"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:43.681" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:43.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:43.800" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:43.680" endtime="20210714 22:56:43.801"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:43.805" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:44.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:44.155" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:43.803" endtime="20210714 22:56:44.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:44.156" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:44.156" endtime="20210714 22:56:44.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:44.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:44.157" endtime="20210714 22:56:44.157"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.803" endtime="20210714 22:56:44.158"/>
</kw>
<msg timestamp="20210714 22:56:44.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:43.802" endtime="20210714 22:56:44.158"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.802" endtime="20210714 22:56:44.158"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.802" endtime="20210714 22:56:44.158"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.801" endtime="20210714 22:56:44.158"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.675" endtime="20210714 22:56:44.158"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.675" endtime="20210714 22:56:44.158"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:44.159" endtime="20210714 22:56:44.160"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:44.160" endtime="20210714 22:56:44.160"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:44.165" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:44.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:44.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:44.162" endtime="20210714 22:56:44.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:44.443" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:44.443" endtime="20210714 22:56:44.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:44.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:44.444" endtime="20210714 22:56:44.444"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.161" endtime="20210714 22:56:44.444"/>
</kw>
<msg timestamp="20210714 22:56:44.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:44.161" endtime="20210714 22:56:44.444"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.161" endtime="20210714 22:56:44.445"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:44.448" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:44.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:44.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:44.446" endtime="20210714 22:56:44.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:44.727" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:44.727" endtime="20210714 22:56:44.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:44.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:44.727" endtime="20210714 22:56:44.728"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.446" endtime="20210714 22:56:44.728"/>
</kw>
<msg timestamp="20210714 22:56:44.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:44.445" endtime="20210714 22:56:44.728"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.445" endtime="20210714 22:56:44.729"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:44.732" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:45.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:45.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:44.730" endtime="20210714 22:56:45.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:45.013" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:45.013" endtime="20210714 22:56:45.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:45.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:45.013" endtime="20210714 22:56:45.014"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.729" endtime="20210714 22:56:45.014"/>
</kw>
<msg timestamp="20210714 22:56:45.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:44.729" endtime="20210714 22:56:45.014"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.729" endtime="20210714 22:56:45.014"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:45.018" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:45.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:45.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:45.016" endtime="20210714 22:56:45.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:45.297" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:45.296" endtime="20210714 22:56:45.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:45.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:45.297" endtime="20210714 22:56:45.298"/>
</kw>
<status status="PASS" starttime="20210714 22:56:45.015" endtime="20210714 22:56:45.298"/>
</kw>
<msg timestamp="20210714 22:56:45.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:45.015" endtime="20210714 22:56:45.298"/>
</kw>
<status status="PASS" starttime="20210714 22:56:45.015" endtime="20210714 22:56:45.298"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.161" endtime="20210714 22:56:45.299"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.160" endtime="20210714 22:56:45.299"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.159" endtime="20210714 22:56:45.299"/>
</kw>
<status status="PASS" starttime="20210714 22:56:44.159" endtime="20210714 22:56:45.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:45.300" endtime="20210714 22:56:45.300"/>
</kw>
<msg timestamp="20210714 22:56:45.300" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:45.299" endtime="20210714 22:56:45.300"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:45.300" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:45.300" endtime="20210714 22:56:45.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:45.304" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:48.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:48.303" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:45.302" endtime="20210714 22:56:48.303"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:48.303" endtime="20210714 22:56:48.304"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:48.304" endtime="20210714 22:56:48.304"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:48.304" endtime="20210714 22:56:48.305"/>
</kw>
<msg timestamp="20210714 22:56:48.305" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:45.301" endtime="20210714 22:56:48.305"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:48.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:48.305" endtime="20210714 22:56:48.306"/>
</kw>
<status status="PASS" starttime="20210714 22:56:45.301" endtime="20210714 22:56:48.306"/>
</kw>
<status status="PASS" starttime="20210714 22:56:45.301" endtime="20210714 22:56:48.306"/>
</kw>
<status status="PASS" starttime="20210714 22:56:43.671" endtime="20210714 22:56:48.306"/>
</kw>
<test id="s1-s13-s6-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:48.311" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:48.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:48.711" level="INFO">${output} = bucket-21154
bucket-ffqzvbfhgt
link</msg>
<status status="PASS" starttime="20210714 22:56:48.309" endtime="20210714 22:56:48.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:48.712" level="INFO">bucket-21154
bucket-ffqzvbfhgt
link</msg>
<status status="PASS" starttime="20210714 22:56:48.711" endtime="20210714 22:56:48.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:48.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:48.712" endtime="20210714 22:56:48.713"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.309" endtime="20210714 22:56:48.713"/>
</kw>
<msg timestamp="20210714 22:56:48.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:48.309" endtime="20210714 22:56:48.713"/>
</kw>
<msg timestamp="20210714 22:56:48.714" level="INFO">${output} = bucket-21154
bucket-ffqzvbfhgt
link</msg>
<status status="PASS" starttime="20210714 22:56:48.308" endtime="20210714 22:56:48.714"/>
</kw>
<msg timestamp="20210714 22:56:48.714" level="INFO">${result} = bucket-21154
bucket-ffqzvbfhgt
link</msg>
<status status="PASS" starttime="20210714 22:56:48.307" endtime="20210714 22:56:48.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:48.714" endtime="20210714 22:56:48.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:48.306" endtime="20210714 22:56:48.715"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:56:43.664" endtime="20210714 22:56:48.715"/>
</suite>
<suite id="s1-s13-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:48.727" level="INFO">${random} = 67983</msg>
<status status="PASS" starttime="20210714 22:56:48.727" endtime="20210714 22:56:48.727"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:48.729" level="INFO">${PREFIX} = 67983</msg>
<status status="PASS" starttime="20210714 22:56:48.728" endtime="20210714 22:56:48.729"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.727" endtime="20210714 22:56:48.729"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.727" endtime="20210714 22:56:48.729"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:48.731" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:48.733" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:56:48.733" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:56:48.730" endtime="20210714 22:56:48.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:48.734" endtime="20210714 22:56:48.734"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:48.736" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:48.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:48.854" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:56:48.735" endtime="20210714 22:56:48.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:48.859" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:49.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:49.202" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:56:48.857" endtime="20210714 22:56:49.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:49.203" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:56:49.202" endtime="20210714 22:56:49.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:49.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:49.203" endtime="20210714 22:56:49.204"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.856" endtime="20210714 22:56:49.204"/>
</kw>
<msg timestamp="20210714 22:56:49.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:48.856" endtime="20210714 22:56:49.204"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.856" endtime="20210714 22:56:49.205"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.855" endtime="20210714 22:56:49.205"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.855" endtime="20210714 22:56:49.205"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.729" endtime="20210714 22:56:49.205"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.729" endtime="20210714 22:56:49.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:49.206" endtime="20210714 22:56:49.207"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:49.207" endtime="20210714 22:56:49.207"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:49.211" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:49.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:49.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:49.209" endtime="20210714 22:56:49.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:49.491" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:49.491" endtime="20210714 22:56:49.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:49.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:49.491" endtime="20210714 22:56:49.492"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.208" endtime="20210714 22:56:49.492"/>
</kw>
<msg timestamp="20210714 22:56:49.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:49.208" endtime="20210714 22:56:49.492"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.208" endtime="20210714 22:56:49.493"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:49.496" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:49.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:49.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:49.494" endtime="20210714 22:56:49.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:49.774" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:49.774" endtime="20210714 22:56:49.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:49.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:49.775" endtime="20210714 22:56:49.775"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.493" endtime="20210714 22:56:49.775"/>
</kw>
<msg timestamp="20210714 22:56:49.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:49.493" endtime="20210714 22:56:49.775"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.493" endtime="20210714 22:56:49.776"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:49.779" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:50.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:50.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:49.777" endtime="20210714 22:56:50.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:50.060" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:50.059" endtime="20210714 22:56:50.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:50.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:50.060" endtime="20210714 22:56:50.061"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.776" endtime="20210714 22:56:50.061"/>
</kw>
<msg timestamp="20210714 22:56:50.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:49.776" endtime="20210714 22:56:50.061"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.776" endtime="20210714 22:56:50.061"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:50.065" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:50.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:50.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:50.063" endtime="20210714 22:56:50.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:50.344" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:50.344" endtime="20210714 22:56:50.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:50.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:50.345" endtime="20210714 22:56:50.345"/>
</kw>
<status status="PASS" starttime="20210714 22:56:50.062" endtime="20210714 22:56:50.345"/>
</kw>
<msg timestamp="20210714 22:56:50.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:50.062" endtime="20210714 22:56:50.346"/>
</kw>
<status status="PASS" starttime="20210714 22:56:50.061" endtime="20210714 22:56:50.346"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.208" endtime="20210714 22:56:50.346"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.207" endtime="20210714 22:56:50.346"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.206" endtime="20210714 22:56:50.346"/>
</kw>
<status status="PASS" starttime="20210714 22:56:49.205" endtime="20210714 22:56:50.346"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:56:50.347" endtime="20210714 22:56:50.347"/>
</kw>
<msg timestamp="20210714 22:56:50.347" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:50.346" endtime="20210714 22:56:50.347"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:50.348" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:56:50.347" endtime="20210714 22:56:50.348"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:50.351" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:53.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:53.305" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:56:50.349" endtime="20210714 22:56:53.305"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:53.306" endtime="20210714 22:56:53.306"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:53.306" endtime="20210714 22:56:53.307"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:56:53.307" endtime="20210714 22:56:53.307"/>
</kw>
<msg timestamp="20210714 22:56:53.307" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:56:50.349" endtime="20210714 22:56:53.307"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:56:53.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:53.307" endtime="20210714 22:56:53.308"/>
</kw>
<status status="PASS" starttime="20210714 22:56:50.348" endtime="20210714 22:56:53.308"/>
</kw>
<status status="PASS" starttime="20210714 22:56:50.348" endtime="20210714 22:56:53.308"/>
</kw>
<status status="PASS" starttime="20210714 22:56:48.726" endtime="20210714 22:56:53.308"/>
</kw>
<test id="s1-s13-s7-t1" name="Test Multipart Upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:53.310" level="INFO">${random} = 25488</msg>
<status status="PASS" starttime="20210714 22:56:53.310" endtime="20210714 22:56:53.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:53.311" level="INFO">${PREFIX} = 25488</msg>
<status status="PASS" starttime="20210714 22:56:53.310" endtime="20210714 22:56:53.311"/>
</kw>
<status status="PASS" starttime="20210714 22:56:53.309" endtime="20210714 22:56:53.311"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:53.315" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 25488/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:53.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:53.724" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.313" endtime="20210714 22:56:53.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:53.726" level="INFO">{
    "Bucket": "link", 
    "UploadId": "9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.725" endtime="20210714 22:56:53.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:53.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:53.726" endtime="20210714 22:56:53.726"/>
</kw>
<status status="PASS" starttime="20210714 22:56:53.312" endtime="20210714 22:56:53.727"/>
</kw>
<msg timestamp="20210714 22:56:53.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:53.312" endtime="20210714 22:56:53.727"/>
</kw>
<msg timestamp="20210714 22:56:53.727" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.312" endtime="20210714 22:56:53.727"/>
</kw>
<msg timestamp="20210714 22:56:53.727" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.311" endtime="20210714 22:56:53.727"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:53.730" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178", 
    "Key": "25488/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:53.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:53.765" level="INFO">${output} = 9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178</msg>
<status status="PASS" starttime="20210714 22:56:53.728" endtime="20210714 22:56:53.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:53.766" level="INFO">9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178</msg>
<status status="PASS" starttime="20210714 22:56:53.765" endtime="20210714 22:56:53.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:53.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:53.766" endtime="20210714 22:56:53.766"/>
</kw>
<msg timestamp="20210714 22:56:53.767" level="INFO">${uploadID} = 9998eeca-67fe-4acb-93a4-af8993d207bd-106581420518998178</msg>
<status status="PASS" starttime="20210714 22:56:53.728" endtime="20210714 22:56:53.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:53.767" endtime="20210714 22:56:53.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:53.768" endtime="20210714 22:56:53.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:53.768" endtime="20210714 22:56:53.768"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:53.772" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 25488/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:54.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:54.171" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.771" endtime="20210714 22:56:54.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:54.172" level="INFO">{
    "Bucket": "link", 
    "UploadId": "32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.172" endtime="20210714 22:56:54.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:54.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:54.172" endtime="20210714 22:56:54.173"/>
</kw>
<status status="PASS" starttime="20210714 22:56:53.770" endtime="20210714 22:56:54.173"/>
</kw>
<msg timestamp="20210714 22:56:54.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:53.770" endtime="20210714 22:56:54.174"/>
</kw>
<msg timestamp="20210714 22:56:54.174" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.769" endtime="20210714 22:56:54.174"/>
</kw>
<msg timestamp="20210714 22:56:54.174" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843", 
    "Key": "25488/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:56:53.769" endtime="20210714 22:56:54.174"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:54.177" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843", 
    "Key": "25488/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:54.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:54.211" level="INFO">${output} = 32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843</msg>
<status status="PASS" starttime="20210714 22:56:54.175" endtime="20210714 22:56:54.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:54.212" level="INFO">32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843</msg>
<status status="PASS" starttime="20210714 22:56:54.211" endtime="20210714 22:56:54.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:54.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:54.212" endtime="20210714 22:56:54.212"/>
</kw>
<msg timestamp="20210714 22:56:54.213" level="INFO">${nextUploadID} = 32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843</msg>
<status status="PASS" starttime="20210714 22:56:54.174" endtime="20210714 22:56:54.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:54.213" endtime="20210714 22:56:54.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:54.214" endtime="20210714 22:56:54.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:54.214" endtime="20210714 22:56:54.214"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20210714 22:56:54.215" endtime="20210714 22:56:54.215"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:54.219" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:54.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:54.254" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0321773 s, 163 MB/s</msg>
<status status="PASS" starttime="20210714 22:56:54.217" endtime="20210714 22:56:54.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:54.255" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0321773 s, 163 MB/s</msg>
<status status="PASS" starttime="20210714 22:56:54.255" endtime="20210714 22:56:54.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:54.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:54.255" endtime="20210714 22:56:54.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.217" endtime="20210714 22:56:54.256"/>
</kw>
<msg timestamp="20210714 22:56:54.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:54.216" endtime="20210714 22:56:54.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.216" endtime="20210714 22:56:54.256"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.215" endtime="20210714 22:56:54.257"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.215" endtime="20210714 22:56:54.257"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:54.260" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 25488/multipartKey --part-number 1 --body /tmp/part1 --upload-id 32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:54.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:54.886" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420581716132"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.259" endtime="20210714 22:56:54.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:54.887" level="INFO">{
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420581716132"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.886" endtime="20210714 22:56:54.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:54.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:54.888" endtime="20210714 22:56:54.888"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.258" endtime="20210714 22:56:54.888"/>
</kw>
<msg timestamp="20210714 22:56:54.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:54.258" endtime="20210714 22:56:54.889"/>
</kw>
<msg timestamp="20210714 22:56:54.889" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420581716132"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.257" endtime="20210714 22:56:54.889"/>
</kw>
<msg timestamp="20210714 22:56:54.889" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420581716132"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.257" endtime="20210714 22:56:54.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:54.889" endtime="20210714 22:56:54.890"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:54.894" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:54.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:54.932" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0338099 s, 155 MB/s</msg>
<status status="PASS" starttime="20210714 22:56:54.892" endtime="20210714 22:56:54.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:54.933" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0338099 s, 155 MB/s</msg>
<status status="PASS" starttime="20210714 22:56:54.932" endtime="20210714 22:56:54.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:54.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:54.933" endtime="20210714 22:56:54.934"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.891" endtime="20210714 22:56:54.934"/>
</kw>
<msg timestamp="20210714 22:56:54.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:54.891" endtime="20210714 22:56:54.934"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.890" endtime="20210714 22:56:54.934"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.890" endtime="20210714 22:56:54.935"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.890" endtime="20210714 22:56:54.935"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:54.939" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 25488/multipartKey --part-number 1 --body /tmp/part1 --upload-id 32a4a8cd-2906-4fde-a55e-f68dd2addbf4-106581420548423843 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:58.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:58.015" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420626673829"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.937" endtime="20210714 22:56:58.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:58.016" level="INFO">{
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420626673829"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.016" endtime="20210714 22:56:58.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:58.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:58.017" endtime="20210714 22:56:58.017"/>
</kw>
<status status="PASS" starttime="20210714 22:56:54.936" endtime="20210714 22:56:58.017"/>
</kw>
<msg timestamp="20210714 22:56:58.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:54.936" endtime="20210714 22:56:58.018"/>
</kw>
<msg timestamp="20210714 22:56:58.018" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420626673829"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.935" endtime="20210714 22:56:58.018"/>
</kw>
<msg timestamp="20210714 22:56:58.018" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/25488/multipartKey106581420626673829"
}</msg>
<status status="PASS" starttime="20210714 22:56:54.935" endtime="20210714 22:56:58.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:58.018" endtime="20210714 22:56:58.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:53.308" endtime="20210714 22:56:58.019"/>
</test>
<test id="s1-s13-s7-t2" name="Test Multipart Upload Complete">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:56:58.021" level="INFO">${random} = 36644</msg>
<status status="PASS" starttime="20210714 22:56:58.021" endtime="20210714 22:56:58.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:56:58.022" level="INFO">${PREFIX} = 36644</msg>
<status status="PASS" starttime="20210714 22:56:58.021" endtime="20210714 22:56:58.022"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.020" endtime="20210714 22:56:58.022"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:58.026" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 36644/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:58.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:58.434" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.024" endtime="20210714 22:56:58.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:58.435" level="INFO">{
    "Bucket": "link", 
    "UploadId": "667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.434" endtime="20210714 22:56:58.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:58.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:58.435" endtime="20210714 22:56:58.435"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.023" endtime="20210714 22:56:58.436"/>
</kw>
<msg timestamp="20210714 22:56:58.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:58.023" endtime="20210714 22:56:58.436"/>
</kw>
<msg timestamp="20210714 22:56:58.436" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.022" endtime="20210714 22:56:58.436"/>
</kw>
<msg timestamp="20210714 22:56:58.436" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.022" endtime="20210714 22:56:58.437"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:58.439" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134", 
    "Key": "36644/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:58.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:58.474" level="INFO">${output} = 667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134</msg>
<status status="PASS" starttime="20210714 22:56:58.437" endtime="20210714 22:56:58.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:58.475" level="INFO">667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134</msg>
<status status="PASS" starttime="20210714 22:56:58.474" endtime="20210714 22:56:58.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:58.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:58.475" endtime="20210714 22:56:58.476"/>
</kw>
<msg timestamp="20210714 22:56:58.476" level="INFO">${uploadID} = 667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134</msg>
<status status="PASS" starttime="20210714 22:56:58.437" endtime="20210714 22:56:58.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:58.476" endtime="20210714 22:56:58.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:58.477" endtime="20210714 22:56:58.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:58.477" endtime="20210714 22:56:58.478"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:58.481" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:58.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:58.519" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0336895 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:56:58.480" endtime="20210714 22:56:58.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:58.520" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0336895 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:56:58.519" endtime="20210714 22:56:58.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:58.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:58.520" endtime="20210714 22:56:58.520"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.479" endtime="20210714 22:56:58.521"/>
</kw>
<msg timestamp="20210714 22:56:58.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:58.479" endtime="20210714 22:56:58.521"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.478" endtime="20210714 22:56:58.521"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.478" endtime="20210714 22:56:58.521"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.478" endtime="20210714 22:56:58.521"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:58.525" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 36644/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:59.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:59.124" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420861358247"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.523" endtime="20210714 22:56:59.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:59.125" level="INFO">{
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420861358247"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.124" endtime="20210714 22:56:59.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:59.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:59.125" endtime="20210714 22:56:59.126"/>
</kw>
<status status="PASS" starttime="20210714 22:56:58.523" endtime="20210714 22:56:59.126"/>
</kw>
<msg timestamp="20210714 22:56:59.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:58.523" endtime="20210714 22:56:59.126"/>
</kw>
<msg timestamp="20210714 22:56:59.126" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420861358247"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.522" endtime="20210714 22:56:59.126"/>
</kw>
<msg timestamp="20210714 22:56:59.127" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420861358247"
}</msg>
<status status="PASS" starttime="20210714 22:56:58.521" endtime="20210714 22:56:59.127"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:59.129" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420861358247"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:59.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:59.164" level="INFO">${output} = /legacy/source-bucket/36644/multipartKey1106581420861358247</msg>
<status status="PASS" starttime="20210714 22:56:59.128" endtime="20210714 22:56:59.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:59.165" level="INFO">/legacy/source-bucket/36644/multipartKey1106581420861358247</msg>
<status status="PASS" starttime="20210714 22:56:59.164" endtime="20210714 22:56:59.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:59.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:59.165" endtime="20210714 22:56:59.166"/>
</kw>
<msg timestamp="20210714 22:56:59.166" level="INFO">${eTag1} = /legacy/source-bucket/36644/multipartKey1106581420861358247</msg>
<status status="PASS" starttime="20210714 22:56:59.127" endtime="20210714 22:56:59.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:59.167" endtime="20210714 22:56:59.167"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:59.170" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210714 22:56:59.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:59.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:56:59.168" endtime="20210714 22:56:59.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:59.173" level="INFO"/>
<status status="PASS" starttime="20210714 22:56:59.172" endtime="20210714 22:56:59.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:59.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:59.173" endtime="20210714 22:56:59.173"/>
</kw>
<status status="PASS" starttime="20210714 22:56:59.168" endtime="20210714 22:56:59.174"/>
</kw>
<msg timestamp="20210714 22:56:59.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:59.167" endtime="20210714 22:56:59.174"/>
</kw>
<status status="PASS" starttime="20210714 22:56:59.167" endtime="20210714 22:56:59.174"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:59.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 36644/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:59.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:59.660" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420903170216"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.176" endtime="20210714 22:56:59.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:59.662" level="INFO">{
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420903170216"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.661" endtime="20210714 22:56:59.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:59.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:59.662" endtime="20210714 22:56:59.662"/>
</kw>
<status status="PASS" starttime="20210714 22:56:59.175" endtime="20210714 22:56:59.663"/>
</kw>
<msg timestamp="20210714 22:56:59.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:59.175" endtime="20210714 22:56:59.663"/>
</kw>
<msg timestamp="20210714 22:56:59.663" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420903170216"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.175" endtime="20210714 22:56:59.663"/>
</kw>
<msg timestamp="20210714 22:56:59.663" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420903170216"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.174" endtime="20210714 22:56:59.663"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:59.666" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/36644/multipartKey1106581420903170216"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:56:59.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:56:59.700" level="INFO">${output} = /legacy/source-bucket/36644/multipartKey1106581420903170216</msg>
<status status="PASS" starttime="20210714 22:56:59.664" endtime="20210714 22:56:59.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:56:59.701" level="INFO">/legacy/source-bucket/36644/multipartKey1106581420903170216</msg>
<status status="PASS" starttime="20210714 22:56:59.701" endtime="20210714 22:56:59.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:56:59.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:56:59.701" endtime="20210714 22:56:59.702"/>
</kw>
<msg timestamp="20210714 22:56:59.702" level="INFO">${eTag2} = /legacy/source-bucket/36644/multipartKey1106581420903170216</msg>
<status status="PASS" starttime="20210714 22:56:59.664" endtime="20210714 22:56:59.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:56:59.702" endtime="20210714 22:56:59.703"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:56:59.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 667702e3-69ae-4997-8278-be3a0feebe03-106581420827476134 --bucket link --key 36644/multipartKey1 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/36644/multipartKey1106581420861358247,PartNumber=1},{ETag=/legacy/source-bucket/36644/multipartKey1106581420903170216,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:00.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:00.125" level="INFO">${output} = {
    "ETag": "827fa3f41f96570e46f4fea1aac31eca3cadf60cc33b9183aefa16692923d7b6", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.705" endtime="20210714 22:57:00.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:00.126" level="INFO">{
    "ETag": "827fa3f41f96570e46f4fea1aac31eca3cadf60cc33b9183aefa16692923d7b6", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:57:00.125" endtime="20210714 22:57:00.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:00.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:00.126" endtime="20210714 22:57:00.127"/>
</kw>
<status status="PASS" starttime="20210714 22:56:59.705" endtime="20210714 22:57:00.127"/>
</kw>
<msg timestamp="20210714 22:57:00.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:56:59.705" endtime="20210714 22:57:00.128"/>
</kw>
<msg timestamp="20210714 22:57:00.128" level="INFO">${output} = {
    "ETag": "827fa3f41f96570e46f4fea1aac31eca3cadf60cc33b9183aefa16692923d7b6", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.704" endtime="20210714 22:57:00.128"/>
</kw>
<msg timestamp="20210714 22:57:00.128" level="INFO">${result} = {
    "ETag": "827fa3f41f96570e46f4fea1aac31eca3cadf60cc33b9183aefa16692923d7b6", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "36644/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:56:59.703" endtime="20210714 22:57:00.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:00.128" endtime="20210714 22:57:00.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:00.129" endtime="20210714 22:57:00.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:00.129" endtime="20210714 22:57:00.130"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:00.134" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 36644/multipartKey1 /tmp/36644-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:00.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:00.652" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:00 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:00.132" endtime="20210714 22:57:00.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:00.654" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:00 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22:57:00 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:57:00.653" endtime="20210714 22:57:00.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:00.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:00.654" endtime="20210714 22:57:00.655"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.131" endtime="20210714 22:57:00.655"/>
</kw>
<msg timestamp="20210714 22:57:00.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:00.131" endtime="20210714 22:57:00.655"/>
</kw>
<msg timestamp="20210714 22:57:00.655" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:00 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:00.130" endtime="20210714 22:57:00.655"/>
</kw>
<msg timestamp="20210714 22:57:00.656" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:00 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:00.130" endtime="20210714 22:57:00.656"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:00.659" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/36644-multipartKey1'.</msg>
<msg timestamp="20210714 22:57:00.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:00.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:00.657" endtime="20210714 22:57:00.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:00.667" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:00.667" endtime="20210714 22:57:00.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:00.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:00.667" endtime="20210714 22:57:00.668"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.657" endtime="20210714 22:57:00.668"/>
</kw>
<msg timestamp="20210714 22:57:00.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:00.656" endtime="20210714 22:57:00.668"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.656" endtime="20210714 22:57:00.668"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:00.672" level="INFO">Running command 'md5sum /tmp/36644-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:00.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:00.686" level="INFO">${output} = 426594f96e6cb1a8ddf24478aa67c39f</msg>
<status status="PASS" starttime="20210714 22:57:00.670" endtime="20210714 22:57:00.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:00.687" level="INFO">426594f96e6cb1a8ddf24478aa67c39f</msg>
<status status="PASS" starttime="20210714 22:57:00.686" endtime="20210714 22:57:00.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:00.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:00.687" endtime="20210714 22:57:00.687"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.670" endtime="20210714 22:57:00.687"/>
</kw>
<msg timestamp="20210714 22:57:00.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:00.670" endtime="20210714 22:57:00.688"/>
</kw>
<msg timestamp="20210714 22:57:00.688" level="INFO">${checksumbefore} = 426594f96e6cb1a8ddf24478aa67c39f</msg>
<status status="PASS" starttime="20210714 22:57:00.669" endtime="20210714 22:57:00.688"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:00.691" level="INFO">Running command 'md5sum /tmp/36644-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:00.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:00.704" level="INFO">${output} = 426594f96e6cb1a8ddf24478aa67c39f</msg>
<status status="PASS" starttime="20210714 22:57:00.690" endtime="20210714 22:57:00.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:00.705" level="INFO">426594f96e6cb1a8ddf24478aa67c39f</msg>
<status status="PASS" starttime="20210714 22:57:00.704" endtime="20210714 22:57:00.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:00.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:00.705" endtime="20210714 22:57:00.705"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.689" endtime="20210714 22:57:00.706"/>
</kw>
<msg timestamp="20210714 22:57:00.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:00.689" endtime="20210714 22:57:00.706"/>
</kw>
<msg timestamp="20210714 22:57:00.706" level="INFO">${checksumafter} = 426594f96e6cb1a8ddf24478aa67c39f</msg>
<status status="PASS" starttime="20210714 22:57:00.688" endtime="20210714 22:57:00.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:00.706" endtime="20210714 22:57:00.707"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.669" endtime="20210714 22:57:00.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:56:58.019" endtime="20210714 22:57:00.707"/>
</test>
<test id="s1-s13-s7-t3" name="Test Multipart Upload Complete Entity too small">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:00.709" level="INFO">${random} = 56948</msg>
<status status="PASS" starttime="20210714 22:57:00.709" endtime="20210714 22:57:00.709"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:00.710" level="INFO">${PREFIX} = 56948</msg>
<status status="PASS" starttime="20210714 22:57:00.709" endtime="20210714 22:57:00.710"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.708" endtime="20210714 22:57:00.710"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:00.714" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 56948/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:01.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:01.114" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689", 
    "Key": "56948/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:57:00.712" endtime="20210714 22:57:01.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:01.116" level="INFO">{
    "Bucket": "link", 
    "UploadId": "3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689", 
    "Key": "56948/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.115" endtime="20210714 22:57:01.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:01.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:01.116" endtime="20210714 22:57:01.117"/>
</kw>
<status status="PASS" starttime="20210714 22:57:00.711" endtime="20210714 22:57:01.117"/>
</kw>
<msg timestamp="20210714 22:57:01.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:00.711" endtime="20210714 22:57:01.117"/>
</kw>
<msg timestamp="20210714 22:57:01.117" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689", 
    "Key": "56948/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:57:00.711" endtime="20210714 22:57:01.117"/>
</kw>
<msg timestamp="20210714 22:57:01.118" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689", 
    "Key": "56948/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:57:00.710" endtime="20210714 22:57:01.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:01.121" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689", 
    "Key": "56948/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:01.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:01.154" level="INFO">${output} = 3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689</msg>
<status status="PASS" starttime="20210714 22:57:01.118" endtime="20210714 22:57:01.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:01.155" level="INFO">3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689</msg>
<status status="PASS" starttime="20210714 22:57:01.155" endtime="20210714 22:57:01.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:01.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:01.155" endtime="20210714 22:57:01.156"/>
</kw>
<msg timestamp="20210714 22:57:01.156" level="INFO">${uploadID} = 3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689</msg>
<status status="PASS" starttime="20210714 22:57:01.118" endtime="20210714 22:57:01.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:01.156" endtime="20210714 22:57:01.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:01.157" endtime="20210714 22:57:01.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:01.157" endtime="20210714 22:57:01.158"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:01.161" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20210714 22:57:01.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:01.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:01.159" endtime="20210714 22:57:01.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:01.164" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:01.164" endtime="20210714 22:57:01.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:01.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:01.164" endtime="20210714 22:57:01.165"/>
</kw>
<status status="PASS" starttime="20210714 22:57:01.159" endtime="20210714 22:57:01.165"/>
</kw>
<msg timestamp="20210714 22:57:01.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:01.158" endtime="20210714 22:57:01.165"/>
</kw>
<status status="PASS" starttime="20210714 22:57:01.158" endtime="20210714 22:57:01.165"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:01.170" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 56948/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:01.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:01.671" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421033193642"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.168" endtime="20210714 22:57:01.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:01.672" level="INFO">{
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421033193642"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.671" endtime="20210714 22:57:01.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:01.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:01.672" endtime="20210714 22:57:01.673"/>
</kw>
<status status="PASS" starttime="20210714 22:57:01.167" endtime="20210714 22:57:01.673"/>
</kw>
<msg timestamp="20210714 22:57:01.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:01.167" endtime="20210714 22:57:01.673"/>
</kw>
<msg timestamp="20210714 22:57:01.673" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421033193642"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.166" endtime="20210714 22:57:01.673"/>
</kw>
<msg timestamp="20210714 22:57:01.674" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421033193642"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.166" endtime="20210714 22:57:01.674"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:01.676" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421033193642"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:01.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:01.711" level="INFO">${output} = /legacy/source-bucket/56948/multipartKey2106581421033193642</msg>
<status status="PASS" starttime="20210714 22:57:01.674" endtime="20210714 22:57:01.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:01.712" level="INFO">/legacy/source-bucket/56948/multipartKey2106581421033193642</msg>
<status status="PASS" starttime="20210714 22:57:01.711" endtime="20210714 22:57:01.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:01.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:01.712" endtime="20210714 22:57:01.713"/>
</kw>
<msg timestamp="20210714 22:57:01.713" level="INFO">${eTag1} = /legacy/source-bucket/56948/multipartKey2106581421033193642</msg>
<status status="PASS" starttime="20210714 22:57:01.674" endtime="20210714 22:57:01.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:01.713" endtime="20210714 22:57:01.713"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:01.717" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210714 22:57:01.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:01.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:01.715" endtime="20210714 22:57:01.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:01.719" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:01.719" endtime="20210714 22:57:01.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:01.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:01.720" endtime="20210714 22:57:01.720"/>
</kw>
<status status="PASS" starttime="20210714 22:57:01.714" endtime="20210714 22:57:01.720"/>
</kw>
<msg timestamp="20210714 22:57:01.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:01.714" endtime="20210714 22:57:01.721"/>
</kw>
<status status="PASS" starttime="20210714 22:57:01.714" endtime="20210714 22:57:01.721"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:01.725" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 56948/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:02.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:02.232" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421069828267"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.723" endtime="20210714 22:57:02.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:02.233" level="INFO">{
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421069828267"
}</msg>
<status status="PASS" starttime="20210714 22:57:02.233" endtime="20210714 22:57:02.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:02.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:02.234" endtime="20210714 22:57:02.234"/>
</kw>
<status status="PASS" starttime="20210714 22:57:01.723" endtime="20210714 22:57:02.235"/>
</kw>
<msg timestamp="20210714 22:57:02.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:01.722" endtime="20210714 22:57:02.235"/>
</kw>
<msg timestamp="20210714 22:57:02.235" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421069828267"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.722" endtime="20210714 22:57:02.235"/>
</kw>
<msg timestamp="20210714 22:57:02.235" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421069828267"
}</msg>
<status status="PASS" starttime="20210714 22:57:01.721" endtime="20210714 22:57:02.235"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:02.238" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/56948/multipartKey2106581421069828267"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:02.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:02.272" level="INFO">${output} = /legacy/source-bucket/56948/multipartKey2106581421069828267</msg>
<status status="PASS" starttime="20210714 22:57:02.236" endtime="20210714 22:57:02.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:02.273" level="INFO">/legacy/source-bucket/56948/multipartKey2106581421069828267</msg>
<status status="PASS" starttime="20210714 22:57:02.272" endtime="20210714 22:57:02.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:02.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:02.273" endtime="20210714 22:57:02.273"/>
</kw>
<msg timestamp="20210714 22:57:02.274" level="INFO">${eTag2} = /legacy/source-bucket/56948/multipartKey2106581421069828267</msg>
<status status="PASS" starttime="20210714 22:57:02.236" endtime="20210714 22:57:02.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:02.274" endtime="20210714 22:57:02.274"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:02.279" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 3c8f5c9f-198d-4a33-95c9-2379917e083c-106581421003243689 --bucket link --key 56948/multipartKey2 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/56948/multipartKey2106581421033193642,PartNumber=1},{ETag=/legacy/source-bucket/56948/multipartKey2106581421069828267,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:02.695" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:02.695" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210714 22:57:02.277" endtime="20210714 22:57:02.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:02.696" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20210714 22:57:02.696" endtime="20210714 22:57:02.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:02.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:02.697" endtime="20210714 22:57:02.697"/>
</kw>
<msg timestamp="20210714 22:57:02.697" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210714 22:57:02.275" endtime="20210714 22:57:02.697"/>
</kw>
<msg timestamp="20210714 22:57:02.698" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210714 22:57:02.274" endtime="20210714 22:57:02.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:02.698" endtime="20210714 22:57:02.698"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:00.708" endtime="20210714 22:57:02.699"/>
</test>
<test id="s1-s13-s7-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:02.701" level="INFO">${random} = 68859</msg>
<status status="PASS" starttime="20210714 22:57:02.700" endtime="20210714 22:57:02.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:02.701" level="INFO">${PREFIX} = 68859</msg>
<status status="PASS" starttime="20210714 22:57:02.701" endtime="20210714 22:57:02.702"/>
</kw>
<status status="PASS" starttime="20210714 22:57:02.700" endtime="20210714 22:57:02.702"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:02.705" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 68859/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:03.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:03.114" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:02.703" endtime="20210714 22:57:03.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:03.116" level="INFO">{
    "Bucket": "link", 
    "UploadId": "409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:03.115" endtime="20210714 22:57:03.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:03.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:03.116" endtime="20210714 22:57:03.117"/>
</kw>
<status status="PASS" starttime="20210714 22:57:02.703" endtime="20210714 22:57:03.117"/>
</kw>
<msg timestamp="20210714 22:57:03.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:02.703" endtime="20210714 22:57:03.117"/>
</kw>
<msg timestamp="20210714 22:57:03.117" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:02.702" endtime="20210714 22:57:03.117"/>
</kw>
<msg timestamp="20210714 22:57:03.118" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:02.702" endtime="20210714 22:57:03.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:03.120" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548", 
    "Key": "68859/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:03.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:03.154" level="INFO">${output} = 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548</msg>
<status status="PASS" starttime="20210714 22:57:03.118" endtime="20210714 22:57:03.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:03.155" level="INFO">409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548</msg>
<status status="PASS" starttime="20210714 22:57:03.155" endtime="20210714 22:57:03.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:03.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:03.156" endtime="20210714 22:57:03.156"/>
</kw>
<msg timestamp="20210714 22:57:03.156" level="INFO">${uploadID} = 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548</msg>
<status status="PASS" starttime="20210714 22:57:03.118" endtime="20210714 22:57:03.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:03.157" endtime="20210714 22:57:03.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:03.157" endtime="20210714 22:57:03.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:03.158" endtime="20210714 22:57:03.158"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:03.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 --bucket link --key 68859/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:03.576" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:03.576" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:03.159" endtime="20210714 22:57:03.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:03.578" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:57:03.577" endtime="20210714 22:57:03.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:03.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:03.578" endtime="20210714 22:57:03.578"/>
</kw>
<msg timestamp="20210714 22:57:03.579" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:03.159" endtime="20210714 22:57:03.579"/>
</kw>
<msg timestamp="20210714 22:57:03.579" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:03.158" endtime="20210714 22:57:03.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:03.579" endtime="20210714 22:57:03.580"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:03.583" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 --bucket link --key 68859/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:03.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:03.996" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:03.581" endtime="20210714 22:57:03.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:04.009" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:57:03.996" endtime="20210714 22:57:04.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:04.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:04.009" endtime="20210714 22:57:04.010"/>
</kw>
<msg timestamp="20210714 22:57:04.010" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:03.581" endtime="20210714 22:57:04.010"/>
</kw>
<msg timestamp="20210714 22:57:04.010" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:03.580" endtime="20210714 22:57:04.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:04.010" endtime="20210714 22:57:04.011"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:04.015" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:04.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:04.051" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0330136 s, 159 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:04.013" endtime="20210714 22:57:04.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:04.052" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0330136 s, 159 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:04.051" endtime="20210714 22:57:04.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:04.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:04.052" endtime="20210714 22:57:04.053"/>
</kw>
<status status="PASS" starttime="20210714 22:57:04.012" endtime="20210714 22:57:04.053"/>
</kw>
<msg timestamp="20210714 22:57:04.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:04.012" endtime="20210714 22:57:04.053"/>
</kw>
<status status="PASS" starttime="20210714 22:57:04.011" endtime="20210714 22:57:04.053"/>
</kw>
<status status="PASS" starttime="20210714 22:57:04.011" endtime="20210714 22:57:04.053"/>
</kw>
<status status="PASS" starttime="20210714 22:57:04.011" endtime="20210714 22:57:04.053"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:04.057" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 68859/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:07.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:07.187" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421223837869"
}</msg>
<status status="PASS" starttime="20210714 22:57:04.055" endtime="20210714 22:57:07.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:07.188" level="INFO">{
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421223837869"
}</msg>
<status status="PASS" starttime="20210714 22:57:07.187" endtime="20210714 22:57:07.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:07.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:07.188" endtime="20210714 22:57:07.188"/>
</kw>
<status status="PASS" starttime="20210714 22:57:04.055" endtime="20210714 22:57:07.189"/>
</kw>
<msg timestamp="20210714 22:57:07.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:04.055" endtime="20210714 22:57:07.189"/>
</kw>
<msg timestamp="20210714 22:57:07.189" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421223837869"
}</msg>
<status status="PASS" starttime="20210714 22:57:04.054" endtime="20210714 22:57:07.189"/>
</kw>
<msg timestamp="20210714 22:57:07.190" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421223837869"
}</msg>
<status status="PASS" starttime="20210714 22:57:04.054" endtime="20210714 22:57:07.190"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:07.193" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421223837869"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:07.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:07.227" level="INFO">${output} = /legacy/source-bucket/68859/multipartKey3106581421223837869</msg>
<status status="PASS" starttime="20210714 22:57:07.190" endtime="20210714 22:57:07.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:07.228" level="INFO">/legacy/source-bucket/68859/multipartKey3106581421223837869</msg>
<status status="PASS" starttime="20210714 22:57:07.227" endtime="20210714 22:57:07.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:07.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:07.228" endtime="20210714 22:57:07.229"/>
</kw>
<msg timestamp="20210714 22:57:07.229" level="INFO">${eTag1} = /legacy/source-bucket/68859/multipartKey3106581421223837869</msg>
<status status="PASS" starttime="20210714 22:57:07.190" endtime="20210714 22:57:07.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:07.230" endtime="20210714 22:57:07.230"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:07.234" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 68859/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:10.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:10.309" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421432176814"
}</msg>
<status status="PASS" starttime="20210714 22:57:07.232" endtime="20210714 22:57:10.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:10.311" level="INFO">{
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421432176814"
}</msg>
<status status="PASS" starttime="20210714 22:57:10.310" endtime="20210714 22:57:10.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:10.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:10.311" endtime="20210714 22:57:10.311"/>
</kw>
<status status="PASS" starttime="20210714 22:57:07.231" endtime="20210714 22:57:10.312"/>
</kw>
<msg timestamp="20210714 22:57:10.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:07.231" endtime="20210714 22:57:10.312"/>
</kw>
<msg timestamp="20210714 22:57:10.312" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421432176814"
}</msg>
<status status="PASS" starttime="20210714 22:57:07.231" endtime="20210714 22:57:10.312"/>
</kw>
<msg timestamp="20210714 22:57:10.312" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421432176814"
}</msg>
<status status="PASS" starttime="20210714 22:57:07.230" endtime="20210714 22:57:10.312"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:10.315" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421432176814"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:10.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:10.349" level="INFO">${output} = /legacy/source-bucket/68859/multipartKey3106581421432176814</msg>
<status status="PASS" starttime="20210714 22:57:10.313" endtime="20210714 22:57:10.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:10.350" level="INFO">/legacy/source-bucket/68859/multipartKey3106581421432176814</msg>
<status status="PASS" starttime="20210714 22:57:10.350" endtime="20210714 22:57:10.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:10.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:10.351" endtime="20210714 22:57:10.351"/>
</kw>
<msg timestamp="20210714 22:57:10.351" level="INFO">${eTag2} = /legacy/source-bucket/68859/multipartKey3106581421432176814</msg>
<status status="PASS" starttime="20210714 22:57:10.313" endtime="20210714 22:57:10.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:10.352" endtime="20210714 22:57:10.352"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:10.355" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20210714 22:57:10.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:10.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:10.354" endtime="20210714 22:57:10.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:10.358" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:10.357" endtime="20210714 22:57:10.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:10.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:10.358" endtime="20210714 22:57:10.359"/>
</kw>
<status status="PASS" starttime="20210714 22:57:10.353" endtime="20210714 22:57:10.359"/>
</kw>
<msg timestamp="20210714 22:57:10.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:10.353" endtime="20210714 22:57:10.359"/>
</kw>
<status status="PASS" starttime="20210714 22:57:10.352" endtime="20210714 22:57:10.359"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:10.363" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 68859/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:10.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:10.863" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421635993775"
}</msg>
<status status="PASS" starttime="20210714 22:57:10.361" endtime="20210714 22:57:10.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:10.865" level="INFO">{
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421635993775"
}</msg>
<status status="PASS" starttime="20210714 22:57:10.863" endtime="20210714 22:57:10.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:10.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:10.865" endtime="20210714 22:57:10.865"/>
</kw>
<status status="PASS" starttime="20210714 22:57:10.361" endtime="20210714 22:57:10.866"/>
</kw>
<msg timestamp="20210714 22:57:10.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:10.361" endtime="20210714 22:57:10.866"/>
</kw>
<msg timestamp="20210714 22:57:10.866" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421635993775"
}</msg>
<status status="PASS" starttime="20210714 22:57:10.360" endtime="20210714 22:57:10.866"/>
</kw>
<msg timestamp="20210714 22:57:10.866" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421635993775"
}</msg>
<status status="PASS" starttime="20210714 22:57:10.360" endtime="20210714 22:57:10.866"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:10.869" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/68859/multipartKey3106581421635993775"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:10.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:10.904" level="INFO">${output} = /legacy/source-bucket/68859/multipartKey3106581421635993775</msg>
<status status="PASS" starttime="20210714 22:57:10.867" endtime="20210714 22:57:10.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:10.905" level="INFO">/legacy/source-bucket/68859/multipartKey3106581421635993775</msg>
<status status="PASS" starttime="20210714 22:57:10.905" endtime="20210714 22:57:10.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:10.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:10.906" endtime="20210714 22:57:10.906"/>
</kw>
<msg timestamp="20210714 22:57:10.906" level="INFO">${eTag3} = /legacy/source-bucket/68859/multipartKey3106581421635993775</msg>
<status status="PASS" starttime="20210714 22:57:10.866" endtime="20210714 22:57:10.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:10.907" endtime="20210714 22:57:10.907"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:10.911" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 --bucket link --key 68859/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:11.311" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:11.311" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:10.909" endtime="20210714 22:57:11.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:11.312" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:57:11.311" endtime="20210714 22:57:11.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:11.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:11.312" endtime="20210714 22:57:11.313"/>
</kw>
<msg timestamp="20210714 22:57:11.313" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:10.908" endtime="20210714 22:57:11.313"/>
</kw>
<msg timestamp="20210714 22:57:11.314" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:10.907" endtime="20210714 22:57:11.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:11.314" endtime="20210714 22:57:11.314"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:11.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 --bucket link --key 68859/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/68859/multipartKey3106581421223837869,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:11.721" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:11.721" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:11.316" endtime="20210714 22:57:11.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:11.723" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:57:11.722" endtime="20210714 22:57:11.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:11.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:11.723" endtime="20210714 22:57:11.723"/>
</kw>
<msg timestamp="20210714 22:57:11.724" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:11.315" endtime="20210714 22:57:11.724"/>
</kw>
<msg timestamp="20210714 22:57:11.724" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:57:11.314" endtime="20210714 22:57:11.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:11.724" endtime="20210714 22:57:11.725"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:11.728" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 --bucket link --key 68859/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/68859/multipartKey3106581421223837869,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:12.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:12.138" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:57:11.726" endtime="20210714 22:57:12.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:12.139" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:57:12.139" endtime="20210714 22:57:12.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:12.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:12.140" endtime="20210714 22:57:12.140"/>
</kw>
<msg timestamp="20210714 22:57:12.141" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:57:11.726" endtime="20210714 22:57:12.141"/>
</kw>
<msg timestamp="20210714 22:57:12.141" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:57:11.725" endtime="20210714 22:57:12.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:12.141" endtime="20210714 22:57:12.141"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:12.146" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 409cada6-eb97-46f6-ae83-ed7c3476ad9f-106581421134053548 --bucket link --key 68859/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/68859/multipartKey3106581421223837869,PartNumber=1},{ETag=/legacy/source-bucket/68859/multipartKey3106581421635993775,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:12.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:12.551" level="INFO">${output} = {
    "ETag": "692751d5c4f6a5e7cd5fd103a6287ddcd87d1e05a62598aabf2c7a802f4be900", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:12.144" endtime="20210714 22:57:12.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:12.552" level="INFO">{
    "ETag": "692751d5c4f6a5e7cd5fd103a6287ddcd87d1e05a62598aabf2c7a802f4be900", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:12.551" endtime="20210714 22:57:12.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:12.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:12.552" endtime="20210714 22:57:12.553"/>
</kw>
<status status="PASS" starttime="20210714 22:57:12.143" endtime="20210714 22:57:12.553"/>
</kw>
<msg timestamp="20210714 22:57:12.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:12.143" endtime="20210714 22:57:12.554"/>
</kw>
<msg timestamp="20210714 22:57:12.554" level="INFO">${output} = {
    "ETag": "692751d5c4f6a5e7cd5fd103a6287ddcd87d1e05a62598aabf2c7a802f4be900", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:12.142" endtime="20210714 22:57:12.554"/>
</kw>
<msg timestamp="20210714 22:57:12.554" level="INFO">${result} = {
    "ETag": "692751d5c4f6a5e7cd5fd103a6287ddcd87d1e05a62598aabf2c7a802f4be900", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "68859/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:57:12.142" endtime="20210714 22:57:12.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:12.554" endtime="20210714 22:57:12.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:12.555" endtime="20210714 22:57:12.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:12.555" endtime="20210714 22:57:12.556"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:12.560" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 68859/multipartKey3 /tmp/68859-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:13.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.070" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:12 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:12.558" endtime="20210714 22:57:13.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.072" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:12 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22:57:12 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:57:13.071" endtime="20210714 22:57:13.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.072" endtime="20210714 22:57:13.072"/>
</kw>
<status status="PASS" starttime="20210714 22:57:12.557" endtime="20210714 22:57:13.073"/>
</kw>
<msg timestamp="20210714 22:57:13.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:12.557" endtime="20210714 22:57:13.073"/>
</kw>
<msg timestamp="20210714 22:57:13.073" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:12 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:12.556" endtime="20210714 22:57:13.073"/>
</kw>
<msg timestamp="20210714 22:57:13.073" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:12 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:12.556" endtime="20210714 22:57:13.073"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.077" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/68859-multipartKey3'.</msg>
<msg timestamp="20210714 22:57:13.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:13.075" endtime="20210714 22:57:13.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.084" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:13.084" endtime="20210714 22:57:13.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.085" endtime="20210714 22:57:13.085"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.074" endtime="20210714 22:57:13.085"/>
</kw>
<msg timestamp="20210714 22:57:13.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:13.074" endtime="20210714 22:57:13.086"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.073" endtime="20210714 22:57:13.086"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.090" level="INFO">Running command 'md5sum /tmp/68859-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:13.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.102" level="INFO">${output} = 7a95d2ba3d9ab447ef1dfb7c1fc4dab1</msg>
<status status="PASS" starttime="20210714 22:57:13.088" endtime="20210714 22:57:13.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.103" level="INFO">7a95d2ba3d9ab447ef1dfb7c1fc4dab1</msg>
<status status="PASS" starttime="20210714 22:57:13.103" endtime="20210714 22:57:13.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.103" endtime="20210714 22:57:13.104"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.087" endtime="20210714 22:57:13.104"/>
</kw>
<msg timestamp="20210714 22:57:13.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:13.087" endtime="20210714 22:57:13.104"/>
</kw>
<msg timestamp="20210714 22:57:13.104" level="INFO">${checksumbefore} = 7a95d2ba3d9ab447ef1dfb7c1fc4dab1</msg>
<status status="PASS" starttime="20210714 22:57:13.087" endtime="20210714 22:57:13.104"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.108" level="INFO">Running command 'md5sum /tmp/68859-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:13.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.120" level="INFO">${output} = 7a95d2ba3d9ab447ef1dfb7c1fc4dab1</msg>
<status status="PASS" starttime="20210714 22:57:13.106" endtime="20210714 22:57:13.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.121" level="INFO">7a95d2ba3d9ab447ef1dfb7c1fc4dab1</msg>
<status status="PASS" starttime="20210714 22:57:13.121" endtime="20210714 22:57:13.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.121" endtime="20210714 22:57:13.122"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.106" endtime="20210714 22:57:13.122"/>
</kw>
<msg timestamp="20210714 22:57:13.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:13.105" endtime="20210714 22:57:13.122"/>
</kw>
<msg timestamp="20210714 22:57:13.123" level="INFO">${checksumafter} = 7a95d2ba3d9ab447ef1dfb7c1fc4dab1</msg>
<status status="PASS" starttime="20210714 22:57:13.105" endtime="20210714 22:57:13.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:13.123" endtime="20210714 22:57:13.123"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.086" endtime="20210714 22:57:13.123"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:02.699" endtime="20210714 22:57:13.124"/>
</test>
<test id="s1-s13-s7-t5" name="Test abort Multipart upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:13.126" level="INFO">${random} = 89107</msg>
<status status="PASS" starttime="20210714 22:57:13.125" endtime="20210714 22:57:13.126"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:13.126" level="INFO">${PREFIX} = 89107</msg>
<status status="PASS" starttime="20210714 22:57:13.126" endtime="20210714 22:57:13.126"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.125" endtime="20210714 22:57:13.127"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.130" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 89107/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:13.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.534" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888", 
    "Key": "89107/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:57:13.128" endtime="20210714 22:57:13.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.535" level="INFO">{
    "Bucket": "link", 
    "UploadId": "6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888", 
    "Key": "89107/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:57:13.534" endtime="20210714 22:57:13.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.535" endtime="20210714 22:57:13.536"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.128" endtime="20210714 22:57:13.536"/>
</kw>
<msg timestamp="20210714 22:57:13.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:13.128" endtime="20210714 22:57:13.536"/>
</kw>
<msg timestamp="20210714 22:57:13.536" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888", 
    "Key": "89107/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:57:13.127" endtime="20210714 22:57:13.536"/>
</kw>
<msg timestamp="20210714 22:57:13.537" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888", 
    "Key": "89107/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:57:13.127" endtime="20210714 22:57:13.537"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.539" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888", 
    "Key": "89107/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:13.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.573" level="INFO">${output} = 6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888</msg>
<status status="PASS" starttime="20210714 22:57:13.537" endtime="20210714 22:57:13.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.574" level="INFO">6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888</msg>
<status status="PASS" starttime="20210714 22:57:13.574" endtime="20210714 22:57:13.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.574" endtime="20210714 22:57:13.575"/>
</kw>
<msg timestamp="20210714 22:57:13.575" level="INFO">${uploadID} = 6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888</msg>
<status status="PASS" starttime="20210714 22:57:13.537" endtime="20210714 22:57:13.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:13.575" endtime="20210714 22:57:13.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:13.576" endtime="20210714 22:57:13.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:13.576" endtime="20210714 22:57:13.577"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.580" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 89107/multipartKey4 --upload-id 6161463c-c76a-420c-a9fd-6686fb75e978-106581421817331888 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:13.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:13.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:13.578" endtime="20210714 22:57:13.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:13.983" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:13.982" endtime="20210714 22:57:13.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:13.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:13.983" endtime="20210714 22:57:13.984"/>
</kw>
<msg timestamp="20210714 22:57:13.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:13.577" endtime="20210714 22:57:13.984"/>
</kw>
<msg timestamp="20210714 22:57:13.984" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:13.577" endtime="20210714 22:57:13.984"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:13.124" endtime="20210714 22:57:13.985"/>
</test>
<test id="s1-s13-s7-t6" name="Test abort Multipart upload with invalid uploadId">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:13.988" level="INFO">${random} = 17988</msg>
<status status="PASS" starttime="20210714 22:57:13.988" endtime="20210714 22:57:13.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:13.989" level="INFO">${PREFIX} = 17988</msg>
<status status="PASS" starttime="20210714 22:57:13.989" endtime="20210714 22:57:13.989"/>
</kw>
<status status="PASS" starttime="20210714 22:57:13.987" endtime="20210714 22:57:13.989"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:13.993" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 17988/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:14.394" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:14.394" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210714 22:57:13.991" endtime="20210714 22:57:14.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:14.395" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210714 22:57:14.395" endtime="20210714 22:57:14.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:14.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:14.396" endtime="20210714 22:57:14.396"/>
</kw>
<msg timestamp="20210714 22:57:14.396" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210714 22:57:13.990" endtime="20210714 22:57:14.396"/>
</kw>
<msg timestamp="20210714 22:57:14.397" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210714 22:57:13.990" endtime="20210714 22:57:14.397"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:13.986" endtime="20210714 22:57:14.397"/>
</test>
<test id="s1-s13-s7-t7" name="Upload part with Incorrect uploadID">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:14.399" level="INFO">${random} = 27576</msg>
<status status="PASS" starttime="20210714 22:57:14.399" endtime="20210714 22:57:14.399"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:14.400" level="INFO">${PREFIX} = 27576</msg>
<status status="PASS" starttime="20210714 22:57:14.399" endtime="20210714 22:57:14.400"/>
</kw>
<status status="PASS" starttime="20210714 22:57:14.398" endtime="20210714 22:57:14.400"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:14.403" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:57:14.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:14.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:14.401" endtime="20210714 22:57:14.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:14.406" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:14.406" endtime="20210714 22:57:14.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:14.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:14.406" endtime="20210714 22:57:14.407"/>
</kw>
<status status="PASS" starttime="20210714 22:57:14.401" endtime="20210714 22:57:14.407"/>
</kw>
<msg timestamp="20210714 22:57:14.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:14.401" endtime="20210714 22:57:14.407"/>
</kw>
<status status="PASS" starttime="20210714 22:57:14.400" endtime="20210714 22:57:14.408"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:14.411" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 27576/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:14.819" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:14.819" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210714 22:57:14.409" endtime="20210714 22:57:14.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:14.821" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210714 22:57:14.820" endtime="20210714 22:57:14.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:14.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:14.821" endtime="20210714 22:57:14.822"/>
</kw>
<msg timestamp="20210714 22:57:14.822" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210714 22:57:14.408" endtime="20210714 22:57:14.822"/>
</kw>
<msg timestamp="20210714 22:57:14.822" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210714 22:57:14.408" endtime="20210714 22:57:14.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:14.823" endtime="20210714 22:57:14.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:14.398" endtime="20210714 22:57:14.823"/>
</test>
<test id="s1-s13-s7-t8" name="Test list parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:14.826" level="INFO">${random} = 05939</msg>
<status status="PASS" starttime="20210714 22:57:14.825" endtime="20210714 22:57:14.826"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:14.826" level="INFO">${PREFIX} = 05939</msg>
<status status="PASS" starttime="20210714 22:57:14.826" endtime="20210714 22:57:14.826"/>
</kw>
<status status="PASS" starttime="20210714 22:57:14.825" endtime="20210714 22:57:14.826"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:14.831" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 05939/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:15.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:15.229" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018", 
    "Key": "05939/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:57:14.829" endtime="20210714 22:57:15.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:15.230" level="INFO">{
    "Bucket": "link", 
    "UploadId": "0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018", 
    "Key": "05939/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:57:15.229" endtime="20210714 22:57:15.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:15.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:15.230" endtime="20210714 22:57:15.231"/>
</kw>
<status status="PASS" starttime="20210714 22:57:14.828" endtime="20210714 22:57:15.231"/>
</kw>
<msg timestamp="20210714 22:57:15.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:14.828" endtime="20210714 22:57:15.231"/>
</kw>
<msg timestamp="20210714 22:57:15.232" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018", 
    "Key": "05939/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:57:14.827" endtime="20210714 22:57:15.232"/>
</kw>
<msg timestamp="20210714 22:57:15.232" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018", 
    "Key": "05939/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:57:14.827" endtime="20210714 22:57:15.232"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:15.235" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018", 
    "Key": "05939/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:15.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:15.270" level="INFO">${output} = 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018</msg>
<status status="PASS" starttime="20210714 22:57:15.233" endtime="20210714 22:57:15.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:15.271" level="INFO">0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018</msg>
<status status="PASS" starttime="20210714 22:57:15.271" endtime="20210714 22:57:15.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:15.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:15.271" endtime="20210714 22:57:15.272"/>
</kw>
<msg timestamp="20210714 22:57:15.272" level="INFO">${uploadID} = 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018</msg>
<status status="PASS" starttime="20210714 22:57:15.232" endtime="20210714 22:57:15.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:15.272" endtime="20210714 22:57:15.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:15.273" endtime="20210714 22:57:15.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:15.274" endtime="20210714 22:57:15.274"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:15.278" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:15.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:15.314" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0336866 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:15.276" endtime="20210714 22:57:15.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:15.315" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0336866 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:15.315" endtime="20210714 22:57:15.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:15.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:15.316" endtime="20210714 22:57:15.316"/>
</kw>
<status status="PASS" starttime="20210714 22:57:15.275" endtime="20210714 22:57:15.316"/>
</kw>
<msg timestamp="20210714 22:57:15.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:15.275" endtime="20210714 22:57:15.317"/>
</kw>
<status status="PASS" starttime="20210714 22:57:15.275" endtime="20210714 22:57:15.317"/>
</kw>
<status status="PASS" starttime="20210714 22:57:15.274" endtime="20210714 22:57:15.317"/>
</kw>
<status status="PASS" starttime="20210714 22:57:15.274" endtime="20210714 22:57:15.317"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:15.321" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 05939/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:16.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:16.006" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523"
}</msg>
<status status="PASS" starttime="20210714 22:57:15.319" endtime="20210714 22:57:16.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:16.008" level="INFO">{
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523"
}</msg>
<status status="PASS" starttime="20210714 22:57:16.007" endtime="20210714 22:57:16.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:16.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:16.008" endtime="20210714 22:57:16.008"/>
</kw>
<status status="PASS" starttime="20210714 22:57:15.318" endtime="20210714 22:57:16.009"/>
</kw>
<msg timestamp="20210714 22:57:16.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:15.318" endtime="20210714 22:57:16.009"/>
</kw>
<msg timestamp="20210714 22:57:16.009" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523"
}</msg>
<status status="PASS" starttime="20210714 22:57:15.318" endtime="20210714 22:57:16.009"/>
</kw>
<msg timestamp="20210714 22:57:16.009" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523"
}</msg>
<status status="PASS" starttime="20210714 22:57:15.317" endtime="20210714 22:57:16.009"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:16.016" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:16.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:16.086" level="INFO">${output} = /legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:16.010" endtime="20210714 22:57:16.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:16.088" level="INFO">/legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:16.087" endtime="20210714 22:57:16.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:16.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:16.088" endtime="20210714 22:57:16.088"/>
</kw>
<msg timestamp="20210714 22:57:16.089" level="INFO">${eTag1} = /legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:16.010" endtime="20210714 22:57:16.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:16.089" endtime="20210714 22:57:16.089"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:16.093" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210714 22:57:16.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:16.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:16.091" endtime="20210714 22:57:16.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:16.096" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:16.095" endtime="20210714 22:57:16.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:16.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:16.096" endtime="20210714 22:57:16.096"/>
</kw>
<status status="PASS" starttime="20210714 22:57:16.090" endtime="20210714 22:57:16.097"/>
</kw>
<msg timestamp="20210714 22:57:16.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:16.090" endtime="20210714 22:57:16.097"/>
</kw>
<status status="PASS" starttime="20210714 22:57:16.089" endtime="20210714 22:57:16.097"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:16.101" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 05939/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:16.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:16.568" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956"
}</msg>
<status status="PASS" starttime="20210714 22:57:16.099" endtime="20210714 22:57:16.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:16.569" level="INFO">{
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956"
}</msg>
<status status="PASS" starttime="20210714 22:57:16.569" endtime="20210714 22:57:16.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:16.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:16.570" endtime="20210714 22:57:16.570"/>
</kw>
<status status="PASS" starttime="20210714 22:57:16.099" endtime="20210714 22:57:16.570"/>
</kw>
<msg timestamp="20210714 22:57:16.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:16.099" endtime="20210714 22:57:16.571"/>
</kw>
<msg timestamp="20210714 22:57:16.571" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956"
}</msg>
<status status="PASS" starttime="20210714 22:57:16.098" endtime="20210714 22:57:16.571"/>
</kw>
<msg timestamp="20210714 22:57:16.571" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956"
}</msg>
<status status="PASS" starttime="20210714 22:57:16.097" endtime="20210714 22:57:16.571"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:16.574" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:16.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:16.608" level="INFO">${output} = /legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:16.572" endtime="20210714 22:57:16.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:16.609" level="INFO">/legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:16.608" endtime="20210714 22:57:16.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:16.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:16.609" endtime="20210714 22:57:16.610"/>
</kw>
<msg timestamp="20210714 22:57:16.610" level="INFO">${eTag2} = /legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:16.571" endtime="20210714 22:57:16.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:16.610" endtime="20210714 22:57:16.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:16.614" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key 05939/multipartKey5 --upload-id 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:17.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:17.039" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:16.612" endtime="20210714 22:57:17.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:17.041" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210714 22:57:17.040" endtime="20210714 22:57:17.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:17.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:17.041" endtime="20210714 22:57:17.042"/>
</kw>
<status status="PASS" starttime="20210714 22:57:16.612" endtime="20210714 22:57:17.042"/>
</kw>
<msg timestamp="20210714 22:57:17.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:16.612" endtime="20210714 22:57:17.042"/>
</kw>
<msg timestamp="20210714 22:57:17.043" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:16.611" endtime="20210714 22:57:17.043"/>
</kw>
<msg timestamp="20210714 22:57:17.043" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:16.611" endtime="20210714 22:57:17.043"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:17.046" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:17.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:17.081" level="INFO">${output} = /legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:17.044" endtime="20210714 22:57:17.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:17.082" level="INFO">/legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:17.081" endtime="20210714 22:57:17.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:17.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:17.082" endtime="20210714 22:57:17.083"/>
</kw>
<msg timestamp="20210714 22:57:17.083" level="INFO">${part1} = /legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:17.043" endtime="20210714 22:57:17.083"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:17.086" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:17.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:17.121" level="INFO">${output} = /legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:17.084" endtime="20210714 22:57:17.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:17.122" level="INFO">/legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:17.121" endtime="20210714 22:57:17.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:17.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:17.122" endtime="20210714 22:57:17.123"/>
</kw>
<msg timestamp="20210714 22:57:17.123" level="INFO">${part2} = /legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:17.083" endtime="20210714 22:57:17.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:17.123" endtime="20210714 22:57:17.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:17.124" endtime="20210714 22:57:17.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:17.124" endtime="20210714 22:57:17.125"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:17.128" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key 05939/multipartKey5 --upload-id 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:17.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:17.535" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:17.127" endtime="20210714 22:57:17.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:17.536" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210714 22:57:17.535" endtime="20210714 22:57:17.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:17.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:17.536" endtime="20210714 22:57:17.537"/>
</kw>
<status status="PASS" starttime="20210714 22:57:17.126" endtime="20210714 22:57:17.537"/>
</kw>
<msg timestamp="20210714 22:57:17.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:17.126" endtime="20210714 22:57:17.538"/>
</kw>
<msg timestamp="20210714 22:57:17.538" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:17.125" endtime="20210714 22:57:17.538"/>
</kw>
<msg timestamp="20210714 22:57:17.538" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:17.125" endtime="20210714 22:57:17.538"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:17.541" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:17.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:17.575" level="INFO">${output} = /legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:17.539" endtime="20210714 22:57:17.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:17.576" level="INFO">/legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:17.576" endtime="20210714 22:57:17.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:17.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:17.576" endtime="20210714 22:57:17.577"/>
</kw>
<msg timestamp="20210714 22:57:17.577" level="INFO">${part1} = /legacy/source-bucket/05939/multipartKey5106581421962297523</msg>
<status status="PASS" starttime="20210714 22:57:17.539" endtime="20210714 22:57:17.578"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:17.580" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:15.901Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581421962297523", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:17.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:17.614" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210714 22:57:17.578" endtime="20210714 22:57:17.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:17.615" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210714 22:57:17.614" endtime="20210714 22:57:17.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:17.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:17.615" endtime="20210714 22:57:17.615"/>
</kw>
<msg timestamp="20210714 22:57:17.616" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210714 22:57:17.578" endtime="20210714 22:57:17.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:17.616" endtime="20210714 22:57:17.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:17.616" endtime="20210714 22:57:17.617"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:17.621" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key 05939/multipartKey5 --upload-id 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:18.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:18.020" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:17.619" endtime="20210714 22:57:18.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:18.022" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210714 22:57:18.021" endtime="20210714 22:57:18.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:18.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:18.022" endtime="20210714 22:57:18.023"/>
</kw>
<status status="PASS" starttime="20210714 22:57:17.619" endtime="20210714 22:57:18.023"/>
</kw>
<msg timestamp="20210714 22:57:18.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:17.618" endtime="20210714 22:57:18.023"/>
</kw>
<msg timestamp="20210714 22:57:18.023" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:17.617" endtime="20210714 22:57:18.023"/>
</kw>
<msg timestamp="20210714 22:57:18.024" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" starttime="20210714 22:57:17.617" endtime="20210714 22:57:18.024"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:18.026" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:57:16.519Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/05939/multipartKey5106581422012235956", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:18.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:18.060" level="INFO">${output} = /legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:18.024" endtime="20210714 22:57:18.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:18.061" level="INFO">/legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:18.061" endtime="20210714 22:57:18.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:18.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:18.062" endtime="20210714 22:57:18.062"/>
</kw>
<msg timestamp="20210714 22:57:18.062" level="INFO">${part2} = /legacy/source-bucket/05939/multipartKey5106581422012235956</msg>
<status status="PASS" starttime="20210714 22:57:18.024" endtime="20210714 22:57:18.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:18.063" endtime="20210714 22:57:18.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:18.063" endtime="20210714 22:57:18.064"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:18.067" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 05939/multipartKey5 --upload-id 0d1714b6-cc60-4cba-b661-b4751ffd5acc-106581421928612018 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:18.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:18.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:18.065" endtime="20210714 22:57:18.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:18.459" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:18.459" endtime="20210714 22:57:18.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:18.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:18.460" endtime="20210714 22:57:18.460"/>
</kw>
<msg timestamp="20210714 22:57:18.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:18.064" endtime="20210714 22:57:18.460"/>
</kw>
<msg timestamp="20210714 22:57:18.461" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:18.064" endtime="20210714 22:57:18.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:14.824" endtime="20210714 22:57:18.461"/>
</test>
<test id="s1-s13-s7-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:18.464" level="INFO">${random} = 65276</msg>
<status status="PASS" starttime="20210714 22:57:18.464" endtime="20210714 22:57:18.464"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:18.465" level="INFO">${PREFIX} = 65276</msg>
<status status="PASS" starttime="20210714 22:57:18.464" endtime="20210714 22:57:18.465"/>
</kw>
<status status="PASS" starttime="20210714 22:57:18.463" endtime="20210714 22:57:18.465"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:18.469" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:18.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:18.618" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.145668 s, 158 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:18.467" endtime="20210714 22:57:18.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:18.619" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.145668 s, 158 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:18.618" endtime="20210714 22:57:18.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:18.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:18.620" endtime="20210714 22:57:18.620"/>
</kw>
<status status="PASS" starttime="20210714 22:57:18.466" endtime="20210714 22:57:18.620"/>
</kw>
<msg timestamp="20210714 22:57:18.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:18.466" endtime="20210714 22:57:18.621"/>
</kw>
<status status="PASS" starttime="20210714 22:57:18.466" endtime="20210714 22:57:18.621"/>
</kw>
<status status="PASS" starttime="20210714 22:57:18.465" endtime="20210714 22:57:18.621"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:18.625" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:22.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:22.475" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:57:18.623" endtime="20210714 22:57:22.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:22.476" level="INFO">Completed 256.0 KiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (12.4 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (14.3 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (16.1 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (17.8 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (20.1 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (21.9 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (24.5 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (26.1 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (27.7 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (27.5 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (30.4 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (31.2 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (32.5 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (37.3 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (38.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (40.5 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (41.6 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (43.7 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (44.9 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (45.5 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (46.6 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (47.7 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (48.8 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (49.9 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (50.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (51.9 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (51.3 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (52.3 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (46.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (46.8 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (47.6 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (48.5 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (49.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (50.2 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (51.1 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (51.9 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (52.8 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (53.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (55.7 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (56.5 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (57.4 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (58.1 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (59.8 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (60.6 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (61.2 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (61.8 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (62.5 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (63.3 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (64.8 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (63.7 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (64.5 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (65.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (66.0 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (66.7 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (67.4 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (68.2 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (68.6 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (69.2 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (69.9 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (70.7 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (71.3 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (72.0 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (72.7 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (73.4 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (74.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://link/mpyawscli                   </msg>
<status status="PASS" starttime="20210714 22:57:22.475" endtime="20210714 22:57:22.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:22.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:22.477" endtime="20210714 22:57:22.477"/>
</kw>
<status status="PASS" starttime="20210714 22:57:18.622" endtime="20210714 22:57:22.477"/>
</kw>
<msg timestamp="20210714 22:57:22.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:18.622" endtime="20210714 22:57:22.478"/>
</kw>
<msg timestamp="20210714 22:57:22.478" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:57:18.622" endtime="20210714 22:57:22.478"/>
</kw>
<status status="PASS" starttime="20210714 22:57:18.621" endtime="20210714 22:57:22.478"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:22.482" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://link/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:23.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:23.294" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:57:22.480" endtime="20210714 22:57:23.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:23.295" level="INFO">Completed 256.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (11.8 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (17.5 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (20.5 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (22.3 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (22.1 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (25.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (23.0 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (24.3 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (25.7 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (28.3 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (29.1 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (29.8 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (30.4 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (31.5 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (30.6 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (31.8 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (32.9 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (37.5 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (38.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (37.9 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (39.0 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (40.1 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (40.9 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (41.6 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (43.7 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (45.9 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (46.8 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (47.9 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (46.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (47.5 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (48.5 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (49.4 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (49.6 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (50.5 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (51.4 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (52.3 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (52.9 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (53.8 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (54.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (55.6 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (51.4 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (52.2 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (53.1 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (53.9 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (52.6 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (53.4 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (55.0 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (55.0 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (56.6 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (57.4 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (52.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (52.8 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (53.5 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (55.2 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (55.9 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (56.6 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (53.9 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (55.0 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (55.5 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (57.3 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (57.9 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (58.5 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (59.1 MiB/s) with 1 file(s) remaining
download: s3://link/mpyawscli to ../../tmp/part1.result          </msg>
<status status="PASS" starttime="20210714 22:57:23.294" endtime="20210714 22:57:23.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:23.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:23.295" endtime="20210714 22:57:23.296"/>
</kw>
<status status="PASS" starttime="20210714 22:57:22.479" endtime="20210714 22:57:23.296"/>
</kw>
<msg timestamp="20210714 22:57:23.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:22.479" endtime="20210714 22:57:23.296"/>
</kw>
<msg timestamp="20210714 22:57:23.297" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:57:22.479" endtime="20210714 22:57:23.297"/>
</kw>
<status status="PASS" starttime="20210714 22:57:22.478" endtime="20210714 22:57:23.297"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:23.301" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:23.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:23.698" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20210714 22:57:23.299" endtime="20210714 22:57:23.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:23.700" level="INFO">delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20210714 22:57:23.699" endtime="20210714 22:57:23.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:23.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:23.700" endtime="20210714 22:57:23.700"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.298" endtime="20210714 22:57:23.701"/>
</kw>
<msg timestamp="20210714 22:57:23.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:23.298" endtime="20210714 22:57:23.701"/>
</kw>
<msg timestamp="20210714 22:57:23.701" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20210714 22:57:23.298" endtime="20210714 22:57:23.701"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.297" endtime="20210714 22:57:23.702"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:23.706" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:23.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:23.755" level="INFO">${output} = 4342d57d2d9532713ec0950391e15187</msg>
<status status="PASS" starttime="20210714 22:57:23.704" endtime="20210714 22:57:23.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:23.757" level="INFO">4342d57d2d9532713ec0950391e15187</msg>
<status status="PASS" starttime="20210714 22:57:23.756" endtime="20210714 22:57:23.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:23.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:23.757" endtime="20210714 22:57:23.757"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.703" endtime="20210714 22:57:23.758"/>
</kw>
<msg timestamp="20210714 22:57:23.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:23.703" endtime="20210714 22:57:23.758"/>
</kw>
<msg timestamp="20210714 22:57:23.758" level="INFO">${checksumbefore} = 4342d57d2d9532713ec0950391e15187</msg>
<status status="PASS" starttime="20210714 22:57:23.702" endtime="20210714 22:57:23.758"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:23.761" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:23.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:23.810" level="INFO">${output} = 4342d57d2d9532713ec0950391e15187</msg>
<status status="PASS" starttime="20210714 22:57:23.759" endtime="20210714 22:57:23.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:23.811" level="INFO">4342d57d2d9532713ec0950391e15187</msg>
<status status="PASS" starttime="20210714 22:57:23.811" endtime="20210714 22:57:23.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:23.811" endtime="20210714 22:57:23.812"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.759" endtime="20210714 22:57:23.812"/>
</kw>
<msg timestamp="20210714 22:57:23.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:23.759" endtime="20210714 22:57:23.812"/>
</kw>
<msg timestamp="20210714 22:57:23.813" level="INFO">${checksumafter} = 4342d57d2d9532713ec0950391e15187</msg>
<status status="PASS" starttime="20210714 22:57:23.758" endtime="20210714 22:57:23.813"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:23.813" endtime="20210714 22:57:23.813"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.702" endtime="20210714 22:57:23.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:18.462" endtime="20210714 22:57:23.814"/>
</test>
<test id="s1-s13-s7-t10" name="Test Multipart Upload Put With Copy">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:23.816" level="INFO">${random} = 18586</msg>
<status status="PASS" starttime="20210714 22:57:23.815" endtime="20210714 22:57:23.816"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:23.816" level="INFO">${PREFIX} = 18586</msg>
<status status="PASS" starttime="20210714 22:57:23.816" endtime="20210714 22:57:23.816"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.815" endtime="20210714 22:57:23.817"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:23.821" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:23.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:23.860" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0335148 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:23.819" endtime="20210714 22:57:23.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:23.861" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0335148 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:23.860" endtime="20210714 22:57:23.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:23.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:23.861" endtime="20210714 22:57:23.862"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.818" endtime="20210714 22:57:23.862"/>
</kw>
<msg timestamp="20210714 22:57:23.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:23.818" endtime="20210714 22:57:23.862"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.817" endtime="20210714 22:57:23.862"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.817" endtime="20210714 22:57:23.863"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.817" endtime="20210714 22:57:23.863"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:23.867" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 18586/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:26.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:26.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:23.864" endtime="20210714 22:57:26.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:26.972" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:26.971" endtime="20210714 22:57:26.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:26.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:26.972" endtime="20210714 22:57:26.973"/>
</kw>
<status status="PASS" starttime="20210714 22:57:23.864" endtime="20210714 22:57:26.973"/>
</kw>
<msg timestamp="20210714 22:57:26.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:23.864" endtime="20210714 22:57:26.973"/>
</kw>
<msg timestamp="20210714 22:57:26.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:23.863" endtime="20210714 22:57:26.973"/>
</kw>
<msg timestamp="20210714 22:57:26.974" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:23.863" endtime="20210714 22:57:26.974"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:26.978" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 18586/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:27.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:27.377" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:26.976" endtime="20210714 22:57:27.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:27.379" level="INFO">{
    "Bucket": "link", 
    "UploadId": "ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:27.378" endtime="20210714 22:57:27.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:27.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:27.379" endtime="20210714 22:57:27.380"/>
</kw>
<status status="PASS" starttime="20210714 22:57:26.975" endtime="20210714 22:57:27.380"/>
</kw>
<msg timestamp="20210714 22:57:27.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:26.975" endtime="20210714 22:57:27.380"/>
</kw>
<msg timestamp="20210714 22:57:27.380" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:26.974" endtime="20210714 22:57:27.380"/>
</kw>
<msg timestamp="20210714 22:57:27.381" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:26.974" endtime="20210714 22:57:27.381"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:27.383" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210", 
    "Key": "18586/copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:27.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:27.418" level="INFO">${output} = ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210</msg>
<status status="PASS" starttime="20210714 22:57:27.381" endtime="20210714 22:57:27.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:27.419" level="INFO">ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210</msg>
<status status="PASS" starttime="20210714 22:57:27.418" endtime="20210714 22:57:27.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:27.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:27.419" endtime="20210714 22:57:27.419"/>
</kw>
<msg timestamp="20210714 22:57:27.420" level="INFO">${uploadID} = ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210</msg>
<status status="PASS" starttime="20210714 22:57:27.381" endtime="20210714 22:57:27.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:27.420" endtime="20210714 22:57:27.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:27.420" endtime="20210714 22:57:27.421"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:27.425" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 18586/copytest/destination --upload-id ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210 --part-number 1 --copy-source link/18586/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:30.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:30.643" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:30.598Z", 
        "ETag": "/legacy/source-bucket/18586/copytest/destination106581422753579195"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:27.423" endtime="20210714 22:57:30.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:30.644" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:30.598Z", 
        "ETag": "/legacy/source-bucket/18586/copytest/destination106581422753579195"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:30.643" endtime="20210714 22:57:30.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:30.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:30.644" endtime="20210714 22:57:30.645"/>
</kw>
<status status="PASS" starttime="20210714 22:57:27.422" endtime="20210714 22:57:30.645"/>
</kw>
<msg timestamp="20210714 22:57:30.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:27.422" endtime="20210714 22:57:30.645"/>
</kw>
<msg timestamp="20210714 22:57:30.646" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:30.598Z", 
        "ETag": "/legacy/source-bucket/18586/copytest/destination106581422753579195"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:27.421" endtime="20210714 22:57:30.646"/>
</kw>
<msg timestamp="20210714 22:57:30.646" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:30.598Z", 
        "ETag": "/legacy/source-bucket/18586/copytest/destination106581422753579195"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:27.421" endtime="20210714 22:57:30.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:30.646" endtime="20210714 22:57:30.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:30.647" endtime="20210714 22:57:30.647"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:30.650" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:30.598Z", 
        "ETag": "/legacy/source-bucket/18586/copytest/destination106581422753579195"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:30.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:30.684" level="INFO">${output} = /legacy/source-bucket/18586/copytest/destination106581422753579195</msg>
<status status="PASS" starttime="20210714 22:57:30.648" endtime="20210714 22:57:30.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:30.685" level="INFO">/legacy/source-bucket/18586/copytest/destination106581422753579195</msg>
<status status="PASS" starttime="20210714 22:57:30.684" endtime="20210714 22:57:30.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:30.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:30.685" endtime="20210714 22:57:30.686"/>
</kw>
<msg timestamp="20210714 22:57:30.686" level="INFO">${eTag1} = /legacy/source-bucket/18586/copytest/destination106581422753579195</msg>
<status status="PASS" starttime="20210714 22:57:30.647" endtime="20210714 22:57:30.686"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:30.690" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id ebf019a0-280b-4947-bd2c-a0058314761e-106581422724481210 --bucket link --key 18586/copytest/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/18586/copytest/destination106581422753579195,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:31.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:31.086" level="INFO">${output} = {
    "ETag": "6047836e93209634a327cf5db7d2b3aef32e5dceca495af98f398cb092031b30", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:30.689" endtime="20210714 22:57:31.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:31.088" level="INFO">{
    "ETag": "6047836e93209634a327cf5db7d2b3aef32e5dceca495af98f398cb092031b30", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:31.087" endtime="20210714 22:57:31.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:31.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:31.088" endtime="20210714 22:57:31.088"/>
</kw>
<status status="PASS" starttime="20210714 22:57:30.688" endtime="20210714 22:57:31.089"/>
</kw>
<msg timestamp="20210714 22:57:31.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:30.688" endtime="20210714 22:57:31.089"/>
</kw>
<msg timestamp="20210714 22:57:31.089" level="INFO">${output} = {
    "ETag": "6047836e93209634a327cf5db7d2b3aef32e5dceca495af98f398cb092031b30", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "18586/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:30.687" endtime="20210714 22:57:31.089"/>
</kw>
<status status="PASS" starttime="20210714 22:57:30.686" endtime="20210714 22:57:31.089"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:31.093" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 18586/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:31.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:31.580" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:31 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:31.091" endtime="20210714 22:57:31.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:31.581" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:31 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 14 Jul 2021 22:57:31 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:57:31.581" endtime="20210714 22:57:31.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:31.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:31.582" endtime="20210714 22:57:31.582"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.091" endtime="20210714 22:57:31.583"/>
</kw>
<msg timestamp="20210714 22:57:31.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:31.091" endtime="20210714 22:57:31.583"/>
</kw>
<msg timestamp="20210714 22:57:31.583" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:31 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:57:31.090" endtime="20210714 22:57:31.583"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.089" endtime="20210714 22:57:31.583"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:31.587" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:31.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:31.600" level="INFO">${output} = cf28dd4a38f53b898e6d749c472725be</msg>
<status status="PASS" starttime="20210714 22:57:31.585" endtime="20210714 22:57:31.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:31.601" level="INFO">cf28dd4a38f53b898e6d749c472725be</msg>
<status status="PASS" starttime="20210714 22:57:31.600" endtime="20210714 22:57:31.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:31.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:31.601" endtime="20210714 22:57:31.602"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.585" endtime="20210714 22:57:31.602"/>
</kw>
<msg timestamp="20210714 22:57:31.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:31.584" endtime="20210714 22:57:31.602"/>
</kw>
<msg timestamp="20210714 22:57:31.602" level="INFO">${checksumbefore} = cf28dd4a38f53b898e6d749c472725be</msg>
<status status="PASS" starttime="20210714 22:57:31.584" endtime="20210714 22:57:31.602"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:31.606" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:31.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:31.618" level="INFO">${output} = cf28dd4a38f53b898e6d749c472725be</msg>
<status status="PASS" starttime="20210714 22:57:31.604" endtime="20210714 22:57:31.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:31.619" level="INFO">cf28dd4a38f53b898e6d749c472725be</msg>
<status status="PASS" starttime="20210714 22:57:31.619" endtime="20210714 22:57:31.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:31.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:31.619" endtime="20210714 22:57:31.620"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.603" endtime="20210714 22:57:31.620"/>
</kw>
<msg timestamp="20210714 22:57:31.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:31.603" endtime="20210714 22:57:31.620"/>
</kw>
<msg timestamp="20210714 22:57:31.621" level="INFO">${checksumafter} = cf28dd4a38f53b898e6d749c472725be</msg>
<status status="PASS" starttime="20210714 22:57:31.603" endtime="20210714 22:57:31.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:31.621" endtime="20210714 22:57:31.621"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.583" endtime="20210714 22:57:31.621"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:23.814" endtime="20210714 22:57:31.622"/>
</test>
<test id="s1-s13-s7-t11" name="Test Multipart Upload Put With Copy and range">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:31.624" level="INFO">${random} = 15793</msg>
<status status="PASS" starttime="20210714 22:57:31.623" endtime="20210714 22:57:31.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:31.625" level="INFO">${PREFIX} = 15793</msg>
<status status="PASS" starttime="20210714 22:57:31.624" endtime="20210714 22:57:31.625"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.623" endtime="20210714 22:57:31.625"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:31.629" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:31.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:31.699" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0666392 s, 157 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:31.628" endtime="20210714 22:57:31.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:31.701" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0666392 s, 157 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:31.700" endtime="20210714 22:57:31.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:31.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:31.701" endtime="20210714 22:57:31.702"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.627" endtime="20210714 22:57:31.702"/>
</kw>
<msg timestamp="20210714 22:57:31.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:31.627" endtime="20210714 22:57:31.702"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.626" endtime="20210714 22:57:31.703"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.626" endtime="20210714 22:57:31.703"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.626" endtime="20210714 22:57:31.703"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:31.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 15793/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:32.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:32.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:31.705" endtime="20210714 22:57:32.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:32.381" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:32.380" endtime="20210714 22:57:32.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:32.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:32.381" endtime="20210714 22:57:32.382"/>
</kw>
<status status="PASS" starttime="20210714 22:57:31.705" endtime="20210714 22:57:32.382"/>
</kw>
<msg timestamp="20210714 22:57:32.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:31.704" endtime="20210714 22:57:32.382"/>
</kw>
<msg timestamp="20210714 22:57:32.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:31.704" endtime="20210714 22:57:32.383"/>
</kw>
<msg timestamp="20210714 22:57:32.383" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:31.703" endtime="20210714 22:57:32.383"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:32.387" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 15793/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:32.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:32.786" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:32.385" endtime="20210714 22:57:32.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:32.787" level="INFO">{
    "Bucket": "link", 
    "UploadId": "54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:32.786" endtime="20210714 22:57:32.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:32.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:32.787" endtime="20210714 22:57:32.788"/>
</kw>
<status status="PASS" starttime="20210714 22:57:32.384" endtime="20210714 22:57:32.788"/>
</kw>
<msg timestamp="20210714 22:57:32.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:32.384" endtime="20210714 22:57:32.788"/>
</kw>
<msg timestamp="20210714 22:57:32.788" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:32.384" endtime="20210714 22:57:32.788"/>
</kw>
<msg timestamp="20210714 22:57:32.789" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:32.383" endtime="20210714 22:57:32.789"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:32.791" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973", 
    "Key": "15793/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:32.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:32.826" level="INFO">${output} = 54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973</msg>
<status status="PASS" starttime="20210714 22:57:32.789" endtime="20210714 22:57:32.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:32.827" level="INFO">54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973</msg>
<status status="PASS" starttime="20210714 22:57:32.826" endtime="20210714 22:57:32.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:32.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:32.827" endtime="20210714 22:57:32.828"/>
</kw>
<msg timestamp="20210714 22:57:32.828" level="INFO">${uploadID} = 54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973</msg>
<status status="PASS" starttime="20210714 22:57:32.789" endtime="20210714 22:57:32.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:32.829" endtime="20210714 22:57:32.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:32.829" endtime="20210714 22:57:32.829"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:32.834" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 15793/copyrange/destination --upload-id 54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973 --part-number 1 --copy-source link/15793/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:36.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:36.146" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.101Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423108063422"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:32.832" endtime="20210714 22:57:36.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:36.147" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.101Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423108063422"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:36.146" endtime="20210714 22:57:36.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:36.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:36.147" endtime="20210714 22:57:36.148"/>
</kw>
<status status="PASS" starttime="20210714 22:57:32.831" endtime="20210714 22:57:36.148"/>
</kw>
<msg timestamp="20210714 22:57:36.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:32.831" endtime="20210714 22:57:36.148"/>
</kw>
<msg timestamp="20210714 22:57:36.149" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.101Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423108063422"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:32.831" endtime="20210714 22:57:36.149"/>
</kw>
<msg timestamp="20210714 22:57:36.149" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.101Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423108063422"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:32.830" endtime="20210714 22:57:36.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:36.149" endtime="20210714 22:57:36.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:36.150" endtime="20210714 22:57:36.150"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:36.153" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.101Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423108063422"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:36.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:36.186" level="INFO">${output} = /legacy/source-bucket/15793/copyrange/destination106581423108063422</msg>
<status status="PASS" starttime="20210714 22:57:36.151" endtime="20210714 22:57:36.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:36.187" level="INFO">/legacy/source-bucket/15793/copyrange/destination106581423108063422</msg>
<status status="PASS" starttime="20210714 22:57:36.187" endtime="20210714 22:57:36.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:36.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:36.188" endtime="20210714 22:57:36.188"/>
</kw>
<msg timestamp="20210714 22:57:36.188" level="INFO">${eTag1} = /legacy/source-bucket/15793/copyrange/destination106581423108063422</msg>
<status status="PASS" starttime="20210714 22:57:36.150" endtime="20210714 22:57:36.188"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:36.193" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 15793/copyrange/destination --upload-id 54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973 --part-number 2 --copy-source link/15793/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:36.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:36.781" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.705Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423328526527"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:36.191" endtime="20210714 22:57:36.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:36.783" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.705Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423328526527"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:36.782" endtime="20210714 22:57:36.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:36.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:36.783" endtime="20210714 22:57:36.783"/>
</kw>
<status status="PASS" starttime="20210714 22:57:36.190" endtime="20210714 22:57:36.784"/>
</kw>
<msg timestamp="20210714 22:57:36.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:36.190" endtime="20210714 22:57:36.784"/>
</kw>
<msg timestamp="20210714 22:57:36.784" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.705Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423328526527"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:36.190" endtime="20210714 22:57:36.784"/>
</kw>
<msg timestamp="20210714 22:57:36.785" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.705Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423328526527"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:36.189" endtime="20210714 22:57:36.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:36.785" endtime="20210714 22:57:36.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:36.785" endtime="20210714 22:57:36.786"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:36.788" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:36.705Z", 
        "ETag": "/legacy/source-bucket/15793/copyrange/destination106581423328526527"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:36.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:36.822" level="INFO">${output} = /legacy/source-bucket/15793/copyrange/destination106581423328526527</msg>
<status status="PASS" starttime="20210714 22:57:36.786" endtime="20210714 22:57:36.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:36.824" level="INFO">/legacy/source-bucket/15793/copyrange/destination106581423328526527</msg>
<status status="PASS" starttime="20210714 22:57:36.823" endtime="20210714 22:57:36.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:36.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:36.824" endtime="20210714 22:57:36.825"/>
</kw>
<msg timestamp="20210714 22:57:36.825" level="INFO">${eTag2} = /legacy/source-bucket/15793/copyrange/destination106581423328526527</msg>
<status status="PASS" starttime="20210714 22:57:36.786" endtime="20210714 22:57:36.825"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:36.830" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 54d65d80-a4e1-404d-88ff-b097b7286386-106581423079030973 --bucket link --key 15793/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/15793/copyrange/destination106581423108063422,PartNumber=1},{ETag=/legacy/source-bucket/15793/copyrange/destination106581423328526527,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:37.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:37.233" level="INFO">${output} = {
    "ETag": "91019f8314622785348f33d15742da4bd037290dbe55746fefe34569a25e9f15", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:36.828" endtime="20210714 22:57:37.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:37.234" level="INFO">{
    "ETag": "91019f8314622785348f33d15742da4bd037290dbe55746fefe34569a25e9f15", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:37.234" endtime="20210714 22:57:37.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:37.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:37.235" endtime="20210714 22:57:37.235"/>
</kw>
<status status="PASS" starttime="20210714 22:57:36.827" endtime="20210714 22:57:37.235"/>
</kw>
<msg timestamp="20210714 22:57:37.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:36.827" endtime="20210714 22:57:37.236"/>
</kw>
<msg timestamp="20210714 22:57:37.236" level="INFO">${output} = {
    "ETag": "91019f8314622785348f33d15742da4bd037290dbe55746fefe34569a25e9f15", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "15793/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:36.826" endtime="20210714 22:57:37.236"/>
</kw>
<status status="PASS" starttime="20210714 22:57:36.825" endtime="20210714 22:57:37.236"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:37.240" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 15793/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:37.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:37.846" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:37 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:57:37.238" endtime="20210714 22:57:37.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:37.847" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:37 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 22:57:37 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:57:37.847" endtime="20210714 22:57:37.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:37.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:37.848" endtime="20210714 22:57:37.848"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.237" endtime="20210714 22:57:37.849"/>
</kw>
<msg timestamp="20210714 22:57:37.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:37.237" endtime="20210714 22:57:37.849"/>
</kw>
<msg timestamp="20210714 22:57:37.849" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:37 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:57:37.237" endtime="20210714 22:57:37.849"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.236" endtime="20210714 22:57:37.849"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:37.853" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:37.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:37.878" level="INFO">${output} = d51759f6e3121ceb863966b4ca200f43</msg>
<status status="PASS" starttime="20210714 22:57:37.851" endtime="20210714 22:57:37.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:37.879" level="INFO">d51759f6e3121ceb863966b4ca200f43</msg>
<status status="PASS" starttime="20210714 22:57:37.878" endtime="20210714 22:57:37.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:37.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:37.879" endtime="20210714 22:57:37.879"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.851" endtime="20210714 22:57:37.880"/>
</kw>
<msg timestamp="20210714 22:57:37.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:37.851" endtime="20210714 22:57:37.880"/>
</kw>
<msg timestamp="20210714 22:57:37.880" level="INFO">${checksumbefore} = d51759f6e3121ceb863966b4ca200f43</msg>
<status status="PASS" starttime="20210714 22:57:37.850" endtime="20210714 22:57:37.880"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:37.883" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:37.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:37.909" level="INFO">${output} = d51759f6e3121ceb863966b4ca200f43</msg>
<status status="PASS" starttime="20210714 22:57:37.882" endtime="20210714 22:57:37.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:37.910" level="INFO">d51759f6e3121ceb863966b4ca200f43</msg>
<status status="PASS" starttime="20210714 22:57:37.910" endtime="20210714 22:57:37.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:37.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:37.911" endtime="20210714 22:57:37.911"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.881" endtime="20210714 22:57:37.911"/>
</kw>
<msg timestamp="20210714 22:57:37.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:37.881" endtime="20210714 22:57:37.912"/>
</kw>
<msg timestamp="20210714 22:57:37.912" level="INFO">${checksumafter} = d51759f6e3121ceb863966b4ca200f43</msg>
<status status="PASS" starttime="20210714 22:57:37.880" endtime="20210714 22:57:37.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:37.912" endtime="20210714 22:57:37.912"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.850" endtime="20210714 22:57:37.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:31.622" endtime="20210714 22:57:37.913"/>
</test>
<test id="s1-s13-s7-t12" name="Test Multipart Upload Put With Copy and range with IfModifiedSince">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:37.916" level="INFO">${random} = 61426</msg>
<status status="PASS" starttime="20210714 22:57:37.915" endtime="20210714 22:57:37.916"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:37.916" level="INFO">${PREFIX} = 61426</msg>
<status status="PASS" starttime="20210714 22:57:37.916" endtime="20210714 22:57:37.916"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.915" endtime="20210714 22:57:37.917"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:37.920" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:37.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:37.991" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0667704 s, 157 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:37.918" endtime="20210714 22:57:37.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:37.993" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0667704 s, 157 MB/s</msg>
<status status="PASS" starttime="20210714 22:57:37.992" endtime="20210714 22:57:37.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:37.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:37.993" endtime="20210714 22:57:37.994"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.918" endtime="20210714 22:57:37.994"/>
</kw>
<msg timestamp="20210714 22:57:37.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:37.918" endtime="20210714 22:57:37.994"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.917" endtime="20210714 22:57:37.994"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.917" endtime="20210714 22:57:37.995"/>
</kw>
<status status="PASS" starttime="20210714 22:57:37.917" endtime="20210714 22:57:37.995"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210714 22:57:37.995" level="INFO">${curDate} = 2021-07-14 22:57:37.995</msg>
<status status="PASS" starttime="20210714 22:57:37.995" endtime="20210714 22:57:37.995"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20210714 22:57:38.000" level="INFO">${beforeCreate} = 2021-07-13 22:57:37.995</msg>
<status status="PASS" starttime="20210714 22:57:37.995" endtime="20210714 22:57:38.000"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20210714 22:57:38.000" level="INFO">${afterCreate} = 2021-07-15 22:57:37.995</msg>
<status status="PASS" starttime="20210714 22:57:38.000" endtime="20210714 22:57:38.000"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:38.004" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 61426/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:38.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:38.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:38.002" endtime="20210714 22:57:38.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:38.795" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:38.795" endtime="20210714 22:57:38.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:38.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:38.796" endtime="20210714 22:57:38.796"/>
</kw>
<status status="PASS" starttime="20210714 22:57:38.002" endtime="20210714 22:57:38.796"/>
</kw>
<msg timestamp="20210714 22:57:38.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:38.002" endtime="20210714 22:57:38.797"/>
</kw>
<msg timestamp="20210714 22:57:38.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:38.001" endtime="20210714 22:57:38.797"/>
</kw>
<msg timestamp="20210714 22:57:38.797" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:38.001" endtime="20210714 22:57:38.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:38.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 61426/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:39.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:39.194" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:38.799" endtime="20210714 22:57:39.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:39.195" level="INFO">{
    "Bucket": "link", 
    "UploadId": "51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:39.195" endtime="20210714 22:57:39.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:39.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:39.196" endtime="20210714 22:57:39.196"/>
</kw>
<status status="PASS" starttime="20210714 22:57:38.799" endtime="20210714 22:57:39.197"/>
</kw>
<msg timestamp="20210714 22:57:39.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:38.798" endtime="20210714 22:57:39.197"/>
</kw>
<msg timestamp="20210714 22:57:39.197" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:38.798" endtime="20210714 22:57:39.197"/>
</kw>
<msg timestamp="20210714 22:57:39.197" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:38.797" endtime="20210714 22:57:39.197"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:39.200" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273", 
    "Key": "61426/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:39.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:39.234" level="INFO">${output} = 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273</msg>
<status status="PASS" starttime="20210714 22:57:39.198" endtime="20210714 22:57:39.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:39.235" level="INFO">51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273</msg>
<status status="PASS" starttime="20210714 22:57:39.234" endtime="20210714 22:57:39.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:39.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:39.235" endtime="20210714 22:57:39.236"/>
</kw>
<msg timestamp="20210714 22:57:39.236" level="INFO">${uploadID} = 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273</msg>
<status status="PASS" starttime="20210714 22:57:39.197" endtime="20210714 22:57:39.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:39.236" endtime="20210714 22:57:39.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:39.237" endtime="20210714 22:57:39.237"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:39.241" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 61426/copyrange/destination --upload-id 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273 --part-number 1 --copy-source link/61426/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2021-07-15 22:57:37.995' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:39.652" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:39.652" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.239" endtime="20210714 22:57:39.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:39.653" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.653" endtime="20210714 22:57:39.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:39.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:39.654" endtime="20210714 22:57:39.654"/>
</kw>
<msg timestamp="20210714 22:57:39.654" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.238" endtime="20210714 22:57:39.654"/>
</kw>
<msg timestamp="20210714 22:57:39.655" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.237" endtime="20210714 22:57:39.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:39.655" endtime="20210714 22:57:39.655"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:39.659" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 61426/copyrange/destination --upload-id 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273 --part-number 2 --copy-source link/61426/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2021-07-13 22:57:37.995' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:40.067" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:40.067" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.657" endtime="20210714 22:57:40.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:40.068" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:40.067" endtime="20210714 22:57:40.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:40.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:40.068" endtime="20210714 22:57:40.069"/>
</kw>
<msg timestamp="20210714 22:57:40.069" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.656" endtime="20210714 22:57:40.069"/>
</kw>
<msg timestamp="20210714 22:57:40.070" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:57:39.655" endtime="20210714 22:57:40.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:40.070" endtime="20210714 22:57:40.070"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:40.074" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 61426/copyrange/destination --upload-id 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273 --part-number 1 --copy-source link/61426/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2021-07-13 22:57:37.995' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:41.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:41.072" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.022Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423582675140"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:40.072" endtime="20210714 22:57:41.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:41.074" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.022Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423582675140"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:41.073" endtime="20210714 22:57:41.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:41.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:41.074" endtime="20210714 22:57:41.075"/>
</kw>
<msg timestamp="20210714 22:57:41.075" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.022Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423582675140"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:40.071" endtime="20210714 22:57:41.075"/>
</kw>
<msg timestamp="20210714 22:57:41.075" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.022Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423582675140"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:40.070" endtime="20210714 22:57:41.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:41.076" endtime="20210714 22:57:41.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:41.076" endtime="20210714 22:57:41.076"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:41.079" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.022Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423582675140"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:41.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:41.153" level="INFO">${output} = /legacy/source-bucket/61426/copyrange/destination106581423582675140</msg>
<status status="PASS" starttime="20210714 22:57:41.077" endtime="20210714 22:57:41.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:41.154" level="INFO">/legacy/source-bucket/61426/copyrange/destination106581423582675140</msg>
<status status="PASS" starttime="20210714 22:57:41.154" endtime="20210714 22:57:41.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:41.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:41.155" endtime="20210714 22:57:41.155"/>
</kw>
<msg timestamp="20210714 22:57:41.155" level="INFO">${eTag1} = /legacy/source-bucket/61426/copyrange/destination106581423582675140</msg>
<status status="PASS" starttime="20210714 22:57:41.076" endtime="20210714 22:57:41.155"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:41.159" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 61426/copyrange/destination --upload-id 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273 --part-number 2 --copy-source link/61426/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2021-07-15 22:57:37.995' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:41.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:41.877" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.830Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423654437061"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:41.157" endtime="20210714 22:57:41.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:41.878" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.830Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423654437061"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:41.877" endtime="20210714 22:57:41.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:41.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:41.878" endtime="20210714 22:57:41.879"/>
</kw>
<msg timestamp="20210714 22:57:41.879" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.830Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423654437061"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:41.157" endtime="20210714 22:57:41.879"/>
</kw>
<msg timestamp="20210714 22:57:41.880" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.830Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423654437061"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:41.156" endtime="20210714 22:57:41.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:41.880" endtime="20210714 22:57:41.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:41.880" endtime="20210714 22:57:41.881"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:41.883" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:57:41.830Z", 
        "ETag": "/legacy/source-bucket/61426/copyrange/destination106581423654437061"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:41.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:41.917" level="INFO">${output} = /legacy/source-bucket/61426/copyrange/destination106581423654437061</msg>
<status status="PASS" starttime="20210714 22:57:41.881" endtime="20210714 22:57:41.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:41.918" level="INFO">/legacy/source-bucket/61426/copyrange/destination106581423654437061</msg>
<status status="PASS" starttime="20210714 22:57:41.918" endtime="20210714 22:57:41.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:41.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:41.919" endtime="20210714 22:57:41.919"/>
</kw>
<msg timestamp="20210714 22:57:41.919" level="INFO">${eTag2} = /legacy/source-bucket/61426/copyrange/destination106581423654437061</msg>
<status status="PASS" starttime="20210714 22:57:41.881" endtime="20210714 22:57:41.919"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:41.924" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 51190e73-9524-47f6-b390-26953e7df9ec-106581423499182273 --bucket link --key 61426/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/61426/copyrange/destination106581423582675140,PartNumber=1},{ETag=/legacy/source-bucket/61426/copyrange/destination106581423654437061,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:42.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:42.326" level="INFO">${output} = {
    "ETag": "a266eca5af7f8599578540160b28ccd35d963a9136b1b9865ce20a198d3a35c8", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:41.922" endtime="20210714 22:57:42.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:42.328" level="INFO">{
    "ETag": "a266eca5af7f8599578540160b28ccd35d963a9136b1b9865ce20a198d3a35c8", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:42.327" endtime="20210714 22:57:42.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:42.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:42.328" endtime="20210714 22:57:42.328"/>
</kw>
<status status="PASS" starttime="20210714 22:57:41.921" endtime="20210714 22:57:42.329"/>
</kw>
<msg timestamp="20210714 22:57:42.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:41.921" endtime="20210714 22:57:42.329"/>
</kw>
<msg timestamp="20210714 22:57:42.329" level="INFO">${output} = {
    "ETag": "a266eca5af7f8599578540160b28ccd35d963a9136b1b9865ce20a198d3a35c8", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "61426/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:57:41.920" endtime="20210714 22:57:42.329"/>
</kw>
<status status="PASS" starttime="20210714 22:57:41.920" endtime="20210714 22:57:42.329"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:42.334" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 61426/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:42.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:42.868" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:42 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:57:42.331" endtime="20210714 22:57:42.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:42.869" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:42 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 22:57:42 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:57:42.869" endtime="20210714 22:57:42.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:42.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:42.870" endtime="20210714 22:57:42.870"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.331" endtime="20210714 22:57:42.871"/>
</kw>
<msg timestamp="20210714 22:57:42.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:42.331" endtime="20210714 22:57:42.871"/>
</kw>
<msg timestamp="20210714 22:57:42.871" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:57:42 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:57:42.330" endtime="20210714 22:57:42.871"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.330" endtime="20210714 22:57:42.871"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:42.875" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:42.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:42.898" level="INFO">${output} = fa33b223f41daa246305151d802b290b</msg>
<status status="PASS" starttime="20210714 22:57:42.873" endtime="20210714 22:57:42.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:42.899" level="INFO">fa33b223f41daa246305151d802b290b</msg>
<status status="PASS" starttime="20210714 22:57:42.899" endtime="20210714 22:57:42.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:42.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:42.900" endtime="20210714 22:57:42.900"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.873" endtime="20210714 22:57:42.900"/>
</kw>
<msg timestamp="20210714 22:57:42.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:42.873" endtime="20210714 22:57:42.901"/>
</kw>
<msg timestamp="20210714 22:57:42.901" level="INFO">${checksumbefore} = fa33b223f41daa246305151d802b290b</msg>
<status status="PASS" starttime="20210714 22:57:42.872" endtime="20210714 22:57:42.901"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:42.904" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:42.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:42.927" level="INFO">${output} = fa33b223f41daa246305151d802b290b</msg>
<status status="PASS" starttime="20210714 22:57:42.902" endtime="20210714 22:57:42.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:42.927" level="INFO">fa33b223f41daa246305151d802b290b</msg>
<status status="PASS" starttime="20210714 22:57:42.927" endtime="20210714 22:57:42.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:42.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:42.928" endtime="20210714 22:57:42.928"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.902" endtime="20210714 22:57:42.928"/>
</kw>
<msg timestamp="20210714 22:57:42.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:42.902" endtime="20210714 22:57:42.929"/>
</kw>
<msg timestamp="20210714 22:57:42.929" level="INFO">${checksumafter} = fa33b223f41daa246305151d802b290b</msg>
<status status="PASS" starttime="20210714 22:57:42.901" endtime="20210714 22:57:42.929"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:42.929" endtime="20210714 22:57:42.930"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.872" endtime="20210714 22:57:42.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:37.914" endtime="20210714 22:57:42.930"/>
</test>
<test id="s1-s13-s7-t13" name="Test Multipart Upload list">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:42.932" level="INFO">${random} = 86054</msg>
<status status="PASS" starttime="20210714 22:57:42.932" endtime="20210714 22:57:42.932"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:42.933" level="INFO">${PREFIX} = 86054</msg>
<status status="PASS" starttime="20210714 22:57:42.932" endtime="20210714 22:57:42.933"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.931" endtime="20210714 22:57:42.933"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:42.937" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 86054/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:43.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:43.328" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
    "Key": "86054/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:57:42.935" endtime="20210714 22:57:43.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:43.330" level="INFO">{
    "Bucket": "link", 
    "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
    "Key": "86054/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:57:43.329" endtime="20210714 22:57:43.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:43.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:43.330" endtime="20210714 22:57:43.331"/>
</kw>
<status status="PASS" starttime="20210714 22:57:42.934" endtime="20210714 22:57:43.331"/>
</kw>
<msg timestamp="20210714 22:57:43.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:42.934" endtime="20210714 22:57:43.331"/>
</kw>
<msg timestamp="20210714 22:57:43.332" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
    "Key": "86054/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:57:42.934" endtime="20210714 22:57:43.332"/>
</kw>
<msg timestamp="20210714 22:57:43.332" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
    "Key": "86054/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:57:42.933" endtime="20210714 22:57:43.332"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:43.335" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
    "Key": "86054/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:43.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:43.369" level="INFO">${output} = b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494</msg>
<status status="PASS" starttime="20210714 22:57:43.332" endtime="20210714 22:57:43.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:43.370" level="INFO">b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494</msg>
<status status="PASS" starttime="20210714 22:57:43.369" endtime="20210714 22:57:43.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:43.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:43.370" endtime="20210714 22:57:43.371"/>
</kw>
<msg timestamp="20210714 22:57:43.371" level="INFO">${uploadID1} = b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494</msg>
<status status="PASS" starttime="20210714 22:57:43.332" endtime="20210714 22:57:43.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:43.371" endtime="20210714 22:57:43.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:43.372" endtime="20210714 22:57:43.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:43.372" endtime="20210714 22:57:43.373"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:43.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 86054/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:43.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:43.778" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
    "Key": "86054/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:57:43.375" endtime="20210714 22:57:43.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:43.779" level="INFO">{
    "Bucket": "link", 
    "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
    "Key": "86054/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:57:43.778" endtime="20210714 22:57:43.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:43.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:43.779" endtime="20210714 22:57:43.780"/>
</kw>
<status status="PASS" starttime="20210714 22:57:43.374" endtime="20210714 22:57:43.780"/>
</kw>
<msg timestamp="20210714 22:57:43.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:43.374" endtime="20210714 22:57:43.780"/>
</kw>
<msg timestamp="20210714 22:57:43.781" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
    "Key": "86054/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:57:43.373" endtime="20210714 22:57:43.781"/>
</kw>
<msg timestamp="20210714 22:57:43.781" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
    "Key": "86054/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:57:43.373" endtime="20210714 22:57:43.781"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:43.784" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
    "Key": "86054/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:43.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:43.818" level="INFO">${output} = d5473df5-8721-4180-b288-3d993227e020-106581423799075015</msg>
<status status="PASS" starttime="20210714 22:57:43.782" endtime="20210714 22:57:43.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:43.819" level="INFO">d5473df5-8721-4180-b288-3d993227e020-106581423799075015</msg>
<status status="PASS" starttime="20210714 22:57:43.818" endtime="20210714 22:57:43.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:43.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:43.819" endtime="20210714 22:57:43.819"/>
</kw>
<msg timestamp="20210714 22:57:43.820" level="INFO">${uploadID2} = d5473df5-8721-4180-b288-3d993227e020-106581423799075015</msg>
<status status="PASS" starttime="20210714 22:57:43.781" endtime="20210714 22:57:43.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:43.820" endtime="20210714 22:57:43.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:43.820" endtime="20210714 22:57:43.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:43.821" endtime="20210714 22:57:43.821"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:43.825" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix 86054/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:44.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:44.307" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:5...</msg>
<status status="PASS" starttime="20210714 22:57:43.823" endtime="20210714 22:57:44.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:44.308" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:57:43.286Z", 
            "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
            "StorageClass": "STANDARD", 
            "Key": "86054/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:57:43.731Z", 
            "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
            "StorageClass": "STANDARD", 
            "Key": "86054/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:57:44.308" endtime="20210714 22:57:44.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:44.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:44.309" endtime="20210714 22:57:44.310"/>
</kw>
<status status="PASS" starttime="20210714 22:57:43.823" endtime="20210714 22:57:44.310"/>
</kw>
<msg timestamp="20210714 22:57:44.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:43.822" endtime="20210714 22:57:44.310"/>
</kw>
<msg timestamp="20210714 22:57:44.310" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:5...</msg>
<status status="PASS" starttime="20210714 22:57:43.822" endtime="20210714 22:57:44.310"/>
</kw>
<msg timestamp="20210714 22:57:44.311" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:5...</msg>
<status status="PASS" starttime="20210714 22:57:43.821" endtime="20210714 22:57:44.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:44.311" endtime="20210714 22:57:44.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:44.311" endtime="20210714 22:57:44.312"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:44.320" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:57:43.286Z", 
            "UploadId": "b7e8d9cf-b7ff-4a33-aef9-de3aadfa6ab5-106581423769911494", 
            "StorageClass": "STANDARD", 
            "Key": "86054/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:57:43.731Z", 
            "UploadId": "d5473df5-8721-4180-b288-3d993227e020-106581423799075015", 
            "StorageClass": "STANDARD", 
            "Key": "86054/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:44.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:44.392" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20210714 22:57:44.313" endtime="20210714 22:57:44.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:44.393" level="INFO">2</msg>
<status status="PASS" starttime="20210714 22:57:44.392" endtime="20210714 22:57:44.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:44.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:44.393" endtime="20210714 22:57:44.394"/>
</kw>
<msg timestamp="20210714 22:57:44.394" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20210714 22:57:44.312" endtime="20210714 22:57:44.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:57:44.394" endtime="20210714 22:57:44.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:42.931" endtime="20210714 22:57:44.395"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:56:48.716" endtime="20210714 22:57:44.399"/>
</suite>
<suite id="s1-s13-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:44.413" level="INFO">${random} = 25453</msg>
<status status="PASS" starttime="20210714 22:57:44.412" endtime="20210714 22:57:44.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:44.414" level="INFO">${PREFIX} = 25453</msg>
<status status="PASS" starttime="20210714 22:57:44.413" endtime="20210714 22:57:44.414"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.412" endtime="20210714 22:57:44.415"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.412" endtime="20210714 22:57:44.415"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:44.417" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:44.419" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:57:44.420" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:57:44.415" endtime="20210714 22:57:44.420"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:44.420" endtime="20210714 22:57:44.420"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:44.422" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:44.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:44.549" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:57:44.421" endtime="20210714 22:57:44.550"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:44.554" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:44.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:44.911" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:57:44.552" endtime="20210714 22:57:44.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:44.912" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:57:44.912" endtime="20210714 22:57:44.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:44.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:44.912" endtime="20210714 22:57:44.913"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.552" endtime="20210714 22:57:44.913"/>
</kw>
<msg timestamp="20210714 22:57:44.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:44.551" endtime="20210714 22:57:44.913"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.551" endtime="20210714 22:57:44.914"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.551" endtime="20210714 22:57:44.914"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.550" endtime="20210714 22:57:44.914"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.415" endtime="20210714 22:57:44.914"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.415" endtime="20210714 22:57:44.914"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:44.915" endtime="20210714 22:57:44.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:44.916" endtime="20210714 22:57:44.917"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:44.920" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:45.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:45.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:44.918" endtime="20210714 22:57:45.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:45.206" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:45.206" endtime="20210714 22:57:45.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:45.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:45.207" endtime="20210714 22:57:45.207"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.918" endtime="20210714 22:57:45.207"/>
</kw>
<msg timestamp="20210714 22:57:45.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:44.918" endtime="20210714 22:57:45.208"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.918" endtime="20210714 22:57:45.208"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:45.211" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:45.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:45.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:45.209" endtime="20210714 22:57:45.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:45.491" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:45.490" endtime="20210714 22:57:45.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:45.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:45.491" endtime="20210714 22:57:45.492"/>
</kw>
<status status="PASS" starttime="20210714 22:57:45.209" endtime="20210714 22:57:45.492"/>
</kw>
<msg timestamp="20210714 22:57:45.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:45.208" endtime="20210714 22:57:45.492"/>
</kw>
<status status="PASS" starttime="20210714 22:57:45.208" endtime="20210714 22:57:45.492"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:45.495" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:45.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:45.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:45.493" endtime="20210714 22:57:45.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:45.775" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:45.775" endtime="20210714 22:57:45.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:45.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:45.775" endtime="20210714 22:57:45.776"/>
</kw>
<status status="PASS" starttime="20210714 22:57:45.493" endtime="20210714 22:57:45.776"/>
</kw>
<msg timestamp="20210714 22:57:45.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:45.493" endtime="20210714 22:57:45.776"/>
</kw>
<status status="PASS" starttime="20210714 22:57:45.492" endtime="20210714 22:57:45.777"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:45.780" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:46.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:46.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:45.778" endtime="20210714 22:57:46.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:46.061" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:46.060" endtime="20210714 22:57:46.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:46.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:46.062" endtime="20210714 22:57:46.062"/>
</kw>
<status status="PASS" starttime="20210714 22:57:45.777" endtime="20210714 22:57:46.063"/>
</kw>
<msg timestamp="20210714 22:57:46.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:45.777" endtime="20210714 22:57:46.063"/>
</kw>
<status status="PASS" starttime="20210714 22:57:45.777" endtime="20210714 22:57:46.063"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.917" endtime="20210714 22:57:46.063"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.917" endtime="20210714 22:57:46.063"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.915" endtime="20210714 22:57:46.063"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.914" endtime="20210714 22:57:46.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:57:46.064" endtime="20210714 22:57:46.064"/>
</kw>
<msg timestamp="20210714 22:57:46.064" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:57:46.063" endtime="20210714 22:57:46.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:46.065" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:57:46.064" endtime="20210714 22:57:46.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:46.068" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:49.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:49.255" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:57:46.066" endtime="20210714 22:57:49.255"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:49.256" endtime="20210714 22:57:49.256"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:49.256" endtime="20210714 22:57:49.257"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:49.257" endtime="20210714 22:57:49.257"/>
</kw>
<msg timestamp="20210714 22:57:49.257" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:57:46.066" endtime="20210714 22:57:49.257"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:57:49.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:49.258" endtime="20210714 22:57:49.258"/>
</kw>
<status status="PASS" starttime="20210714 22:57:46.065" endtime="20210714 22:57:49.258"/>
</kw>
<status status="PASS" starttime="20210714 22:57:46.065" endtime="20210714 22:57:49.258"/>
</kw>
<status status="PASS" starttime="20210714 22:57:44.412" endtime="20210714 22:57:49.258"/>
</kw>
<test id="s1-s13-s8-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:49.261" level="INFO">${postfix} = 62129</msg>
<status status="PASS" starttime="20210714 22:57:49.260" endtime="20210714 22:57:49.261"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:49.261" level="INFO">${DESTBUCKET} = destbucket-62129</msg>
<status status="PASS" starttime="20210714 22:57:49.261" endtime="20210714 22:57:49.261"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:49.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-62129 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:49.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:49.658" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-62129"
}</msg>
<status status="PASS" starttime="20210714 22:57:49.263" endtime="20210714 22:57:49.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:49.659" level="INFO">{
    "Location": "http://s3g:9878/destbucket-62129"
}</msg>
<status status="PASS" starttime="20210714 22:57:49.658" endtime="20210714 22:57:49.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:49.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:49.659" endtime="20210714 22:57:49.659"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.263" endtime="20210714 22:57:49.660"/>
</kw>
<msg timestamp="20210714 22:57:49.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:49.263" endtime="20210714 22:57:49.660"/>
</kw>
<msg timestamp="20210714 22:57:49.660" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-62129"
}</msg>
<status status="PASS" starttime="20210714 22:57:49.262" endtime="20210714 22:57:49.660"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.261" endtime="20210714 22:57:49.661"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.260" endtime="20210714 22:57:49.661"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.259" endtime="20210714 22:57:49.661"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:49.664" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20210714 22:57:49.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:49.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:49.662" endtime="20210714 22:57:49.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:49.668" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:49.668" endtime="20210714 22:57:49.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:49.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:49.669" endtime="20210714 22:57:49.669"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.662" endtime="20210714 22:57:49.669"/>
</kw>
<msg timestamp="20210714 22:57:49.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:49.662" endtime="20210714 22:57:49.670"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.661" endtime="20210714 22:57:49.670"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:49.674" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 25453/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:50.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:50.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:49.672" endtime="20210714 22:57:50.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:50.185" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:50.184" endtime="20210714 22:57:50.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:50.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:50.185" endtime="20210714 22:57:50.186"/>
</kw>
<status status="PASS" starttime="20210714 22:57:49.672" endtime="20210714 22:57:50.186"/>
</kw>
<msg timestamp="20210714 22:57:50.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:49.672" endtime="20210714 22:57:50.186"/>
</kw>
<msg timestamp="20210714 22:57:50.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:49.671" endtime="20210714 22:57:50.187"/>
</kw>
<msg timestamp="20210714 22:57:50.187" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:49.670" endtime="20210714 22:57:50.187"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:50.191" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 25453/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:50.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:50.599" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:50.127Z", 
            "ETag": "2021-07-14T22:57:50.127Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:50.189" endtime="20210714 22:57:50.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:50.600" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:50.127Z", 
            "ETag": "2021-07-14T22:57:50.127Z", 
            "StorageClass": "STANDARD", 
            "Key": "25453/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:57:50.600" endtime="20210714 22:57:50.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:50.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:50.601" endtime="20210714 22:57:50.601"/>
</kw>
<status status="PASS" starttime="20210714 22:57:50.189" endtime="20210714 22:57:50.601"/>
</kw>
<msg timestamp="20210714 22:57:50.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:50.188" endtime="20210714 22:57:50.602"/>
</kw>
<msg timestamp="20210714 22:57:50.602" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:50.127Z", 
            "ETag": "2021-07-14T22:57:50.127Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:50.188" endtime="20210714 22:57:50.602"/>
</kw>
<msg timestamp="20210714 22:57:50.602" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:50.127Z", 
            "ETag": "2021-07-14T22:57:50.127Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:50.187" endtime="20210714 22:57:50.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:50.602" endtime="20210714 22:57:50.603"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:50.607" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62129 --key 25453/copyobject/f1 --copy-source link/25453/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:51.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:51.078" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.030Z", 
        "ETag": "5a2b00bd-7851-4af8-8da2-da002e983b80"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:50.605" endtime="20210714 22:57:51.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:51.079" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.030Z", 
        "ETag": "5a2b00bd-7851-4af8-8da2-da002e983b80"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:51.078" endtime="20210714 22:57:51.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:51.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:51.079" endtime="20210714 22:57:51.080"/>
</kw>
<status status="PASS" starttime="20210714 22:57:50.604" endtime="20210714 22:57:51.080"/>
</kw>
<msg timestamp="20210714 22:57:51.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:50.604" endtime="20210714 22:57:51.080"/>
</kw>
<msg timestamp="20210714 22:57:51.081" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.030Z", 
        "ETag": "5a2b00bd-7851-4af8-8da2-da002e983b80"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:50.604" endtime="20210714 22:57:51.081"/>
</kw>
<msg timestamp="20210714 22:57:51.081" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.030Z", 
        "ETag": "5a2b00bd-7851-4af8-8da2-da002e983b80"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:50.603" endtime="20210714 22:57:51.081"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:51.085" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-62129 --prefix 25453/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:51.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:51.480" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.030Z", 
            "ETag": "2021-07-14T22:57:51.030Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:51.083" endtime="20210714 22:57:51.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:51.482" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.030Z", 
            "ETag": "2021-07-14T22:57:51.030Z", 
            "StorageClass": "STANDARD", 
            "Key": "25453/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:57:51.481" endtime="20210714 22:57:51.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:51.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:51.482" endtime="20210714 22:57:51.483"/>
</kw>
<status status="PASS" starttime="20210714 22:57:51.083" endtime="20210714 22:57:51.483"/>
</kw>
<msg timestamp="20210714 22:57:51.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:51.082" endtime="20210714 22:57:51.483"/>
</kw>
<msg timestamp="20210714 22:57:51.483" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.030Z", 
            "ETag": "2021-07-14T22:57:51.030Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:51.082" endtime="20210714 22:57:51.483"/>
</kw>
<msg timestamp="20210714 22:57:51.484" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.030Z", 
            "ETag": "2021-07-14T22:57:51.030Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:51.081" endtime="20210714 22:57:51.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:51.484" endtime="20210714 22:57:51.484"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:51.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62129 --key 25453/copyobject/f1 --copy-source link/25453/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:51.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:51.982" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.932Z", 
        "ETag": "7401e2f8-dd63-4f6e-8f53-c920fb6312b5"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:51.486" endtime="20210714 22:57:51.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:51.983" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.932Z", 
        "ETag": "7401e2f8-dd63-4f6e-8f53-c920fb6312b5"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:51.982" endtime="20210714 22:57:51.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:51.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:51.983" endtime="20210714 22:57:51.984"/>
</kw>
<status status="PASS" starttime="20210714 22:57:51.486" endtime="20210714 22:57:51.984"/>
</kw>
<msg timestamp="20210714 22:57:51.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:51.486" endtime="20210714 22:57:51.984"/>
</kw>
<msg timestamp="20210714 22:57:51.985" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.932Z", 
        "ETag": "7401e2f8-dd63-4f6e-8f53-c920fb6312b5"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:51.485" endtime="20210714 22:57:51.985"/>
</kw>
<msg timestamp="20210714 22:57:51.985" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:51.932Z", 
        "ETag": "7401e2f8-dd63-4f6e-8f53-c920fb6312b5"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:51.484" endtime="20210714 22:57:51.985"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:51.989" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-62129 --prefix 25453/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:52.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:52.379" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.932Z", 
            "ETag": "2021-07-14T22:57:51.932Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:51.987" endtime="20210714 22:57:52.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:52.380" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.932Z", 
            "ETag": "2021-07-14T22:57:51.932Z", 
            "StorageClass": "STANDARD", 
            "Key": "25453/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:57:52.379" endtime="20210714 22:57:52.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:52.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:52.380" endtime="20210714 22:57:52.381"/>
</kw>
<status status="PASS" starttime="20210714 22:57:51.987" endtime="20210714 22:57:52.381"/>
</kw>
<msg timestamp="20210714 22:57:52.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:51.986" endtime="20210714 22:57:52.381"/>
</kw>
<msg timestamp="20210714 22:57:52.381" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.932Z", 
            "ETag": "2021-07-14T22:57:51.932Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:51.986" endtime="20210714 22:57:52.381"/>
</kw>
<msg timestamp="20210714 22:57:52.382" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:51.932Z", 
            "ETag": "2021-07-14T22:57:51.932Z", 
            "StorageClass": "STANDARD", 
            "Key": "254...</msg>
<status status="PASS" starttime="20210714 22:57:51.985" endtime="20210714 22:57:52.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:52.382" endtime="20210714 22:57:52.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:49.258" endtime="20210714 22:57:52.382"/>
</test>
<test id="s1-s13-s8-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:52.387" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 25453/copyobject/f1 --copy-source link/25453/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:52.781" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:52.781" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.385" endtime="20210714 22:57:52.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:52.783" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.782" endtime="20210714 22:57:52.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:52.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:52.783" endtime="20210714 22:57:52.783"/>
</kw>
<msg timestamp="20210714 22:57:52.784" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.384" endtime="20210714 22:57:52.784"/>
</kw>
<msg timestamp="20210714 22:57:52.784" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.384" endtime="20210714 22:57:52.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:52.784" endtime="20210714 22:57:52.784"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:52.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62129 --key 25453/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/25453/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:53.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:53.181" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.786" endtime="20210714 22:57:53.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:53.182" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:53.182" endtime="20210714 22:57:53.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:53.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:53.183" endtime="20210714 22:57:53.183"/>
</kw>
<msg timestamp="20210714 22:57:53.183" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.785" endtime="20210714 22:57:53.183"/>
</kw>
<msg timestamp="20210714 22:57:53.184" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:57:52.785" endtime="20210714 22:57:53.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:53.184" endtime="20210714 22:57:53.184"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:52.383" endtime="20210714 22:57:53.184"/>
</test>
<test id="s1-s13-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:53.190" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-62129 --key 25453/copyobject/f1 --copy-source destbucket-62129/25453/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:53.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:53.585" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:53.543Z", 
        "ETag": "11d36388-61bb-4c98-ade9-8df82bb9336a"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:53.188" endtime="20210714 22:57:53.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:53.586" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:53.543Z", 
        "ETag": "11d36388-61bb-4c98-ade9-8df82bb9336a"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:53.586" endtime="20210714 22:57:53.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:53.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:53.587" endtime="20210714 22:57:53.587"/>
</kw>
<status status="PASS" starttime="20210714 22:57:53.187" endtime="20210714 22:57:53.587"/>
</kw>
<msg timestamp="20210714 22:57:53.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:53.187" endtime="20210714 22:57:53.588"/>
</kw>
<msg timestamp="20210714 22:57:53.588" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:53.543Z", 
        "ETag": "11d36388-61bb-4c98-ade9-8df82bb9336a"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:53.187" endtime="20210714 22:57:53.588"/>
</kw>
<msg timestamp="20210714 22:57:53.588" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:57:53.543Z", 
        "ETag": "11d36388-61bb-4c98-ade9-8df82bb9336a"
    }
}</msg>
<status status="PASS" starttime="20210714 22:57:53.186" endtime="20210714 22:57:53.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:53.588" endtime="20210714 22:57:53.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:53.185" endtime="20210714 22:57:53.589"/>
</test>
<test id="s1-s13-s8-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:53.593" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62129 --key 25453/copyobject/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:53.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:57:53.996" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:57:53.591" endtime="20210714 22:57:53.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:53.997" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:57:53.996" endtime="20210714 22:57:53.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:53.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:53.997" endtime="20210714 22:57:53.998"/>
</kw>
<msg timestamp="20210714 22:57:53.999" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:57:53.591" endtime="20210714 22:57:53.999"/>
</kw>
<msg timestamp="20210714 22:57:53.999" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:57:53.590" endtime="20210714 22:57:53.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:53.999" endtime="20210714 22:57:54.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:53.589" endtime="20210714 22:57:54.000"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:57:44.403" endtime="20210714 22:57:54.001"/>
</suite>
<suite id="s1-s13-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:57:54.012" level="INFO">${random} = 51417</msg>
<status status="PASS" starttime="20210714 22:57:54.012" endtime="20210714 22:57:54.012"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:54.013" level="INFO">${PREFIX} = 51417</msg>
<status status="PASS" starttime="20210714 22:57:54.012" endtime="20210714 22:57:54.013"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.011" endtime="20210714 22:57:54.014"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.011" endtime="20210714 22:57:54.014"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:54.016" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:54.018" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:57:54.018" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:57:54.014" endtime="20210714 22:57:54.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:54.019" endtime="20210714 22:57:54.019"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:54.021" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:54.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:54.138" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:57:54.019" endtime="20210714 22:57:54.138"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:54.143" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:54.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:54.491" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:57:54.141" endtime="20210714 22:57:54.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:54.492" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:57:54.491" endtime="20210714 22:57:54.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:54.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:54.492" endtime="20210714 22:57:54.492"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.141" endtime="20210714 22:57:54.493"/>
</kw>
<msg timestamp="20210714 22:57:54.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:54.141" endtime="20210714 22:57:54.493"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.140" endtime="20210714 22:57:54.493"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.140" endtime="20210714 22:57:54.493"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.139" endtime="20210714 22:57:54.493"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.014" endtime="20210714 22:57:54.494"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.014" endtime="20210714 22:57:54.494"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:54.495" endtime="20210714 22:57:54.495"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:54.495" endtime="20210714 22:57:54.495"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:54.499" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:54.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:54.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:54.497" endtime="20210714 22:57:54.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:54.780" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:54.780" endtime="20210714 22:57:54.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:54.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:54.780" endtime="20210714 22:57:54.781"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.497" endtime="20210714 22:57:54.781"/>
</kw>
<msg timestamp="20210714 22:57:54.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:54.496" endtime="20210714 22:57:54.781"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.496" endtime="20210714 22:57:54.782"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:54.785" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:55.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:55.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:54.783" endtime="20210714 22:57:55.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:55.068" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:55.067" endtime="20210714 22:57:55.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:55.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:55.068" endtime="20210714 22:57:55.068"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.782" endtime="20210714 22:57:55.069"/>
</kw>
<msg timestamp="20210714 22:57:55.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:54.782" endtime="20210714 22:57:55.069"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.782" endtime="20210714 22:57:55.069"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:55.073" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:55.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:55.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:55.071" endtime="20210714 22:57:55.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:55.352" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:55.351" endtime="20210714 22:57:55.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:55.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:55.352" endtime="20210714 22:57:55.353"/>
</kw>
<status status="PASS" starttime="20210714 22:57:55.070" endtime="20210714 22:57:55.353"/>
</kw>
<msg timestamp="20210714 22:57:55.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:55.070" endtime="20210714 22:57:55.353"/>
</kw>
<status status="PASS" starttime="20210714 22:57:55.069" endtime="20210714 22:57:55.353"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:55.356" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:55.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:55.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:55.355" endtime="20210714 22:57:55.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:55.636" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:55.636" endtime="20210714 22:57:55.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:55.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:55.637" endtime="20210714 22:57:55.637"/>
</kw>
<status status="PASS" starttime="20210714 22:57:55.354" endtime="20210714 22:57:55.638"/>
</kw>
<msg timestamp="20210714 22:57:55.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:55.354" endtime="20210714 22:57:55.638"/>
</kw>
<status status="PASS" starttime="20210714 22:57:55.354" endtime="20210714 22:57:55.638"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.496" endtime="20210714 22:57:55.638"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.495" endtime="20210714 22:57:55.638"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.494" endtime="20210714 22:57:55.638"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.494" endtime="20210714 22:57:55.638"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:57:55.639" endtime="20210714 22:57:55.639"/>
</kw>
<msg timestamp="20210714 22:57:55.639" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:57:55.639" endtime="20210714 22:57:55.639"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:57:55.640" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:57:55.640" endtime="20210714 22:57:55.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:55.643" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:58.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:58.577" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:57:55.641" endtime="20210714 22:57:58.577"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:58.578" endtime="20210714 22:57:58.578"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:58.579" endtime="20210714 22:57:58.579"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:57:58.579" endtime="20210714 22:57:58.579"/>
</kw>
<msg timestamp="20210714 22:57:58.580" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:57:55.641" endtime="20210714 22:57:58.580"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:57:58.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:58.580" endtime="20210714 22:57:58.580"/>
</kw>
<status status="PASS" starttime="20210714 22:57:55.640" endtime="20210714 22:57:58.580"/>
</kw>
<status status="PASS" starttime="20210714 22:57:55.640" endtime="20210714 22:57:58.580"/>
</kw>
<status status="PASS" starttime="20210714 22:57:54.011" endtime="20210714 22:57:58.581"/>
</kw>
<test id="s1-s13-s9-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:58.585" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:57:58.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:58.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:58.583" endtime="20210714 22:57:58.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:58.588" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:58.588" endtime="20210714 22:57:58.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:58.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:58.588" endtime="20210714 22:57:58.589"/>
</kw>
<status status="PASS" starttime="20210714 22:57:58.582" endtime="20210714 22:57:58.589"/>
</kw>
<msg timestamp="20210714 22:57:58.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:58.582" endtime="20210714 22:57:58.589"/>
</kw>
<status status="PASS" starttime="20210714 22:57:58.582" endtime="20210714 22:57:58.590"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:58.594" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 51417/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:59.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:59.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:58.592" endtime="20210714 22:57:59.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:59.052" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:59.051" endtime="20210714 22:57:59.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:59.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:59.052" endtime="20210714 22:57:59.053"/>
</kw>
<status status="PASS" starttime="20210714 22:57:58.591" endtime="20210714 22:57:59.053"/>
</kw>
<msg timestamp="20210714 22:57:59.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:58.591" endtime="20210714 22:57:59.053"/>
</kw>
<msg timestamp="20210714 22:57:59.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:58.590" endtime="20210714 22:57:59.054"/>
</kw>
<msg timestamp="20210714 22:57:59.054" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:58.590" endtime="20210714 22:57:59.054"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:59.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 51417/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:59.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:59.447" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:59.003Z", 
            "ETag": "2021-07-14T22:57:59.003Z", 
            "StorageClass": "STANDARD", 
            "Key": "514...</msg>
<status status="PASS" starttime="20210714 22:57:59.056" endtime="20210714 22:57:59.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:59.449" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:59.003Z", 
            "ETag": "2021-07-14T22:57:59.003Z", 
            "StorageClass": "STANDARD", 
            "Key": "51417/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:57:59.448" endtime="20210714 22:57:59.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:59.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:59.449" endtime="20210714 22:57:59.449"/>
</kw>
<status status="PASS" starttime="20210714 22:57:59.055" endtime="20210714 22:57:59.450"/>
</kw>
<msg timestamp="20210714 22:57:59.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:59.055" endtime="20210714 22:57:59.450"/>
</kw>
<msg timestamp="20210714 22:57:59.450" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:59.003Z", 
            "ETag": "2021-07-14T22:57:59.003Z", 
            "StorageClass": "STANDARD", 
            "Key": "514...</msg>
<status status="PASS" starttime="20210714 22:57:59.055" endtime="20210714 22:57:59.450"/>
</kw>
<msg timestamp="20210714 22:57:59.450" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:57:59.003Z", 
            "ETag": "2021-07-14T22:57:59.003Z", 
            "StorageClass": "STANDARD", 
            "Key": "514...</msg>
<status status="PASS" starttime="20210714 22:57:59.054" endtime="20210714 22:57:59.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:57:59.451" endtime="20210714 22:57:59.451"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:59.455" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 51417/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:57:59.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:57:59.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:59.453" endtime="20210714 22:57:59.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:57:59.851" level="INFO"/>
<status status="PASS" starttime="20210714 22:57:59.850" endtime="20210714 22:57:59.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:57:59.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:57:59.851" endtime="20210714 22:57:59.851"/>
</kw>
<status status="PASS" starttime="20210714 22:57:59.452" endtime="20210714 22:57:59.852"/>
</kw>
<msg timestamp="20210714 22:57:59.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:59.452" endtime="20210714 22:57:59.852"/>
</kw>
<msg timestamp="20210714 22:57:59.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:59.452" endtime="20210714 22:57:59.852"/>
</kw>
<msg timestamp="20210714 22:57:59.853" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:59.451" endtime="20210714 22:57:59.853"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:57:59.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 51417/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:00.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:00.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:59.855" endtime="20210714 22:58:00.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:00.253" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:00.252" endtime="20210714 22:58:00.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:00.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:00.253" endtime="20210714 22:58:00.254"/>
</kw>
<status status="PASS" starttime="20210714 22:57:59.854" endtime="20210714 22:58:00.255"/>
</kw>
<msg timestamp="20210714 22:58:00.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:57:59.854" endtime="20210714 22:58:00.255"/>
</kw>
<msg timestamp="20210714 22:58:00.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:57:59.853" endtime="20210714 22:58:00.255"/>
</kw>
<msg timestamp="20210714 22:58:00.255" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:57:59.853" endtime="20210714 22:58:00.255"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:00.255" endtime="20210714 22:58:00.256"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>500</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:00.256" endtime="20210714 22:58:00.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:57:58.581" endtime="20210714 22:58:00.256"/>
</test>
<test id="s1-s13-s9-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:00.261" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:00.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:00.659" level="INFO">${output} =                            PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
          ...</msg>
<status status="PASS" starttime="20210714 22:58:00.259" endtime="20210714 22:58:00.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:00.661" level="INFO">                           PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
                           PRE 68859/
                           PRE dir1/
2021-07-14 22:56:22       3811 README1.md
2021-07-14 22:56:20       3811 README10.md
2021-07-14 22:56:21   10485761 multiUpload.1.gz
2021-07-14 22:56:21   10485761 multiUpload.2.gz
2021-07-14 22:56:23   20971522 sgukprfvqm
2021-07-14 22:56:13         29 testfile</msg>
<status status="PASS" starttime="20210714 22:58:00.660" endtime="20210714 22:58:00.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:00.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:00.661" endtime="20210714 22:58:00.662"/>
</kw>
<status status="PASS" starttime="20210714 22:58:00.259" endtime="20210714 22:58:00.662"/>
</kw>
<msg timestamp="20210714 22:58:00.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:00.259" endtime="20210714 22:58:00.662"/>
</kw>
<msg timestamp="20210714 22:58:00.662" level="INFO">${output} =                            PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
          ...</msg>
<status status="PASS" starttime="20210714 22:58:00.258" endtime="20210714 22:58:00.662"/>
</kw>
<msg timestamp="20210714 22:58:00.663" level="INFO">${result} =                            PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
          ...</msg>
<status status="PASS" starttime="20210714 22:58:00.258" endtime="20210714 22:58:00.663"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:00.663" endtime="20210714 22:58:00.663"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:00.667" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:01.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:01.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:00.665" endtime="20210714 22:58:01.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:01.071" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:01.070" endtime="20210714 22:58:01.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:01.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:01.071" endtime="20210714 22:58:01.071"/>
</kw>
<status status="PASS" starttime="20210714 22:58:00.665" endtime="20210714 22:58:01.072"/>
</kw>
<msg timestamp="20210714 22:58:01.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:00.664" endtime="20210714 22:58:01.072"/>
</kw>
<msg timestamp="20210714 22:58:01.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:00.664" endtime="20210714 22:58:01.072"/>
</kw>
<msg timestamp="20210714 22:58:01.072" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:00.663" endtime="20210714 22:58:01.072"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:01.077" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:01.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:01.469" level="INFO">${output} =                            PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
          ...</msg>
<status status="PASS" starttime="20210714 22:58:01.075" endtime="20210714 22:58:01.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:01.471" level="INFO">                           PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
                           PRE 68859/
                           PRE dir1/
2021-07-14 22:56:22       3811 README1.md
2021-07-14 22:56:20       3811 README10.md
2021-07-14 22:56:21   10485761 multiUpload.1.gz
2021-07-14 22:56:21   10485761 multiUpload.2.gz
2021-07-14 22:56:23   20971522 sgukprfvqm
2021-07-14 22:56:13         29 testfile</msg>
<status status="PASS" starttime="20210714 22:58:01.470" endtime="20210714 22:58:01.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:01.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:01.471" endtime="20210714 22:58:01.471"/>
</kw>
<status status="PASS" starttime="20210714 22:58:01.074" endtime="20210714 22:58:01.472"/>
</kw>
<msg timestamp="20210714 22:58:01.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:01.074" endtime="20210714 22:58:01.472"/>
</kw>
<msg timestamp="20210714 22:58:01.472" level="INFO">${output} =                            PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
          ...</msg>
<status status="PASS" starttime="20210714 22:58:01.073" endtime="20210714 22:58:01.472"/>
</kw>
<msg timestamp="20210714 22:58:01.472" level="INFO">${result} =                            PRE 15793/
                           PRE 18586/
                           PRE 25453/
                           PRE 36644/
                           PRE 61426/
          ...</msg>
<status status="PASS" starttime="20210714 22:58:01.073" endtime="20210714 22:58:01.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:01.472" endtime="20210714 22:58:01.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:00.257" endtime="20210714 22:58:01.473"/>
</test>
<test id="s1-s13-s9-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:01.478" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:58:01.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:01.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:01.476" endtime="20210714 22:58:01.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:01.481" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:01.480" endtime="20210714 22:58:01.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:01.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:01.481" endtime="20210714 22:58:01.482"/>
</kw>
<status status="PASS" starttime="20210714 22:58:01.475" endtime="20210714 22:58:01.482"/>
</kw>
<msg timestamp="20210714 22:58:01.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:01.475" endtime="20210714 22:58:01.482"/>
</kw>
<status status="PASS" starttime="20210714 22:58:01.474" endtime="20210714 22:58:01.482"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:01.486" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/51417/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:01.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:01.978" level="INFO">${output} = Completed 29 Bytes/29 Bytes (269 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapidir/f1 </msg>
<status status="PASS" starttime="20210714 22:58:01.484" endtime="20210714 22:58:01.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:01.979" level="INFO">Completed 29 Bytes/29 Bytes (269 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapidir/f1 </msg>
<status status="PASS" starttime="20210714 22:58:01.978" endtime="20210714 22:58:01.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:01.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:01.979" endtime="20210714 22:58:01.979"/>
</kw>
<status status="PASS" starttime="20210714 22:58:01.484" endtime="20210714 22:58:01.980"/>
</kw>
<msg timestamp="20210714 22:58:01.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:01.484" endtime="20210714 22:58:01.980"/>
</kw>
<msg timestamp="20210714 22:58:01.980" level="INFO">${output} = Completed 29 Bytes/29 Bytes (269 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapidir/f1 </msg>
<status status="PASS" starttime="20210714 22:58:01.483" endtime="20210714 22:58:01.980"/>
</kw>
<msg timestamp="20210714 22:58:01.981" level="INFO">${result} = Completed 29 Bytes/29 Bytes (269 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapidir/f1 </msg>
<status status="PASS" starttime="20210714 22:58:01.482" endtime="20210714 22:58:01.981"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:01.985" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/51417/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:02.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:02.380" level="INFO">${output} = 2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:01.983" endtime="20210714 22:58:02.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:02.382" level="INFO">2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:02.381" endtime="20210714 22:58:02.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:02.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:02.382" endtime="20210714 22:58:02.382"/>
</kw>
<status status="PASS" starttime="20210714 22:58:01.982" endtime="20210714 22:58:02.383"/>
</kw>
<msg timestamp="20210714 22:58:02.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:01.982" endtime="20210714 22:58:02.383"/>
</kw>
<msg timestamp="20210714 22:58:02.383" level="INFO">${output} = 2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:01.981" endtime="20210714 22:58:02.383"/>
</kw>
<msg timestamp="20210714 22:58:02.383" level="INFO">${result} = 2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:01.981" endtime="20210714 22:58:02.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:02.384" endtime="20210714 22:58:02.384"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:02.388" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 51417/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:02.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:02.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:02.386" endtime="20210714 22:58:02.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:02.779" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:02.779" endtime="20210714 22:58:02.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:02.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:02.779" endtime="20210714 22:58:02.780"/>
</kw>
<status status="PASS" starttime="20210714 22:58:02.386" endtime="20210714 22:58:02.780"/>
</kw>
<msg timestamp="20210714 22:58:02.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:02.386" endtime="20210714 22:58:02.780"/>
</kw>
<msg timestamp="20210714 22:58:02.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:02.385" endtime="20210714 22:58:02.781"/>
</kw>
<msg timestamp="20210714 22:58:02.781" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:02.384" endtime="20210714 22:58:02.781"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:02.785" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/51417/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:03.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:03.183" level="INFO">${output} = 2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:02.783" endtime="20210714 22:58:03.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:03.184" level="INFO">2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:03.183" endtime="20210714 22:58:03.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:03.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:03.184" endtime="20210714 22:58:03.185"/>
</kw>
<status status="PASS" starttime="20210714 22:58:02.783" endtime="20210714 22:58:03.185"/>
</kw>
<msg timestamp="20210714 22:58:03.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:02.782" endtime="20210714 22:58:03.185"/>
</kw>
<msg timestamp="20210714 22:58:03.186" level="INFO">${output} = 2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:02.782" endtime="20210714 22:58:03.186"/>
</kw>
<msg timestamp="20210714 22:58:03.186" level="INFO">${result} = 2021-07-14 22:58:01         29 f1</msg>
<status status="PASS" starttime="20210714 22:58:02.781" endtime="20210714 22:58:03.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:03.186" endtime="20210714 22:58:03.187"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:03.191" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 51417/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:03.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:03.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:03.189" endtime="20210714 22:58:03.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:03.595" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:03.595" endtime="20210714 22:58:03.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:03.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:03.596" endtime="20210714 22:58:03.596"/>
</kw>
<status status="PASS" starttime="20210714 22:58:03.188" endtime="20210714 22:58:03.596"/>
</kw>
<msg timestamp="20210714 22:58:03.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:03.188" endtime="20210714 22:58:03.597"/>
</kw>
<msg timestamp="20210714 22:58:03.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:03.187" endtime="20210714 22:58:03.597"/>
</kw>
<msg timestamp="20210714 22:58:03.597" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:03.187" endtime="20210714 22:58:03.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:01.474" endtime="20210714 22:58:03.597"/>
</test>
<test id="s1-s13-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:03.603" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:58:03.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:03.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:03.600" endtime="20210714 22:58:03.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:03.607" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:03.606" endtime="20210714 22:58:03.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:03.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:03.607" endtime="20210714 22:58:03.607"/>
</kw>
<status status="PASS" starttime="20210714 22:58:03.600" endtime="20210714 22:58:03.608"/>
</kw>
<msg timestamp="20210714 22:58:03.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:03.599" endtime="20210714 22:58:03.608"/>
</kw>
<status status="PASS" starttime="20210714 22:58:03.599" endtime="20210714 22:58:03.608"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:03.612" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/51417/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:04.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:04.106" level="INFO">${output} = Completed 29 Bytes/29 Bytes (259 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:58:03.610" endtime="20210714 22:58:04.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:04.107" level="INFO">Completed 29 Bytes/29 Bytes (259 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.106" endtime="20210714 22:58:04.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:04.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:04.107" endtime="20210714 22:58:04.108"/>
</kw>
<status status="PASS" starttime="20210714 22:58:03.610" endtime="20210714 22:58:04.108"/>
</kw>
<msg timestamp="20210714 22:58:04.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:03.609" endtime="20210714 22:58:04.108"/>
</kw>
<msg timestamp="20210714 22:58:04.109" level="INFO">${output} = Completed 29 Bytes/29 Bytes (259 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:58:03.609" endtime="20210714 22:58:04.109"/>
</kw>
<msg timestamp="20210714 22:58:04.109" level="INFO">${result} = Completed 29 Bytes/29 Bytes (259 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/51417/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:58:03.608" endtime="20210714 22:58:04.109"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:04.113" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/51417/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:04.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:04.496" level="INFO">${output} = 2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.111" endtime="20210714 22:58:04.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:04.497" level="INFO">2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.497" endtime="20210714 22:58:04.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:04.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:04.498" endtime="20210714 22:58:04.498"/>
</kw>
<status status="PASS" starttime="20210714 22:58:04.111" endtime="20210714 22:58:04.499"/>
</kw>
<msg timestamp="20210714 22:58:04.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:04.110" endtime="20210714 22:58:04.499"/>
</kw>
<msg timestamp="20210714 22:58:04.499" level="INFO">${output} = 2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.110" endtime="20210714 22:58:04.499"/>
</kw>
<msg timestamp="20210714 22:58:04.499" level="INFO">${result} = 2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.109" endtime="20210714 22:58:04.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:04.499" endtime="20210714 22:58:04.500"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:04.504" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 51417/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:04.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:04.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:04.502" endtime="20210714 22:58:04.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:04.891" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:04.891" endtime="20210714 22:58:04.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:04.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:04.892" endtime="20210714 22:58:04.892"/>
</kw>
<status status="PASS" starttime="20210714 22:58:04.501" endtime="20210714 22:58:04.892"/>
</kw>
<msg timestamp="20210714 22:58:04.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:04.501" endtime="20210714 22:58:04.893"/>
</kw>
<msg timestamp="20210714 22:58:04.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:04.500" endtime="20210714 22:58:04.893"/>
</kw>
<msg timestamp="20210714 22:58:04.893" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:04.500" endtime="20210714 22:58:04.893"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:04.898" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/51417/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:05.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:05.277" level="INFO">${output} = 2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.896" endtime="20210714 22:58:05.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:05.278" level="INFO">2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:05.278" endtime="20210714 22:58:05.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:05.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:05.279" endtime="20210714 22:58:05.279"/>
</kw>
<status status="PASS" starttime="20210714 22:58:04.895" endtime="20210714 22:58:05.279"/>
</kw>
<msg timestamp="20210714 22:58:05.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:04.894" endtime="20210714 22:58:05.280"/>
</kw>
<msg timestamp="20210714 22:58:05.280" level="INFO">${output} = 2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.894" endtime="20210714 22:58:05.280"/>
</kw>
<msg timestamp="20210714 22:58:05.280" level="INFO">${result} = 2021-07-14 22:58:04         29 filefile</msg>
<status status="PASS" starttime="20210714 22:58:04.893" endtime="20210714 22:58:05.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:05.280" endtime="20210714 22:58:05.281"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:05.285" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 51417/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:05.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:05.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:05.283" endtime="20210714 22:58:05.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:05.692" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:05.692" endtime="20210714 22:58:05.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:05.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:05.693" endtime="20210714 22:58:05.693"/>
</kw>
<status status="PASS" starttime="20210714 22:58:05.282" endtime="20210714 22:58:05.694"/>
</kw>
<msg timestamp="20210714 22:58:05.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:05.282" endtime="20210714 22:58:05.694"/>
</kw>
<msg timestamp="20210714 22:58:05.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:05.282" endtime="20210714 22:58:05.694"/>
</kw>
<msg timestamp="20210714 22:58:05.694" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:05.281" endtime="20210714 22:58:05.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:03.598" endtime="20210714 22:58:05.695"/>
</test>
<test id="s1-s13-s9-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:05.699" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:06.088" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:06.088" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:05.697" endtime="20210714 22:58:06.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:06.089" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:06.088" endtime="20210714 22:58:06.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:06.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:06.089" endtime="20210714 22:58:06.090"/>
</kw>
<msg timestamp="20210714 22:58:06.090" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:05.697" endtime="20210714 22:58:06.090"/>
</kw>
<msg timestamp="20210714 22:58:06.090" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:05.696" endtime="20210714 22:58:06.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:06.090" endtime="20210714 22:58:06.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:05.695" endtime="20210714 22:58:06.091"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:57:54.003" endtime="20210714 22:58:06.092"/>
</suite>
<suite id="s1-s13-s10" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:06.103" level="INFO">${random} = 16894</msg>
<status status="PASS" starttime="20210714 22:58:06.103" endtime="20210714 22:58:06.103"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:06.105" level="INFO">${PREFIX} = 16894</msg>
<status status="PASS" starttime="20210714 22:58:06.103" endtime="20210714 22:58:06.105"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.103" endtime="20210714 22:58:06.105"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.102" endtime="20210714 22:58:06.105"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:06.107" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:06.109" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:06.109" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:06.105" endtime="20210714 22:58:06.109"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:06.110" endtime="20210714 22:58:06.110"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:06.112" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:06.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:06.229" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:06.110" endtime="20210714 22:58:06.229"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:06.234" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:06.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:06.580" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:06.232" endtime="20210714 22:58:06.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:06.581" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:06.581" endtime="20210714 22:58:06.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:06.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:06.582" endtime="20210714 22:58:06.582"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.231" endtime="20210714 22:58:06.582"/>
</kw>
<msg timestamp="20210714 22:58:06.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:06.231" endtime="20210714 22:58:06.583"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.231" endtime="20210714 22:58:06.583"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.230" endtime="20210714 22:58:06.583"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.229" endtime="20210714 22:58:06.583"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.105" endtime="20210714 22:58:06.583"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.105" endtime="20210714 22:58:06.584"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:06.584" endtime="20210714 22:58:06.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:06.585" endtime="20210714 22:58:06.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:06.589" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:06.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:06.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:06.587" endtime="20210714 22:58:06.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:06.870" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:06.870" endtime="20210714 22:58:06.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:06.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:06.871" endtime="20210714 22:58:06.871"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.586" endtime="20210714 22:58:06.871"/>
</kw>
<msg timestamp="20210714 22:58:06.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:06.586" endtime="20210714 22:58:06.872"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.586" endtime="20210714 22:58:06.872"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:06.875" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:07.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:07.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:06.873" endtime="20210714 22:58:07.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:07.156" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:07.156" endtime="20210714 22:58:07.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:07.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:07.156" endtime="20210714 22:58:07.157"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.873" endtime="20210714 22:58:07.157"/>
</kw>
<msg timestamp="20210714 22:58:07.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:06.872" endtime="20210714 22:58:07.158"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.872" endtime="20210714 22:58:07.158"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:07.162" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:07.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:07.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:07.160" endtime="20210714 22:58:07.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:07.443" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:07.443" endtime="20210714 22:58:07.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:07.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:07.443" endtime="20210714 22:58:07.444"/>
</kw>
<status status="PASS" starttime="20210714 22:58:07.159" endtime="20210714 22:58:07.444"/>
</kw>
<msg timestamp="20210714 22:58:07.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:07.159" endtime="20210714 22:58:07.444"/>
</kw>
<status status="PASS" starttime="20210714 22:58:07.158" endtime="20210714 22:58:07.444"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:07.448" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:07.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:07.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:07.446" endtime="20210714 22:58:07.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:07.728" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:07.728" endtime="20210714 22:58:07.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:07.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:07.729" endtime="20210714 22:58:07.729"/>
</kw>
<status status="PASS" starttime="20210714 22:58:07.445" endtime="20210714 22:58:07.729"/>
</kw>
<msg timestamp="20210714 22:58:07.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:07.445" endtime="20210714 22:58:07.730"/>
</kw>
<status status="PASS" starttime="20210714 22:58:07.445" endtime="20210714 22:58:07.730"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.586" endtime="20210714 22:58:07.730"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.585" endtime="20210714 22:58:07.730"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.584" endtime="20210714 22:58:07.730"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.584" endtime="20210714 22:58:07.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:58:07.731" endtime="20210714 22:58:07.731"/>
</kw>
<msg timestamp="20210714 22:58:07.732" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:58:07.731" endtime="20210714 22:58:07.732"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:07.732" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:58:07.732" endtime="20210714 22:58:07.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:07.735" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:10.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:10.717" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:58:07.733" endtime="20210714 22:58:10.717"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:10.718" endtime="20210714 22:58:10.718"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:10.719" endtime="20210714 22:58:10.719"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:10.719" endtime="20210714 22:58:10.719"/>
</kw>
<msg timestamp="20210714 22:58:10.719" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:58:07.733" endtime="20210714 22:58:10.720"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:58:10.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:10.720" endtime="20210714 22:58:10.720"/>
</kw>
<status status="PASS" starttime="20210714 22:58:07.733" endtime="20210714 22:58:10.720"/>
</kw>
<status status="PASS" starttime="20210714 22:58:07.732" endtime="20210714 22:58:10.721"/>
</kw>
<status status="PASS" starttime="20210714 22:58:06.102" endtime="20210714 22:58:10.721"/>
</kw>
<test id="s1-s13-s10-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:10.725" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:58:10.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:10.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:10.723" endtime="20210714 22:58:10.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:10.728" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:10.728" endtime="20210714 22:58:10.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:10.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:10.729" endtime="20210714 22:58:10.729"/>
</kw>
<status status="PASS" starttime="20210714 22:58:10.723" endtime="20210714 22:58:10.729"/>
</kw>
<msg timestamp="20210714 22:58:10.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:10.722" endtime="20210714 22:58:10.730"/>
</kw>
<status status="PASS" starttime="20210714 22:58:10.722" endtime="20210714 22:58:10.730"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:10.734" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 16894/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:11.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:11.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:10.732" endtime="20210714 22:58:11.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:11.246" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:11.245" endtime="20210714 22:58:11.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:11.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:11.247" endtime="20210714 22:58:11.247"/>
</kw>
<status status="PASS" starttime="20210714 22:58:10.731" endtime="20210714 22:58:11.247"/>
</kw>
<msg timestamp="20210714 22:58:11.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:10.731" endtime="20210714 22:58:11.248"/>
</kw>
<msg timestamp="20210714 22:58:11.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:10.730" endtime="20210714 22:58:11.248"/>
</kw>
<msg timestamp="20210714 22:58:11.248" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:10.730" endtime="20210714 22:58:11.248"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:11.257" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 16894/multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:11.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:11.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:11.255" endtime="20210714 22:58:11.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:11.713" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:11.713" endtime="20210714 22:58:11.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:11.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:11.714" endtime="20210714 22:58:11.714"/>
</kw>
<status status="PASS" starttime="20210714 22:58:11.255" endtime="20210714 22:58:11.715"/>
</kw>
<msg timestamp="20210714 22:58:11.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:11.255" endtime="20210714 22:58:11.715"/>
</kw>
<msg timestamp="20210714 22:58:11.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:11.254" endtime="20210714 22:58:11.715"/>
</kw>
<msg timestamp="20210714 22:58:11.715" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:11.248" endtime="20210714 22:58:11.715"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:11.719" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 16894/multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:12.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:12.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:11.718" endtime="20210714 22:58:12.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:12.172" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:12.171" endtime="20210714 22:58:12.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:12.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:12.172" endtime="20210714 22:58:12.173"/>
</kw>
<status status="PASS" starttime="20210714 22:58:11.717" endtime="20210714 22:58:12.173"/>
</kw>
<msg timestamp="20210714 22:58:12.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:11.717" endtime="20210714 22:58:12.173"/>
</kw>
<msg timestamp="20210714 22:58:12.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:11.716" endtime="20210714 22:58:12.174"/>
</kw>
<msg timestamp="20210714 22:58:12.174" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:11.715" endtime="20210714 22:58:12.174"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:12.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 16894/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:12.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:12.585" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:11.162Z", 
            "ETag": "2021-07-14T22:58:11.162Z", 
            "StorageClass": "STANDARD", 
            "Key": "168...</msg>
<status status="PASS" starttime="20210714 22:58:12.176" endtime="20210714 22:58:12.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:12.586" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:11.162Z", 
            "ETag": "2021-07-14T22:58:11.162Z", 
            "StorageClass": "STANDARD", 
            "Key": "16894/multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-07-14T22:58:11.666Z", 
            "ETag": "2021-07-14T22:58:11.666Z", 
            "StorageClass": "STANDARD", 
            "Key": "16894/multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-07-14T22:58:12.119Z", 
            "ETag": "2021-07-14T22:58:12.119Z", 
            "StorageClass": "STANDARD", 
            "Key": "16894/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:58:12.586" endtime="20210714 22:58:12.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:12.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:12.587" endtime="20210714 22:58:12.587"/>
</kw>
<status status="PASS" starttime="20210714 22:58:12.175" endtime="20210714 22:58:12.587"/>
</kw>
<msg timestamp="20210714 22:58:12.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:12.175" endtime="20210714 22:58:12.588"/>
</kw>
<msg timestamp="20210714 22:58:12.588" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:11.162Z", 
            "ETag": "2021-07-14T22:58:11.162Z", 
            "StorageClass": "STANDARD", 
            "Key": "168...</msg>
<status status="PASS" starttime="20210714 22:58:12.175" endtime="20210714 22:58:12.588"/>
</kw>
<msg timestamp="20210714 22:58:12.588" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:11.162Z", 
            "ETag": "2021-07-14T22:58:11.162Z", 
            "StorageClass": "STANDARD", 
            "Key": "168...</msg>
<status status="PASS" starttime="20210714 22:58:12.174" endtime="20210714 22:58:12.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:12.588" endtime="20210714 22:58:12.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:12.589" endtime="20210714 22:58:12.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:12.589" endtime="20210714 22:58:12.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:12.590" endtime="20210714 22:58:12.590"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:12.590" endtime="20210714 22:58:12.591"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:12.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket link --delete 'Objects=[{Key=16894/multidelete/f1},{Key=16894/multidelete/f2},{Key=16894/multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:13.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:13.006" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "16894/multidelete/f1"
        }, 
        {
            "Key": "16894/multidelete/f2"
        }, 
        {
            "Key": "16894/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210714 22:58:12.593" endtime="20210714 22:58:13.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:13.007" level="INFO">{
    "Deleted": [
        {
            "Key": "16894/multidelete/f1"
        }, 
        {
            "Key": "16894/multidelete/f2"
        }, 
        {
            "Key": "16894/multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:58:13.006" endtime="20210714 22:58:13.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:13.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:13.007" endtime="20210714 22:58:13.008"/>
</kw>
<status status="PASS" starttime="20210714 22:58:12.593" endtime="20210714 22:58:13.008"/>
</kw>
<msg timestamp="20210714 22:58:13.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:12.592" endtime="20210714 22:58:13.008"/>
</kw>
<msg timestamp="20210714 22:58:13.009" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "16894/multidelete/f1"
        }, 
        {
            "Key": "16894/multidelete/f2"
        }, 
        {
            "Key": "16894/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210714 22:58:12.592" endtime="20210714 22:58:13.009"/>
</kw>
<msg timestamp="20210714 22:58:13.009" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "16894/multidelete/f1"
        }, 
        {
            "Key": "16894/multidelete/f2"
        }, 
        {
            "Key": "16894/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210714 22:58:12.591" endtime="20210714 22:58:13.009"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:13.009" endtime="20210714 22:58:13.010"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:13.014" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 16894/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:13.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:13.401" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:12.119Z", 
            "ETag": "2021-07-14T22:58:12.119Z", 
            "StorageClass": "STANDARD", 
            "Key": "168...</msg>
<status status="PASS" starttime="20210714 22:58:13.012" endtime="20210714 22:58:13.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:13.402" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:12.119Z", 
            "ETag": "2021-07-14T22:58:12.119Z", 
            "StorageClass": "STANDARD", 
            "Key": "16894/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:58:13.401" endtime="20210714 22:58:13.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:13.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:13.403" endtime="20210714 22:58:13.403"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.011" endtime="20210714 22:58:13.403"/>
</kw>
<msg timestamp="20210714 22:58:13.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:13.011" endtime="20210714 22:58:13.404"/>
</kw>
<msg timestamp="20210714 22:58:13.404" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:12.119Z", 
            "ETag": "2021-07-14T22:58:12.119Z", 
            "StorageClass": "STANDARD", 
            "Key": "168...</msg>
<status status="PASS" starttime="20210714 22:58:13.010" endtime="20210714 22:58:13.404"/>
</kw>
<msg timestamp="20210714 22:58:13.404" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:12.119Z", 
            "ETag": "2021-07-14T22:58:12.119Z", 
            "StorageClass": "STANDARD", 
            "Key": "168...</msg>
<status status="PASS" starttime="20210714 22:58:13.010" endtime="20210714 22:58:13.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:13.405" endtime="20210714 22:58:13.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:13.405" endtime="20210714 22:58:13.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:13.406" endtime="20210714 22:58:13.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:13.406" endtime="20210714 22:58:13.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:13.407" endtime="20210714 22:58:13.407"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:10.721" endtime="20210714 22:58:13.407"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:58:06.094" endtime="20210714 22:58:13.408"/>
</suite>
<suite id="s1-s13-s11" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:13.419" level="INFO">${random} = 85738</msg>
<status status="PASS" starttime="20210714 22:58:13.418" endtime="20210714 22:58:13.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:13.420" level="INFO">${PREFIX} = 85738</msg>
<status status="PASS" starttime="20210714 22:58:13.419" endtime="20210714 22:58:13.420"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.418" endtime="20210714 22:58:13.420"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.418" endtime="20210714 22:58:13.421"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:13.423" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:13.425" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:13.425" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:13.421" endtime="20210714 22:58:13.425"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:13.425" endtime="20210714 22:58:13.426"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:13.428" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:13.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:13.545" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:13.426" endtime="20210714 22:58:13.545"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:13.550" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:13.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:13.896" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:13.548" endtime="20210714 22:58:13.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:13.897" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:13.896" endtime="20210714 22:58:13.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:13.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:13.897" endtime="20210714 22:58:13.897"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.548" endtime="20210714 22:58:13.898"/>
</kw>
<msg timestamp="20210714 22:58:13.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:13.547" endtime="20210714 22:58:13.898"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.547" endtime="20210714 22:58:13.898"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.546" endtime="20210714 22:58:13.898"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.546" endtime="20210714 22:58:13.898"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.421" endtime="20210714 22:58:13.899"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.421" endtime="20210714 22:58:13.899"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:13.900" endtime="20210714 22:58:13.900"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:13.900" endtime="20210714 22:58:13.900"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:13.904" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:14.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:14.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:13.902" endtime="20210714 22:58:14.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:14.185" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:14.185" endtime="20210714 22:58:14.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:14.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:14.186" endtime="20210714 22:58:14.186"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.901" endtime="20210714 22:58:14.186"/>
</kw>
<msg timestamp="20210714 22:58:14.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:13.901" endtime="20210714 22:58:14.187"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.901" endtime="20210714 22:58:14.187"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:14.190" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:14.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:14.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:14.188" endtime="20210714 22:58:14.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:14.468" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:14.467" endtime="20210714 22:58:14.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:14.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:14.468" endtime="20210714 22:58:14.468"/>
</kw>
<status status="PASS" starttime="20210714 22:58:14.188" endtime="20210714 22:58:14.469"/>
</kw>
<msg timestamp="20210714 22:58:14.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:14.187" endtime="20210714 22:58:14.469"/>
</kw>
<status status="PASS" starttime="20210714 22:58:14.187" endtime="20210714 22:58:14.469"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:14.473" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:14.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:14.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:14.471" endtime="20210714 22:58:14.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:14.755" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:14.755" endtime="20210714 22:58:14.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:14.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:14.755" endtime="20210714 22:58:14.756"/>
</kw>
<status status="PASS" starttime="20210714 22:58:14.470" endtime="20210714 22:58:14.756"/>
</kw>
<msg timestamp="20210714 22:58:14.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:14.470" endtime="20210714 22:58:14.756"/>
</kw>
<status status="PASS" starttime="20210714 22:58:14.469" endtime="20210714 22:58:14.756"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:14.760" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:15.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:15.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:14.758" endtime="20210714 22:58:15.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:15.039" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:15.038" endtime="20210714 22:58:15.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:15.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:15.039" endtime="20210714 22:58:15.040"/>
</kw>
<status status="PASS" starttime="20210714 22:58:14.757" endtime="20210714 22:58:15.040"/>
</kw>
<msg timestamp="20210714 22:58:15.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:14.757" endtime="20210714 22:58:15.040"/>
</kw>
<status status="PASS" starttime="20210714 22:58:14.757" endtime="20210714 22:58:15.040"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.901" endtime="20210714 22:58:15.041"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.900" endtime="20210714 22:58:15.041"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.899" endtime="20210714 22:58:15.041"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.899" endtime="20210714 22:58:15.041"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:58:15.041" endtime="20210714 22:58:15.042"/>
</kw>
<msg timestamp="20210714 22:58:15.042" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:58:15.041" endtime="20210714 22:58:15.042"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:15.042" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:58:15.042" endtime="20210714 22:58:15.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:15.046" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:18.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:18.015" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:58:15.044" endtime="20210714 22:58:18.015"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:18.016" endtime="20210714 22:58:18.016"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:18.017" endtime="20210714 22:58:18.017"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:18.017" endtime="20210714 22:58:18.017"/>
</kw>
<msg timestamp="20210714 22:58:18.018" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:58:15.043" endtime="20210714 22:58:18.018"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:58:18.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:18.018" endtime="20210714 22:58:18.018"/>
</kw>
<status status="PASS" starttime="20210714 22:58:15.043" endtime="20210714 22:58:18.022"/>
</kw>
<status status="PASS" starttime="20210714 22:58:15.043" endtime="20210714 22:58:18.022"/>
</kw>
<status status="PASS" starttime="20210714 22:58:13.417" endtime="20210714 22:58:18.022"/>
</kw>
<test id="s1-s13-s11-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:18.027" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:58:18.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:18.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:18.025" endtime="20210714 22:58:18.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:18.030" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:18.029" endtime="20210714 22:58:18.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:18.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:18.030" endtime="20210714 22:58:18.031"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.025" endtime="20210714 22:58:18.031"/>
</kw>
<msg timestamp="20210714 22:58:18.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:18.025" endtime="20210714 22:58:18.031"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.024" endtime="20210714 22:58:18.031"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:18.036" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 85738/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:18.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:18.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:18.034" endtime="20210714 22:58:18.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:18.491" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:18.490" endtime="20210714 22:58:18.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:18.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:18.491" endtime="20210714 22:58:18.491"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.033" endtime="20210714 22:58:18.492"/>
</kw>
<msg timestamp="20210714 22:58:18.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:18.033" endtime="20210714 22:58:18.492"/>
</kw>
<msg timestamp="20210714 22:58:18.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:18.032" endtime="20210714 22:58:18.492"/>
</kw>
<msg timestamp="20210714 22:58:18.492" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:18.032" endtime="20210714 22:58:18.492"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:18.496" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 85738/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:18.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:18.888" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "857...</msg>
<status status="PASS" starttime="20210714 22:58:18.494" endtime="20210714 22:58:18.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:18.889" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "85738/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:58:18.888" endtime="20210714 22:58:18.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:18.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:18.889" endtime="20210714 22:58:18.890"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.494" endtime="20210714 22:58:18.890"/>
</kw>
<msg timestamp="20210714 22:58:18.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:18.494" endtime="20210714 22:58:18.890"/>
</kw>
<msg timestamp="20210714 22:58:18.891" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "857...</msg>
<status status="PASS" starttime="20210714 22:58:18.493" endtime="20210714 22:58:18.891"/>
</kw>
<msg timestamp="20210714 22:58:18.891" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "857...</msg>
<status status="PASS" starttime="20210714 22:58:18.492" endtime="20210714 22:58:18.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:18.891" endtime="20210714 22:58:18.891"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:18.895" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:18.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:18.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:18.893" endtime="20210714 22:58:18.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:18.898" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:18.898" endtime="20210714 22:58:18.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:18.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:18.898" endtime="20210714 22:58:18.899"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.892" endtime="20210714 22:58:18.899"/>
</kw>
<msg timestamp="20210714 22:58:18.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:18.892" endtime="20210714 22:58:18.899"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.892" endtime="20210714 22:58:18.900"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:18.903" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 85738/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:19.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:19.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:18.902" endtime="20210714 22:58:19.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:19.308" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:19.308" endtime="20210714 22:58:19.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:19.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:19.309" endtime="20210714 22:58:19.309"/>
</kw>
<status status="PASS" starttime="20210714 22:58:18.901" endtime="20210714 22:58:19.309"/>
</kw>
<msg timestamp="20210714 22:58:19.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:18.901" endtime="20210714 22:58:19.310"/>
</kw>
<msg timestamp="20210714 22:58:19.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:18.900" endtime="20210714 22:58:19.310"/>
</kw>
<msg timestamp="20210714 22:58:19.310" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:58:18.900" endtime="20210714 22:58:19.310"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:19.315" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 85738/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:19.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:19.703" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "857...</msg>
<status status="PASS" starttime="20210714 22:58:19.313" endtime="20210714 22:58:19.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:19.704" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "85738/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2021-07-14T22:58:19.265Z", 
            "ETag": "2021-07-14T22:58:19.265Z", 
            "StorageClass": "STANDARD", 
            "Key": "85738/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:58:19.703" endtime="20210714 22:58:19.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:19.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:19.705" endtime="20210714 22:58:19.705"/>
</kw>
<status status="PASS" starttime="20210714 22:58:19.312" endtime="20210714 22:58:19.705"/>
</kw>
<msg timestamp="20210714 22:58:19.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:19.312" endtime="20210714 22:58:19.706"/>
</kw>
<msg timestamp="20210714 22:58:19.706" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "857...</msg>
<status status="PASS" starttime="20210714 22:58:19.311" endtime="20210714 22:58:19.706"/>
</kw>
<msg timestamp="20210714 22:58:19.706" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:58:18.439Z", 
            "ETag": "2021-07-14T22:58:18.439Z", 
            "StorageClass": "STANDARD", 
            "Key": "857...</msg>
<status status="PASS" starttime="20210714 22:58:19.310" endtime="20210714 22:58:19.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:19.706" endtime="20210714 22:58:19.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:18.022" endtime="20210714 22:58:19.707"/>
</test>
<test id="s1-s13-s11-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:19.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:20.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:20.130" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:19.710" endtime="20210714 22:58:20.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:20.131" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:20 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:20.130" endtime="20210714 22:58:20.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:20.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:20.131" endtime="20210714 22:58:20.132"/>
</kw>
<status status="PASS" starttime="20210714 22:58:19.709" endtime="20210714 22:58:20.132"/>
</kw>
<msg timestamp="20210714 22:58:20.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:19.709" endtime="20210714 22:58:20.132"/>
</kw>
<msg timestamp="20210714 22:58:20.133" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:19.709" endtime="20210714 22:58:20.133"/>
</kw>
<msg timestamp="20210714 22:58:20.133" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:19.708" endtime="20210714 22:58:20.133"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:20.137" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:20.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:20.140" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 22:58:20.135" endtime="20210714 22:58:20.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:20.140" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 22:58:20.140" endtime="20210714 22:58:20.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:20.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:20.141" endtime="20210714 22:58:20.141"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.134" endtime="20210714 22:58:20.141"/>
</kw>
<msg timestamp="20210714 22:58:20.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:20.134" endtime="20210714 22:58:20.142"/>
</kw>
<msg timestamp="20210714 22:58:20.142" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 22:58:20.134" endtime="20210714 22:58:20.142"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:20.146" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:20.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:20.149" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 22:58:20.143" endtime="20210714 22:58:20.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:20.150" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 22:58:20.149" endtime="20210714 22:58:20.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:20.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:20.150" endtime="20210714 22:58:20.151"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.143" endtime="20210714 22:58:20.151"/>
</kw>
<msg timestamp="20210714 22:58:20.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:20.143" endtime="20210714 22:58:20.151"/>
</kw>
<msg timestamp="20210714 22:58:20.151" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 22:58:20.142" endtime="20210714 22:58:20.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:20.151" endtime="20210714 22:58:20.152"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.133" endtime="20210714 22:58:20.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:19.707" endtime="20210714 22:58:20.152"/>
</test>
<test id="s1-s13-s11-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:20.157" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:20.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:20.561" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:20.156" endtime="20210714 22:58:20.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:20.562" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:20 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:20.561" endtime="20210714 22:58:20.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:20.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:20.562" endtime="20210714 22:58:20.563"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.155" endtime="20210714 22:58:20.563"/>
</kw>
<msg timestamp="20210714 22:58:20.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:20.155" endtime="20210714 22:58:20.563"/>
</kw>
<msg timestamp="20210714 22:58:20.564" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:20.154" endtime="20210714 22:58:20.564"/>
</kw>
<msg timestamp="20210714 22:58:20.564" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:20.154" endtime="20210714 22:58:20.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:20.564" endtime="20210714 22:58:20.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:20.564" endtime="20210714 22:58:20.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:20.565" endtime="20210714 22:58:20.565"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:20.569" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 22:58:20.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:20.571" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210714 22:58:20.567" endtime="20210714 22:58:20.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:20.572" level="INFO">Rando</msg>
<status status="PASS" starttime="20210714 22:58:20.572" endtime="20210714 22:58:20.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:20.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:20.572" endtime="20210714 22:58:20.573"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.566" endtime="20210714 22:58:20.573"/>
</kw>
<msg timestamp="20210714 22:58:20.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:20.566" endtime="20210714 22:58:20.574"/>
</kw>
<msg timestamp="20210714 22:58:20.574" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20210714 22:58:20.565" endtime="20210714 22:58:20.574"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:20.577" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:20.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:20.579" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210714 22:58:20.575" endtime="20210714 22:58:20.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:20.580" level="INFO">Rando</msg>
<status status="PASS" starttime="20210714 22:58:20.579" endtime="20210714 22:58:20.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:20.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:20.580" endtime="20210714 22:58:20.581"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.575" endtime="20210714 22:58:20.581"/>
</kw>
<msg timestamp="20210714 22:58:20.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:20.574" endtime="20210714 22:58:20.581"/>
</kw>
<msg timestamp="20210714 22:58:20.581" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20210714 22:58:20.574" endtime="20210714 22:58:20.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:20.582" endtime="20210714 22:58:20.582"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:20.586" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:21.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:21.002" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:20.584" endtime="20210714 22:58:21.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.004" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:20 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:21.003" endtime="20210714 22:58:21.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.004" endtime="20210714 22:58:21.004"/>
</kw>
<status status="PASS" starttime="20210714 22:58:20.584" endtime="20210714 22:58:21.005"/>
</kw>
<msg timestamp="20210714 22:58:21.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:20.584" endtime="20210714 22:58:21.005"/>
</kw>
<msg timestamp="20210714 22:58:21.005" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:20.583" endtime="20210714 22:58:21.005"/>
</kw>
<msg timestamp="20210714 22:58:21.005" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:20.582" endtime="20210714 22:58:21.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.006" endtime="20210714 22:58:21.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.006" endtime="20210714 22:58:21.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.007" endtime="20210714 22:58:21.007"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.011" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 22:58:21.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:21.013" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210714 22:58:21.009" endtime="20210714 22:58:21.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.014" level="INFO">ndo</msg>
<status status="PASS" starttime="20210714 22:58:21.014" endtime="20210714 22:58:21.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.014" endtime="20210714 22:58:21.015"/>
</kw>
<status status="PASS" starttime="20210714 22:58:21.008" endtime="20210714 22:58:21.015"/>
</kw>
<msg timestamp="20210714 22:58:21.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:21.008" endtime="20210714 22:58:21.015"/>
</kw>
<msg timestamp="20210714 22:58:21.015" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20210714 22:58:21.007" endtime="20210714 22:58:21.015"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.018" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:21.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:21.020" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210714 22:58:21.017" endtime="20210714 22:58:21.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.021" level="INFO">ndo</msg>
<status status="PASS" starttime="20210714 22:58:21.021" endtime="20210714 22:58:21.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.022" endtime="20210714 22:58:21.022"/>
</kw>
<status status="PASS" starttime="20210714 22:58:21.016" endtime="20210714 22:58:21.022"/>
</kw>
<msg timestamp="20210714 22:58:21.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:21.016" endtime="20210714 22:58:21.023"/>
</kw>
<msg timestamp="20210714 22:58:21.023" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20210714 22:58:21.016" endtime="20210714 22:58:21.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:21.023" endtime="20210714 22:58:21.023"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:21.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:21.439" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:21.026" endtime="20210714 22:58:21.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.441" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:21 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:21.440" endtime="20210714 22:58:21.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.441" endtime="20210714 22:58:21.441"/>
</kw>
<status status="PASS" starttime="20210714 22:58:21.025" endtime="20210714 22:58:21.442"/>
</kw>
<msg timestamp="20210714 22:58:21.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:21.025" endtime="20210714 22:58:21.442"/>
</kw>
<msg timestamp="20210714 22:58:21.442" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:21.024" endtime="20210714 22:58:21.442"/>
</kw>
<msg timestamp="20210714 22:58:21.442" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:21.024" endtime="20210714 22:58:21.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.443" endtime="20210714 22:58:21.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.443" endtime="20210714 22:58:21.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.444" endtime="20210714 22:58:21.444"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.448" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 22:58:21.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:21.450" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210714 22:58:21.446" endtime="20210714 22:58:21.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.451" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210714 22:58:21.451" endtime="20210714 22:58:21.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.451" endtime="20210714 22:58:21.452"/>
</kw>
<status status="PASS" starttime="20210714 22:58:21.445" endtime="20210714 22:58:21.452"/>
</kw>
<msg timestamp="20210714 22:58:21.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:21.445" endtime="20210714 22:58:21.452"/>
</kw>
<msg timestamp="20210714 22:58:21.452" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20210714 22:58:21.444" endtime="20210714 22:58:21.453"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.456" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:21.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:21.458" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210714 22:58:21.454" endtime="20210714 22:58:21.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.459" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210714 22:58:21.458" endtime="20210714 22:58:21.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.459" endtime="20210714 22:58:21.459"/>
</kw>
<status status="PASS" starttime="20210714 22:58:21.453" endtime="20210714 22:58:21.460"/>
</kw>
<msg timestamp="20210714 22:58:21.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:21.453" endtime="20210714 22:58:21.460"/>
</kw>
<msg timestamp="20210714 22:58:21.460" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20210714 22:58:21.453" endtime="20210714 22:58:21.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:21.460" endtime="20210714 22:58:21.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:20.153" endtime="20210714 22:58:21.461"/>
</test>
<test id="s1-s13-s11-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:21.869" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:21.870" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:21.464" endtime="20210714 22:58:21.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:21.871" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:21.870" endtime="20210714 22:58:21.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:21.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:21.871" endtime="20210714 22:58:21.874"/>
</kw>
<msg timestamp="20210714 22:58:21.874" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:21.463" endtime="20210714 22:58:21.874"/>
</kw>
<msg timestamp="20210714 22:58:21.874" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:21.462" endtime="20210714 22:58:21.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:21.875" endtime="20210714 22:58:21.875"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:21.461" endtime="20210714 22:58:21.875"/>
</test>
<test id="s1-s13-s11-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:21.882" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:22.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:22.291" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:21.879" endtime="20210714 22:58:22.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:22.292" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:22 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:22.291" endtime="20210714 22:58:22.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:22.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:22.292" endtime="20210714 22:58:22.293"/>
</kw>
<status status="PASS" starttime="20210714 22:58:21.879" endtime="20210714 22:58:22.293"/>
</kw>
<msg timestamp="20210714 22:58:22.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:21.879" endtime="20210714 22:58:22.293"/>
</kw>
<msg timestamp="20210714 22:58:22.293" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:21.878" endtime="20210714 22:58:22.293"/>
</kw>
<msg timestamp="20210714 22:58:22.294" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:21.877" endtime="20210714 22:58:22.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:22.294" endtime="20210714 22:58:22.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:22.294" endtime="20210714 22:58:22.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:22.295" endtime="20210714 22:58:22.295"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:22.298" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:22.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:22.301" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.296" endtime="20210714 22:58:22.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:22.302" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.301" endtime="20210714 22:58:22.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:22.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:22.302" endtime="20210714 22:58:22.302"/>
</kw>
<status status="PASS" starttime="20210714 22:58:22.296" endtime="20210714 22:58:22.303"/>
</kw>
<msg timestamp="20210714 22:58:22.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:22.296" endtime="20210714 22:58:22.303"/>
</kw>
<msg timestamp="20210714 22:58:22.303" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.295" endtime="20210714 22:58:22.303"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:22.306" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:22.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:22.308" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.304" endtime="20210714 22:58:22.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:22.309" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.309" endtime="20210714 22:58:22.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:22.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:22.309" endtime="20210714 22:58:22.310"/>
</kw>
<status status="PASS" starttime="20210714 22:58:22.304" endtime="20210714 22:58:22.310"/>
</kw>
<msg timestamp="20210714 22:58:22.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:22.304" endtime="20210714 22:58:22.310"/>
</kw>
<msg timestamp="20210714 22:58:22.311" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.303" endtime="20210714 22:58:22.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:22.311" endtime="20210714 22:58:22.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:21.876" endtime="20210714 22:58:22.311"/>
</test>
<test id="s1-s13-s11-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:22.316" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:22.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:22.729" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:22.315" endtime="20210714 22:58:22.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:22.730" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:22 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:22.729" endtime="20210714 22:58:22.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:22.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:22.730" endtime="20210714 22:58:22.731"/>
</kw>
<status status="PASS" starttime="20210714 22:58:22.314" endtime="20210714 22:58:22.731"/>
</kw>
<msg timestamp="20210714 22:58:22.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:22.314" endtime="20210714 22:58:22.731"/>
</kw>
<msg timestamp="20210714 22:58:22.732" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:22.314" endtime="20210714 22:58:22.732"/>
</kw>
<msg timestamp="20210714 22:58:22.732" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:22.313" endtime="20210714 22:58:22.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:22.732" endtime="20210714 22:58:22.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:22.733" endtime="20210714 22:58:22.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:22.733" endtime="20210714 22:58:22.733"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:22.737" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:22.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:22.743" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.735" endtime="20210714 22:58:22.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:22.744" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.743" endtime="20210714 22:58:22.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:22.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:22.744" endtime="20210714 22:58:22.745"/>
</kw>
<status status="PASS" starttime="20210714 22:58:22.735" endtime="20210714 22:58:22.745"/>
</kw>
<msg timestamp="20210714 22:58:22.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:22.734" endtime="20210714 22:58:22.745"/>
</kw>
<msg timestamp="20210714 22:58:22.745" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.734" endtime="20210714 22:58:22.745"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:22.748" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:22.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:22.750" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.747" endtime="20210714 22:58:22.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:22.751" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.751" endtime="20210714 22:58:22.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:22.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:22.752" endtime="20210714 22:58:22.752"/>
</kw>
<status status="PASS" starttime="20210714 22:58:22.746" endtime="20210714 22:58:22.752"/>
</kw>
<msg timestamp="20210714 22:58:22.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:22.746" endtime="20210714 22:58:22.753"/>
</kw>
<msg timestamp="20210714 22:58:22.753" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:22.745" endtime="20210714 22:58:22.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:22.753" endtime="20210714 22:58:22.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:22.312" endtime="20210714 22:58:22.754"/>
</test>
<test id="s1-s13-s11-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:22.759" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:23.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:23.174" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:22.757" endtime="20210714 22:58:23.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:23.175" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:23 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:23.174" endtime="20210714 22:58:23.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:23.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:23.175" endtime="20210714 22:58:23.176"/>
</kw>
<status status="PASS" starttime="20210714 22:58:22.757" endtime="20210714 22:58:23.176"/>
</kw>
<msg timestamp="20210714 22:58:23.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:22.756" endtime="20210714 22:58:23.176"/>
</kw>
<msg timestamp="20210714 22:58:23.177" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:22.756" endtime="20210714 22:58:23.177"/>
</kw>
<msg timestamp="20210714 22:58:23.177" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:22.755" endtime="20210714 22:58:23.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:23.177" endtime="20210714 22:58:23.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:23.178" endtime="20210714 22:58:23.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:23.178" endtime="20210714 22:58:23.178"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:23.182" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 22:58:23.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:23.185" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210714 22:58:23.180" endtime="20210714 22:58:23.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:23.186" level="INFO">R</msg>
<status status="PASS" starttime="20210714 22:58:23.185" endtime="20210714 22:58:23.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:23.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:23.186" endtime="20210714 22:58:23.186"/>
</kw>
<status status="PASS" starttime="20210714 22:58:23.179" endtime="20210714 22:58:23.187"/>
</kw>
<msg timestamp="20210714 22:58:23.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:23.179" endtime="20210714 22:58:23.187"/>
</kw>
<msg timestamp="20210714 22:58:23.187" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20210714 22:58:23.179" endtime="20210714 22:58:23.187"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:23.190" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:23.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:23.193" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210714 22:58:23.189" endtime="20210714 22:58:23.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:23.194" level="INFO">R</msg>
<status status="PASS" starttime="20210714 22:58:23.193" endtime="20210714 22:58:23.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:23.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:23.194" endtime="20210714 22:58:23.194"/>
</kw>
<status status="PASS" starttime="20210714 22:58:23.188" endtime="20210714 22:58:23.195"/>
</kw>
<msg timestamp="20210714 22:58:23.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:23.188" endtime="20210714 22:58:23.195"/>
</kw>
<msg timestamp="20210714 22:58:23.195" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20210714 22:58:23.187" endtime="20210714 22:58:23.195"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:23.195" endtime="20210714 22:58:23.196"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:23.200" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:23.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:23.614" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:23.198" endtime="20210714 22:58:23.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:23.615" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:23 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:23.615" endtime="20210714 22:58:23.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:23.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:23.616" endtime="20210714 22:58:23.616"/>
</kw>
<status status="PASS" starttime="20210714 22:58:23.197" endtime="20210714 22:58:23.617"/>
</kw>
<msg timestamp="20210714 22:58:23.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:23.197" endtime="20210714 22:58:23.617"/>
</kw>
<msg timestamp="20210714 22:58:23.617" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:23.197" endtime="20210714 22:58:23.617"/>
</kw>
<msg timestamp="20210714 22:58:23.617" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 22:58:23.196" endtime="20210714 22:58:23.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:23.617" endtime="20210714 22:58:23.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:23.618" endtime="20210714 22:58:23.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:23.618" endtime="20210714 22:58:23.619"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:23.622" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 22:58:23.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:23.624" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210714 22:58:23.620" endtime="20210714 22:58:23.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:23.625" level="INFO">o</msg>
<status status="PASS" starttime="20210714 22:58:23.625" endtime="20210714 22:58:23.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:23.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:23.626" endtime="20210714 22:58:23.626"/>
</kw>
<status status="PASS" starttime="20210714 22:58:23.620" endtime="20210714 22:58:23.627"/>
</kw>
<msg timestamp="20210714 22:58:23.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:23.619" endtime="20210714 22:58:23.627"/>
</kw>
<msg timestamp="20210714 22:58:23.627" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20210714 22:58:23.619" endtime="20210714 22:58:23.627"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:23.630" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:23.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:23.632" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210714 22:58:23.628" endtime="20210714 22:58:23.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:23.633" level="INFO">o</msg>
<status status="PASS" starttime="20210714 22:58:23.633" endtime="20210714 22:58:23.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:23.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:23.634" endtime="20210714 22:58:23.634"/>
</kw>
<status status="PASS" starttime="20210714 22:58:23.628" endtime="20210714 22:58:23.634"/>
</kw>
<msg timestamp="20210714 22:58:23.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:23.628" endtime="20210714 22:58:23.635"/>
</kw>
<msg timestamp="20210714 22:58:23.635" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20210714 22:58:23.627" endtime="20210714 22:58:23.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:23.635" endtime="20210714 22:58:23.635"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:22.754" endtime="20210714 22:58:23.636"/>
</test>
<test id="s1-s13-s11-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:23.641" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.048" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:23.639" endtime="20210714 22:58:24.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.049" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:23 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:24.049" endtime="20210714 22:58:24.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.050" endtime="20210714 22:58:24.050"/>
</kw>
<status status="PASS" starttime="20210714 22:58:23.639" endtime="20210714 22:58:24.051"/>
</kw>
<msg timestamp="20210714 22:58:24.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:23.639" endtime="20210714 22:58:24.051"/>
</kw>
<msg timestamp="20210714 22:58:24.051" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:23.638" endtime="20210714 22:58:24.051"/>
</kw>
<msg timestamp="20210714 22:58:24.051" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:23.637" endtime="20210714 22:58:24.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.051" endtime="20210714 22:58:24.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.052" endtime="20210714 22:58:24.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.052" endtime="20210714 22:58:24.053"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.056" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 22:58:24.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.059" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210714 22:58:24.054" endtime="20210714 22:58:24.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.060" level="INFO">ext</msg>
<status status="PASS" starttime="20210714 22:58:24.059" endtime="20210714 22:58:24.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.060" endtime="20210714 22:58:24.060"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.054" endtime="20210714 22:58:24.061"/>
</kw>
<msg timestamp="20210714 22:58:24.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.053" endtime="20210714 22:58:24.061"/>
</kw>
<msg timestamp="20210714 22:58:24.061" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20210714 22:58:24.053" endtime="20210714 22:58:24.061"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.064" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.066" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210714 22:58:24.062" endtime="20210714 22:58:24.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.067" level="INFO">ext</msg>
<status status="PASS" starttime="20210714 22:58:24.067" endtime="20210714 22:58:24.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.068" endtime="20210714 22:58:24.068"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.062" endtime="20210714 22:58:24.068"/>
</kw>
<msg timestamp="20210714 22:58:24.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.062" endtime="20210714 22:58:24.069"/>
</kw>
<msg timestamp="20210714 22:58:24.069" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20210714 22:58:24.061" endtime="20210714 22:58:24.069"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:24.069" endtime="20210714 22:58:24.069"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.495" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:24.072" endtime="20210714 22:58:24.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.496" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 22:58:24 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:24.495" endtime="20210714 22:58:24.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.496" endtime="20210714 22:58:24.497"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.071" endtime="20210714 22:58:24.497"/>
</kw>
<msg timestamp="20210714 22:58:24.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.071" endtime="20210714 22:58:24.497"/>
</kw>
<msg timestamp="20210714 22:58:24.498" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:24.070" endtime="20210714 22:58:24.498"/>
</kw>
<msg timestamp="20210714 22:58:24.498" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 22:58:24.070" endtime="20210714 22:58:24.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.498" endtime="20210714 22:58:24.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.499" endtime="20210714 22:58:24.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.499" endtime="20210714 22:58:24.499"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.503" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.505" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.501" endtime="20210714 22:58:24.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.506" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.506" endtime="20210714 22:58:24.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.506" endtime="20210714 22:58:24.507"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.500" endtime="20210714 22:58:24.507"/>
</kw>
<msg timestamp="20210714 22:58:24.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.500" endtime="20210714 22:58:24.508"/>
</kw>
<msg timestamp="20210714 22:58:24.508" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.500" endtime="20210714 22:58:24.508"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.511" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.513" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.509" endtime="20210714 22:58:24.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.514" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.514" endtime="20210714 22:58:24.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.515" endtime="20210714 22:58:24.515"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.509" endtime="20210714 22:58:24.515"/>
</kw>
<msg timestamp="20210714 22:58:24.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.508" endtime="20210714 22:58:24.515"/>
</kw>
<msg timestamp="20210714 22:58:24.516" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.508" endtime="20210714 22:58:24.516"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:24.516" endtime="20210714 22:58:24.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:23.637" endtime="20210714 22:58:24.517"/>
</test>
<test id="s1-s13-s11-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.937" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:24.520" endtime="20210714 22:58:24.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.938" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:24 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:24.937" endtime="20210714 22:58:24.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.938" endtime="20210714 22:58:24.939"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.519" endtime="20210714 22:58:24.939"/>
</kw>
<msg timestamp="20210714 22:58:24.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.519" endtime="20210714 22:58:24.939"/>
</kw>
<msg timestamp="20210714 22:58:24.939" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:24.519" endtime="20210714 22:58:24.939"/>
</kw>
<msg timestamp="20210714 22:58:24.940" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:24.518" endtime="20210714 22:58:24.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.940" endtime="20210714 22:58:24.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:24.940" endtime="20210714 22:58:24.941"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.944" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.946" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.942" endtime="20210714 22:58:24.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.947" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.947" endtime="20210714 22:58:24.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.947" endtime="20210714 22:58:24.948"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.942" endtime="20210714 22:58:24.948"/>
</kw>
<msg timestamp="20210714 22:58:24.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.941" endtime="20210714 22:58:24.949"/>
</kw>
<msg timestamp="20210714 22:58:24.949" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.941" endtime="20210714 22:58:24.949"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.952" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:24.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:24.954" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.950" endtime="20210714 22:58:24.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:24.955" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.954" endtime="20210714 22:58:24.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:24.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:24.955" endtime="20210714 22:58:24.956"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.950" endtime="20210714 22:58:24.956"/>
</kw>
<msg timestamp="20210714 22:58:24.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.949" endtime="20210714 22:58:24.956"/>
</kw>
<msg timestamp="20210714 22:58:24.956" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:24.949" endtime="20210714 22:58:24.956"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:24.956" endtime="20210714 22:58:24.957"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:24.960" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:25.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:25.367" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:24.959" endtime="20210714 22:58:25.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:25.368" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:25 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:58:25.367" endtime="20210714 22:58:25.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:25.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:25.368" endtime="20210714 22:58:25.368"/>
</kw>
<status status="PASS" starttime="20210714 22:58:24.958" endtime="20210714 22:58:25.369"/>
</kw>
<msg timestamp="20210714 22:58:25.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:24.958" endtime="20210714 22:58:25.369"/>
</kw>
<msg timestamp="20210714 22:58:25.369" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:24.958" endtime="20210714 22:58:25.369"/>
</kw>
<msg timestamp="20210714 22:58:25.370" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:58:18 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 22:58:2...</msg>
<status status="PASS" starttime="20210714 22:58:24.957" endtime="20210714 22:58:25.370"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:25.370" endtime="20210714 22:58:25.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:25.370" endtime="20210714 22:58:25.371"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:25.375" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:25.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:25.377" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:25.372" endtime="20210714 22:58:25.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:25.378" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:25.377" endtime="20210714 22:58:25.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:25.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:25.378" endtime="20210714 22:58:25.379"/>
</kw>
<status status="PASS" starttime="20210714 22:58:25.371" endtime="20210714 22:58:25.379"/>
</kw>
<msg timestamp="20210714 22:58:25.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:25.371" endtime="20210714 22:58:25.379"/>
</kw>
<msg timestamp="20210714 22:58:25.380" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:25.371" endtime="20210714 22:58:25.380"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:25.385" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:25.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:25.387" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:25.381" endtime="20210714 22:58:25.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:25.388" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:25.387" endtime="20210714 22:58:25.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:25.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:25.388" endtime="20210714 22:58:25.389"/>
</kw>
<status status="PASS" starttime="20210714 22:58:25.380" endtime="20210714 22:58:25.389"/>
</kw>
<msg timestamp="20210714 22:58:25.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:25.380" endtime="20210714 22:58:25.389"/>
</kw>
<msg timestamp="20210714 22:58:25.389" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 22:58:25.380" endtime="20210714 22:58:25.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:58:25.389" endtime="20210714 22:58:25.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:24.517" endtime="20210714 22:58:25.390"/>
</test>
<test id="s1-s13-s11-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:25.395" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:25.800" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:25.800" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.393" endtime="20210714 22:58:25.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:25.802" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.801" endtime="20210714 22:58:25.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:25.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:25.802" endtime="20210714 22:58:25.802"/>
</kw>
<msg timestamp="20210714 22:58:25.803" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.392" endtime="20210714 22:58:25.803"/>
</kw>
<msg timestamp="20210714 22:58:25.803" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.392" endtime="20210714 22:58:25.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:25.803" endtime="20210714 22:58:25.804"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:25.807" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:26.205" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:26.205" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.805" endtime="20210714 22:58:26.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:26.206" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:26.205" endtime="20210714 22:58:26.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:26.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:26.206" endtime="20210714 22:58:26.207"/>
</kw>
<msg timestamp="20210714 22:58:26.207" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.804" endtime="20210714 22:58:26.207"/>
</kw>
<msg timestamp="20210714 22:58:26.208" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:25.804" endtime="20210714 22:58:26.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:26.208" endtime="20210714 22:58:26.208"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:26.212" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 85738/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:26.615" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:26.615" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:26.210" endtime="20210714 22:58:26.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:26.617" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:26.616" endtime="20210714 22:58:26.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:26.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:26.617" endtime="20210714 22:58:26.617"/>
</kw>
<msg timestamp="20210714 22:58:26.619" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:26.209" endtime="20210714 22:58:26.619"/>
</kw>
<msg timestamp="20210714 22:58:26.620" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 22:58:26.208" endtime="20210714 22:58:26.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:26.620" endtime="20210714 22:58:26.620"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:25.391" endtime="20210714 22:58:26.620"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:58:13.410" endtime="20210714 22:58:26.622"/>
</suite>
<suite id="s1-s13-s12" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:26.640" level="INFO">${random} = 99333</msg>
<status status="PASS" starttime="20210714 22:58:26.639" endtime="20210714 22:58:26.640"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:26.642" level="INFO">${PREFIX} = 99333</msg>
<status status="PASS" starttime="20210714 22:58:26.640" endtime="20210714 22:58:26.642"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.639" endtime="20210714 22:58:26.642"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.639" endtime="20210714 22:58:26.642"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:26.645" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:26.647" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:26.647" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:26.643" endtime="20210714 22:58:26.647"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:26.648" endtime="20210714 22:58:26.649"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:26.651" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:26.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:26.782" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:26.649" endtime="20210714 22:58:26.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:26.787" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:27.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:27.139" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:26.785" endtime="20210714 22:58:27.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:27.141" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:27.140" endtime="20210714 22:58:27.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:27.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:27.141" endtime="20210714 22:58:27.141"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.785" endtime="20210714 22:58:27.142"/>
</kw>
<msg timestamp="20210714 22:58:27.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:26.785" endtime="20210714 22:58:27.142"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.784" endtime="20210714 22:58:27.142"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.784" endtime="20210714 22:58:27.142"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.783" endtime="20210714 22:58:27.143"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.642" endtime="20210714 22:58:27.143"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.642" endtime="20210714 22:58:27.143"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:27.144" endtime="20210714 22:58:27.144"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:27.144" endtime="20210714 22:58:27.144"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:27.149" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:27.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:27.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:27.146" endtime="20210714 22:58:27.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:27.429" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:27.429" endtime="20210714 22:58:27.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:27.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:27.430" endtime="20210714 22:58:27.430"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.146" endtime="20210714 22:58:27.430"/>
</kw>
<msg timestamp="20210714 22:58:27.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:27.145" endtime="20210714 22:58:27.431"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.145" endtime="20210714 22:58:27.431"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:27.434" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:27.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:27.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:27.432" endtime="20210714 22:58:27.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:27.717" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:27.716" endtime="20210714 22:58:27.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:27.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:27.717" endtime="20210714 22:58:27.717"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.432" endtime="20210714 22:58:27.718"/>
</kw>
<msg timestamp="20210714 22:58:27.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:27.431" endtime="20210714 22:58:27.718"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.431" endtime="20210714 22:58:27.718"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:27.721" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:28.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:28.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:27.719" endtime="20210714 22:58:28.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:28.001" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:28.000" endtime="20210714 22:58:28.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:28.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:28.001" endtime="20210714 22:58:28.002"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.719" endtime="20210714 22:58:28.002"/>
</kw>
<msg timestamp="20210714 22:58:28.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:27.719" endtime="20210714 22:58:28.003"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.718" endtime="20210714 22:58:28.003"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:28.006" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:28.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:28.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:28.004" endtime="20210714 22:58:28.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:28.288" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:28.288" endtime="20210714 22:58:28.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:28.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:28.289" endtime="20210714 22:58:28.289"/>
</kw>
<status status="PASS" starttime="20210714 22:58:28.003" endtime="20210714 22:58:28.289"/>
</kw>
<msg timestamp="20210714 22:58:28.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:28.003" endtime="20210714 22:58:28.290"/>
</kw>
<status status="PASS" starttime="20210714 22:58:28.003" endtime="20210714 22:58:28.290"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.145" endtime="20210714 22:58:28.290"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.144" endtime="20210714 22:58:28.290"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.143" endtime="20210714 22:58:28.290"/>
</kw>
<status status="PASS" starttime="20210714 22:58:27.143" endtime="20210714 22:58:28.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:58:28.291" endtime="20210714 22:58:28.291"/>
</kw>
<msg timestamp="20210714 22:58:28.291" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:58:28.290" endtime="20210714 22:58:28.291"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:28.292" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210714 22:58:28.291" endtime="20210714 22:58:28.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:28.295" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:31.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:31.342" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210714 22:58:28.293" endtime="20210714 22:58:31.342"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:31.343" endtime="20210714 22:58:31.343"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:31.343" endtime="20210714 22:58:31.344"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:31.344" endtime="20210714 22:58:31.344"/>
</kw>
<msg timestamp="20210714 22:58:31.344" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210714 22:58:28.293" endtime="20210714 22:58:31.344"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210714 22:58:31.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:31.345" endtime="20210714 22:58:31.345"/>
</kw>
<status status="PASS" starttime="20210714 22:58:28.292" endtime="20210714 22:58:31.345"/>
</kw>
<status status="PASS" starttime="20210714 22:58:28.292" endtime="20210714 22:58:31.345"/>
</kw>
<status status="PASS" starttime="20210714 22:58:26.639" endtime="20210714 22:58:31.345"/>
</kw>
<test id="s1-s13-s12-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:31.347" endtime="20210714 22:58:31.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:31.352" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:31.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:31.363" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 22:58:31.349" endtime="20210714 22:58:31.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:31.365" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.2...
* Connected to s3g (172.18.0.2) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Wed, 14 Jul 2021 22:58:31 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 14 Jul 2021 22:58:31 GMT
&lt; Date: Wed, 14 Jul 2021 22:58:31 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20210714 22:58:31.364" endtime="20210714 22:58:31.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:31.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:31.365" endtime="20210714 22:58:31.365"/>
</kw>
<status status="PASS" starttime="20210714 22:58:31.348" endtime="20210714 22:58:31.366"/>
</kw>
<msg timestamp="20210714 22:58:31.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:31.348" endtime="20210714 22:58:31.366"/>
</kw>
<msg timestamp="20210714 22:58:31.366" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 22:58:31.347" endtime="20210714 22:58:31.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:31.366" endtime="20210714 22:58:31.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:31.367" endtime="20210714 22:58:31.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:31.370" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:31.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:31.381" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 22:58:31.369" endtime="20210714 22:58:31.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:31.382" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.2...
* Connected to s3g (172.18.0.2) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 14 Jul 2021 22:58:31 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Wed, 14 Jul 2021 22:29:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0   554k      0 --:--:-- --:--:-- --:--:--  606k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20210714 22:58:31.382" endtime="20210714 22:58:31.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:31.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:31.383" endtime="20210714 22:58:31.383"/>
</kw>
<status status="PASS" starttime="20210714 22:58:31.368" endtime="20210714 22:58:31.384"/>
</kw>
<msg timestamp="20210714 22:58:31.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:31.368" endtime="20210714 22:58:31.384"/>
</kw>
<msg timestamp="20210714 22:58:31.384" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 22:58:31.367" endtime="20210714 22:58:31.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:31.384" endtime="20210714 22:58:31.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:31.346" endtime="20210714 22:58:31.385"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20210714 22:58:26.626" endtime="20210714 22:58:31.386"/>
</suite>
<status status="PASS" starttime="20210714 22:55:30.667" endtime="20210714 22:58:31.389"/>
</suite>
<suite id="s1-s14" name="s3-generated" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:35.324" level="INFO">${random} = 06301</msg>
<status status="PASS" starttime="20210714 22:58:35.324" endtime="20210714 22:58:35.324"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:35.326" level="INFO">${PREFIX} = 06301</msg>
<status status="PASS" starttime="20210714 22:58:35.324" endtime="20210714 22:58:35.326"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.323" endtime="20210714 22:58:35.326"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.323" endtime="20210714 22:58:35.326"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:35.329" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:35.331" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:35.331" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:35.326" endtime="20210714 22:58:35.332"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:35.332" endtime="20210714 22:58:35.332"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:35.334" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:35.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:35.451" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:35.333" endtime="20210714 22:58:35.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:35.456" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:35.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:35.804" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:35.454" endtime="20210714 22:58:35.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:35.805" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:35.804" endtime="20210714 22:58:35.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:35.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:35.805" endtime="20210714 22:58:35.806"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.453" endtime="20210714 22:58:35.806"/>
</kw>
<msg timestamp="20210714 22:58:35.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:35.453" endtime="20210714 22:58:35.806"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.453" endtime="20210714 22:58:35.806"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.452" endtime="20210714 22:58:35.807"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.452" endtime="20210714 22:58:35.807"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.326" endtime="20210714 22:58:35.807"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.326" endtime="20210714 22:58:35.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:35.808" endtime="20210714 22:58:35.808"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:35.808" endtime="20210714 22:58:35.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:35.813" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:36.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:36.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:35.811" endtime="20210714 22:58:36.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:36.099" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:36.099" endtime="20210714 22:58:36.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:36.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:36.099" endtime="20210714 22:58:36.100"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.810" endtime="20210714 22:58:36.100"/>
</kw>
<msg timestamp="20210714 22:58:36.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:35.810" endtime="20210714 22:58:36.100"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.810" endtime="20210714 22:58:36.101"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:36.104" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:36.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:36.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:36.102" endtime="20210714 22:58:36.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:36.381" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:36.380" endtime="20210714 22:58:36.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:36.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:36.381" endtime="20210714 22:58:36.381"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.101" endtime="20210714 22:58:36.382"/>
</kw>
<msg timestamp="20210714 22:58:36.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:36.101" endtime="20210714 22:58:36.382"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.101" endtime="20210714 22:58:36.382"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:36.385" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:36.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:36.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:36.383" endtime="20210714 22:58:36.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:36.672" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:36.671" endtime="20210714 22:58:36.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:36.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:36.672" endtime="20210714 22:58:36.672"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.383" endtime="20210714 22:58:36.673"/>
</kw>
<msg timestamp="20210714 22:58:36.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:36.383" endtime="20210714 22:58:36.673"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.382" endtime="20210714 22:58:36.673"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:36.676" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:36.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:36.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:36.674" endtime="20210714 22:58:36.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:36.956" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:36.956" endtime="20210714 22:58:36.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:36.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:36.957" endtime="20210714 22:58:36.957"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.674" endtime="20210714 22:58:36.957"/>
</kw>
<msg timestamp="20210714 22:58:36.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:36.674" endtime="20210714 22:58:36.957"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.673" endtime="20210714 22:58:36.958"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.809" endtime="20210714 22:58:36.958"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.809" endtime="20210714 22:58:36.958"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.808" endtime="20210714 22:58:36.958"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.807" endtime="20210714 22:58:36.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:36.960" level="INFO">${postfix} = 24539</msg>
<status status="PASS" starttime="20210714 22:58:36.959" endtime="20210714 22:58:36.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:36.961" level="INFO">${bucket} = bucket-24539</msg>
<status status="PASS" starttime="20210714 22:58:36.960" endtime="20210714 22:58:36.961"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:36.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-24539 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:37.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:37.361" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-24539"
}</msg>
<status status="PASS" starttime="20210714 22:58:36.963" endtime="20210714 22:58:37.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:37.362" level="INFO">{
    "Location": "http://s3g:9878/bucket-24539"
}</msg>
<status status="PASS" starttime="20210714 22:58:37.362" endtime="20210714 22:58:37.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:37.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:37.363" endtime="20210714 22:58:37.363"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.963" endtime="20210714 22:58:37.363"/>
</kw>
<msg timestamp="20210714 22:58:37.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:36.962" endtime="20210714 22:58:37.363"/>
</kw>
<msg timestamp="20210714 22:58:37.364" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-24539"
}</msg>
<status status="PASS" starttime="20210714 22:58:36.962" endtime="20210714 22:58:37.364"/>
</kw>
<msg timestamp="20210714 22:58:37.364" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-24539"
}</msg>
<status status="PASS" starttime="20210714 22:58:36.962" endtime="20210714 22:58:37.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:37.364" endtime="20210714 22:58:37.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:37.365" endtime="20210714 22:58:37.365"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.961" endtime="20210714 22:58:37.365"/>
</kw>
<status status="PASS" starttime="20210714 22:58:36.959" endtime="20210714 22:58:37.365"/>
</kw>
<msg timestamp="20210714 22:58:37.365" level="INFO">${BUCKET} = bucket-24539</msg>
<status status="PASS" starttime="20210714 22:58:36.958" endtime="20210714 22:58:37.365"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:37.366" level="INFO">${BUCKET} = bucket-24539</msg>
<status status="PASS" starttime="20210714 22:58:37.366" endtime="20210714 22:58:37.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:37.366" endtime="20210714 22:58:37.366"/>
</kw>
<status status="PASS" starttime="20210714 22:58:35.323" endtime="20210714 22:58:37.366"/>
</kw>
<suite id="s1-s14-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:37.375" level="INFO">${random} = 46544</msg>
<status status="PASS" starttime="20210714 22:58:37.375" endtime="20210714 22:58:37.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:37.377" level="INFO">${PREFIX} = 46544</msg>
<status status="PASS" starttime="20210714 22:58:37.375" endtime="20210714 22:58:37.377"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.375" endtime="20210714 22:58:37.377"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.374" endtime="20210714 22:58:37.377"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:37.379" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:37.381" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:37.381" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:37.377" endtime="20210714 22:58:37.381"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:37.382" endtime="20210714 22:58:37.382"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:37.384" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:37.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:37.499" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:37.382" endtime="20210714 22:58:37.499"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:37.504" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:37.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:37.849" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:37.502" endtime="20210714 22:58:37.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:37.850" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:37.850" endtime="20210714 22:58:37.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:37.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:37.850" endtime="20210714 22:58:37.851"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.501" endtime="20210714 22:58:37.851"/>
</kw>
<msg timestamp="20210714 22:58:37.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:37.501" endtime="20210714 22:58:37.851"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.501" endtime="20210714 22:58:37.852"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.500" endtime="20210714 22:58:37.852"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.500" endtime="20210714 22:58:37.852"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.377" endtime="20210714 22:58:37.852"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.377" endtime="20210714 22:58:37.852"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:37.853" endtime="20210714 22:58:37.853"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:37.853" endtime="20210714 22:58:37.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:37.857" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:38.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:38.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:37.855" endtime="20210714 22:58:38.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:38.139" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:38.139" endtime="20210714 22:58:38.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:38.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:38.139" endtime="20210714 22:58:38.140"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.855" endtime="20210714 22:58:38.140"/>
</kw>
<msg timestamp="20210714 22:58:38.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:37.855" endtime="20210714 22:58:38.140"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.854" endtime="20210714 22:58:38.141"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:38.144" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:38.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:38.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:38.142" endtime="20210714 22:58:38.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:38.424" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:38.423" endtime="20210714 22:58:38.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:38.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:38.424" endtime="20210714 22:58:38.424"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.141" endtime="20210714 22:58:38.425"/>
</kw>
<msg timestamp="20210714 22:58:38.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:38.141" endtime="20210714 22:58:38.425"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.141" endtime="20210714 22:58:38.425"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:38.428" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:38.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:38.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:38.427" endtime="20210714 22:58:38.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:38.709" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:38.708" endtime="20210714 22:58:38.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:38.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:38.709" endtime="20210714 22:58:38.710"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.426" endtime="20210714 22:58:38.710"/>
</kw>
<msg timestamp="20210714 22:58:38.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:38.426" endtime="20210714 22:58:38.711"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.425" endtime="20210714 22:58:38.711"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:38.714" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:38.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:38.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:38.712" endtime="20210714 22:58:38.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:38.993" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:38.993" endtime="20210714 22:58:38.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:38.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:38.994" endtime="20210714 22:58:38.994"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.711" endtime="20210714 22:58:38.994"/>
</kw>
<msg timestamp="20210714 22:58:38.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:38.711" endtime="20210714 22:58:38.995"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.711" endtime="20210714 22:58:38.995"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.854" endtime="20210714 22:58:38.995"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.854" endtime="20210714 22:58:38.995"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.853" endtime="20210714 22:58:38.995"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.852" endtime="20210714 22:58:38.995"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:38.997" level="INFO">${postfix} = 51447</msg>
<status status="PASS" starttime="20210714 22:58:38.996" endtime="20210714 22:58:38.997"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:38.997" level="INFO">${bucket} = bucket-51447</msg>
<status status="PASS" starttime="20210714 22:58:38.997" endtime="20210714 22:58:38.997"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:39.001" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-51447 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:39.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:39.397" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-51447"
}</msg>
<status status="PASS" starttime="20210714 22:58:38.999" endtime="20210714 22:58:39.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:39.398" level="INFO">{
    "Location": "http://s3g:9878/bucket-51447"
}</msg>
<status status="PASS" starttime="20210714 22:58:39.397" endtime="20210714 22:58:39.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:39.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:39.398" endtime="20210714 22:58:39.399"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.999" endtime="20210714 22:58:39.399"/>
</kw>
<msg timestamp="20210714 22:58:39.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:38.998" endtime="20210714 22:58:39.399"/>
</kw>
<msg timestamp="20210714 22:58:39.399" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-51447"
}</msg>
<status status="PASS" starttime="20210714 22:58:38.998" endtime="20210714 22:58:39.399"/>
</kw>
<msg timestamp="20210714 22:58:39.400" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-51447"
}</msg>
<status status="PASS" starttime="20210714 22:58:38.998" endtime="20210714 22:58:39.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:39.400" endtime="20210714 22:58:39.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:39.400" endtime="20210714 22:58:39.401"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.997" endtime="20210714 22:58:39.401"/>
</kw>
<status status="PASS" starttime="20210714 22:58:38.996" endtime="20210714 22:58:39.401"/>
</kw>
<msg timestamp="20210714 22:58:39.401" level="INFO">${BUCKET} = bucket-51447</msg>
<status status="PASS" starttime="20210714 22:58:38.995" endtime="20210714 22:58:39.401"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:39.402" level="INFO">${BUCKET} = bucket-51447</msg>
<status status="PASS" starttime="20210714 22:58:39.401" endtime="20210714 22:58:39.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:39.402" endtime="20210714 22:58:39.402"/>
</kw>
<status status="PASS" starttime="20210714 22:58:37.374" endtime="20210714 22:58:39.402"/>
</kw>
<test id="s1-s14-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:39.407" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:58:39.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:39.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:39.405" endtime="20210714 22:58:39.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:39.411" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:39.410" endtime="20210714 22:58:39.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:39.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:39.411" endtime="20210714 22:58:39.411"/>
</kw>
<status status="PASS" starttime="20210714 22:58:39.404" endtime="20210714 22:58:39.411"/>
</kw>
<msg timestamp="20210714 22:58:39.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:39.404" endtime="20210714 22:58:39.412"/>
</kw>
<status status="PASS" starttime="20210714 22:58:39.403" endtime="20210714 22:58:39.412"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:39.415" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-51447 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:42.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:42.412" level="INFO">${output} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/testfile         </msg>
<status status="PASS" starttime="20210714 22:58:39.414" endtime="20210714 22:58:42.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:42.413" level="INFO">Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/testfile         </msg>
<status status="PASS" starttime="20210714 22:58:42.412" endtime="20210714 22:58:42.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:42.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:42.413" endtime="20210714 22:58:42.414"/>
</kw>
<status status="PASS" starttime="20210714 22:58:39.413" endtime="20210714 22:58:42.414"/>
</kw>
<msg timestamp="20210714 22:58:42.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:39.413" endtime="20210714 22:58:42.414"/>
</kw>
<msg timestamp="20210714 22:58:42.414" level="INFO">${output} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/testfile         </msg>
<status status="PASS" starttime="20210714 22:58:39.412" endtime="20210714 22:58:42.414"/>
</kw>
<msg timestamp="20210714 22:58:42.415" level="INFO">${result} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/testfile         </msg>
<status status="PASS" starttime="20210714 22:58:39.412" endtime="20210714 22:58:42.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:42.415" endtime="20210714 22:58:42.415"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:42.419" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-51447/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:45.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:45.419" level="INFO">${output} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210714 22:58:42.417" endtime="20210714 22:58:45.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:45.420" level="INFO">Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210714 22:58:45.419" endtime="20210714 22:58:45.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:45.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:45.420" endtime="20210714 22:58:45.421"/>
</kw>
<status status="PASS" starttime="20210714 22:58:42.417" endtime="20210714 22:58:45.421"/>
</kw>
<msg timestamp="20210714 22:58:45.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:42.416" endtime="20210714 22:58:45.421"/>
</kw>
<msg timestamp="20210714 22:58:45.422" level="INFO">${output} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210714 22:58:42.416" endtime="20210714 22:58:45.422"/>
</kw>
<msg timestamp="20210714 22:58:45.422" level="INFO">${result} = Completed 29 Bytes/29 Bytes (11 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-51447/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210714 22:58:42.415" endtime="20210714 22:58:45.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:45.422" endtime="20210714 22:58:45.422"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:45.427" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-51447 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:45.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:45.804" level="INFO">${output} =                            PRE dir1/
2021-07-14 22:58:42         29 testfile</msg>
<status status="PASS" starttime="20210714 22:58:45.424" endtime="20210714 22:58:45.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:45.806" level="INFO">                           PRE dir1/
2021-07-14 22:58:42         29 testfile</msg>
<status status="PASS" starttime="20210714 22:58:45.805" endtime="20210714 22:58:45.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:45.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:45.806" endtime="20210714 22:58:45.806"/>
</kw>
<status status="PASS" starttime="20210714 22:58:45.424" endtime="20210714 22:58:45.807"/>
</kw>
<msg timestamp="20210714 22:58:45.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:45.424" endtime="20210714 22:58:45.807"/>
</kw>
<msg timestamp="20210714 22:58:45.807" level="INFO">${output} =                            PRE dir1/
2021-07-14 22:58:42         29 testfile</msg>
<status status="PASS" starttime="20210714 22:58:45.423" endtime="20210714 22:58:45.807"/>
</kw>
<msg timestamp="20210714 22:58:45.807" level="INFO">${result} =                            PRE dir1/
2021-07-14 22:58:42         29 testfile</msg>
<status status="PASS" starttime="20210714 22:58:45.423" endtime="20210714 22:58:45.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:45.808" endtime="20210714 22:58:45.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:45.808" endtime="20210714 22:58:45.808"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:45.809" endtime="20210714 22:58:45.809"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:45.813" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-51447/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:46.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:46.197" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:58:45.811" endtime="20210714 22:58:46.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:46.198" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:58:46.198" endtime="20210714 22:58:46.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:46.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:46.199" endtime="20210714 22:58:46.199"/>
</kw>
<status status="PASS" starttime="20210714 22:58:45.810" endtime="20210714 22:58:46.199"/>
</kw>
<msg timestamp="20210714 22:58:46.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:45.810" endtime="20210714 22:58:46.200"/>
</kw>
<msg timestamp="20210714 22:58:46.200" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:58:45.810" endtime="20210714 22:58:46.200"/>
</kw>
<msg timestamp="20210714 22:58:46.200" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210714 22:58:45.809" endtime="20210714 22:58:46.200"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:46.200" endtime="20210714 22:58:46.201"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:46.201" endtime="20210714 22:58:46.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:46.201" endtime="20210714 22:58:46.202"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:46.206" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-51447/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:46.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:46.591" level="INFO">${output} = 2021-07-14 22:58:45         29 file</msg>
<status status="PASS" starttime="20210714 22:58:46.204" endtime="20210714 22:58:46.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:46.592" level="INFO">2021-07-14 22:58:45         29 file</msg>
<status status="PASS" starttime="20210714 22:58:46.591" endtime="20210714 22:58:46.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:46.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:46.592" endtime="20210714 22:58:46.593"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.203" endtime="20210714 22:58:46.593"/>
</kw>
<msg timestamp="20210714 22:58:46.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:46.203" endtime="20210714 22:58:46.593"/>
</kw>
<msg timestamp="20210714 22:58:46.594" level="INFO">${output} = 2021-07-14 22:58:45         29 file</msg>
<status status="PASS" starttime="20210714 22:58:46.202" endtime="20210714 22:58:46.594"/>
</kw>
<msg timestamp="20210714 22:58:46.594" level="INFO">${result} = 2021-07-14 22:58:45         29 file</msg>
<status status="PASS" starttime="20210714 22:58:46.202" endtime="20210714 22:58:46.594"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:46.594" endtime="20210714 22:58:46.594"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:46.594" endtime="20210714 22:58:46.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:46.595" endtime="20210714 22:58:46.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:39.402" endtime="20210714 22:58:46.595"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:58:37.367" endtime="20210714 22:58:46.597"/>
</suite>
<suite id="s1-s14-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:46.611" level="INFO">${random} = 60122</msg>
<status status="PASS" starttime="20210714 22:58:46.610" endtime="20210714 22:58:46.611"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:46.612" level="INFO">${PREFIX} = 60122</msg>
<status status="PASS" starttime="20210714 22:58:46.611" endtime="20210714 22:58:46.612"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.610" endtime="20210714 22:58:46.612"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.610" endtime="20210714 22:58:46.612"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:46.615" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:46.617" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:46.617" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:46.613" endtime="20210714 22:58:46.617"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:46.617" endtime="20210714 22:58:46.618"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:46.619" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:46.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:46.736" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:46.618" endtime="20210714 22:58:46.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:46.741" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:47.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:47.091" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:46.739" endtime="20210714 22:58:47.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:47.093" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:47.092" endtime="20210714 22:58:47.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:47.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:47.093" endtime="20210714 22:58:47.094"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.739" endtime="20210714 22:58:47.094"/>
</kw>
<msg timestamp="20210714 22:58:47.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:46.739" endtime="20210714 22:58:47.094"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.738" endtime="20210714 22:58:47.094"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.738" endtime="20210714 22:58:47.095"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.737" endtime="20210714 22:58:47.095"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.613" endtime="20210714 22:58:47.095"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.613" endtime="20210714 22:58:47.095"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:47.096" endtime="20210714 22:58:47.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:47.096" endtime="20210714 22:58:47.097"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:47.100" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:47.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:47.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:47.099" endtime="20210714 22:58:47.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:47.382" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:47.381" endtime="20210714 22:58:47.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:47.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:47.382" endtime="20210714 22:58:47.383"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.098" endtime="20210714 22:58:47.383"/>
</kw>
<msg timestamp="20210714 22:58:47.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:47.098" endtime="20210714 22:58:47.383"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.098" endtime="20210714 22:58:47.383"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:47.387" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:47.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:47.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:47.385" endtime="20210714 22:58:47.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:47.668" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:47.668" endtime="20210714 22:58:47.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:47.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:47.669" endtime="20210714 22:58:47.669"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.384" endtime="20210714 22:58:47.670"/>
</kw>
<msg timestamp="20210714 22:58:47.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:47.384" endtime="20210714 22:58:47.670"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.383" endtime="20210714 22:58:47.670"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:47.673" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:47.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:47.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:47.671" endtime="20210714 22:58:47.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:47.958" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:47.958" endtime="20210714 22:58:47.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:47.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:47.958" endtime="20210714 22:58:47.959"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.671" endtime="20210714 22:58:47.959"/>
</kw>
<msg timestamp="20210714 22:58:47.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:47.670" endtime="20210714 22:58:47.960"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.670" endtime="20210714 22:58:47.960"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:47.963" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:48.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:48.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:47.961" endtime="20210714 22:58:48.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:48.241" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:48.240" endtime="20210714 22:58:48.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:48.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:48.241" endtime="20210714 22:58:48.242"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.961" endtime="20210714 22:58:48.242"/>
</kw>
<msg timestamp="20210714 22:58:48.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:47.960" endtime="20210714 22:58:48.242"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.960" endtime="20210714 22:58:48.242"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.097" endtime="20210714 22:58:48.242"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.097" endtime="20210714 22:58:48.243"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.096" endtime="20210714 22:58:48.243"/>
</kw>
<status status="PASS" starttime="20210714 22:58:47.095" endtime="20210714 22:58:48.243"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:48.244" level="INFO">${postfix} = 82452</msg>
<status status="PASS" starttime="20210714 22:58:48.244" endtime="20210714 22:58:48.244"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:48.245" level="INFO">${bucket} = bucket-82452</msg>
<status status="PASS" starttime="20210714 22:58:48.244" endtime="20210714 22:58:48.245"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:48.248" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-82452 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:48.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:48.637" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-82452"
}</msg>
<status status="PASS" starttime="20210714 22:58:48.246" endtime="20210714 22:58:48.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:48.638" level="INFO">{
    "Location": "http://s3g:9878/bucket-82452"
}</msg>
<status status="PASS" starttime="20210714 22:58:48.637" endtime="20210714 22:58:48.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:48.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:48.638" endtime="20210714 22:58:48.639"/>
</kw>
<status status="PASS" starttime="20210714 22:58:48.246" endtime="20210714 22:58:48.639"/>
</kw>
<msg timestamp="20210714 22:58:48.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:48.246" endtime="20210714 22:58:48.639"/>
</kw>
<msg timestamp="20210714 22:58:48.640" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-82452"
}</msg>
<status status="PASS" starttime="20210714 22:58:48.245" endtime="20210714 22:58:48.640"/>
</kw>
<msg timestamp="20210714 22:58:48.640" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-82452"
}</msg>
<status status="PASS" starttime="20210714 22:58:48.245" endtime="20210714 22:58:48.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:48.640" endtime="20210714 22:58:48.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:48.640" endtime="20210714 22:58:48.641"/>
</kw>
<status status="PASS" starttime="20210714 22:58:48.245" endtime="20210714 22:58:48.641"/>
</kw>
<status status="PASS" starttime="20210714 22:58:48.243" endtime="20210714 22:58:48.641"/>
</kw>
<msg timestamp="20210714 22:58:48.641" level="INFO">${BUCKET} = bucket-82452</msg>
<status status="PASS" starttime="20210714 22:58:48.243" endtime="20210714 22:58:48.641"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:48.642" level="INFO">${BUCKET} = bucket-82452</msg>
<status status="PASS" starttime="20210714 22:58:48.641" endtime="20210714 22:58:48.642"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:48.642" endtime="20210714 22:58:48.642"/>
</kw>
<status status="PASS" starttime="20210714 22:58:46.610" endtime="20210714 22:58:48.642"/>
</kw>
<test id="s1-s14-s2-t1" name="Bobo3 Client Test">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 /opt/hadoop/smoketest/s3/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:48.647" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 bucket-82452 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:53.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:53.308" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20210714 22:58:48.645" endtime="20210714 22:58:53.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:53.309" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': 'efde468e-d4f4-4953-8f5d-df2a6a4151a9', 'HostId': 'qdVwTo1g', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:48 GMT, Wed, 14 Jul 2021 22:58:48 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:48 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/boto-bucket999', 'server': 'Ozone', 'x-amz-id-2': 'qdVwTo1g', 'x-amz-request-id': 'efde468e-d4f4-4953-8f5d-df2a6a4151a9', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/boto-bucket999'}
None
None
None
{'ResponseMetadata': {'RequestId': '99b7918e-4e42-4b34-bf3e-8f716b93312a', 'HostId': 'P1sPrJZtuP6Z', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/bucket-hfocycghgj', 'server': 'Ozone', 'x-amz-id-2': 'P1sPrJZtuP6Z', 'x-amz-request-id': '99b7918e-4e42-4b34-bf3e-8f716b93312a', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-hfocycghgj'}
{'ResponseMetadata': {'RequestId': '355b1e90-9b78-47e5-ac50-0db0e5dbb9da', 'HostId': 'HxvMZHqGA', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'HxvMZHqGA', 'x-amz-request-id': '355b1e90-9b78-47e5-ac50-0db0e5dbb9da', 'content-length': '1034'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'boto-bucket999', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 58, 48, 973000, tzinfo=tzlocal())}, {'Name': 'bucket-21154', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 56, 28, 703000, tzinfo=tzlocal())}, {'Name': 'bucket-24539', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 58, 37, 321000, tzinfo=tzlocal())}, {'Name': 'bucket-51447', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 58, 39, 357000, tzinfo=tzlocal())}, {'Name': 'bucket-82452', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 58, 48, 599000, tzinfo=tzlocal())}, {'Name': 'bucket-ffqzvbfhgt', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 56, 22, 12000, tzinfo=tzlocal())}, {'Name': 'bucket-hfocycghgj', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 58, 52, 270000, tzinfo=tzlocal())}, {'Name': 'destbucket-62129', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 57, 49, 617000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2021, 7, 14, 22, 56, 6, 37000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '03f5a652-7565-4903-942b-75476a7d4d9a', 'HostId': 'gr1kfTD5gOwy', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'gr1kfTD5gOwy', 'x-amz-request-id': '03f5a652-7565-4903-942b-75476a7d4d9a', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '7d22401f-b0c3-4abc-a8e2-a4c935b80140', 'HostId': 'WTDG2kKQJynBJM3', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'WTDG2kKQJynBJM3', 'x-amz-request-id': '7d22401f-b0c3-4abc-a8e2-a4c935b80140'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'ed67ee7c-160a-4245-92f1-9ca0066b7e3e', 'HostId': 'e4DI5qBKKkpCF3y', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'etag': '2021-07-14T22:58:52.365Z', 'last-modified': 'Wed, 14 Jul 2021 22:58:52 GMT', 'server': 'Ozone', 'x-amz-id-2': 'e4DI5qBKKkpCF3y', 'x-amz-request-id': 'ed67ee7c-160a-4245-92f1-9ca0066b7e3e', 'content-length': '3811'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2021, 7, 14, 22, 58, 52, tzinfo=tzutc()), 'ContentLength': 3811, 'ETag': '2021-07-14T22:58:52.365Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2021, 7, 14, 22, 58, 52, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'e7258890-7905-4a3f-b25a-d605f56416d7', 'HostId': 'DCPJKllhM76', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'DCPJKllhM76', 'x-amz-request-id': 'e7258890-7905-4a3f-b25a-d605f56416d7', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '59871c24-afdb-4213-bbfe-dfa8d6a31bcc', 'HostId': 'snNYwXkkpM', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'etag': '2021-07-14T22:58:49.145Z', 'last-modified': 'Wed, 14 Jul 2021 22:58:49 GMT', 'server': 'Ozone', 'x-amz-id-2': 'snNYwXkkpM', 'x-amz-request-id': '59871c24-afdb-4213-bbfe-dfa8d6a31bcc', 'content-length': '3811'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2021, 7, 14, 22, 58, 49, tzinfo=tzutc()), 'ContentLength': 3811, 'ETag': '2021-07-14T22:58:49.145Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2021, 7, 14, 22, 58, 52, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '783c2210-8ac9-4b75-9a0f-4aaacf5bfd0b', 'HostId': 'rzjMLI3F00T', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:52 GMT, Wed, 14 Jul 2021 22:58:52 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:52 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'rzjMLI3F00T', 'x-amz-request-id': '783c2210-8ac9-4b75-9a0f-4aaacf5bfd0b', 'content-length': '292'}, 'RetryAttempts': 0}, 'Bucket': 'bucket-82452', 'Key': 'isvtowfxwp', 'UploadId': 'ba5e4ea1-36da-42b8-9ec3-7c2b2ba7869e-106581428307165407'}
{'ResponseMetadata': {'RequestId': '0afab12c-3fce-4d86-8fea-8ede81e0ebff', 'HostId': 'JU5rqH1FYoDFVD', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 14 Jul 2021 22:58:53 GMT, Wed, 14 Jul 2021 22:58:53 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 14 Jul 2021 22:58:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'JU5rqH1FYoDFVD', 'x-amz-request-id': '0afab12c-3fce-4d86-8fea-8ede81e0ebff', 'content-length': '326'}, 'RetryAttempts': 0}, 'Location': 'bucket-82452', 'Bucket': 'bucket-82452', 'Key': 'isvtowfxwp', 'ETag': '22553823b5846cebfd8ca819daef39fc41a1b9e04314fa5f3b55147b64fbf1c7'}ok

----------------------------------------------------------------------
Ran 9 tests in 4.433s

OK

Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20210714 22:58:53.308" endtime="20210714 22:58:53.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:53.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:53.310" endtime="20210714 22:58:53.310"/>
</kw>
<status status="PASS" starttime="20210714 22:58:48.644" endtime="20210714 22:58:53.311"/>
</kw>
<msg timestamp="20210714 22:58:53.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:48.644" endtime="20210714 22:58:53.311"/>
</kw>
<msg timestamp="20210714 22:58:53.311" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20210714 22:58:48.643" endtime="20210714 22:58:53.311"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20210714 22:58:48.643" endtime="20210714 22:58:53.312"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20210714 22:58:46.598" endtime="20210714 22:58:53.313"/>
</suite>
<suite id="s1-s14-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:53.323" level="INFO">${random} = 05989</msg>
<status status="PASS" starttime="20210714 22:58:53.323" endtime="20210714 22:58:53.323"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:53.325" level="INFO">${PREFIX} = 05989</msg>
<status status="PASS" starttime="20210714 22:58:53.323" endtime="20210714 22:58:53.325"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.323" endtime="20210714 22:58:53.325"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.322" endtime="20210714 22:58:53.325"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:53.327" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:53.329" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:53.329" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:53.325" endtime="20210714 22:58:53.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:53.330" endtime="20210714 22:58:53.330"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:53.332" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:53.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:53.449" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:53.330" endtime="20210714 22:58:53.449"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:53.454" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:53.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:53.799" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:53.452" endtime="20210714 22:58:53.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:53.802" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:53.799" endtime="20210714 22:58:53.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:53.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:53.802" endtime="20210714 22:58:53.802"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.451" endtime="20210714 22:58:53.803"/>
</kw>
<msg timestamp="20210714 22:58:53.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:53.451" endtime="20210714 22:58:53.803"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.451" endtime="20210714 22:58:53.803"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.450" endtime="20210714 22:58:53.803"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.450" endtime="20210714 22:58:53.803"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.325" endtime="20210714 22:58:53.803"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.325" endtime="20210714 22:58:53.803"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:53.804" endtime="20210714 22:58:53.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:53.805" endtime="20210714 22:58:53.805"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:53.808" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:54.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:54.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:53.806" endtime="20210714 22:58:54.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:54.087" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:54.087" endtime="20210714 22:58:54.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:54.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:54.087" endtime="20210714 22:58:54.088"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.806" endtime="20210714 22:58:54.088"/>
</kw>
<msg timestamp="20210714 22:58:54.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:53.806" endtime="20210714 22:58:54.088"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.806" endtime="20210714 22:58:54.089"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:54.092" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:54.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:54.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:54.090" endtime="20210714 22:58:54.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:54.370" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:54.370" endtime="20210714 22:58:54.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:54.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:54.370" endtime="20210714 22:58:54.371"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.089" endtime="20210714 22:58:54.371"/>
</kw>
<msg timestamp="20210714 22:58:54.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:54.089" endtime="20210714 22:58:54.371"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.089" endtime="20210714 22:58:54.371"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:54.375" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:54.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:54.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:54.373" endtime="20210714 22:58:54.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:54.653" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:54.652" endtime="20210714 22:58:54.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:54.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:54.653" endtime="20210714 22:58:54.654"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.372" endtime="20210714 22:58:54.654"/>
</kw>
<msg timestamp="20210714 22:58:54.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:54.372" endtime="20210714 22:58:54.654"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.372" endtime="20210714 22:58:54.654"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:54.658" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:54.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:54.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:54.656" endtime="20210714 22:58:54.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:54.938" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:54.937" endtime="20210714 22:58:54.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:54.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:54.938" endtime="20210714 22:58:54.938"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.655" endtime="20210714 22:58:54.939"/>
</kw>
<msg timestamp="20210714 22:58:54.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:54.655" endtime="20210714 22:58:54.939"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.655" endtime="20210714 22:58:54.939"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.805" endtime="20210714 22:58:54.939"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.805" endtime="20210714 22:58:54.939"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.804" endtime="20210714 22:58:54.939"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.803" endtime="20210714 22:58:54.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:54.941" level="INFO">${postfix} = 30135</msg>
<status status="PASS" starttime="20210714 22:58:54.940" endtime="20210714 22:58:54.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:54.941" level="INFO">${bucket} = bucket-30135</msg>
<status status="PASS" starttime="20210714 22:58:54.941" endtime="20210714 22:58:54.941"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:54.945" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-30135 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:55.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:55.331" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:54.943" endtime="20210714 22:58:55.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:55.332" level="INFO">{
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.331" endtime="20210714 22:58:55.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:55.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:55.332" endtime="20210714 22:58:55.333"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.943" endtime="20210714 22:58:55.333"/>
</kw>
<msg timestamp="20210714 22:58:55.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:54.942" endtime="20210714 22:58:55.333"/>
</kw>
<msg timestamp="20210714 22:58:55.333" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:54.942" endtime="20210714 22:58:55.333"/>
</kw>
<msg timestamp="20210714 22:58:55.334" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:54.942" endtime="20210714 22:58:55.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:55.334" endtime="20210714 22:58:55.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:55.334" endtime="20210714 22:58:55.335"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.941" endtime="20210714 22:58:55.335"/>
</kw>
<status status="PASS" starttime="20210714 22:58:54.940" endtime="20210714 22:58:55.335"/>
</kw>
<msg timestamp="20210714 22:58:55.335" level="INFO">${BUCKET} = bucket-30135</msg>
<status status="PASS" starttime="20210714 22:58:54.940" endtime="20210714 22:58:55.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:55.336" level="INFO">${BUCKET} = bucket-30135</msg>
<status status="PASS" starttime="20210714 22:58:55.335" endtime="20210714 22:58:55.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:55.336" endtime="20210714 22:58:55.336"/>
</kw>
<status status="PASS" starttime="20210714 22:58:53.322" endtime="20210714 22:58:55.336"/>
</kw>
<test id="s1-s14-s3-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:55.339" level="INFO">${postfix} = 36306</msg>
<status status="PASS" starttime="20210714 22:58:55.338" endtime="20210714 22:58:55.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:55.339" level="INFO">${bucket} = bucket-36306</msg>
<status status="PASS" starttime="20210714 22:58:55.339" endtime="20210714 22:58:55.339"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:55.343" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-36306 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:55.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:55.735" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-36306"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.342" endtime="20210714 22:58:55.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:55.736" level="INFO">{
    "Location": "http://s3g:9878/bucket-36306"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.735" endtime="20210714 22:58:55.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:55.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:55.736" endtime="20210714 22:58:55.737"/>
</kw>
<status status="PASS" starttime="20210714 22:58:55.341" endtime="20210714 22:58:55.737"/>
</kw>
<msg timestamp="20210714 22:58:55.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:55.341" endtime="20210714 22:58:55.737"/>
</kw>
<msg timestamp="20210714 22:58:55.738" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-36306"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.340" endtime="20210714 22:58:55.738"/>
</kw>
<msg timestamp="20210714 22:58:55.738" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-36306"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.340" endtime="20210714 22:58:55.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:55.738" endtime="20210714 22:58:55.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:55.739" endtime="20210714 22:58:55.739"/>
</kw>
<status status="PASS" starttime="20210714 22:58:55.339" endtime="20210714 22:58:55.739"/>
</kw>
<status status="PASS" starttime="20210714 22:58:55.337" endtime="20210714 22:58:55.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:55.336" endtime="20210714 22:58:55.740"/>
</test>
<test id="s1-s14-s3-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arg>${BUCKET}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:55.745" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-30135 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:56.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:56.138" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.743" endtime="20210714 22:58:56.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:56.139" level="INFO">{
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:56.138" endtime="20210714 22:58:56.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:56.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:56.139" endtime="20210714 22:58:56.140"/>
</kw>
<status status="PASS" starttime="20210714 22:58:55.743" endtime="20210714 22:58:56.140"/>
</kw>
<msg timestamp="20210714 22:58:56.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:55.742" endtime="20210714 22:58:56.140"/>
</kw>
<msg timestamp="20210714 22:58:56.140" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.742" endtime="20210714 22:58:56.140"/>
</kw>
<msg timestamp="20210714 22:58:56.141" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-30135"
}</msg>
<status status="PASS" starttime="20210714 22:58:55.742" endtime="20210714 22:58:56.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:56.141" endtime="20210714 22:58:56.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:56.141" endtime="20210714 22:58:56.142"/>
</kw>
<status status="PASS" starttime="20210714 22:58:55.741" endtime="20210714 22:58:56.142"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:55.740" endtime="20210714 22:58:56.142"/>
</test>
<test id="s1-s14-s3-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:56.149" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:56.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:56.533" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:58:56.145" endtime="20210714 22:58:56.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:56.534" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:58:56.533" endtime="20210714 22:58:56.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:56.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:56.534" endtime="20210714 22:58:56.535"/>
</kw>
<msg timestamp="20210714 22:58:56.535" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:58:56.145" endtime="20210714 22:58:56.535"/>
</kw>
<msg timestamp="20210714 22:58:56.536" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210714 22:58:56.144" endtime="20210714 22:58:56.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:56.536" endtime="20210714 22:58:56.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:56.143" endtime="20210714 22:58:56.537"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:58:53.314" endtime="20210714 22:58:56.538"/>
</suite>
<suite id="s1-s14-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:56.548" level="INFO">${random} = 85545</msg>
<status status="PASS" starttime="20210714 22:58:56.548" endtime="20210714 22:58:56.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:56.550" level="INFO">${PREFIX} = 85545</msg>
<status status="PASS" starttime="20210714 22:58:56.548" endtime="20210714 22:58:56.550"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.548" endtime="20210714 22:58:56.550"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.547" endtime="20210714 22:58:56.550"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:56.552" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:56.554" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:56.554" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:56.551" endtime="20210714 22:58:56.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:56.555" endtime="20210714 22:58:56.555"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:56.557" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:56.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:56.673" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:56.555" endtime="20210714 22:58:56.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:56.678" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:57.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:57.026" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:56.676" endtime="20210714 22:58:57.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:57.027" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:58:57.027" endtime="20210714 22:58:57.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:57.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:57.028" endtime="20210714 22:58:57.028"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.675" endtime="20210714 22:58:57.028"/>
</kw>
<msg timestamp="20210714 22:58:57.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:56.675" endtime="20210714 22:58:57.029"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.675" endtime="20210714 22:58:57.029"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.674" endtime="20210714 22:58:57.029"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.674" endtime="20210714 22:58:57.029"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.550" endtime="20210714 22:58:57.029"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.550" endtime="20210714 22:58:57.029"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:57.030" endtime="20210714 22:58:57.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:57.031" endtime="20210714 22:58:57.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:57.034" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:57.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:57.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:57.033" endtime="20210714 22:58:57.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:57.314" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:57.314" endtime="20210714 22:58:57.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:57.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:57.315" endtime="20210714 22:58:57.315"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.032" endtime="20210714 22:58:57.315"/>
</kw>
<msg timestamp="20210714 22:58:57.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:57.032" endtime="20210714 22:58:57.316"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.032" endtime="20210714 22:58:57.316"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:57.319" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:57.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:57.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:57.317" endtime="20210714 22:58:57.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:57.598" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:57.597" endtime="20210714 22:58:57.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:57.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:57.598" endtime="20210714 22:58:57.599"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.317" endtime="20210714 22:58:57.599"/>
</kw>
<msg timestamp="20210714 22:58:57.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:57.316" endtime="20210714 22:58:57.599"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.316" endtime="20210714 22:58:57.599"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:57.603" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:57.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:57.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:57.601" endtime="20210714 22:58:57.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:57.882" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:57.882" endtime="20210714 22:58:57.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:57.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:57.883" endtime="20210714 22:58:57.883"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.600" endtime="20210714 22:58:57.883"/>
</kw>
<msg timestamp="20210714 22:58:57.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:57.600" endtime="20210714 22:58:57.884"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.600" endtime="20210714 22:58:57.884"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:57.887" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:58.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:58.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:57.885" endtime="20210714 22:58:58.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:58.170" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:58.170" endtime="20210714 22:58:58.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:58.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:58.170" endtime="20210714 22:58:58.171"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.884" endtime="20210714 22:58:58.171"/>
</kw>
<msg timestamp="20210714 22:58:58.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:57.884" endtime="20210714 22:58:58.171"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.884" endtime="20210714 22:58:58.172"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.031" endtime="20210714 22:58:58.172"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.031" endtime="20210714 22:58:58.172"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.030" endtime="20210714 22:58:58.172"/>
</kw>
<status status="PASS" starttime="20210714 22:58:57.029" endtime="20210714 22:58:58.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:58.174" level="INFO">${postfix} = 40946</msg>
<status status="PASS" starttime="20210714 22:58:58.173" endtime="20210714 22:58:58.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:58.174" level="INFO">${bucket} = bucket-40946</msg>
<status status="PASS" starttime="20210714 22:58:58.174" endtime="20210714 22:58:58.174"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:58.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-40946 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:58.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:58.568" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-40946"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.176" endtime="20210714 22:58:58.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:58.570" level="INFO">{
    "Location": "http://s3g:9878/bucket-40946"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.569" endtime="20210714 22:58:58.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:58.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:58.570" endtime="20210714 22:58:58.570"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.175" endtime="20210714 22:58:58.571"/>
</kw>
<msg timestamp="20210714 22:58:58.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:58.175" endtime="20210714 22:58:58.571"/>
</kw>
<msg timestamp="20210714 22:58:58.571" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-40946"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.175" endtime="20210714 22:58:58.571"/>
</kw>
<msg timestamp="20210714 22:58:58.571" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-40946"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.174" endtime="20210714 22:58:58.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:58.571" endtime="20210714 22:58:58.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:58.572" endtime="20210714 22:58:58.572"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.174" endtime="20210714 22:58:58.572"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.173" endtime="20210714 22:58:58.573"/>
</kw>
<msg timestamp="20210714 22:58:58.573" level="INFO">${BUCKET} = bucket-40946</msg>
<status status="PASS" starttime="20210714 22:58:58.172" endtime="20210714 22:58:58.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:58.573" level="INFO">${BUCKET} = bucket-40946</msg>
<status status="PASS" starttime="20210714 22:58:58.573" endtime="20210714 22:58:58.573"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:58.573" endtime="20210714 22:58:58.574"/>
</kw>
<status status="PASS" starttime="20210714 22:58:56.547" endtime="20210714 22:58:58.574"/>
</kw>
<test id="s1-s14-s4-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:58.577" level="INFO">${postfix} = 14198</msg>
<status status="PASS" starttime="20210714 22:58:58.576" endtime="20210714 22:58:58.577"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:58:58.578" level="INFO">${bucket} = bucket-14198</msg>
<status status="PASS" starttime="20210714 22:58:58.577" endtime="20210714 22:58:58.578"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:58.582" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-14198 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:58.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:58.968" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-14198"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.580" endtime="20210714 22:58:58.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:58.970" level="INFO">{
    "Location": "http://s3g:9878/bucket-14198"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.969" endtime="20210714 22:58:58.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:58.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:58.970" endtime="20210714 22:58:58.971"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.579" endtime="20210714 22:58:58.971"/>
</kw>
<msg timestamp="20210714 22:58:58.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:58.579" endtime="20210714 22:58:58.971"/>
</kw>
<msg timestamp="20210714 22:58:58.971" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-14198"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.579" endtime="20210714 22:58:58.971"/>
</kw>
<msg timestamp="20210714 22:58:58.972" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-14198"
}</msg>
<status status="PASS" starttime="20210714 22:58:58.578" endtime="20210714 22:58:58.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:58.972" endtime="20210714 22:58:58.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:58.972" endtime="20210714 22:58:58.973"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.578" endtime="20210714 22:58:58.973"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.576" endtime="20210714 22:58:58.973"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.576" endtime="20210714 22:58:58.973"/>
</kw>
<msg timestamp="20210714 22:58:58.973" level="INFO">${bucket} = bucket-14198</msg>
<status status="PASS" starttime="20210714 22:58:58.575" endtime="20210714 22:58:58.973"/>
</kw>
<msg timestamp="20210714 22:58:58.973" level="INFO">${bucket} = bucket-14198</msg>
<status status="PASS" starttime="20210714 22:58:58.575" endtime="20210714 22:58:58.974"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:58.978" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-14198 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:59.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:59.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:58.975" endtime="20210714 22:58:59.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:59.364" level="INFO"/>
<status status="PASS" starttime="20210714 22:58:59.363" endtime="20210714 22:58:59.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:59.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:59.364" endtime="20210714 22:58:59.365"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.975" endtime="20210714 22:58:59.365"/>
</kw>
<msg timestamp="20210714 22:58:59.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:58.975" endtime="20210714 22:58:59.365"/>
</kw>
<msg timestamp="20210714 22:58:59.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:58:58.974" endtime="20210714 22:58:59.366"/>
</kw>
<status status="PASS" starttime="20210714 22:58:58.974" endtime="20210714 22:58:59.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:58.574" endtime="20210714 22:58:59.366"/>
</test>
<test id="s1-s14-s4-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:59.371" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:59.767" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:58:59.767" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:59.369" endtime="20210714 22:58:59.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:58:59.768" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:59.767" endtime="20210714 22:58:59.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:58:59.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:58:59.768" endtime="20210714 22:58:59.769"/>
</kw>
<msg timestamp="20210714 22:58:59.769" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:59.368" endtime="20210714 22:58:59.769"/>
</kw>
<msg timestamp="20210714 22:58:59.770" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:58:59.367" endtime="20210714 22:58:59.770"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:58:59.770" endtime="20210714 22:58:59.770"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:58:59.367" endtime="20210714 22:58:59.770"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:58:56.539" endtime="20210714 22:58:59.772"/>
</suite>
<suite id="s1-s14-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:58:59.782" level="INFO">${random} = 05843</msg>
<status status="PASS" starttime="20210714 22:58:59.781" endtime="20210714 22:58:59.782"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:58:59.783" level="INFO">${PREFIX} = 05843</msg>
<status status="PASS" starttime="20210714 22:58:59.782" endtime="20210714 22:58:59.783"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.781" endtime="20210714 22:58:59.784"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.781" endtime="20210714 22:58:59.784"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:59.786" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:59.788" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:58:59.788" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:58:59.784" endtime="20210714 22:58:59.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:58:59.788" endtime="20210714 22:58:59.789"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:59.790" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:58:59.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:58:59.909" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:58:59.789" endtime="20210714 22:58:59.909"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:58:59.914" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:00.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:00.259" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:58:59.912" endtime="20210714 22:59:00.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:00.260" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:59:00.260" endtime="20210714 22:59:00.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:00.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:00.260" endtime="20210714 22:59:00.261"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.912" endtime="20210714 22:59:00.261"/>
</kw>
<msg timestamp="20210714 22:59:00.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:58:59.911" endtime="20210714 22:59:00.261"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.911" endtime="20210714 22:59:00.262"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.911" endtime="20210714 22:59:00.262"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.910" endtime="20210714 22:59:00.262"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.784" endtime="20210714 22:59:00.262"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.784" endtime="20210714 22:59:00.262"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:00.263" endtime="20210714 22:59:00.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:00.263" endtime="20210714 22:59:00.264"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:00.268" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:00.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:00.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:00.266" endtime="20210714 22:59:00.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:00.547" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:00.547" endtime="20210714 22:59:00.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:00.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:00.548" endtime="20210714 22:59:00.548"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.265" endtime="20210714 22:59:00.549"/>
</kw>
<msg timestamp="20210714 22:59:00.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:00.265" endtime="20210714 22:59:00.549"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.265" endtime="20210714 22:59:00.549"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:00.552" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:00.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:00.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:00.550" endtime="20210714 22:59:00.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:00.833" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:00.833" endtime="20210714 22:59:00.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:00.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:00.834" endtime="20210714 22:59:00.834"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.550" endtime="20210714 22:59:00.834"/>
</kw>
<msg timestamp="20210714 22:59:00.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:00.550" endtime="20210714 22:59:00.835"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.549" endtime="20210714 22:59:00.835"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:00.839" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:01.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:01.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:00.836" endtime="20210714 22:59:01.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:01.116" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:01.116" endtime="20210714 22:59:01.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:01.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:01.116" endtime="20210714 22:59:01.117"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.836" endtime="20210714 22:59:01.117"/>
</kw>
<msg timestamp="20210714 22:59:01.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:00.836" endtime="20210714 22:59:01.117"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.835" endtime="20210714 22:59:01.118"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:01.121" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:01.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:01.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:01.119" endtime="20210714 22:59:01.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:01.401" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:01.401" endtime="20210714 22:59:01.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:01.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:01.401" endtime="20210714 22:59:01.402"/>
</kw>
<status status="PASS" starttime="20210714 22:59:01.118" endtime="20210714 22:59:01.402"/>
</kw>
<msg timestamp="20210714 22:59:01.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:01.118" endtime="20210714 22:59:01.402"/>
</kw>
<status status="PASS" starttime="20210714 22:59:01.118" endtime="20210714 22:59:01.403"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.264" endtime="20210714 22:59:01.403"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.264" endtime="20210714 22:59:01.403"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.263" endtime="20210714 22:59:01.403"/>
</kw>
<status status="PASS" starttime="20210714 22:59:00.262" endtime="20210714 22:59:01.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:01.404" level="INFO">${postfix} = 53021</msg>
<status status="PASS" starttime="20210714 22:59:01.404" endtime="20210714 22:59:01.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:59:01.405" level="INFO">${bucket} = bucket-53021</msg>
<status status="PASS" starttime="20210714 22:59:01.405" endtime="20210714 22:59:01.405"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:01.409" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-53021 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:01.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:01.805" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-53021"
}</msg>
<status status="PASS" starttime="20210714 22:59:01.407" endtime="20210714 22:59:01.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:01.806" level="INFO">{
    "Location": "http://s3g:9878/bucket-53021"
}</msg>
<status status="PASS" starttime="20210714 22:59:01.805" endtime="20210714 22:59:01.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:01.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:01.806" endtime="20210714 22:59:01.806"/>
</kw>
<status status="PASS" starttime="20210714 22:59:01.406" endtime="20210714 22:59:01.807"/>
</kw>
<msg timestamp="20210714 22:59:01.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:01.406" endtime="20210714 22:59:01.807"/>
</kw>
<msg timestamp="20210714 22:59:01.807" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-53021"
}</msg>
<status status="PASS" starttime="20210714 22:59:01.406" endtime="20210714 22:59:01.807"/>
</kw>
<msg timestamp="20210714 22:59:01.807" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-53021"
}</msg>
<status status="PASS" starttime="20210714 22:59:01.405" endtime="20210714 22:59:01.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:01.808" endtime="20210714 22:59:01.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:01.808" endtime="20210714 22:59:01.808"/>
</kw>
<status status="PASS" starttime="20210714 22:59:01.405" endtime="20210714 22:59:01.808"/>
</kw>
<status status="PASS" starttime="20210714 22:59:01.404" endtime="20210714 22:59:01.809"/>
</kw>
<msg timestamp="20210714 22:59:01.809" level="INFO">${BUCKET} = bucket-53021</msg>
<status status="PASS" starttime="20210714 22:59:01.403" endtime="20210714 22:59:01.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:01.809" level="INFO">${BUCKET} = bucket-53021</msg>
<status status="PASS" starttime="20210714 22:59:01.809" endtime="20210714 22:59:01.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:01.810" endtime="20210714 22:59:01.810"/>
</kw>
<status status="PASS" starttime="20210714 22:58:59.781" endtime="20210714 22:59:01.810"/>
</kw>
<test id="s1-s14-s5-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:01.815" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket bucket-53021 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:02.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:02.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:01.813" endtime="20210714 22:59:02.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:02.202" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:02.201" endtime="20210714 22:59:02.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:02.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:02.202" endtime="20210714 22:59:02.202"/>
</kw>
<status status="PASS" starttime="20210714 22:59:01.812" endtime="20210714 22:59:02.203"/>
</kw>
<msg timestamp="20210714 22:59:02.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:01.812" endtime="20210714 22:59:02.203"/>
</kw>
<msg timestamp="20210714 22:59:02.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:01.812" endtime="20210714 22:59:02.203"/>
</kw>
<msg timestamp="20210714 22:59:02.203" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:01.811" endtime="20210714 22:59:02.203"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:02.207" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:02.591" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:02.591" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:59:02.205" endtime="20210714 22:59:02.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:02.592" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:59:02.591" endtime="20210714 22:59:02.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:02.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:02.592" endtime="20210714 22:59:02.593"/>
</kw>
<msg timestamp="20210714 22:59:02.593" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:59:02.204" endtime="20210714 22:59:02.593"/>
</kw>
<msg timestamp="20210714 22:59:02.593" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210714 22:59:02.204" endtime="20210714 22:59:02.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:02.594" endtime="20210714 22:59:02.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:02.594" endtime="20210714 22:59:02.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:01.810" endtime="20210714 22:59:02.595"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:58:59.773" endtime="20210714 22:59:02.596"/>
</suite>
<suite id="s1-s14-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:02.607" level="INFO">${random} = 57019</msg>
<status status="PASS" starttime="20210714 22:59:02.606" endtime="20210714 22:59:02.607"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:02.608" level="INFO">${PREFIX} = 57019</msg>
<status status="PASS" starttime="20210714 22:59:02.607" endtime="20210714 22:59:02.608"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.606" endtime="20210714 22:59:02.608"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.606" endtime="20210714 22:59:02.608"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:02.611" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:02.613" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:59:02.613" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:59:02.609" endtime="20210714 22:59:02.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:02.613" endtime="20210714 22:59:02.614"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:02.615" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:02.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:02.733" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:59:02.614" endtime="20210714 22:59:02.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:02.737" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:03.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:03.085" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:59:02.735" endtime="20210714 22:59:03.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:03.086" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:59:03.085" endtime="20210714 22:59:03.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:03.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:03.086" endtime="20210714 22:59:03.087"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.735" endtime="20210714 22:59:03.087"/>
</kw>
<msg timestamp="20210714 22:59:03.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:02.735" endtime="20210714 22:59:03.087"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.734" endtime="20210714 22:59:03.087"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.734" endtime="20210714 22:59:03.087"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.733" endtime="20210714 22:59:03.088"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.609" endtime="20210714 22:59:03.088"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.608" endtime="20210714 22:59:03.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:03.089" endtime="20210714 22:59:03.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:03.089" endtime="20210714 22:59:03.090"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:03.093" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:03.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:03.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:03.092" endtime="20210714 22:59:03.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:03.371" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:03.371" endtime="20210714 22:59:03.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:03.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:03.372" endtime="20210714 22:59:03.372"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.091" endtime="20210714 22:59:03.372"/>
</kw>
<msg timestamp="20210714 22:59:03.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:03.091" endtime="20210714 22:59:03.373"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.090" endtime="20210714 22:59:03.373"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:03.376" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:03.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:03.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:03.374" endtime="20210714 22:59:03.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:03.655" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:03.655" endtime="20210714 22:59:03.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:03.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:03.655" endtime="20210714 22:59:03.656"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.374" endtime="20210714 22:59:03.656"/>
</kw>
<msg timestamp="20210714 22:59:03.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:03.373" endtime="20210714 22:59:03.656"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.373" endtime="20210714 22:59:03.657"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:03.660" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:03.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:03.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:03.658" endtime="20210714 22:59:03.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:03.939" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:03.938" endtime="20210714 22:59:03.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:03.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:03.939" endtime="20210714 22:59:03.940"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.657" endtime="20210714 22:59:03.940"/>
</kw>
<msg timestamp="20210714 22:59:03.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:03.657" endtime="20210714 22:59:03.940"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.657" endtime="20210714 22:59:03.940"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:03.943" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:04.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:04.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:03.942" endtime="20210714 22:59:04.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:04.229" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:04.228" endtime="20210714 22:59:04.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:04.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:04.229" endtime="20210714 22:59:04.230"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.941" endtime="20210714 22:59:04.230"/>
</kw>
<msg timestamp="20210714 22:59:04.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:03.941" endtime="20210714 22:59:04.230"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.940" endtime="20210714 22:59:04.231"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.090" endtime="20210714 22:59:04.231"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.090" endtime="20210714 22:59:04.231"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.088" endtime="20210714 22:59:04.231"/>
</kw>
<status status="PASS" starttime="20210714 22:59:03.088" endtime="20210714 22:59:04.231"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:04.232" level="INFO">${postfix} = 70972</msg>
<status status="PASS" starttime="20210714 22:59:04.232" endtime="20210714 22:59:04.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:59:04.233" level="INFO">${bucket} = bucket-70972</msg>
<status status="PASS" starttime="20210714 22:59:04.233" endtime="20210714 22:59:04.233"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:04.237" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-70972 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:04.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:04.627" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-70972"
}</msg>
<status status="PASS" starttime="20210714 22:59:04.235" endtime="20210714 22:59:04.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:04.628" level="INFO">{
    "Location": "http://s3g:9878/bucket-70972"
}</msg>
<status status="PASS" starttime="20210714 22:59:04.627" endtime="20210714 22:59:04.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:04.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:04.628" endtime="20210714 22:59:04.629"/>
</kw>
<status status="PASS" starttime="20210714 22:59:04.235" endtime="20210714 22:59:04.629"/>
</kw>
<msg timestamp="20210714 22:59:04.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:04.234" endtime="20210714 22:59:04.629"/>
</kw>
<msg timestamp="20210714 22:59:04.629" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-70972"
}</msg>
<status status="PASS" starttime="20210714 22:59:04.234" endtime="20210714 22:59:04.629"/>
</kw>
<msg timestamp="20210714 22:59:04.630" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-70972"
}</msg>
<status status="PASS" starttime="20210714 22:59:04.233" endtime="20210714 22:59:04.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:04.630" endtime="20210714 22:59:04.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:04.630" endtime="20210714 22:59:04.631"/>
</kw>
<status status="PASS" starttime="20210714 22:59:04.233" endtime="20210714 22:59:04.631"/>
</kw>
<status status="PASS" starttime="20210714 22:59:04.232" endtime="20210714 22:59:04.631"/>
</kw>
<msg timestamp="20210714 22:59:04.631" level="INFO">${BUCKET} = bucket-70972</msg>
<status status="PASS" starttime="20210714 22:59:04.231" endtime="20210714 22:59:04.631"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:04.632" level="INFO">${BUCKET} = bucket-70972</msg>
<status status="PASS" starttime="20210714 22:59:04.631" endtime="20210714 22:59:04.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:04.632" endtime="20210714 22:59:04.632"/>
</kw>
<status status="PASS" starttime="20210714 22:59:02.606" endtime="20210714 22:59:04.632"/>
</kw>
<test id="s1-s14-s6-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:04.637" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:05.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:05.032" level="INFO">${output} = bucket-21154
bucket-24539
bucket-30135
bucket-36306
bucket-40946
bucket-51447
bucket-53021
bucket-70972
bucket-82452
bucket-ffqzvbfhgt
bucket-hfocycghgj
destbucket-62129
link</msg>
<status status="PASS" starttime="20210714 22:59:04.635" endtime="20210714 22:59:05.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:05.033" level="INFO">bucket-21154
bucket-24539
bucket-30135
bucket-36306
bucket-40946
bucket-51447
bucket-53021
bucket-70972
bucket-82452
bucket-ffqzvbfhgt
bucket-hfocycghgj
destbucket-62129
link</msg>
<status status="PASS" starttime="20210714 22:59:05.033" endtime="20210714 22:59:05.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:05.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:05.034" endtime="20210714 22:59:05.034"/>
</kw>
<status status="PASS" starttime="20210714 22:59:04.634" endtime="20210714 22:59:05.035"/>
</kw>
<msg timestamp="20210714 22:59:05.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:04.634" endtime="20210714 22:59:05.035"/>
</kw>
<msg timestamp="20210714 22:59:05.035" level="INFO">${output} = bucket-21154
bucket-24539
bucket-30135
bucket-36306
bucket-40946
bucket-51447
bucket-53021
bucket-70972
bucket-82452
bucket-ffqzvbfhgt
bucket-hfocycghgj
destbucket-62129
link</msg>
<status status="PASS" starttime="20210714 22:59:04.634" endtime="20210714 22:59:05.035"/>
</kw>
<msg timestamp="20210714 22:59:05.036" level="INFO">${result} = bucket-21154
bucket-24539
bucket-30135
bucket-36306
bucket-40946
bucket-51447
bucket-53021
bucket-70972
bucket-82452
bucket-ffqzvbfhgt
bucket-hfocycghgj
destbucket-62129
link</msg>
<status status="PASS" starttime="20210714 22:59:04.633" endtime="20210714 22:59:05.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:05.036" endtime="20210714 22:59:05.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:04.632" endtime="20210714 22:59:05.036"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:59:02.597" endtime="20210714 22:59:05.037"/>
</suite>
<suite id="s1-s14-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:05.049" level="INFO">${random} = 70088</msg>
<status status="PASS" starttime="20210714 22:59:05.049" endtime="20210714 22:59:05.049"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:05.051" level="INFO">${PREFIX} = 70088</msg>
<status status="PASS" starttime="20210714 22:59:05.049" endtime="20210714 22:59:05.051"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.048" endtime="20210714 22:59:05.051"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.048" endtime="20210714 22:59:05.051"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:05.053" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:05.055" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:59:05.055" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:59:05.052" endtime="20210714 22:59:05.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:05.056" endtime="20210714 22:59:05.056"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:05.058" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:05.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:05.176" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:59:05.056" endtime="20210714 22:59:05.176"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:05.180" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:05.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:05.522" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:59:05.178" endtime="20210714 22:59:05.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:05.523" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:59:05.523" endtime="20210714 22:59:05.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:05.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:05.524" endtime="20210714 22:59:05.524"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.178" endtime="20210714 22:59:05.524"/>
</kw>
<msg timestamp="20210714 22:59:05.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:05.178" endtime="20210714 22:59:05.525"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.177" endtime="20210714 22:59:05.525"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.177" endtime="20210714 22:59:05.525"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.176" endtime="20210714 22:59:05.525"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.051" endtime="20210714 22:59:05.525"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.051" endtime="20210714 22:59:05.525"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:05.526" endtime="20210714 22:59:05.527"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:05.527" endtime="20210714 22:59:05.527"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:05.531" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:05.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:05.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:05.529" endtime="20210714 22:59:05.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:05.813" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:05.813" endtime="20210714 22:59:05.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:05.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:05.814" endtime="20210714 22:59:05.814"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.528" endtime="20210714 22:59:05.814"/>
</kw>
<msg timestamp="20210714 22:59:05.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:05.528" endtime="20210714 22:59:05.815"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.528" endtime="20210714 22:59:05.815"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:05.818" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:06.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:06.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:05.816" endtime="20210714 22:59:06.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:06.101" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:06.101" endtime="20210714 22:59:06.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:06.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:06.102" endtime="20210714 22:59:06.102"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.816" endtime="20210714 22:59:06.102"/>
</kw>
<msg timestamp="20210714 22:59:06.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:05.815" endtime="20210714 22:59:06.103"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.815" endtime="20210714 22:59:06.103"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:06.106" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:06.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:06.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:06.104" endtime="20210714 22:59:06.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:06.386" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:06.385" endtime="20210714 22:59:06.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:06.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:06.386" endtime="20210714 22:59:06.387"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.104" endtime="20210714 22:59:06.387"/>
</kw>
<msg timestamp="20210714 22:59:06.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:06.103" endtime="20210714 22:59:06.387"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.103" endtime="20210714 22:59:06.387"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:06.390" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:06.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:06.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:06.389" endtime="20210714 22:59:06.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:06.671" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:06.671" endtime="20210714 22:59:06.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:06.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:06.672" endtime="20210714 22:59:06.672"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.388" endtime="20210714 22:59:06.673"/>
</kw>
<msg timestamp="20210714 22:59:06.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:06.388" endtime="20210714 22:59:06.673"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.387" endtime="20210714 22:59:06.673"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.528" endtime="20210714 22:59:06.673"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.527" endtime="20210714 22:59:06.673"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.526" endtime="20210714 22:59:06.673"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.525" endtime="20210714 22:59:06.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:06.675" level="INFO">${postfix} = 54283</msg>
<status status="PASS" starttime="20210714 22:59:06.674" endtime="20210714 22:59:06.675"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:59:06.675" level="INFO">${bucket} = bucket-54283</msg>
<status status="PASS" starttime="20210714 22:59:06.675" endtime="20210714 22:59:06.675"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:06.679" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-54283 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:07.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:07.070" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-54283"
}</msg>
<status status="PASS" starttime="20210714 22:59:06.677" endtime="20210714 22:59:07.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:07.071" level="INFO">{
    "Location": "http://s3g:9878/bucket-54283"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.070" endtime="20210714 22:59:07.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:07.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:07.071" endtime="20210714 22:59:07.071"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.677" endtime="20210714 22:59:07.072"/>
</kw>
<msg timestamp="20210714 22:59:07.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:06.676" endtime="20210714 22:59:07.072"/>
</kw>
<msg timestamp="20210714 22:59:07.072" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-54283"
}</msg>
<status status="PASS" starttime="20210714 22:59:06.676" endtime="20210714 22:59:07.072"/>
</kw>
<msg timestamp="20210714 22:59:07.072" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-54283"
}</msg>
<status status="PASS" starttime="20210714 22:59:06.676" endtime="20210714 22:59:07.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.072" endtime="20210714 22:59:07.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.073" endtime="20210714 22:59:07.073"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.675" endtime="20210714 22:59:07.073"/>
</kw>
<status status="PASS" starttime="20210714 22:59:06.674" endtime="20210714 22:59:07.074"/>
</kw>
<msg timestamp="20210714 22:59:07.074" level="INFO">${BUCKET} = bucket-54283</msg>
<status status="PASS" starttime="20210714 22:59:06.674" endtime="20210714 22:59:07.074"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:07.074" level="INFO">${BUCKET} = bucket-54283</msg>
<status status="PASS" starttime="20210714 22:59:07.074" endtime="20210714 22:59:07.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:07.074" endtime="20210714 22:59:07.075"/>
</kw>
<status status="PASS" starttime="20210714 22:59:05.048" endtime="20210714 22:59:07.075"/>
</kw>
<test id="s1-s14-s7-t1" name="Test Multipart Upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:07.077" level="INFO">${random} = 12016</msg>
<status status="PASS" starttime="20210714 22:59:07.077" endtime="20210714 22:59:07.077"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:07.078" level="INFO">${PREFIX} = 12016</msg>
<status status="PASS" starttime="20210714 22:59:07.077" endtime="20210714 22:59:07.078"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.076" endtime="20210714 22:59:07.078"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:07.082" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 12016/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:07.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:07.484" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.080" endtime="20210714 22:59:07.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:07.485" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.484" endtime="20210714 22:59:07.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:07.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:07.485" endtime="20210714 22:59:07.486"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.079" endtime="20210714 22:59:07.486"/>
</kw>
<msg timestamp="20210714 22:59:07.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:07.079" endtime="20210714 22:59:07.486"/>
</kw>
<msg timestamp="20210714 22:59:07.487" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.078" endtime="20210714 22:59:07.487"/>
</kw>
<msg timestamp="20210714 22:59:07.487" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.078" endtime="20210714 22:59:07.487"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:07.490" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602", 
    "Key": "12016/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:07.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:07.524" level="INFO">${output} = 2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602</msg>
<status status="PASS" starttime="20210714 22:59:07.488" endtime="20210714 22:59:07.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:07.525" level="INFO">2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602</msg>
<status status="PASS" starttime="20210714 22:59:07.524" endtime="20210714 22:59:07.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:07.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:07.525" endtime="20210714 22:59:07.525"/>
</kw>
<msg timestamp="20210714 22:59:07.526" level="INFO">${uploadID} = 2050dbea-f352-487b-bb35-f1ac9483ffac-106581429285093602</msg>
<status status="PASS" starttime="20210714 22:59:07.487" endtime="20210714 22:59:07.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.526" endtime="20210714 22:59:07.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.526" endtime="20210714 22:59:07.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.527" endtime="20210714 22:59:07.527"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:07.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 12016/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:07.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:07.928" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.529" endtime="20210714 22:59:07.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:07.929" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.928" endtime="20210714 22:59:07.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:07.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:07.929" endtime="20210714 22:59:07.930"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.529" endtime="20210714 22:59:07.930"/>
</kw>
<msg timestamp="20210714 22:59:07.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:07.528" endtime="20210714 22:59:07.930"/>
</kw>
<msg timestamp="20210714 22:59:07.930" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.528" endtime="20210714 22:59:07.930"/>
</kw>
<msg timestamp="20210714 22:59:07.931" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123", 
    "Key": "12016/multipartKey"
}</msg>
<status status="PASS" starttime="20210714 22:59:07.527" endtime="20210714 22:59:07.931"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:07.934" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123", 
    "Key": "12016/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:07.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:07.969" level="INFO">${output} = 9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123</msg>
<status status="PASS" starttime="20210714 22:59:07.932" endtime="20210714 22:59:07.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:07.970" level="INFO">9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123</msg>
<status status="PASS" starttime="20210714 22:59:07.969" endtime="20210714 22:59:07.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:07.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:07.970" endtime="20210714 22:59:07.971"/>
</kw>
<msg timestamp="20210714 22:59:07.971" level="INFO">${nextUploadID} = 9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123</msg>
<status status="PASS" starttime="20210714 22:59:07.931" endtime="20210714 22:59:07.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.971" endtime="20210714 22:59:07.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.972" endtime="20210714 22:59:07.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:07.972" endtime="20210714 22:59:07.973"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20210714 22:59:07.973" endtime="20210714 22:59:07.973"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:07.977" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:08.016" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0345457 s, 152 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:07.975" endtime="20210714 22:59:08.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:08.017" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0345457 s, 152 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:08.016" endtime="20210714 22:59:08.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:08.017" endtime="20210714 22:59:08.017"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.975" endtime="20210714 22:59:08.018"/>
</kw>
<msg timestamp="20210714 22:59:08.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:07.974" endtime="20210714 22:59:08.018"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.974" endtime="20210714 22:59:08.018"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.973" endtime="20210714 22:59:08.018"/>
</kw>
<status status="PASS" starttime="20210714 22:59:07.973" endtime="20210714 22:59:08.018"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:08.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 12016/multipartKey --part-number 1 --body /tmp/part1 --upload-id 9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:08.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:08.623" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429348270308"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.020" endtime="20210714 22:59:08.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:08.624" level="INFO">{
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429348270308"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.624" endtime="20210714 22:59:08.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:08.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:08.625" endtime="20210714 22:59:08.625"/>
</kw>
<status status="PASS" starttime="20210714 22:59:08.020" endtime="20210714 22:59:08.625"/>
</kw>
<msg timestamp="20210714 22:59:08.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:08.020" endtime="20210714 22:59:08.627"/>
</kw>
<msg timestamp="20210714 22:59:08.628" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429348270308"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.019" endtime="20210714 22:59:08.628"/>
</kw>
<msg timestamp="20210714 22:59:08.628" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429348270308"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.018" endtime="20210714 22:59:08.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:08.628" endtime="20210714 22:59:08.629"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:08.642" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:08.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:08.729" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0840158 s, 62.4 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:08.631" endtime="20210714 22:59:08.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:08.730" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0840158 s, 62.4 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:08.729" endtime="20210714 22:59:08.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:08.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:08.730" endtime="20210714 22:59:08.731"/>
</kw>
<status status="PASS" starttime="20210714 22:59:08.630" endtime="20210714 22:59:08.731"/>
</kw>
<msg timestamp="20210714 22:59:08.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:08.630" endtime="20210714 22:59:08.731"/>
</kw>
<status status="PASS" starttime="20210714 22:59:08.630" endtime="20210714 22:59:08.731"/>
</kw>
<status status="PASS" starttime="20210714 22:59:08.629" endtime="20210714 22:59:08.732"/>
</kw>
<status status="PASS" starttime="20210714 22:59:08.629" endtime="20210714 22:59:08.732"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:08.736" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 12016/multipartKey --part-number 1 --body /tmp/part1 --upload-id 9e47411f-2409-4b7e-8a53-2236b8f4c4b8-106581429314257123 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:09.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:09.299" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429394997477"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.734" endtime="20210714 22:59:09.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:09.300" level="INFO">{
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429394997477"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.299" endtime="20210714 22:59:09.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:09.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:09.300" endtime="20210714 22:59:09.300"/>
</kw>
<status status="PASS" starttime="20210714 22:59:08.733" endtime="20210714 22:59:09.301"/>
</kw>
<msg timestamp="20210714 22:59:09.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:08.733" endtime="20210714 22:59:09.301"/>
</kw>
<msg timestamp="20210714 22:59:09.301" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429394997477"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.732" endtime="20210714 22:59:09.301"/>
</kw>
<msg timestamp="20210714 22:59:09.302" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/12016/multipartKey106581429394997477"
}</msg>
<status status="PASS" starttime="20210714 22:59:08.732" endtime="20210714 22:59:09.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:09.302" endtime="20210714 22:59:09.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:07.075" endtime="20210714 22:59:09.302"/>
</test>
<test id="s1-s14-s7-t2" name="Test Multipart Upload Complete">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:09.304" level="INFO">${random} = 41895</msg>
<status status="PASS" starttime="20210714 22:59:09.304" endtime="20210714 22:59:09.304"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:09.305" level="INFO">${PREFIX} = 41895</msg>
<status status="PASS" starttime="20210714 22:59:09.305" endtime="20210714 22:59:09.305"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.304" endtime="20210714 22:59:09.305"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:09.309" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 41895/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:09.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:09.705" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.307" endtime="20210714 22:59:09.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:09.706" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.706" endtime="20210714 22:59:09.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:09.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:09.707" endtime="20210714 22:59:09.707"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.307" endtime="20210714 22:59:09.707"/>
</kw>
<msg timestamp="20210714 22:59:09.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:09.306" endtime="20210714 22:59:09.708"/>
</kw>
<msg timestamp="20210714 22:59:09.708" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.306" endtime="20210714 22:59:09.708"/>
</kw>
<msg timestamp="20210714 22:59:09.708" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.305" endtime="20210714 22:59:09.708"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:09.711" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206", 
    "Key": "41895/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:09.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:09.746" level="INFO">${output} = 6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206</msg>
<status status="PASS" starttime="20210714 22:59:09.709" endtime="20210714 22:59:09.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:09.747" level="INFO">6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206</msg>
<status status="PASS" starttime="20210714 22:59:09.747" endtime="20210714 22:59:09.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:09.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:09.748" endtime="20210714 22:59:09.748"/>
</kw>
<msg timestamp="20210714 22:59:09.748" level="INFO">${uploadID} = 6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206</msg>
<status status="PASS" starttime="20210714 22:59:09.708" endtime="20210714 22:59:09.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:09.749" endtime="20210714 22:59:09.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:09.749" endtime="20210714 22:59:09.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:09.750" endtime="20210714 22:59:09.750"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:09.754" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:09.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:09.790" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0327996 s, 160 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:09.753" endtime="20210714 22:59:09.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:09.792" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0327996 s, 160 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:09.791" endtime="20210714 22:59:09.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:09.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:09.792" endtime="20210714 22:59:09.792"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.752" endtime="20210714 22:59:09.793"/>
</kw>
<msg timestamp="20210714 22:59:09.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:09.752" endtime="20210714 22:59:09.793"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.751" endtime="20210714 22:59:09.793"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.750" endtime="20210714 22:59:09.793"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.750" endtime="20210714 22:59:09.793"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:09.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 41895/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:10.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:10.508" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429464137959"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.795" endtime="20210714 22:59:10.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:10.509" level="INFO">{
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429464137959"
}</msg>
<status status="PASS" starttime="20210714 22:59:10.508" endtime="20210714 22:59:10.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:10.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:10.509" endtime="20210714 22:59:10.510"/>
</kw>
<status status="PASS" starttime="20210714 22:59:09.795" endtime="20210714 22:59:10.510"/>
</kw>
<msg timestamp="20210714 22:59:10.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:09.795" endtime="20210714 22:59:10.510"/>
</kw>
<msg timestamp="20210714 22:59:10.511" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429464137959"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.794" endtime="20210714 22:59:10.511"/>
</kw>
<msg timestamp="20210714 22:59:10.511" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429464137959"
}</msg>
<status status="PASS" starttime="20210714 22:59:09.793" endtime="20210714 22:59:10.511"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:10.514" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429464137959"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:10.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:10.549" level="INFO">${output} = /s3v/bucket-54283/41895/multipartKey1106581429464137959</msg>
<status status="PASS" starttime="20210714 22:59:10.512" endtime="20210714 22:59:10.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:10.550" level="INFO">/s3v/bucket-54283/41895/multipartKey1106581429464137959</msg>
<status status="PASS" starttime="20210714 22:59:10.550" endtime="20210714 22:59:10.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:10.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:10.551" endtime="20210714 22:59:10.551"/>
</kw>
<msg timestamp="20210714 22:59:10.552" level="INFO">${eTag1} = /s3v/bucket-54283/41895/multipartKey1106581429464137959</msg>
<status status="PASS" starttime="20210714 22:59:10.511" endtime="20210714 22:59:10.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:10.552" endtime="20210714 22:59:10.552"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:10.556" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210714 22:59:10.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:10.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:10.554" endtime="20210714 22:59:10.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:10.558" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:10.558" endtime="20210714 22:59:10.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:10.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:10.558" endtime="20210714 22:59:10.559"/>
</kw>
<status status="PASS" starttime="20210714 22:59:10.553" endtime="20210714 22:59:10.559"/>
</kw>
<msg timestamp="20210714 22:59:10.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:10.553" endtime="20210714 22:59:10.559"/>
</kw>
<status status="PASS" starttime="20210714 22:59:10.552" endtime="20210714 22:59:10.559"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:10.563" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 41895/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:11.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:11.022" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429513027816"
}</msg>
<status status="PASS" starttime="20210714 22:59:10.562" endtime="20210714 22:59:11.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:11.023" level="INFO">{
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429513027816"
}</msg>
<status status="PASS" starttime="20210714 22:59:11.022" endtime="20210714 22:59:11.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:11.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:11.023" endtime="20210714 22:59:11.024"/>
</kw>
<status status="PASS" starttime="20210714 22:59:10.561" endtime="20210714 22:59:11.024"/>
</kw>
<msg timestamp="20210714 22:59:11.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:10.561" endtime="20210714 22:59:11.024"/>
</kw>
<msg timestamp="20210714 22:59:11.025" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429513027816"
}</msg>
<status status="PASS" starttime="20210714 22:59:10.560" endtime="20210714 22:59:11.025"/>
</kw>
<msg timestamp="20210714 22:59:11.025" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429513027816"
}</msg>
<status status="PASS" starttime="20210714 22:59:10.560" endtime="20210714 22:59:11.025"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:11.028" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/41895/multipartKey1106581429513027816"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:11.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:11.061" level="INFO">${output} = /s3v/bucket-54283/41895/multipartKey1106581429513027816</msg>
<status status="PASS" starttime="20210714 22:59:11.026" endtime="20210714 22:59:11.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:11.062" level="INFO">/s3v/bucket-54283/41895/multipartKey1106581429513027816</msg>
<status status="PASS" starttime="20210714 22:59:11.062" endtime="20210714 22:59:11.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:11.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:11.063" endtime="20210714 22:59:11.063"/>
</kw>
<msg timestamp="20210714 22:59:11.063" level="INFO">${eTag2} = /s3v/bucket-54283/41895/multipartKey1106581429513027816</msg>
<status status="PASS" starttime="20210714 22:59:11.025" endtime="20210714 22:59:11.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:11.064" endtime="20210714 22:59:11.064"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:11.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 6eeed48f-5907-4404-af26-e0362c06cf19-106581429430911206 --bucket bucket-54283 --key 41895/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/41895/multipartKey1106581429464137959,PartNumber=1},{ETag=/s3v/bucket-54283/41895/multipartKey1106581429513027816,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:11.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:11.468" level="INFO">${output} = {
    "ETag": "9ed52a583fd04bf9ad82e9e051ba055ed0a610e31cb87be1d03b5abb6312f0f5", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:11.066" endtime="20210714 22:59:11.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:11.469" level="INFO">{
    "ETag": "9ed52a583fd04bf9ad82e9e051ba055ed0a610e31cb87be1d03b5abb6312f0f5", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:11.469" endtime="20210714 22:59:11.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:11.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:11.470" endtime="20210714 22:59:11.470"/>
</kw>
<status status="PASS" starttime="20210714 22:59:11.066" endtime="20210714 22:59:11.471"/>
</kw>
<msg timestamp="20210714 22:59:11.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:11.066" endtime="20210714 22:59:11.471"/>
</kw>
<msg timestamp="20210714 22:59:11.471" level="INFO">${output} = {
    "ETag": "9ed52a583fd04bf9ad82e9e051ba055ed0a610e31cb87be1d03b5abb6312f0f5", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:11.065" endtime="20210714 22:59:11.471"/>
</kw>
<msg timestamp="20210714 22:59:11.471" level="INFO">${result} = {
    "ETag": "9ed52a583fd04bf9ad82e9e051ba055ed0a610e31cb87be1d03b5abb6312f0f5", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "41895/multipartKey1"
}</msg>
<status status="PASS" starttime="20210714 22:59:11.064" endtime="20210714 22:59:11.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:11.471" endtime="20210714 22:59:11.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:11.472" endtime="20210714 22:59:11.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:11.472" endtime="20210714 22:59:11.473"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:11.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-54283 --key 41895/multipartKey1 /tmp/41895-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:11.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:11.967" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:11 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:11.475" endtime="20210714 22:59:11.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:11.969" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:11 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22:59:11 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:59:11.968" endtime="20210714 22:59:11.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:11.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:11.969" endtime="20210714 22:59:11.970"/>
</kw>
<status status="PASS" starttime="20210714 22:59:11.474" endtime="20210714 22:59:11.970"/>
</kw>
<msg timestamp="20210714 22:59:11.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:11.474" endtime="20210714 22:59:11.970"/>
</kw>
<msg timestamp="20210714 22:59:11.970" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:11 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:11.474" endtime="20210714 22:59:11.970"/>
</kw>
<msg timestamp="20210714 22:59:11.971" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:11 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:11.473" endtime="20210714 22:59:11.971"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:11.974" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/41895-multipartKey1'.</msg>
<msg timestamp="20210714 22:59:11.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:11.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:11.972" endtime="20210714 22:59:11.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:11.983" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:11.982" endtime="20210714 22:59:11.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:11.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:11.983" endtime="20210714 22:59:11.983"/>
</kw>
<status status="PASS" starttime="20210714 22:59:11.972" endtime="20210714 22:59:11.984"/>
</kw>
<msg timestamp="20210714 22:59:11.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:11.971" endtime="20210714 22:59:11.984"/>
</kw>
<status status="PASS" starttime="20210714 22:59:11.971" endtime="20210714 22:59:11.984"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:11.988" level="INFO">Running command 'md5sum /tmp/41895-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:12.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.001" level="INFO">${output} = aa0fb5f5b3fa02e2a7a60e2faf4a20c0</msg>
<status status="PASS" starttime="20210714 22:59:11.986" endtime="20210714 22:59:12.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.002" level="INFO">aa0fb5f5b3fa02e2a7a60e2faf4a20c0</msg>
<status status="PASS" starttime="20210714 22:59:12.002" endtime="20210714 22:59:12.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.002" endtime="20210714 22:59:12.003"/>
</kw>
<status status="PASS" starttime="20210714 22:59:11.986" endtime="20210714 22:59:12.003"/>
</kw>
<msg timestamp="20210714 22:59:12.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:11.985" endtime="20210714 22:59:12.003"/>
</kw>
<msg timestamp="20210714 22:59:12.004" level="INFO">${checksumbefore} = aa0fb5f5b3fa02e2a7a60e2faf4a20c0</msg>
<status status="PASS" starttime="20210714 22:59:11.985" endtime="20210714 22:59:12.004"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:12.007" level="INFO">Running command 'md5sum /tmp/41895-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:12.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.020" level="INFO">${output} = aa0fb5f5b3fa02e2a7a60e2faf4a20c0</msg>
<status status="PASS" starttime="20210714 22:59:12.005" endtime="20210714 22:59:12.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.021" level="INFO">aa0fb5f5b3fa02e2a7a60e2faf4a20c0</msg>
<status status="PASS" starttime="20210714 22:59:12.021" endtime="20210714 22:59:12.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.022" endtime="20210714 22:59:12.022"/>
</kw>
<status status="PASS" starttime="20210714 22:59:12.005" endtime="20210714 22:59:12.022"/>
</kw>
<msg timestamp="20210714 22:59:12.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:12.004" endtime="20210714 22:59:12.023"/>
</kw>
<msg timestamp="20210714 22:59:12.023" level="INFO">${checksumafter} = aa0fb5f5b3fa02e2a7a60e2faf4a20c0</msg>
<status status="PASS" starttime="20210714 22:59:12.004" endtime="20210714 22:59:12.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:12.023" endtime="20210714 22:59:12.024"/>
</kw>
<status status="PASS" starttime="20210714 22:59:11.984" endtime="20210714 22:59:12.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:09.303" endtime="20210714 22:59:12.024"/>
</test>
<test id="s1-s14-s7-t3" name="Test Multipart Upload Complete Entity too small">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:12.027" level="INFO">${random} = 86375</msg>
<status status="PASS" starttime="20210714 22:59:12.026" endtime="20210714 22:59:12.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:12.027" level="INFO">${PREFIX} = 86375</msg>
<status status="PASS" starttime="20210714 22:59:12.027" endtime="20210714 22:59:12.027"/>
</kw>
<status status="PASS" starttime="20210714 22:59:12.026" endtime="20210714 22:59:12.027"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:12.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 86375/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:12.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.427" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129", 
    "Key": "86375/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.029" endtime="20210714 22:59:12.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.428" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129", 
    "Key": "86375/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.428" endtime="20210714 22:59:12.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.429" endtime="20210714 22:59:12.429"/>
</kw>
<status status="PASS" starttime="20210714 22:59:12.029" endtime="20210714 22:59:12.430"/>
</kw>
<msg timestamp="20210714 22:59:12.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:12.029" endtime="20210714 22:59:12.430"/>
</kw>
<msg timestamp="20210714 22:59:12.430" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129", 
    "Key": "86375/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.028" endtime="20210714 22:59:12.430"/>
</kw>
<msg timestamp="20210714 22:59:12.430" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129", 
    "Key": "86375/multipartKey2"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.027" endtime="20210714 22:59:12.430"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:12.433" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129", 
    "Key": "86375/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:12.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.468" level="INFO">${output} = 348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129</msg>
<status status="PASS" starttime="20210714 22:59:12.431" endtime="20210714 22:59:12.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.469" level="INFO">348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129</msg>
<status status="PASS" starttime="20210714 22:59:12.468" endtime="20210714 22:59:12.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.469" endtime="20210714 22:59:12.470"/>
</kw>
<msg timestamp="20210714 22:59:12.470" level="INFO">${uploadID} = 348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129</msg>
<status status="PASS" starttime="20210714 22:59:12.431" endtime="20210714 22:59:12.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:12.470" endtime="20210714 22:59:12.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:12.471" endtime="20210714 22:59:12.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:12.471" endtime="20210714 22:59:12.472"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:12.475" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20210714 22:59:12.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:12.473" endtime="20210714 22:59:12.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.478" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:12.478" endtime="20210714 22:59:12.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.478" endtime="20210714 22:59:12.479"/>
</kw>
<status status="PASS" starttime="20210714 22:59:12.473" endtime="20210714 22:59:12.479"/>
</kw>
<msg timestamp="20210714 22:59:12.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:12.472" endtime="20210714 22:59:12.479"/>
</kw>
<status status="PASS" starttime="20210714 22:59:12.472" endtime="20210714 22:59:12.479"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:12.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 86375/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:12.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.958" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429638660330"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.481" endtime="20210714 22:59:12.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.959" level="INFO">{
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429638660330"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.959" endtime="20210714 22:59:12.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.959" endtime="20210714 22:59:12.960"/>
</kw>
<status status="PASS" starttime="20210714 22:59:12.481" endtime="20210714 22:59:12.960"/>
</kw>
<msg timestamp="20210714 22:59:12.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:12.481" endtime="20210714 22:59:12.961"/>
</kw>
<msg timestamp="20210714 22:59:12.961" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429638660330"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.480" endtime="20210714 22:59:12.961"/>
</kw>
<msg timestamp="20210714 22:59:12.961" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429638660330"
}</msg>
<status status="PASS" starttime="20210714 22:59:12.480" endtime="20210714 22:59:12.961"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:12.964" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429638660330"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:12.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:12.998" level="INFO">${output} = /s3v/bucket-54283/86375/multipartKey2106581429638660330</msg>
<status status="PASS" starttime="20210714 22:59:12.962" endtime="20210714 22:59:12.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:12.999" level="INFO">/s3v/bucket-54283/86375/multipartKey2106581429638660330</msg>
<status status="PASS" starttime="20210714 22:59:12.998" endtime="20210714 22:59:12.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:12.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:12.999" endtime="20210714 22:59:13.000"/>
</kw>
<msg timestamp="20210714 22:59:13.000" level="INFO">${eTag1} = /s3v/bucket-54283/86375/multipartKey2106581429638660330</msg>
<status status="PASS" starttime="20210714 22:59:12.961" endtime="20210714 22:59:13.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:13.000" endtime="20210714 22:59:13.000"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:13.015" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210714 22:59:13.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:13.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:13.002" endtime="20210714 22:59:13.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:13.017" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:13.017" endtime="20210714 22:59:13.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:13.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:13.018" endtime="20210714 22:59:13.018"/>
</kw>
<status status="PASS" starttime="20210714 22:59:13.001" endtime="20210714 22:59:13.018"/>
</kw>
<msg timestamp="20210714 22:59:13.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:13.001" endtime="20210714 22:59:13.019"/>
</kw>
<status status="PASS" starttime="20210714 22:59:13.001" endtime="20210714 22:59:13.019"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:13.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 86375/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:13.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:13.471" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429674115307"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.021" endtime="20210714 22:59:13.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:13.472" level="INFO">{
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429674115307"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.471" endtime="20210714 22:59:13.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:13.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:13.472" endtime="20210714 22:59:13.473"/>
</kw>
<status status="PASS" starttime="20210714 22:59:13.020" endtime="20210714 22:59:13.473"/>
</kw>
<msg timestamp="20210714 22:59:13.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:13.020" endtime="20210714 22:59:13.473"/>
</kw>
<msg timestamp="20210714 22:59:13.474" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429674115307"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.020" endtime="20210714 22:59:13.474"/>
</kw>
<msg timestamp="20210714 22:59:13.474" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429674115307"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.019" endtime="20210714 22:59:13.474"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:13.477" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/86375/multipartKey2106581429674115307"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:13.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:13.511" level="INFO">${output} = /s3v/bucket-54283/86375/multipartKey2106581429674115307</msg>
<status status="PASS" starttime="20210714 22:59:13.475" endtime="20210714 22:59:13.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:13.512" level="INFO">/s3v/bucket-54283/86375/multipartKey2106581429674115307</msg>
<status status="PASS" starttime="20210714 22:59:13.511" endtime="20210714 22:59:13.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:13.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:13.512" endtime="20210714 22:59:13.513"/>
</kw>
<msg timestamp="20210714 22:59:13.513" level="INFO">${eTag2} = /s3v/bucket-54283/86375/multipartKey2106581429674115307</msg>
<status status="PASS" starttime="20210714 22:59:13.474" endtime="20210714 22:59:13.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:13.513" endtime="20210714 22:59:13.514"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:13.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 348b8068-4954-4f68-b4ff-74713d093a5f-106581429609169129 --bucket bucket-54283 --key 86375/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/86375/multipartKey2106581429638660330,PartNumber=1},{ETag=/s3v/bucket-54283/86375/multipartKey2106581429674115307,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:13.917" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:13.917" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210714 22:59:13.515" endtime="20210714 22:59:13.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:13.918" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20210714 22:59:13.917" endtime="20210714 22:59:13.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:13.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:13.918" endtime="20210714 22:59:13.919"/>
</kw>
<msg timestamp="20210714 22:59:13.919" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210714 22:59:13.515" endtime="20210714 22:59:13.919"/>
</kw>
<msg timestamp="20210714 22:59:13.919" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210714 22:59:13.514" endtime="20210714 22:59:13.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:13.920" endtime="20210714 22:59:13.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:12.025" endtime="20210714 22:59:13.920"/>
</test>
<test id="s1-s14-s7-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:13.924" level="INFO">${random} = 37968</msg>
<status status="PASS" starttime="20210714 22:59:13.923" endtime="20210714 22:59:13.924"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:13.924" level="INFO">${PREFIX} = 37968</msg>
<status status="PASS" starttime="20210714 22:59:13.924" endtime="20210714 22:59:13.924"/>
</kw>
<status status="PASS" starttime="20210714 22:59:13.922" endtime="20210714 22:59:13.924"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:13.928" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 37968/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:14.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:14.322" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.926" endtime="20210714 22:59:14.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:14.323" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:14.322" endtime="20210714 22:59:14.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:14.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:14.323" endtime="20210714 22:59:14.324"/>
</kw>
<status status="PASS" starttime="20210714 22:59:13.926" endtime="20210714 22:59:14.324"/>
</kw>
<msg timestamp="20210714 22:59:14.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:13.925" endtime="20210714 22:59:14.324"/>
</kw>
<msg timestamp="20210714 22:59:14.325" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.925" endtime="20210714 22:59:14.325"/>
</kw>
<msg timestamp="20210714 22:59:14.325" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:13.924" endtime="20210714 22:59:14.325"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:14.328" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244", 
    "Key": "37968/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:14.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:14.362" level="INFO">${output} = bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244</msg>
<status status="PASS" starttime="20210714 22:59:14.326" endtime="20210714 22:59:14.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:14.363" level="INFO">bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244</msg>
<status status="PASS" starttime="20210714 22:59:14.362" endtime="20210714 22:59:14.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:14.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:14.363" endtime="20210714 22:59:14.364"/>
</kw>
<msg timestamp="20210714 22:59:14.364" level="INFO">${uploadID} = bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244</msg>
<status status="PASS" starttime="20210714 22:59:14.325" endtime="20210714 22:59:14.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:14.364" endtime="20210714 22:59:14.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:14.365" endtime="20210714 22:59:14.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:14.365" endtime="20210714 22:59:14.365"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:14.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 --bucket bucket-54283 --key 37968/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:14.764" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:14.765" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:14.367" endtime="20210714 22:59:14.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:14.766" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:59:14.765" endtime="20210714 22:59:14.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:14.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:14.766" endtime="20210714 22:59:14.767"/>
</kw>
<msg timestamp="20210714 22:59:14.767" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:14.366" endtime="20210714 22:59:14.767"/>
</kw>
<msg timestamp="20210714 22:59:14.767" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:14.366" endtime="20210714 22:59:14.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:14.768" endtime="20210714 22:59:14.768"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:14.771" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 --bucket bucket-54283 --key 37968/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:15.175" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:15.175" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:14.769" endtime="20210714 22:59:15.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:15.176" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:59:15.176" endtime="20210714 22:59:15.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:15.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:15.177" endtime="20210714 22:59:15.177"/>
</kw>
<msg timestamp="20210714 22:59:15.177" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:14.769" endtime="20210714 22:59:15.177"/>
</kw>
<msg timestamp="20210714 22:59:15.178" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:14.768" endtime="20210714 22:59:15.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:15.178" endtime="20210714 22:59:15.178"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:15.183" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:15.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:15.219" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0334979 s, 157 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:15.181" endtime="20210714 22:59:15.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:15.220" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0334979 s, 157 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:15.219" endtime="20210714 22:59:15.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:15.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:15.220" endtime="20210714 22:59:15.220"/>
</kw>
<status status="PASS" starttime="20210714 22:59:15.180" endtime="20210714 22:59:15.221"/>
</kw>
<msg timestamp="20210714 22:59:15.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:15.180" endtime="20210714 22:59:15.221"/>
</kw>
<status status="PASS" starttime="20210714 22:59:15.179" endtime="20210714 22:59:15.221"/>
</kw>
<status status="PASS" starttime="20210714 22:59:15.179" endtime="20210714 22:59:15.221"/>
</kw>
<status status="PASS" starttime="20210714 22:59:15.178" endtime="20210714 22:59:15.221"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:15.225" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 37968/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:15.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:15.757" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429819998445"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.223" endtime="20210714 22:59:15.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:15.759" level="INFO">{
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429819998445"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.758" endtime="20210714 22:59:15.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:15.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:15.759" endtime="20210714 22:59:15.759"/>
</kw>
<status status="PASS" starttime="20210714 22:59:15.223" endtime="20210714 22:59:15.760"/>
</kw>
<msg timestamp="20210714 22:59:15.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:15.223" endtime="20210714 22:59:15.760"/>
</kw>
<msg timestamp="20210714 22:59:15.760" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429819998445"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.222" endtime="20210714 22:59:15.760"/>
</kw>
<msg timestamp="20210714 22:59:15.760" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429819998445"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.221" endtime="20210714 22:59:15.760"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:15.763" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429819998445"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:15.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:15.798" level="INFO">${output} = /s3v/bucket-54283/37968/multipartKey3106581429819998445</msg>
<status status="PASS" starttime="20210714 22:59:15.761" endtime="20210714 22:59:15.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:15.799" level="INFO">/s3v/bucket-54283/37968/multipartKey3106581429819998445</msg>
<status status="PASS" starttime="20210714 22:59:15.799" endtime="20210714 22:59:15.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:15.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:15.799" endtime="20210714 22:59:15.800"/>
</kw>
<msg timestamp="20210714 22:59:15.801" level="INFO">${eTag1} = /s3v/bucket-54283/37968/multipartKey3106581429819998445</msg>
<status status="PASS" starttime="20210714 22:59:15.761" endtime="20210714 22:59:15.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:15.801" endtime="20210714 22:59:15.801"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:15.805" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 37968/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:16.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:16.389" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429858337006"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.803" endtime="20210714 22:59:16.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:16.390" level="INFO">{
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429858337006"
}</msg>
<status status="PASS" starttime="20210714 22:59:16.390" endtime="20210714 22:59:16.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:16.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:16.391" endtime="20210714 22:59:16.391"/>
</kw>
<status status="PASS" starttime="20210714 22:59:15.803" endtime="20210714 22:59:16.391"/>
</kw>
<msg timestamp="20210714 22:59:16.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:15.803" endtime="20210714 22:59:16.392"/>
</kw>
<msg timestamp="20210714 22:59:16.392" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429858337006"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.802" endtime="20210714 22:59:16.392"/>
</kw>
<msg timestamp="20210714 22:59:16.392" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429858337006"
}</msg>
<status status="PASS" starttime="20210714 22:59:15.801" endtime="20210714 22:59:16.392"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:16.395" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429858337006"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:16.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:16.430" level="INFO">${output} = /s3v/bucket-54283/37968/multipartKey3106581429858337006</msg>
<status status="PASS" starttime="20210714 22:59:16.393" endtime="20210714 22:59:16.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:16.431" level="INFO">/s3v/bucket-54283/37968/multipartKey3106581429858337006</msg>
<status status="PASS" starttime="20210714 22:59:16.431" endtime="20210714 22:59:16.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:16.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:16.432" endtime="20210714 22:59:16.432"/>
</kw>
<msg timestamp="20210714 22:59:16.433" level="INFO">${eTag2} = /s3v/bucket-54283/37968/multipartKey3106581429858337006</msg>
<status status="PASS" starttime="20210714 22:59:16.392" endtime="20210714 22:59:16.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:16.433" endtime="20210714 22:59:16.433"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:16.437" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20210714 22:59:16.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:16.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:16.435" endtime="20210714 22:59:16.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:16.439" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:16.439" endtime="20210714 22:59:16.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:16.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:16.439" endtime="20210714 22:59:16.440"/>
</kw>
<status status="PASS" starttime="20210714 22:59:16.434" endtime="20210714 22:59:16.440"/>
</kw>
<msg timestamp="20210714 22:59:16.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:16.434" endtime="20210714 22:59:16.440"/>
</kw>
<status status="PASS" starttime="20210714 22:59:16.433" endtime="20210714 22:59:16.440"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:16.444" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 37968/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:16.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:16.892" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429898051823"
}</msg>
<status status="PASS" starttime="20210714 22:59:16.442" endtime="20210714 22:59:16.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:16.893" level="INFO">{
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429898051823"
}</msg>
<status status="PASS" starttime="20210714 22:59:16.893" endtime="20210714 22:59:16.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:16.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:16.894" endtime="20210714 22:59:16.894"/>
</kw>
<status status="PASS" starttime="20210714 22:59:16.442" endtime="20210714 22:59:16.895"/>
</kw>
<msg timestamp="20210714 22:59:16.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:16.442" endtime="20210714 22:59:16.895"/>
</kw>
<msg timestamp="20210714 22:59:16.895" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429898051823"
}</msg>
<status status="PASS" starttime="20210714 22:59:16.441" endtime="20210714 22:59:16.895"/>
</kw>
<msg timestamp="20210714 22:59:16.895" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429898051823"
}</msg>
<status status="PASS" starttime="20210714 22:59:16.441" endtime="20210714 22:59:16.895"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:16.898" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/37968/multipartKey3106581429898051823"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:16.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:16.932" level="INFO">${output} = /s3v/bucket-54283/37968/multipartKey3106581429898051823</msg>
<status status="PASS" starttime="20210714 22:59:16.896" endtime="20210714 22:59:16.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:16.933" level="INFO">/s3v/bucket-54283/37968/multipartKey3106581429898051823</msg>
<status status="PASS" starttime="20210714 22:59:16.932" endtime="20210714 22:59:16.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:16.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:16.933" endtime="20210714 22:59:16.934"/>
</kw>
<msg timestamp="20210714 22:59:16.934" level="INFO">${eTag3} = /s3v/bucket-54283/37968/multipartKey3106581429898051823</msg>
<status status="PASS" starttime="20210714 22:59:16.895" endtime="20210714 22:59:16.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:16.934" endtime="20210714 22:59:16.935"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:16.938" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 --bucket bucket-54283 --key 37968/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:17.344" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:17.344" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:16.936" endtime="20210714 22:59:17.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:17.345" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:59:17.344" endtime="20210714 22:59:17.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:17.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:17.345" endtime="20210714 22:59:17.346"/>
</kw>
<msg timestamp="20210714 22:59:17.346" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:16.936" endtime="20210714 22:59:17.346"/>
</kw>
<msg timestamp="20210714 22:59:17.346" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:16.935" endtime="20210714 22:59:17.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:17.347" endtime="20210714 22:59:17.347"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:17.351" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 --bucket bucket-54283 --key 37968/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/37968/multipartKey3106581429819998445,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:17.749" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:17.749" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:17.349" endtime="20210714 22:59:17.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:17.751" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210714 22:59:17.750" endtime="20210714 22:59:17.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:17.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:17.751" endtime="20210714 22:59:17.751"/>
</kw>
<msg timestamp="20210714 22:59:17.752" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:17.348" endtime="20210714 22:59:17.752"/>
</kw>
<msg timestamp="20210714 22:59:17.752" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210714 22:59:17.347" endtime="20210714 22:59:17.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:17.752" endtime="20210714 22:59:17.752"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:17.756" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 --bucket bucket-54283 --key 37968/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/37968/multipartKey3106581429819998445,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:18.152" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:18.152" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:59:17.754" endtime="20210714 22:59:18.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:18.154" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:59:18.153" endtime="20210714 22:59:18.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:18.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:18.154" endtime="20210714 22:59:18.154"/>
</kw>
<msg timestamp="20210714 22:59:18.155" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:59:17.753" endtime="20210714 22:59:18.155"/>
</kw>
<msg timestamp="20210714 22:59:18.155" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210714 22:59:17.753" endtime="20210714 22:59:18.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:18.155" endtime="20210714 22:59:18.156"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:18.160" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bbf43a96-d980-47a9-b53b-bcbd4ca0c36f-106581429733163244 --bucket bucket-54283 --key 37968/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/37968/multipartKey3106581429819998445,PartNumber=1},{ETag=/s3v/bucket-54283/37968/multipartKey3106581429898051823,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:18.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:18.568" level="INFO">${output} = {
    "ETag": "98401f54c97e9912dde0e37937a2273301e4bb4affba1432b9cd794ee91c531f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:18.158" endtime="20210714 22:59:18.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:18.570" level="INFO">{
    "ETag": "98401f54c97e9912dde0e37937a2273301e4bb4affba1432b9cd794ee91c531f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:18.569" endtime="20210714 22:59:18.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:18.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:18.570" endtime="20210714 22:59:18.571"/>
</kw>
<status status="PASS" starttime="20210714 22:59:18.157" endtime="20210714 22:59:18.571"/>
</kw>
<msg timestamp="20210714 22:59:18.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:18.157" endtime="20210714 22:59:18.571"/>
</kw>
<msg timestamp="20210714 22:59:18.571" level="INFO">${output} = {
    "ETag": "98401f54c97e9912dde0e37937a2273301e4bb4affba1432b9cd794ee91c531f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:18.157" endtime="20210714 22:59:18.571"/>
</kw>
<msg timestamp="20210714 22:59:18.572" level="INFO">${result} = {
    "ETag": "98401f54c97e9912dde0e37937a2273301e4bb4affba1432b9cd794ee91c531f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "37968/multipartKey3"
}</msg>
<status status="PASS" starttime="20210714 22:59:18.156" endtime="20210714 22:59:18.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:18.572" endtime="20210714 22:59:18.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:18.572" endtime="20210714 22:59:18.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:18.573" endtime="20210714 22:59:18.573"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:18.577" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-54283 --key 37968/multipartKey3 /tmp/37968-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:19.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.028" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:18 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:18.575" endtime="20210714 22:59:19.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.029" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:18 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22:59:18 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:59:19.028" endtime="20210714 22:59:19.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.029" endtime="20210714 22:59:19.030"/>
</kw>
<status status="PASS" starttime="20210714 22:59:18.575" endtime="20210714 22:59:19.030"/>
</kw>
<msg timestamp="20210714 22:59:19.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:18.575" endtime="20210714 22:59:19.030"/>
</kw>
<msg timestamp="20210714 22:59:19.031" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:18 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:18.574" endtime="20210714 22:59:19.031"/>
</kw>
<msg timestamp="20210714 22:59:19.031" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:18 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:18.573" endtime="20210714 22:59:19.031"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.035" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/37968-multipartKey3'.</msg>
<msg timestamp="20210714 22:59:19.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:19.033" endtime="20210714 22:59:19.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.042" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:19.041" endtime="20210714 22:59:19.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.042" endtime="20210714 22:59:19.043"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.032" endtime="20210714 22:59:19.043"/>
</kw>
<msg timestamp="20210714 22:59:19.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:19.032" endtime="20210714 22:59:19.043"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.031" endtime="20210714 22:59:19.043"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.047" level="INFO">Running command 'md5sum /tmp/37968-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:19.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.060" level="INFO">${output} = e81b4ca43a72ceec8743bead6ee04b06</msg>
<status status="PASS" starttime="20210714 22:59:19.045" endtime="20210714 22:59:19.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.061" level="INFO">e81b4ca43a72ceec8743bead6ee04b06</msg>
<status status="PASS" starttime="20210714 22:59:19.060" endtime="20210714 22:59:19.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.061" endtime="20210714 22:59:19.061"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.045" endtime="20210714 22:59:19.062"/>
</kw>
<msg timestamp="20210714 22:59:19.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:19.045" endtime="20210714 22:59:19.062"/>
</kw>
<msg timestamp="20210714 22:59:19.062" level="INFO">${checksumbefore} = e81b4ca43a72ceec8743bead6ee04b06</msg>
<status status="PASS" starttime="20210714 22:59:19.044" endtime="20210714 22:59:19.062"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.065" level="INFO">Running command 'md5sum /tmp/37968-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:19.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.078" level="INFO">${output} = e81b4ca43a72ceec8743bead6ee04b06</msg>
<status status="PASS" starttime="20210714 22:59:19.063" endtime="20210714 22:59:19.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.078" level="INFO">e81b4ca43a72ceec8743bead6ee04b06</msg>
<status status="PASS" starttime="20210714 22:59:19.078" endtime="20210714 22:59:19.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.079" endtime="20210714 22:59:19.079"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.063" endtime="20210714 22:59:19.079"/>
</kw>
<msg timestamp="20210714 22:59:19.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:19.063" endtime="20210714 22:59:19.080"/>
</kw>
<msg timestamp="20210714 22:59:19.080" level="INFO">${checksumafter} = e81b4ca43a72ceec8743bead6ee04b06</msg>
<status status="PASS" starttime="20210714 22:59:19.062" endtime="20210714 22:59:19.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:19.080" endtime="20210714 22:59:19.081"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.044" endtime="20210714 22:59:19.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:13.921" endtime="20210714 22:59:19.081"/>
</test>
<test id="s1-s14-s7-t5" name="Test abort Multipart upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:19.083" level="INFO">${random} = 93435</msg>
<status status="PASS" starttime="20210714 22:59:19.083" endtime="20210714 22:59:19.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:19.084" level="INFO">${PREFIX} = 93435</msg>
<status status="PASS" starttime="20210714 22:59:19.083" endtime="20210714 22:59:19.084"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.082" endtime="20210714 22:59:19.084"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 93435/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:19.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.481" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544", 
    "Key": "93435/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:59:19.086" endtime="20210714 22:59:19.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.482" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544", 
    "Key": "93435/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:59:19.481" endtime="20210714 22:59:19.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.482" endtime="20210714 22:59:19.483"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.085" endtime="20210714 22:59:19.483"/>
</kw>
<msg timestamp="20210714 22:59:19.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:19.085" endtime="20210714 22:59:19.483"/>
</kw>
<msg timestamp="20210714 22:59:19.484" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544", 
    "Key": "93435/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:59:19.085" endtime="20210714 22:59:19.484"/>
</kw>
<msg timestamp="20210714 22:59:19.484" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544", 
    "Key": "93435/multipartKey4"
}</msg>
<status status="PASS" starttime="20210714 22:59:19.084" endtime="20210714 22:59:19.484"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.487" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544", 
    "Key": "93435/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:19.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.522" level="INFO">${output} = 8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544</msg>
<status status="PASS" starttime="20210714 22:59:19.485" endtime="20210714 22:59:19.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.523" level="INFO">8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544</msg>
<status status="PASS" starttime="20210714 22:59:19.522" endtime="20210714 22:59:19.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.523" endtime="20210714 22:59:19.524"/>
</kw>
<msg timestamp="20210714 22:59:19.524" level="INFO">${uploadID} = 8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544</msg>
<status status="PASS" starttime="20210714 22:59:19.484" endtime="20210714 22:59:19.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:19.524" endtime="20210714 22:59:19.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:19.525" endtime="20210714 22:59:19.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:19.525" endtime="20210714 22:59:19.525"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.528" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-54283 --key 93435/multipartKey4 --upload-id 8e88bc17-e822-4d40-b54c-0c9eb5e5831b-106581430071394544 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:19.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:19.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:19.527" endtime="20210714 22:59:19.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:19.922" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:19.921" endtime="20210714 22:59:19.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:19.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:19.922" endtime="20210714 22:59:19.923"/>
</kw>
<msg timestamp="20210714 22:59:19.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:19.526" endtime="20210714 22:59:19.923"/>
</kw>
<msg timestamp="20210714 22:59:19.924" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:19.526" endtime="20210714 22:59:19.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:19.082" endtime="20210714 22:59:19.924"/>
</test>
<test id="s1-s14-s7-t6" name="Test abort Multipart upload with invalid uploadId">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:19.926" level="INFO">${random} = 38469</msg>
<status status="PASS" starttime="20210714 22:59:19.925" endtime="20210714 22:59:19.926"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:19.926" level="INFO">${PREFIX} = 38469</msg>
<status status="PASS" starttime="20210714 22:59:19.926" endtime="20210714 22:59:19.927"/>
</kw>
<status status="PASS" starttime="20210714 22:59:19.925" endtime="20210714 22:59:19.927"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:19.930" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-54283 --key 38469/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:20.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:20.330" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210714 22:59:19.928" endtime="20210714 22:59:20.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:20.332" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210714 22:59:20.331" endtime="20210714 22:59:20.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:20.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:20.332" endtime="20210714 22:59:20.332"/>
</kw>
<msg timestamp="20210714 22:59:20.333" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210714 22:59:19.927" endtime="20210714 22:59:20.333"/>
</kw>
<msg timestamp="20210714 22:59:20.333" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210714 22:59:19.927" endtime="20210714 22:59:20.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:19.924" endtime="20210714 22:59:20.333"/>
</test>
<test id="s1-s14-s7-t7" name="Upload part with Incorrect uploadID">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:20.336" level="INFO">${random} = 37515</msg>
<status status="PASS" starttime="20210714 22:59:20.335" endtime="20210714 22:59:20.336"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:20.336" level="INFO">${PREFIX} = 37515</msg>
<status status="PASS" starttime="20210714 22:59:20.336" endtime="20210714 22:59:20.336"/>
</kw>
<status status="PASS" starttime="20210714 22:59:20.335" endtime="20210714 22:59:20.336"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:20.339" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:59:20.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:20.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:20.338" endtime="20210714 22:59:20.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:20.342" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:20.341" endtime="20210714 22:59:20.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:20.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:20.343" endtime="20210714 22:59:20.343"/>
</kw>
<status status="PASS" starttime="20210714 22:59:20.337" endtime="20210714 22:59:20.343"/>
</kw>
<msg timestamp="20210714 22:59:20.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:20.337" endtime="20210714 22:59:20.343"/>
</kw>
<status status="PASS" starttime="20210714 22:59:20.336" endtime="20210714 22:59:20.344"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:20.347" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 37515/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:20.745" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:20.745" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210714 22:59:20.345" endtime="20210714 22:59:20.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:20.746" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210714 22:59:20.745" endtime="20210714 22:59:20.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:20.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:20.746" endtime="20210714 22:59:20.747"/>
</kw>
<msg timestamp="20210714 22:59:20.747" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210714 22:59:20.344" endtime="20210714 22:59:20.747"/>
</kw>
<msg timestamp="20210714 22:59:20.747" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210714 22:59:20.344" endtime="20210714 22:59:20.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:20.748" endtime="20210714 22:59:20.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:20.334" endtime="20210714 22:59:20.748"/>
</test>
<test id="s1-s14-s7-t8" name="Test list parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:20.751" level="INFO">${random} = 31824</msg>
<status status="PASS" starttime="20210714 22:59:20.750" endtime="20210714 22:59:20.751"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:20.751" level="INFO">${PREFIX} = 31824</msg>
<status status="PASS" starttime="20210714 22:59:20.751" endtime="20210714 22:59:20.751"/>
</kw>
<status status="PASS" starttime="20210714 22:59:20.750" endtime="20210714 22:59:20.751"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:20.755" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 31824/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:21.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:21.147" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594", 
    "Key": "31824/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:59:20.753" endtime="20210714 22:59:21.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:21.148" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594", 
    "Key": "31824/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.148" endtime="20210714 22:59:21.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:21.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:21.149" endtime="20210714 22:59:21.149"/>
</kw>
<status status="PASS" starttime="20210714 22:59:20.753" endtime="20210714 22:59:21.150"/>
</kw>
<msg timestamp="20210714 22:59:21.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:20.752" endtime="20210714 22:59:21.150"/>
</kw>
<msg timestamp="20210714 22:59:21.150" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594", 
    "Key": "31824/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:59:20.752" endtime="20210714 22:59:21.150"/>
</kw>
<msg timestamp="20210714 22:59:21.150" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594", 
    "Key": "31824/multipartKey5"
}</msg>
<status status="PASS" starttime="20210714 22:59:20.751" endtime="20210714 22:59:21.150"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:21.153" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594", 
    "Key": "31824/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:21.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:21.187" level="INFO">${output} = a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594</msg>
<status status="PASS" starttime="20210714 22:59:21.151" endtime="20210714 22:59:21.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:21.188" level="INFO">a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594</msg>
<status status="PASS" starttime="20210714 22:59:21.188" endtime="20210714 22:59:21.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:21.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:21.188" endtime="20210714 22:59:21.189"/>
</kw>
<msg timestamp="20210714 22:59:21.189" level="INFO">${uploadID} = a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594</msg>
<status status="PASS" starttime="20210714 22:59:21.150" endtime="20210714 22:59:21.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:21.190" endtime="20210714 22:59:21.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:21.190" endtime="20210714 22:59:21.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:21.191" endtime="20210714 22:59:21.191"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:21.195" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:21.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:21.232" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.033081 s, 158 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:21.193" endtime="20210714 22:59:21.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:21.233" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.033081 s, 158 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:21.232" endtime="20210714 22:59:21.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:21.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:21.233" endtime="20210714 22:59:21.233"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.193" endtime="20210714 22:59:21.234"/>
</kw>
<msg timestamp="20210714 22:59:21.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:21.192" endtime="20210714 22:59:21.234"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.192" endtime="20210714 22:59:21.234"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.191" endtime="20210714 22:59:21.234"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.191" endtime="20210714 22:59:21.234"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:21.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 31824/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:21.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:21.793" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.236" endtime="20210714 22:59:21.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:21.794" level="INFO">{
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.794" endtime="20210714 22:59:21.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:21.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:21.795" endtime="20210714 22:59:21.795"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.236" endtime="20210714 22:59:21.795"/>
</kw>
<msg timestamp="20210714 22:59:21.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:21.235" endtime="20210714 22:59:21.796"/>
</kw>
<msg timestamp="20210714 22:59:21.796" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.235" endtime="20210714 22:59:21.796"/>
</kw>
<msg timestamp="20210714 22:59:21.796" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.234" endtime="20210714 22:59:21.796"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:21.799" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:21.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:21.834" level="INFO">${output} = /s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:21.797" endtime="20210714 22:59:21.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:21.835" level="INFO">/s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:21.834" endtime="20210714 22:59:21.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:21.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:21.835" endtime="20210714 22:59:21.836"/>
</kw>
<msg timestamp="20210714 22:59:21.836" level="INFO">${eTag1} = /s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:21.796" endtime="20210714 22:59:21.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:21.836" endtime="20210714 22:59:21.837"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:21.840" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210714 22:59:21.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:21.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:21.838" endtime="20210714 22:59:21.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:21.843" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:21.842" endtime="20210714 22:59:21.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:21.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:21.843" endtime="20210714 22:59:21.843"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.838" endtime="20210714 22:59:21.844"/>
</kw>
<msg timestamp="20210714 22:59:21.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:21.838" endtime="20210714 22:59:21.844"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.837" endtime="20210714 22:59:21.844"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:21.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-54283 --key 31824/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:22.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:22.298" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.846" endtime="20210714 22:59:22.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:22.299" level="INFO">{
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980"
}</msg>
<status status="PASS" starttime="20210714 22:59:22.298" endtime="20210714 22:59:22.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:22.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:22.299" endtime="20210714 22:59:22.300"/>
</kw>
<status status="PASS" starttime="20210714 22:59:21.846" endtime="20210714 22:59:22.300"/>
</kw>
<msg timestamp="20210714 22:59:22.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:21.845" endtime="20210714 22:59:22.300"/>
</kw>
<msg timestamp="20210714 22:59:22.300" level="INFO">${output} = {
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.845" endtime="20210714 22:59:22.300"/>
</kw>
<msg timestamp="20210714 22:59:22.301" level="INFO">${result} = {
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980"
}</msg>
<status status="PASS" starttime="20210714 22:59:21.844" endtime="20210714 22:59:22.301"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:22.303" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:22.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:22.337" level="INFO">${output} = /s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:22.302" endtime="20210714 22:59:22.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:22.338" level="INFO">/s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:22.338" endtime="20210714 22:59:22.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:22.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:22.338" endtime="20210714 22:59:22.339"/>
</kw>
<msg timestamp="20210714 22:59:22.339" level="INFO">${eTag2} = /s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:22.301" endtime="20210714 22:59:22.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:22.339" endtime="20210714 22:59:22.340"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:22.344" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-54283 --key 31824/multipartKey5 --upload-id a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:22.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:22.737" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:22.342" endtime="20210714 22:59:22.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:22.738" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210714 22:59:22.737" endtime="20210714 22:59:22.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:22.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:22.738" endtime="20210714 22:59:22.739"/>
</kw>
<status status="PASS" starttime="20210714 22:59:22.341" endtime="20210714 22:59:22.739"/>
</kw>
<msg timestamp="20210714 22:59:22.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:22.341" endtime="20210714 22:59:22.739"/>
</kw>
<msg timestamp="20210714 22:59:22.739" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:22.340" endtime="20210714 22:59:22.739"/>
</kw>
<msg timestamp="20210714 22:59:22.740" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:22.340" endtime="20210714 22:59:22.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:22.743" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:22.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:22.778" level="INFO">${output} = /s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:22.741" endtime="20210714 22:59:22.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:22.779" level="INFO">/s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:22.778" endtime="20210714 22:59:22.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:22.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:22.779" endtime="20210714 22:59:22.779"/>
</kw>
<msg timestamp="20210714 22:59:22.780" level="INFO">${part1} = /s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:22.740" endtime="20210714 22:59:22.780"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:22.782" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:22.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:22.817" level="INFO">${output} = /s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:22.781" endtime="20210714 22:59:22.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:22.818" level="INFO">/s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:22.817" endtime="20210714 22:59:22.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:22.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:22.818" endtime="20210714 22:59:22.819"/>
</kw>
<msg timestamp="20210714 22:59:22.819" level="INFO">${part2} = /s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:22.780" endtime="20210714 22:59:22.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:22.819" endtime="20210714 22:59:22.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:22.820" endtime="20210714 22:59:22.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:22.820" endtime="20210714 22:59:22.821"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:22.825" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-54283 --key 31824/multipartKey5 --upload-id a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:23.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:23.215" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:22.823" endtime="20210714 22:59:23.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:23.216" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210714 22:59:23.215" endtime="20210714 22:59:23.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:23.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:23.216" endtime="20210714 22:59:23.217"/>
</kw>
<status status="PASS" starttime="20210714 22:59:22.822" endtime="20210714 22:59:23.217"/>
</kw>
<msg timestamp="20210714 22:59:23.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:22.822" endtime="20210714 22:59:23.217"/>
</kw>
<msg timestamp="20210714 22:59:23.217" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:22.821" endtime="20210714 22:59:23.217"/>
</kw>
<msg timestamp="20210714 22:59:23.218" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:22.821" endtime="20210714 22:59:23.218"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:23.221" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:23.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:23.255" level="INFO">${output} = /s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:23.219" endtime="20210714 22:59:23.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:23.256" level="INFO">/s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:23.255" endtime="20210714 22:59:23.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:23.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:23.256" endtime="20210714 22:59:23.257"/>
</kw>
<msg timestamp="20210714 22:59:23.257" level="INFO">${part1} = /s3v/bucket-54283/31824/multipartKey5106581430214131955</msg>
<status status="PASS" starttime="20210714 22:59:23.218" endtime="20210714 22:59:23.257"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:23.260" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:21.741Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430214131955", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:23.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:23.295" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210714 22:59:23.258" endtime="20210714 22:59:23.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:23.296" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210714 22:59:23.296" endtime="20210714 22:59:23.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:23.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:23.296" endtime="20210714 22:59:23.297"/>
</kw>
<msg timestamp="20210714 22:59:23.297" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210714 22:59:23.257" endtime="20210714 22:59:23.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:23.297" endtime="20210714 22:59:23.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:23.298" endtime="20210714 22:59:23.298"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:23.302" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-54283 --key 31824/multipartKey5 --upload-id a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:23.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:23.697" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:23.300" endtime="20210714 22:59:23.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:23.698" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210714 22:59:23.698" endtime="20210714 22:59:23.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:23.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:23.699" endtime="20210714 22:59:23.699"/>
</kw>
<status status="PASS" starttime="20210714 22:59:23.300" endtime="20210714 22:59:23.700"/>
</kw>
<msg timestamp="20210714 22:59:23.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:23.300" endtime="20210714 22:59:23.700"/>
</kw>
<msg timestamp="20210714 22:59:23.700" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:23.299" endtime="20210714 22:59:23.700"/>
</kw>
<msg timestamp="20210714 22:59:23.700" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/318...</msg>
<status status="PASS" starttime="20210714 22:59:23.299" endtime="20210714 22:59:23.700"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:23.703" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-14T22:59:22.254Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-54283/31824/multipartKey5106581430252404980", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:23.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:23.738" level="INFO">${output} = /s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:23.701" endtime="20210714 22:59:23.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:23.739" level="INFO">/s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:23.738" endtime="20210714 22:59:23.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:23.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:23.739" endtime="20210714 22:59:23.739"/>
</kw>
<msg timestamp="20210714 22:59:23.740" level="INFO">${part2} = /s3v/bucket-54283/31824/multipartKey5106581430252404980</msg>
<status status="PASS" starttime="20210714 22:59:23.701" endtime="20210714 22:59:23.740"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:23.740" endtime="20210714 22:59:23.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:23.740" endtime="20210714 22:59:23.741"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:23.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-54283 --key 31824/multipartKey5 --upload-id a04a0859-2a04-49fe-a443-27a4826e2f1b-106581430180708594 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:24.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:24.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:23.742" endtime="20210714 22:59:24.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:24.136" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:24.135" endtime="20210714 22:59:24.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:24.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:24.136" endtime="20210714 22:59:24.137"/>
</kw>
<msg timestamp="20210714 22:59:24.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:23.742" endtime="20210714 22:59:24.137"/>
</kw>
<msg timestamp="20210714 22:59:24.138" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:23.741" endtime="20210714 22:59:24.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:20.749" endtime="20210714 22:59:24.138"/>
</test>
<test id="s1-s14-s7-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:24.141" level="INFO">${random} = 07196</msg>
<status status="PASS" starttime="20210714 22:59:24.140" endtime="20210714 22:59:24.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:24.142" level="INFO">${PREFIX} = 07196</msg>
<status status="PASS" starttime="20210714 22:59:24.141" endtime="20210714 22:59:24.142"/>
</kw>
<status status="PASS" starttime="20210714 22:59:24.140" endtime="20210714 22:59:24.142"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:24.146" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:24.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:24.295" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.146328 s, 158 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:24.144" endtime="20210714 22:59:24.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:24.296" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.146328 s, 158 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:24.296" endtime="20210714 22:59:24.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:24.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:24.297" endtime="20210714 22:59:24.297"/>
</kw>
<status status="PASS" starttime="20210714 22:59:24.143" endtime="20210714 22:59:24.298"/>
</kw>
<msg timestamp="20210714 22:59:24.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:24.143" endtime="20210714 22:59:24.298"/>
</kw>
<status status="PASS" starttime="20210714 22:59:24.142" endtime="20210714 22:59:24.298"/>
</kw>
<status status="PASS" starttime="20210714 22:59:24.142" endtime="20210714 22:59:24.298"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:24.302" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://bucket-54283/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:27.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:27.952" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:59:24.300" endtime="20210714 22:59:27.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:27.953" level="INFO">Completed 256.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (12.2 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (13.8 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (15.4 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (18.7 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (21.9 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (25.1 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (26.5 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (28.1 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (32.3 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (33.4 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (34.5 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (34.3 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (36.8 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (38.2 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (36.2 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (37.3 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (38.5 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (40.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (41.8 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (42.8 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (43.8 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (45.9 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (47.0 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (47.9 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (49.0 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (50.1 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (51.1 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (52.2 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (53.3 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (54.4 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (55.2 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (56.3 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (57.3 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (58.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (59.2 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (63.9 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (65.9 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (66.4 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (67.4 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (67.1 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (68.0 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (68.3 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (69.3 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (70.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (71.1 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (72.1 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (73.0 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (73.9 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (74.8 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (75.5 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (76.5 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (77.4 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (78.3 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (79.1 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (79.8 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (80.6 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (81.2 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (81.9 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (82.6 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (83.6 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (84.2 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (83.4 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (84.2 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (85.1 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (85.5 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (86.4 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (87.2 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (87.9 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://bucket-54283/mpyawscli           </msg>
<status status="PASS" starttime="20210714 22:59:27.952" endtime="20210714 22:59:27.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:27.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:27.954" endtime="20210714 22:59:27.954"/>
</kw>
<status status="PASS" starttime="20210714 22:59:24.300" endtime="20210714 22:59:27.955"/>
</kw>
<msg timestamp="20210714 22:59:27.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:24.299" endtime="20210714 22:59:27.955"/>
</kw>
<msg timestamp="20210714 22:59:27.955" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:59:24.299" endtime="20210714 22:59:27.955"/>
</kw>
<status status="PASS" starttime="20210714 22:59:24.298" endtime="20210714 22:59:27.955"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:27.959" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://bucket-54283/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:28.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:28.732" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:59:27.957" endtime="20210714 22:59:28.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:28.733" level="INFO">Completed 256.0 KiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (12.5 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (13.1 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (18.2 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (20.7 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (21.2 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (25.8 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (27.6 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (29.8 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (34.0 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (36.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (26.9 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (28.4 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (29.9 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (31.4 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (37.0 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (37.4 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (38.7 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (41.2 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (42.5 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (42.8 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (44.1 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (43.2 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (44.4 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (46.6 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (47.8 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (47.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (49.0 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (50.0 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (51.1 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (52.3 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (53.5 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (54.6 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (52.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (53.6 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (53.8 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (55.4 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (56.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (57.4 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (58.5 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (60.0 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (60.6 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (60.1 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (55.1 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (55.4 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (56.3 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (57.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (58.0 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (58.1 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (59.5 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (57.5 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (58.3 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (60.9 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (60.3 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (60.9 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (61.5 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (61.9 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (62.5 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (63.2 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (63.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (63.7 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (64.3 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (65.6 MiB/s) with 1 file(s) remaining
download: s3://bucket-54283/mpyawscli to ../../tmp/part1.result  </msg>
<status status="PASS" starttime="20210714 22:59:28.732" endtime="20210714 22:59:28.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:28.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:28.733" endtime="20210714 22:59:28.734"/>
</kw>
<status status="PASS" starttime="20210714 22:59:27.957" endtime="20210714 22:59:28.734"/>
</kw>
<msg timestamp="20210714 22:59:28.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:27.957" endtime="20210714 22:59:28.734"/>
</kw>
<msg timestamp="20210714 22:59:28.735" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210714 22:59:27.956" endtime="20210714 22:59:28.735"/>
</kw>
<status status="PASS" starttime="20210714 22:59:27.956" endtime="20210714 22:59:28.735"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:28.740" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-54283/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:29.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:29.147" level="INFO">${output} = delete: s3://bucket-54283/mpyawscli</msg>
<status status="PASS" starttime="20210714 22:59:28.738" endtime="20210714 22:59:29.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:29.149" level="INFO">delete: s3://bucket-54283/mpyawscli</msg>
<status status="PASS" starttime="20210714 22:59:29.148" endtime="20210714 22:59:29.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:29.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:29.149" endtime="20210714 22:59:29.150"/>
</kw>
<status status="PASS" starttime="20210714 22:59:28.737" endtime="20210714 22:59:29.150"/>
</kw>
<msg timestamp="20210714 22:59:29.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:28.737" endtime="20210714 22:59:29.150"/>
</kw>
<msg timestamp="20210714 22:59:29.150" level="INFO">${output} = delete: s3://bucket-54283/mpyawscli</msg>
<status status="PASS" starttime="20210714 22:59:28.736" endtime="20210714 22:59:29.150"/>
</kw>
<status status="PASS" starttime="20210714 22:59:28.735" endtime="20210714 22:59:29.151"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:29.154" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:29.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:29.202" level="INFO">${output} = 62208cdec783d88af254dc028e8da4f5</msg>
<status status="PASS" starttime="20210714 22:59:29.152" endtime="20210714 22:59:29.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:29.203" level="INFO">62208cdec783d88af254dc028e8da4f5</msg>
<status status="PASS" starttime="20210714 22:59:29.203" endtime="20210714 22:59:29.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:29.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:29.204" endtime="20210714 22:59:29.204"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.152" endtime="20210714 22:59:29.205"/>
</kw>
<msg timestamp="20210714 22:59:29.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:29.152" endtime="20210714 22:59:29.205"/>
</kw>
<msg timestamp="20210714 22:59:29.205" level="INFO">${checksumbefore} = 62208cdec783d88af254dc028e8da4f5</msg>
<status status="PASS" starttime="20210714 22:59:29.151" endtime="20210714 22:59:29.205"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:29.208" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:29.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:29.256" level="INFO">${output} = 62208cdec783d88af254dc028e8da4f5</msg>
<status status="PASS" starttime="20210714 22:59:29.206" endtime="20210714 22:59:29.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:29.257" level="INFO">62208cdec783d88af254dc028e8da4f5</msg>
<status status="PASS" starttime="20210714 22:59:29.256" endtime="20210714 22:59:29.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:29.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:29.257" endtime="20210714 22:59:29.258"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.206" endtime="20210714 22:59:29.258"/>
</kw>
<msg timestamp="20210714 22:59:29.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:29.206" endtime="20210714 22:59:29.258"/>
</kw>
<msg timestamp="20210714 22:59:29.258" level="INFO">${checksumafter} = 62208cdec783d88af254dc028e8da4f5</msg>
<status status="PASS" starttime="20210714 22:59:29.205" endtime="20210714 22:59:29.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:29.259" endtime="20210714 22:59:29.259"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.151" endtime="20210714 22:59:29.259"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:24.139" endtime="20210714 22:59:29.260"/>
</test>
<test id="s1-s14-s7-t10" name="Test Multipart Upload Put With Copy">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:29.263" level="INFO">${random} = 49281</msg>
<status status="PASS" starttime="20210714 22:59:29.262" endtime="20210714 22:59:29.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:29.263" level="INFO">${PREFIX} = 49281</msg>
<status status="PASS" starttime="20210714 22:59:29.263" endtime="20210714 22:59:29.263"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.262" endtime="20210714 22:59:29.264"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:29.268" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:29.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:29.307" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.033848 s, 155 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:29.266" endtime="20210714 22:59:29.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:29.308" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.033848 s, 155 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:29.307" endtime="20210714 22:59:29.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:29.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:29.308" endtime="20210714 22:59:29.308"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.265" endtime="20210714 22:59:29.309"/>
</kw>
<msg timestamp="20210714 22:59:29.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:29.265" endtime="20210714 22:59:29.309"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.264" endtime="20210714 22:59:29.309"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.264" endtime="20210714 22:59:29.309"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.264" endtime="20210714 22:59:29.309"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:29.313" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-54283 --key 49281/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:29.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:29.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:29.311" endtime="20210714 22:59:29.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:29.915" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:29.914" endtime="20210714 22:59:29.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:29.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:29.915" endtime="20210714 22:59:29.916"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.311" endtime="20210714 22:59:29.916"/>
</kw>
<msg timestamp="20210714 22:59:29.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:29.311" endtime="20210714 22:59:29.916"/>
</kw>
<msg timestamp="20210714 22:59:29.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:29.310" endtime="20210714 22:59:29.916"/>
</kw>
<msg timestamp="20210714 22:59:29.917" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:29.309" endtime="20210714 22:59:29.917"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:29.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 49281/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:30.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:30.325" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:29.919" endtime="20210714 22:59:30.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:30.327" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:30.326" endtime="20210714 22:59:30.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:30.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:30.327" endtime="20210714 22:59:30.328"/>
</kw>
<status status="PASS" starttime="20210714 22:59:29.918" endtime="20210714 22:59:30.328"/>
</kw>
<msg timestamp="20210714 22:59:30.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:29.918" endtime="20210714 22:59:30.328"/>
</kw>
<msg timestamp="20210714 22:59:30.328" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:29.917" endtime="20210714 22:59:30.328"/>
</kw>
<msg timestamp="20210714 22:59:30.329" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:29.917" endtime="20210714 22:59:30.329"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:30.331" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402", 
    "Key": "49281/copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:30.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:30.366" level="INFO">${output} = d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402</msg>
<status status="PASS" starttime="20210714 22:59:30.329" endtime="20210714 22:59:30.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:30.367" level="INFO">d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402</msg>
<status status="PASS" starttime="20210714 22:59:30.367" endtime="20210714 22:59:30.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:30.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:30.367" endtime="20210714 22:59:30.368"/>
</kw>
<msg timestamp="20210714 22:59:30.368" level="INFO">${uploadID} = d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402</msg>
<status status="PASS" starttime="20210714 22:59:30.329" endtime="20210714 22:59:30.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:30.368" endtime="20210714 22:59:30.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:30.369" endtime="20210714 22:59:30.369"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:30.373" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 49281/copytest/destination --upload-id d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402 --part-number 1 --copy-source bucket-54283/49281/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:31.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:31.082" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:31.005Z", 
        "ETag": "/s3v/bucket-54283/49281/copytest/destination106581430811361531"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:30.371" endtime="20210714 22:59:31.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:31.083" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:31.005Z", 
        "ETag": "/s3v/bucket-54283/49281/copytest/destination106581430811361531"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:31.082" endtime="20210714 22:59:31.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:31.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:31.083" endtime="20210714 22:59:31.084"/>
</kw>
<status status="PASS" starttime="20210714 22:59:30.371" endtime="20210714 22:59:31.084"/>
</kw>
<msg timestamp="20210714 22:59:31.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:30.370" endtime="20210714 22:59:31.084"/>
</kw>
<msg timestamp="20210714 22:59:31.085" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:31.005Z", 
        "ETag": "/s3v/bucket-54283/49281/copytest/destination106581430811361531"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:30.370" endtime="20210714 22:59:31.085"/>
</kw>
<msg timestamp="20210714 22:59:31.085" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:31.005Z", 
        "ETag": "/s3v/bucket-54283/49281/copytest/destination106581430811361531"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:30.369" endtime="20210714 22:59:31.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:31.085" endtime="20210714 22:59:31.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:31.086" endtime="20210714 22:59:31.086"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:31.089" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:31.005Z", 
        "ETag": "/s3v/bucket-54283/49281/copytest/destination106581430811361531"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:31.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:31.124" level="INFO">${output} = /s3v/bucket-54283/49281/copytest/destination106581430811361531</msg>
<status status="PASS" starttime="20210714 22:59:31.087" endtime="20210714 22:59:31.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:31.125" level="INFO">/s3v/bucket-54283/49281/copytest/destination106581430811361531</msg>
<status status="PASS" starttime="20210714 22:59:31.124" endtime="20210714 22:59:31.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:31.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:31.125" endtime="20210714 22:59:31.125"/>
</kw>
<msg timestamp="20210714 22:59:31.126" level="INFO">${eTag1} = /s3v/bucket-54283/49281/copytest/destination106581430811361531</msg>
<status status="PASS" starttime="20210714 22:59:31.086" endtime="20210714 22:59:31.126"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:31.130" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d989f120-41cb-49d4-8984-db7595bb740e-106581430782001402 --bucket bucket-54283 --key 49281/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/49281/copytest/destination106581430811361531,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:31.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:31.522" level="INFO">${output} = {
    "ETag": "f814a213f7d1257fcbc3a0111418e59133df08775a8ecb4811c4a155ba6b1172", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:31.128" endtime="20210714 22:59:31.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:31.523" level="INFO">{
    "ETag": "f814a213f7d1257fcbc3a0111418e59133df08775a8ecb4811c4a155ba6b1172", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:31.522" endtime="20210714 22:59:31.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:31.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:31.523" endtime="20210714 22:59:31.524"/>
</kw>
<status status="PASS" starttime="20210714 22:59:31.128" endtime="20210714 22:59:31.524"/>
</kw>
<msg timestamp="20210714 22:59:31.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:31.127" endtime="20210714 22:59:31.524"/>
</kw>
<msg timestamp="20210714 22:59:31.525" level="INFO">${output} = {
    "ETag": "f814a213f7d1257fcbc3a0111418e59133df08775a8ecb4811c4a155ba6b1172", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "49281/copytest/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:31.127" endtime="20210714 22:59:31.525"/>
</kw>
<status status="PASS" starttime="20210714 22:59:31.126" endtime="20210714 22:59:31.525"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:31.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-54283 --key 49281/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:31.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:31.989" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:31 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:31.527" endtime="20210714 22:59:31.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:31.990" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:31 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 14 Jul 2021 22:59:31 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:59:31.989" endtime="20210714 22:59:31.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:31.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:31.990" endtime="20210714 22:59:31.991"/>
</kw>
<status status="PASS" starttime="20210714 22:59:31.526" endtime="20210714 22:59:31.991"/>
</kw>
<msg timestamp="20210714 22:59:31.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:31.526" endtime="20210714 22:59:31.992"/>
</kw>
<msg timestamp="20210714 22:59:31.992" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:31 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Wed, 14 Jul 2021 22...</msg>
<status status="PASS" starttime="20210714 22:59:31.526" endtime="20210714 22:59:31.992"/>
</kw>
<status status="PASS" starttime="20210714 22:59:31.525" endtime="20210714 22:59:31.992"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:31.997" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:32.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:32.009" level="INFO">${output} = 33102d89c085a65991a2f7b501a27014</msg>
<status status="PASS" starttime="20210714 22:59:31.994" endtime="20210714 22:59:32.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:32.010" level="INFO">33102d89c085a65991a2f7b501a27014</msg>
<status status="PASS" starttime="20210714 22:59:32.009" endtime="20210714 22:59:32.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:32.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:32.010" endtime="20210714 22:59:32.011"/>
</kw>
<status status="PASS" starttime="20210714 22:59:31.993" endtime="20210714 22:59:32.011"/>
</kw>
<msg timestamp="20210714 22:59:32.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:31.993" endtime="20210714 22:59:32.011"/>
</kw>
<msg timestamp="20210714 22:59:32.012" level="INFO">${checksumbefore} = 33102d89c085a65991a2f7b501a27014</msg>
<status status="PASS" starttime="20210714 22:59:31.993" endtime="20210714 22:59:32.012"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:32.016" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:32.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:32.028" level="INFO">${output} = 33102d89c085a65991a2f7b501a27014</msg>
<status status="PASS" starttime="20210714 22:59:32.014" endtime="20210714 22:59:32.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:32.029" level="INFO">33102d89c085a65991a2f7b501a27014</msg>
<status status="PASS" starttime="20210714 22:59:32.029" endtime="20210714 22:59:32.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:32.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:32.030" endtime="20210714 22:59:32.030"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.013" endtime="20210714 22:59:32.030"/>
</kw>
<msg timestamp="20210714 22:59:32.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:32.013" endtime="20210714 22:59:32.031"/>
</kw>
<msg timestamp="20210714 22:59:32.031" level="INFO">${checksumafter} = 33102d89c085a65991a2f7b501a27014</msg>
<status status="PASS" starttime="20210714 22:59:32.012" endtime="20210714 22:59:32.031"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:32.031" endtime="20210714 22:59:32.031"/>
</kw>
<status status="PASS" starttime="20210714 22:59:31.992" endtime="20210714 22:59:32.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:29.261" endtime="20210714 22:59:32.032"/>
</test>
<test id="s1-s14-s7-t11" name="Test Multipart Upload Put With Copy and range">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:32.034" level="INFO">${random} = 79603</msg>
<status status="PASS" starttime="20210714 22:59:32.034" endtime="20210714 22:59:32.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:32.035" level="INFO">${PREFIX} = 79603</msg>
<status status="PASS" starttime="20210714 22:59:32.034" endtime="20210714 22:59:32.035"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.033" endtime="20210714 22:59:32.035"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:32.039" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:32.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:32.109" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.067122 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:32.037" endtime="20210714 22:59:32.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:32.110" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.067122 s, 156 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:32.109" endtime="20210714 22:59:32.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:32.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:32.110" endtime="20210714 22:59:32.111"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.036" endtime="20210714 22:59:32.111"/>
</kw>
<msg timestamp="20210714 22:59:32.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:32.036" endtime="20210714 22:59:32.111"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.036" endtime="20210714 22:59:32.111"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.035" endtime="20210714 22:59:32.112"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.035" endtime="20210714 22:59:32.112"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:32.116" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-54283 --key 79603/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:32.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:32.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:32.114" endtime="20210714 22:59:32.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:32.759" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:32.759" endtime="20210714 22:59:32.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:32.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:32.759" endtime="20210714 22:59:32.761"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.113" endtime="20210714 22:59:32.761"/>
</kw>
<msg timestamp="20210714 22:59:32.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:32.113" endtime="20210714 22:59:32.761"/>
</kw>
<msg timestamp="20210714 22:59:32.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:32.112" endtime="20210714 22:59:32.761"/>
</kw>
<msg timestamp="20210714 22:59:32.762" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:32.112" endtime="20210714 22:59:32.762"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:32.766" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 79603/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:33.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:33.176" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:32.763" endtime="20210714 22:59:33.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:33.177" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:33.176" endtime="20210714 22:59:33.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:33.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:33.177" endtime="20210714 22:59:33.178"/>
</kw>
<status status="PASS" starttime="20210714 22:59:32.763" endtime="20210714 22:59:33.178"/>
</kw>
<msg timestamp="20210714 22:59:33.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:32.763" endtime="20210714 22:59:33.178"/>
</kw>
<msg timestamp="20210714 22:59:33.178" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:32.762" endtime="20210714 22:59:33.178"/>
</kw>
<msg timestamp="20210714 22:59:33.179" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:32.762" endtime="20210714 22:59:33.179"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:33.181" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717", 
    "Key": "79603/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:33.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:33.216" level="INFO">${output} = e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717</msg>
<status status="PASS" starttime="20210714 22:59:33.179" endtime="20210714 22:59:33.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:33.217" level="INFO">e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717</msg>
<status status="PASS" starttime="20210714 22:59:33.216" endtime="20210714 22:59:33.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:33.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:33.217" endtime="20210714 22:59:33.217"/>
</kw>
<msg timestamp="20210714 22:59:33.218" level="INFO">${uploadID} = e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717</msg>
<status status="PASS" starttime="20210714 22:59:33.179" endtime="20210714 22:59:33.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:33.218" endtime="20210714 22:59:33.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:33.218" endtime="20210714 22:59:33.219"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:33.223" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 79603/copyrange/destination --upload-id e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717 --part-number 1 --copy-source bucket-54283/79603/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:33.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:33.887" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:33.840Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581430998335742"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.221" endtime="20210714 22:59:33.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:33.888" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:33.840Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581430998335742"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.887" endtime="20210714 22:59:33.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:33.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:33.888" endtime="20210714 22:59:33.889"/>
</kw>
<status status="PASS" starttime="20210714 22:59:33.221" endtime="20210714 22:59:33.889"/>
</kw>
<msg timestamp="20210714 22:59:33.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:33.221" endtime="20210714 22:59:33.890"/>
</kw>
<msg timestamp="20210714 22:59:33.890" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:33.840Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581430998335742"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.220" endtime="20210714 22:59:33.890"/>
</kw>
<msg timestamp="20210714 22:59:33.890" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:33.840Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581430998335742"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.219" endtime="20210714 22:59:33.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:33.890" endtime="20210714 22:59:33.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:33.891" endtime="20210714 22:59:33.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:33.894" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:33.840Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581430998335742"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:33.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:33.929" level="INFO">${output} = /s3v/bucket-54283/79603/copyrange/destination106581430998335742</msg>
<status status="PASS" starttime="20210714 22:59:33.892" endtime="20210714 22:59:33.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:33.930" level="INFO">/s3v/bucket-54283/79603/copyrange/destination106581430998335742</msg>
<status status="PASS" starttime="20210714 22:59:33.930" endtime="20210714 22:59:33.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:33.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:33.931" endtime="20210714 22:59:33.931"/>
</kw>
<msg timestamp="20210714 22:59:33.931" level="INFO">${eTag1} = /s3v/bucket-54283/79603/copyrange/destination106581430998335742</msg>
<status status="PASS" starttime="20210714 22:59:33.891" endtime="20210714 22:59:33.931"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:33.936" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 79603/copyrange/destination --upload-id e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717 --part-number 2 --copy-source bucket-54283/79603/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:34.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:34.406" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:34.366Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581431044407551"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.934" endtime="20210714 22:59:34.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:34.407" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:34.366Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581431044407551"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:34.407" endtime="20210714 22:59:34.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:34.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:34.408" endtime="20210714 22:59:34.408"/>
</kw>
<status status="PASS" starttime="20210714 22:59:33.934" endtime="20210714 22:59:34.409"/>
</kw>
<msg timestamp="20210714 22:59:34.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:33.933" endtime="20210714 22:59:34.409"/>
</kw>
<msg timestamp="20210714 22:59:34.409" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:34.366Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581431044407551"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.933" endtime="20210714 22:59:34.409"/>
</kw>
<msg timestamp="20210714 22:59:34.409" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:34.366Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581431044407551"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:33.932" endtime="20210714 22:59:34.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:34.410" endtime="20210714 22:59:34.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:34.410" endtime="20210714 22:59:34.410"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:34.413" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:34.366Z", 
        "ETag": "/s3v/bucket-54283/79603/copyrange/destination106581431044407551"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:34.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:34.448" level="INFO">${output} = /s3v/bucket-54283/79603/copyrange/destination106581431044407551</msg>
<status status="PASS" starttime="20210714 22:59:34.411" endtime="20210714 22:59:34.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:34.449" level="INFO">/s3v/bucket-54283/79603/copyrange/destination106581431044407551</msg>
<status status="PASS" starttime="20210714 22:59:34.448" endtime="20210714 22:59:34.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:34.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:34.449" endtime="20210714 22:59:34.449"/>
</kw>
<msg timestamp="20210714 22:59:34.450" level="INFO">${eTag2} = /s3v/bucket-54283/79603/copyrange/destination106581431044407551</msg>
<status status="PASS" starttime="20210714 22:59:34.411" endtime="20210714 22:59:34.450"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:34.454" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e8efad90-ecd1-4c1b-a68f-125f4b5bde6e-106581430968254717 --bucket bucket-54283 --key 79603/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/79603/copyrange/destination106581430998335742,PartNumber=1},{ETag=/s3v/bucket-54283/79603/copyrange/destination106581431044407551,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:34.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:34.861" level="INFO">${output} = {
    "ETag": "35e45e4e8ec10ffc393ebf772a403f586bef4624f4971c904d2146fd07ada7e4", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:34.452" endtime="20210714 22:59:34.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:34.862" level="INFO">{
    "ETag": "35e45e4e8ec10ffc393ebf772a403f586bef4624f4971c904d2146fd07ada7e4", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:34.862" endtime="20210714 22:59:34.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:34.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:34.863" endtime="20210714 22:59:34.863"/>
</kw>
<status status="PASS" starttime="20210714 22:59:34.452" endtime="20210714 22:59:34.863"/>
</kw>
<msg timestamp="20210714 22:59:34.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:34.451" endtime="20210714 22:59:34.864"/>
</kw>
<msg timestamp="20210714 22:59:34.864" level="INFO">${output} = {
    "ETag": "35e45e4e8ec10ffc393ebf772a403f586bef4624f4971c904d2146fd07ada7e4", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "79603/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:34.451" endtime="20210714 22:59:34.864"/>
</kw>
<status status="PASS" starttime="20210714 22:59:34.450" endtime="20210714 22:59:34.864"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:34.868" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-54283 --key 79603/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:35.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:35.431" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:34 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:59:34.866" endtime="20210714 22:59:35.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:35.433" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:34 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 22:59:35 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:59:35.432" endtime="20210714 22:59:35.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:35.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:35.433" endtime="20210714 22:59:35.434"/>
</kw>
<status status="PASS" starttime="20210714 22:59:34.866" endtime="20210714 22:59:35.434"/>
</kw>
<msg timestamp="20210714 22:59:35.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:34.866" endtime="20210714 22:59:35.434"/>
</kw>
<msg timestamp="20210714 22:59:35.434" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:34 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:59:34.865" endtime="20210714 22:59:35.434"/>
</kw>
<status status="PASS" starttime="20210714 22:59:34.864" endtime="20210714 22:59:35.435"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:35.439" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:35.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:35.462" level="INFO">${output} = d41ab0a038b752f7c538f37d2d9021dc</msg>
<status status="PASS" starttime="20210714 22:59:35.437" endtime="20210714 22:59:35.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:35.463" level="INFO">d41ab0a038b752f7c538f37d2d9021dc</msg>
<status status="PASS" starttime="20210714 22:59:35.462" endtime="20210714 22:59:35.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:35.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:35.463" endtime="20210714 22:59:35.464"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.436" endtime="20210714 22:59:35.464"/>
</kw>
<msg timestamp="20210714 22:59:35.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:35.436" endtime="20210714 22:59:35.465"/>
</kw>
<msg timestamp="20210714 22:59:35.465" level="INFO">${checksumbefore} = d41ab0a038b752f7c538f37d2d9021dc</msg>
<status status="PASS" starttime="20210714 22:59:35.435" endtime="20210714 22:59:35.465"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:35.468" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:35.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:35.491" level="INFO">${output} = d41ab0a038b752f7c538f37d2d9021dc</msg>
<status status="PASS" starttime="20210714 22:59:35.467" endtime="20210714 22:59:35.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:35.493" level="INFO">d41ab0a038b752f7c538f37d2d9021dc</msg>
<status status="PASS" starttime="20210714 22:59:35.492" endtime="20210714 22:59:35.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:35.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:35.493" endtime="20210714 22:59:35.493"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.466" endtime="20210714 22:59:35.494"/>
</kw>
<msg timestamp="20210714 22:59:35.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:35.466" endtime="20210714 22:59:35.494"/>
</kw>
<msg timestamp="20210714 22:59:35.494" level="INFO">${checksumafter} = d41ab0a038b752f7c538f37d2d9021dc</msg>
<status status="PASS" starttime="20210714 22:59:35.465" endtime="20210714 22:59:35.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:35.494" endtime="20210714 22:59:35.495"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.435" endtime="20210714 22:59:35.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:32.032" endtime="20210714 22:59:35.495"/>
</test>
<test id="s1-s14-s7-t12" name="Test Multipart Upload Put With Copy and range with IfModifiedSince">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:35.497" level="INFO">${random} = 99250</msg>
<status status="PASS" starttime="20210714 22:59:35.497" endtime="20210714 22:59:35.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:35.498" level="INFO">${PREFIX} = 99250</msg>
<status status="PASS" starttime="20210714 22:59:35.498" endtime="20210714 22:59:35.498"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.497" endtime="20210714 22:59:35.498"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:35.502" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:35.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:35.580" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.07409 s, 142 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:35.500" endtime="20210714 22:59:35.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:35.582" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.07409 s, 142 MB/s</msg>
<status status="PASS" starttime="20210714 22:59:35.581" endtime="20210714 22:59:35.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:35.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:35.582" endtime="20210714 22:59:35.583"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.500" endtime="20210714 22:59:35.583"/>
</kw>
<msg timestamp="20210714 22:59:35.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:35.499" endtime="20210714 22:59:35.583"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.499" endtime="20210714 22:59:35.584"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.499" endtime="20210714 22:59:35.584"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.498" endtime="20210714 22:59:35.584"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210714 22:59:35.585" level="INFO">${curDate} = 2021-07-14 22:59:35.584</msg>
<status status="PASS" starttime="20210714 22:59:35.584" endtime="20210714 22:59:35.585"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20210714 22:59:35.589" level="INFO">${beforeCreate} = 2021-07-13 22:59:35.584</msg>
<status status="PASS" starttime="20210714 22:59:35.585" endtime="20210714 22:59:35.589"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20210714 22:59:35.590" level="INFO">${afterCreate} = 2021-07-15 22:59:35.584</msg>
<status status="PASS" starttime="20210714 22:59:35.590" endtime="20210714 22:59:35.590"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:35.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-54283 --key 99250/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:38.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:38.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:35.593" endtime="20210714 22:59:38.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:38.754" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:38.753" endtime="20210714 22:59:38.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:38.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:38.754" endtime="20210714 22:59:38.754"/>
</kw>
<status status="PASS" starttime="20210714 22:59:35.592" endtime="20210714 22:59:38.755"/>
</kw>
<msg timestamp="20210714 22:59:38.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:35.592" endtime="20210714 22:59:38.755"/>
</kw>
<msg timestamp="20210714 22:59:38.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:35.591" endtime="20210714 22:59:38.755"/>
</kw>
<msg timestamp="20210714 22:59:38.755" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:35.590" endtime="20210714 22:59:38.756"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:38.759" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 99250/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:39.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:39.163" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:38.757" endtime="20210714 22:59:39.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:39.164" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:39.163" endtime="20210714 22:59:39.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:39.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:39.164" endtime="20210714 22:59:39.165"/>
</kw>
<status status="PASS" starttime="20210714 22:59:38.757" endtime="20210714 22:59:39.165"/>
</kw>
<msg timestamp="20210714 22:59:39.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:38.757" endtime="20210714 22:59:39.165"/>
</kw>
<msg timestamp="20210714 22:59:39.166" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:38.756" endtime="20210714 22:59:39.166"/>
</kw>
<msg timestamp="20210714 22:59:39.166" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:38.756" endtime="20210714 22:59:39.166"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:39.169" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577", 
    "Key": "99250/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:39.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:39.204" level="INFO">${output} = 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577</msg>
<status status="PASS" starttime="20210714 22:59:39.167" endtime="20210714 22:59:39.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:39.205" level="INFO">7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577</msg>
<status status="PASS" starttime="20210714 22:59:39.204" endtime="20210714 22:59:39.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:39.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:39.205" endtime="20210714 22:59:39.205"/>
</kw>
<msg timestamp="20210714 22:59:39.206" level="INFO">${uploadID} = 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577</msg>
<status status="PASS" starttime="20210714 22:59:39.166" endtime="20210714 22:59:39.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:39.206" endtime="20210714 22:59:39.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:39.207" endtime="20210714 22:59:39.207"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:39.211" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 99250/copyrange/destination --upload-id 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577 --part-number 1 --copy-source bucket-54283/99250/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2021-07-15 22:59:35.584' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:39.616" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:39.616" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.209" endtime="20210714 22:59:39.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:39.617" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.616" endtime="20210714 22:59:39.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:39.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:39.617" endtime="20210714 22:59:39.618"/>
</kw>
<msg timestamp="20210714 22:59:39.618" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.208" endtime="20210714 22:59:39.618"/>
</kw>
<msg timestamp="20210714 22:59:39.619" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.207" endtime="20210714 22:59:39.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:39.619" endtime="20210714 22:59:39.619"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:39.623" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 99250/copyrange/destination --upload-id 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577 --part-number 2 --copy-source bucket-54283/99250/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2021-07-13 22:59:35.584' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:40.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:40.031" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.621" endtime="20210714 22:59:40.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:40.032" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:40.032" endtime="20210714 22:59:40.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:40.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:40.033" endtime="20210714 22:59:40.033"/>
</kw>
<msg timestamp="20210714 22:59:40.034" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.620" endtime="20210714 22:59:40.034"/>
</kw>
<msg timestamp="20210714 22:59:40.034" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210714 22:59:39.619" endtime="20210714 22:59:40.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:40.034" endtime="20210714 22:59:40.035"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:40.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 99250/copyrange/destination --upload-id 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577 --part-number 1 --copy-source bucket-54283/99250/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2021-07-13 22:59:35.584' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:40.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:40.694" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:40.653Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431444242692"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.036" endtime="20210714 22:59:40.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:40.695" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:40.653Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431444242692"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.694" endtime="20210714 22:59:40.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:40.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:40.695" endtime="20210714 22:59:40.696"/>
</kw>
<msg timestamp="20210714 22:59:40.696" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:40.653Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431444242692"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.036" endtime="20210714 22:59:40.696"/>
</kw>
<msg timestamp="20210714 22:59:40.697" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:40.653Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431444242692"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.035" endtime="20210714 22:59:40.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:40.697" endtime="20210714 22:59:40.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:40.697" endtime="20210714 22:59:40.698"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:40.700" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:40.653Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431444242692"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:40.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:40.734" level="INFO">${output} = /s3v/bucket-54283/99250/copyrange/destination106581431444242692</msg>
<status status="PASS" starttime="20210714 22:59:40.698" endtime="20210714 22:59:40.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:40.735" level="INFO">/s3v/bucket-54283/99250/copyrange/destination106581431444242692</msg>
<status status="PASS" starttime="20210714 22:59:40.734" endtime="20210714 22:59:40.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:40.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:40.735" endtime="20210714 22:59:40.736"/>
</kw>
<msg timestamp="20210714 22:59:40.736" level="INFO">${eTag1} = /s3v/bucket-54283/99250/copyrange/destination106581431444242692</msg>
<status status="PASS" starttime="20210714 22:59:40.698" endtime="20210714 22:59:40.736"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:40.740" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-54283 --key 99250/copyrange/destination --upload-id 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577 --part-number 2 --copy-source bucket-54283/99250/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2021-07-15 22:59:35.584' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:41.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:41.219" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:41.176Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431490642181"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.738" endtime="20210714 22:59:41.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:41.221" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:41.176Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431490642181"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:41.220" endtime="20210714 22:59:41.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:41.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:41.221" endtime="20210714 22:59:41.221"/>
</kw>
<msg timestamp="20210714 22:59:41.222" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:41.176Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431490642181"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.737" endtime="20210714 22:59:41.222"/>
</kw>
<msg timestamp="20210714 22:59:41.222" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:41.176Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431490642181"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:40.736" endtime="20210714 22:59:41.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:41.222" endtime="20210714 22:59:41.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:41.223" endtime="20210714 22:59:41.223"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:41.226" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-14T22:59:41.176Z", 
        "ETag": "/s3v/bucket-54283/99250/copyrange/destination106581431490642181"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:41.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:41.260" level="INFO">${output} = /s3v/bucket-54283/99250/copyrange/destination106581431490642181</msg>
<status status="PASS" starttime="20210714 22:59:41.224" endtime="20210714 22:59:41.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:41.261" level="INFO">/s3v/bucket-54283/99250/copyrange/destination106581431490642181</msg>
<status status="PASS" starttime="20210714 22:59:41.260" endtime="20210714 22:59:41.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:41.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:41.261" endtime="20210714 22:59:41.262"/>
</kw>
<msg timestamp="20210714 22:59:41.262" level="INFO">${eTag2} = /s3v/bucket-54283/99250/copyrange/destination106581431490642181</msg>
<status status="PASS" starttime="20210714 22:59:41.223" endtime="20210714 22:59:41.262"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:41.267" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7d3110f7-02b8-4f9e-810b-6786b495639c-106581431361208577 --bucket bucket-54283 --key 99250/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-54283/99250/copyrange/destination106581431444242692,PartNumber=1},{ETag=/s3v/bucket-54283/99250/copyrange/destination106581431490642181,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:41.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:41.662" level="INFO">${output} = {
    "ETag": "479a649f27235700a57383b41f14559027886f5ee1c6d37b7628c35e7ab2145f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:41.265" endtime="20210714 22:59:41.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:41.664" level="INFO">{
    "ETag": "479a649f27235700a57383b41f14559027886f5ee1c6d37b7628c35e7ab2145f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:41.663" endtime="20210714 22:59:41.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:41.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:41.664" endtime="20210714 22:59:41.665"/>
</kw>
<status status="PASS" starttime="20210714 22:59:41.264" endtime="20210714 22:59:41.665"/>
</kw>
<msg timestamp="20210714 22:59:41.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:41.264" endtime="20210714 22:59:41.665"/>
</kw>
<msg timestamp="20210714 22:59:41.666" level="INFO">${output} = {
    "ETag": "479a649f27235700a57383b41f14559027886f5ee1c6d37b7628c35e7ab2145f", 
    "Bucket": "bucket-54283", 
    "Location": "bucket-54283", 
    "Key": "99250/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210714 22:59:41.263" endtime="20210714 22:59:41.666"/>
</kw>
<status status="PASS" starttime="20210714 22:59:41.262" endtime="20210714 22:59:41.666"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:41.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-54283 --key 99250/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:42.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:42.155" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:41 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:59:41.668" endtime="20210714 22:59:42.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:42.156" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:41 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 22:59:42 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 22:59:42.155" endtime="20210714 22:59:42.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:42.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:42.157" endtime="20210714 22:59:42.157"/>
</kw>
<status status="PASS" starttime="20210714 22:59:41.668" endtime="20210714 22:59:42.157"/>
</kw>
<msg timestamp="20210714 22:59:42.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:41.667" endtime="20210714 22:59:42.158"/>
</kw>
<msg timestamp="20210714 22:59:42.158" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 22:59:41 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Wed, 14 Jul 2021 2...</msg>
<status status="PASS" starttime="20210714 22:59:41.667" endtime="20210714 22:59:42.158"/>
</kw>
<status status="PASS" starttime="20210714 22:59:41.666" endtime="20210714 22:59:42.158"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:42.162" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:42.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:42.185" level="INFO">${output} = 123dfb7ab4ef3acc68b0d4861dc7bd4d</msg>
<status status="PASS" starttime="20210714 22:59:42.160" endtime="20210714 22:59:42.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:42.187" level="INFO">123dfb7ab4ef3acc68b0d4861dc7bd4d</msg>
<status status="PASS" starttime="20210714 22:59:42.186" endtime="20210714 22:59:42.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:42.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:42.187" endtime="20210714 22:59:42.187"/>
</kw>
<status status="PASS" starttime="20210714 22:59:42.160" endtime="20210714 22:59:42.188"/>
</kw>
<msg timestamp="20210714 22:59:42.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:42.159" endtime="20210714 22:59:42.188"/>
</kw>
<msg timestamp="20210714 22:59:42.188" level="INFO">${checksumbefore} = 123dfb7ab4ef3acc68b0d4861dc7bd4d</msg>
<status status="PASS" starttime="20210714 22:59:42.159" endtime="20210714 22:59:42.188"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:42.191" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:42.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:42.214" level="INFO">${output} = 123dfb7ab4ef3acc68b0d4861dc7bd4d</msg>
<status status="PASS" starttime="20210714 22:59:42.190" endtime="20210714 22:59:42.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:42.215" level="INFO">123dfb7ab4ef3acc68b0d4861dc7bd4d</msg>
<status status="PASS" starttime="20210714 22:59:42.215" endtime="20210714 22:59:42.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:42.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:42.215" endtime="20210714 22:59:42.216"/>
</kw>
<status status="PASS" starttime="20210714 22:59:42.189" endtime="20210714 22:59:42.216"/>
</kw>
<msg timestamp="20210714 22:59:42.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:42.189" endtime="20210714 22:59:42.217"/>
</kw>
<msg timestamp="20210714 22:59:42.217" level="INFO">${checksumafter} = 123dfb7ab4ef3acc68b0d4861dc7bd4d</msg>
<status status="PASS" starttime="20210714 22:59:42.188" endtime="20210714 22:59:42.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:42.217" endtime="20210714 22:59:42.217"/>
</kw>
<status status="PASS" starttime="20210714 22:59:42.158" endtime="20210714 22:59:42.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:35.496" endtime="20210714 22:59:42.218"/>
</test>
<test id="s1-s14-s7-t13" name="Test Multipart Upload list">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:42.220" level="INFO">${random} = 25591</msg>
<status status="PASS" starttime="20210714 22:59:42.219" endtime="20210714 22:59:42.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:42.221" level="INFO">${PREFIX} = 25591</msg>
<status status="PASS" starttime="20210714 22:59:42.220" endtime="20210714 22:59:42.221"/>
</kw>
<status status="PASS" starttime="20210714 22:59:42.219" endtime="20210714 22:59:42.221"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:42.224" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 25591/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:42.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:42.616" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
    "Key": "25591/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.223" endtime="20210714 22:59:42.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:42.617" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
    "Key": "25591/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.616" endtime="20210714 22:59:42.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:42.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:42.617" endtime="20210714 22:59:42.618"/>
</kw>
<status status="PASS" starttime="20210714 22:59:42.222" endtime="20210714 22:59:42.618"/>
</kw>
<msg timestamp="20210714 22:59:42.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:42.222" endtime="20210714 22:59:42.619"/>
</kw>
<msg timestamp="20210714 22:59:42.619" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
    "Key": "25591/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.222" endtime="20210714 22:59:42.619"/>
</kw>
<msg timestamp="20210714 22:59:42.619" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
    "Key": "25591/listtest/key1"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.221" endtime="20210714 22:59:42.619"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:42.622" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
    "Key": "25591/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:42.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:42.656" level="INFO">${output} = 5176598d-a566-4b72-862a-55276f30008c-106581431587635462</msg>
<status status="PASS" starttime="20210714 22:59:42.620" endtime="20210714 22:59:42.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:42.657" level="INFO">5176598d-a566-4b72-862a-55276f30008c-106581431587635462</msg>
<status status="PASS" starttime="20210714 22:59:42.656" endtime="20210714 22:59:42.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:42.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:42.657" endtime="20210714 22:59:42.658"/>
</kw>
<msg timestamp="20210714 22:59:42.658" level="INFO">${uploadID1} = 5176598d-a566-4b72-862a-55276f30008c-106581431587635462</msg>
<status status="PASS" starttime="20210714 22:59:42.619" endtime="20210714 22:59:42.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:42.658" endtime="20210714 22:59:42.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:42.659" endtime="20210714 22:59:42.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:42.659" endtime="20210714 22:59:42.660"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:42.663" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-54283 --key 25591/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:43.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:43.055" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
    "Key": "25591/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.662" endtime="20210714 22:59:43.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:43.057" level="INFO">{
    "Bucket": "bucket-54283", 
    "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
    "Key": "25591/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:59:43.056" endtime="20210714 22:59:43.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:43.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:43.057" endtime="20210714 22:59:43.057"/>
</kw>
<status status="PASS" starttime="20210714 22:59:42.661" endtime="20210714 22:59:43.058"/>
</kw>
<msg timestamp="20210714 22:59:43.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:42.661" endtime="20210714 22:59:43.058"/>
</kw>
<msg timestamp="20210714 22:59:43.058" level="INFO">${output} = {
    "Bucket": "bucket-54283", 
    "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
    "Key": "25591/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.660" endtime="20210714 22:59:43.058"/>
</kw>
<msg timestamp="20210714 22:59:43.058" level="INFO">${result} = {
    "Bucket": "bucket-54283", 
    "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
    "Key": "25591/listtest/key2"
}</msg>
<status status="PASS" starttime="20210714 22:59:42.660" endtime="20210714 22:59:43.058"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:43.061" level="INFO">Running command 'echo '{
    "Bucket": "bucket-54283", 
    "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
    "Key": "25591/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:43.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:43.097" level="INFO">${output} = 5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767</msg>
<status status="PASS" starttime="20210714 22:59:43.059" endtime="20210714 22:59:43.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:43.098" level="INFO">5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767</msg>
<status status="PASS" starttime="20210714 22:59:43.097" endtime="20210714 22:59:43.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:43.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:43.098" endtime="20210714 22:59:43.099"/>
</kw>
<msg timestamp="20210714 22:59:43.099" level="INFO">${uploadID2} = 5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767</msg>
<status status="PASS" starttime="20210714 22:59:43.059" endtime="20210714 22:59:43.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:43.099" endtime="20210714 22:59:43.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:43.100" endtime="20210714 22:59:43.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:43.100" endtime="20210714 22:59:43.100"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:43.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-54283 --prefix 25591/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:43.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:43.497" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:5...</msg>
<status status="PASS" starttime="20210714 22:59:43.103" endtime="20210714 22:59:43.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:43.498" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:59:42.575Z", 
            "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
            "StorageClass": "STANDARD", 
            "Key": "25591/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:59:43.014Z", 
            "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
            "StorageClass": "STANDARD", 
            "Key": "25591/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:59:43.498" endtime="20210714 22:59:43.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:43.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:43.499" endtime="20210714 22:59:43.499"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.102" endtime="20210714 22:59:43.499"/>
</kw>
<msg timestamp="20210714 22:59:43.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:43.102" endtime="20210714 22:59:43.500"/>
</kw>
<msg timestamp="20210714 22:59:43.500" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:5...</msg>
<status status="PASS" starttime="20210714 22:59:43.101" endtime="20210714 22:59:43.500"/>
</kw>
<msg timestamp="20210714 22:59:43.500" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:5...</msg>
<status status="PASS" starttime="20210714 22:59:43.101" endtime="20210714 22:59:43.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:43.500" endtime="20210714 22:59:43.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:43.501" endtime="20210714 22:59:43.501"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:43.504" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:59:42.575Z", 
            "UploadId": "5176598d-a566-4b72-862a-55276f30008c-106581431587635462", 
            "StorageClass": "STANDARD", 
            "Key": "25591/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-14T22:59:43.014Z", 
            "UploadId": "5b619ecd-8e04-41eb-9b3b-b878d14a261c-106581431616405767", 
            "StorageClass": "STANDARD", 
            "Key": "25591/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:43.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:43.539" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20210714 22:59:43.502" endtime="20210714 22:59:43.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:43.540" level="INFO">2</msg>
<status status="PASS" starttime="20210714 22:59:43.540" endtime="20210714 22:59:43.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:43.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:43.540" endtime="20210714 22:59:43.541"/>
</kw>
<msg timestamp="20210714 22:59:43.541" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20210714 22:59:43.502" endtime="20210714 22:59:43.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:59:43.541" endtime="20210714 22:59:43.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:42.218" endtime="20210714 22:59:43.542"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:59:05.038" endtime="20210714 22:59:43.543"/>
</suite>
<suite id="s1-s14-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:43.556" level="INFO">${random} = 97813</msg>
<status status="PASS" starttime="20210714 22:59:43.555" endtime="20210714 22:59:43.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:43.557" level="INFO">${PREFIX} = 97813</msg>
<status status="PASS" starttime="20210714 22:59:43.556" endtime="20210714 22:59:43.557"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.555" endtime="20210714 22:59:43.557"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.555" endtime="20210714 22:59:43.557"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:43.559" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:43.561" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:59:43.561" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:59:43.558" endtime="20210714 22:59:43.561"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:43.562" endtime="20210714 22:59:43.562"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:43.564" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:43.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:43.682" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:59:43.562" endtime="20210714 22:59:43.682"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:43.687" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:44.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:44.032" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:59:43.685" endtime="20210714 22:59:44.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:44.034" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:59:44.033" endtime="20210714 22:59:44.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:44.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:44.034" endtime="20210714 22:59:44.034"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.684" endtime="20210714 22:59:44.035"/>
</kw>
<msg timestamp="20210714 22:59:44.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:43.684" endtime="20210714 22:59:44.035"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.684" endtime="20210714 22:59:44.035"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.683" endtime="20210714 22:59:44.035"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.682" endtime="20210714 22:59:44.035"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.558" endtime="20210714 22:59:44.035"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.557" endtime="20210714 22:59:44.036"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:44.036" endtime="20210714 22:59:44.037"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:44.037" endtime="20210714 22:59:44.037"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:44.041" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:44.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:44.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:44.039" endtime="20210714 22:59:44.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:44.320" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:44.319" endtime="20210714 22:59:44.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:44.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:44.320" endtime="20210714 22:59:44.320"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.038" endtime="20210714 22:59:44.321"/>
</kw>
<msg timestamp="20210714 22:59:44.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:44.038" endtime="20210714 22:59:44.321"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.038" endtime="20210714 22:59:44.321"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:44.324" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:44.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:44.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:44.322" endtime="20210714 22:59:44.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:44.602" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:44.601" endtime="20210714 22:59:44.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:44.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:44.602" endtime="20210714 22:59:44.602"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.322" endtime="20210714 22:59:44.603"/>
</kw>
<msg timestamp="20210714 22:59:44.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:44.322" endtime="20210714 22:59:44.603"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.321" endtime="20210714 22:59:44.603"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:44.606" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:44.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:44.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:44.604" endtime="20210714 22:59:44.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:44.885" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:44.884" endtime="20210714 22:59:44.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:44.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:44.885" endtime="20210714 22:59:44.885"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.604" endtime="20210714 22:59:44.886"/>
</kw>
<msg timestamp="20210714 22:59:44.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:44.603" endtime="20210714 22:59:44.886"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.603" endtime="20210714 22:59:44.886"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:44.890" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:45.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:45.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:44.888" endtime="20210714 22:59:45.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:45.171" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:45.170" endtime="20210714 22:59:45.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:45.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:45.171" endtime="20210714 22:59:45.172"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.887" endtime="20210714 22:59:45.172"/>
</kw>
<msg timestamp="20210714 22:59:45.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:44.887" endtime="20210714 22:59:45.173"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.886" endtime="20210714 22:59:45.173"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.038" endtime="20210714 22:59:45.173"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.037" endtime="20210714 22:59:45.173"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.036" endtime="20210714 22:59:45.173"/>
</kw>
<status status="PASS" starttime="20210714 22:59:44.036" endtime="20210714 22:59:45.174"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:45.175" level="INFO">${postfix} = 08434</msg>
<status status="PASS" starttime="20210714 22:59:45.175" endtime="20210714 22:59:45.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:59:45.175" level="INFO">${bucket} = bucket-08434</msg>
<status status="PASS" starttime="20210714 22:59:45.175" endtime="20210714 22:59:45.175"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:45.179" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-08434 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:45.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:45.568" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-08434"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.177" endtime="20210714 22:59:45.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:45.569" level="INFO">{
    "Location": "http://s3g:9878/bucket-08434"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.569" endtime="20210714 22:59:45.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:45.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:45.570" endtime="20210714 22:59:45.570"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.177" endtime="20210714 22:59:45.570"/>
</kw>
<msg timestamp="20210714 22:59:45.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:45.177" endtime="20210714 22:59:45.571"/>
</kw>
<msg timestamp="20210714 22:59:45.571" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-08434"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.176" endtime="20210714 22:59:45.571"/>
</kw>
<msg timestamp="20210714 22:59:45.571" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-08434"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.176" endtime="20210714 22:59:45.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:45.571" endtime="20210714 22:59:45.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:45.572" endtime="20210714 22:59:45.572"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.175" endtime="20210714 22:59:45.572"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.174" endtime="20210714 22:59:45.572"/>
</kw>
<msg timestamp="20210714 22:59:45.573" level="INFO">${BUCKET} = bucket-08434</msg>
<status status="PASS" starttime="20210714 22:59:45.174" endtime="20210714 22:59:45.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:45.573" level="INFO">${BUCKET} = bucket-08434</msg>
<status status="PASS" starttime="20210714 22:59:45.573" endtime="20210714 22:59:45.573"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:45.573" endtime="20210714 22:59:45.574"/>
</kw>
<status status="PASS" starttime="20210714 22:59:43.554" endtime="20210714 22:59:45.574"/>
</kw>
<test id="s1-s14-s8-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:45.576" level="INFO">${postfix} = 14278</msg>
<status status="PASS" starttime="20210714 22:59:45.576" endtime="20210714 22:59:45.576"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:45.577" level="INFO">${DESTBUCKET} = destbucket-14278</msg>
<status status="PASS" starttime="20210714 22:59:45.576" endtime="20210714 22:59:45.577"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:45.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-14278 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:45.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:45.975" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-14278"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.579" endtime="20210714 22:59:45.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:45.976" level="INFO">{
    "Location": "http://s3g:9878/destbucket-14278"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.976" endtime="20210714 22:59:45.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:45.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:45.977" endtime="20210714 22:59:45.977"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.578" endtime="20210714 22:59:45.978"/>
</kw>
<msg timestamp="20210714 22:59:45.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:45.578" endtime="20210714 22:59:45.978"/>
</kw>
<msg timestamp="20210714 22:59:45.978" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-14278"
}</msg>
<status status="PASS" starttime="20210714 22:59:45.577" endtime="20210714 22:59:45.978"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.577" endtime="20210714 22:59:45.978"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.575" endtime="20210714 22:59:45.978"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.575" endtime="20210714 22:59:45.978"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:45.982" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20210714 22:59:45.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:45.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:45.980" endtime="20210714 22:59:45.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:45.985" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:45.985" endtime="20210714 22:59:45.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:45.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:45.985" endtime="20210714 22:59:45.986"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.979" endtime="20210714 22:59:45.986"/>
</kw>
<msg timestamp="20210714 22:59:45.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:45.979" endtime="20210714 22:59:45.986"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.979" endtime="20210714 22:59:45.987"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:45.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-08434 --key 97813/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:46.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:46.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:45.989" endtime="20210714 22:59:46.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:46.422" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:46.421" endtime="20210714 22:59:46.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:46.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:46.422" endtime="20210714 22:59:46.423"/>
</kw>
<status status="PASS" starttime="20210714 22:59:45.988" endtime="20210714 22:59:46.423"/>
</kw>
<msg timestamp="20210714 22:59:46.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:45.988" endtime="20210714 22:59:46.423"/>
</kw>
<msg timestamp="20210714 22:59:46.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:45.987" endtime="20210714 22:59:46.423"/>
</kw>
<msg timestamp="20210714 22:59:46.424" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:45.987" endtime="20210714 22:59:46.424"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:46.428" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-08434 --prefix 97813/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:46.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:46.815" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:46.375Z", 
            "ETag": "2021-07-14T22:59:46.375Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:46.426" endtime="20210714 22:59:46.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:46.817" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:46.375Z", 
            "ETag": "2021-07-14T22:59:46.375Z", 
            "StorageClass": "STANDARD", 
            "Key": "97813/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:59:46.816" endtime="20210714 22:59:46.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:46.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:46.817" endtime="20210714 22:59:46.818"/>
</kw>
<status status="PASS" starttime="20210714 22:59:46.425" endtime="20210714 22:59:46.818"/>
</kw>
<msg timestamp="20210714 22:59:46.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:46.425" endtime="20210714 22:59:46.818"/>
</kw>
<msg timestamp="20210714 22:59:46.818" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:46.375Z", 
            "ETag": "2021-07-14T22:59:46.375Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:46.424" endtime="20210714 22:59:46.818"/>
</kw>
<msg timestamp="20210714 22:59:46.819" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:46.375Z", 
            "ETag": "2021-07-14T22:59:46.375Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:46.424" endtime="20210714 22:59:46.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:46.819" endtime="20210714 22:59:46.819"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:46.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-14278 --key 97813/copyobject/f1 --copy-source bucket-08434/97813/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:47.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:47.281" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:47.234Z", 
        "ETag": "db817138-2562-47d8-9e18-b2a0b185a861"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:46.822" endtime="20210714 22:59:47.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:47.283" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:47.234Z", 
        "ETag": "db817138-2562-47d8-9e18-b2a0b185a861"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:47.282" endtime="20210714 22:59:47.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:47.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:47.283" endtime="20210714 22:59:47.283"/>
</kw>
<status status="PASS" starttime="20210714 22:59:46.821" endtime="20210714 22:59:47.284"/>
</kw>
<msg timestamp="20210714 22:59:47.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:46.820" endtime="20210714 22:59:47.284"/>
</kw>
<msg timestamp="20210714 22:59:47.284" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:47.234Z", 
        "ETag": "db817138-2562-47d8-9e18-b2a0b185a861"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:46.820" endtime="20210714 22:59:47.284"/>
</kw>
<msg timestamp="20210714 22:59:47.284" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:47.234Z", 
        "ETag": "db817138-2562-47d8-9e18-b2a0b185a861"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:46.819" endtime="20210714 22:59:47.284"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:47.288" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-14278 --prefix 97813/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:47.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:47.686" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:47.234Z", 
            "ETag": "2021-07-14T22:59:47.234Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:47.286" endtime="20210714 22:59:47.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:47.688" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:47.234Z", 
            "ETag": "2021-07-14T22:59:47.234Z", 
            "StorageClass": "STANDARD", 
            "Key": "97813/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:59:47.687" endtime="20210714 22:59:47.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:47.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:47.688" endtime="20210714 22:59:47.688"/>
</kw>
<status status="PASS" starttime="20210714 22:59:47.286" endtime="20210714 22:59:47.689"/>
</kw>
<msg timestamp="20210714 22:59:47.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:47.286" endtime="20210714 22:59:47.689"/>
</kw>
<msg timestamp="20210714 22:59:47.689" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:47.234Z", 
            "ETag": "2021-07-14T22:59:47.234Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:47.285" endtime="20210714 22:59:47.689"/>
</kw>
<msg timestamp="20210714 22:59:47.689" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:47.234Z", 
            "ETag": "2021-07-14T22:59:47.234Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:47.285" endtime="20210714 22:59:47.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:47.690" endtime="20210714 22:59:47.690"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:47.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-14278 --key 97813/copyobject/f1 --copy-source bucket-08434/97813/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:48.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:48.150" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:48.105Z", 
        "ETag": "f927a2fe-a81c-45c8-abf0-99578380c982"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:47.692" endtime="20210714 22:59:48.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:48.151" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:48.105Z", 
        "ETag": "f927a2fe-a81c-45c8-abf0-99578380c982"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:48.151" endtime="20210714 22:59:48.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:48.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:48.152" endtime="20210714 22:59:48.152"/>
</kw>
<status status="PASS" starttime="20210714 22:59:47.692" endtime="20210714 22:59:48.152"/>
</kw>
<msg timestamp="20210714 22:59:48.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:47.692" endtime="20210714 22:59:48.153"/>
</kw>
<msg timestamp="20210714 22:59:48.153" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:48.105Z", 
        "ETag": "f927a2fe-a81c-45c8-abf0-99578380c982"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:47.691" endtime="20210714 22:59:48.153"/>
</kw>
<msg timestamp="20210714 22:59:48.153" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:48.105Z", 
        "ETag": "f927a2fe-a81c-45c8-abf0-99578380c982"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:47.690" endtime="20210714 22:59:48.153"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:48.157" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-14278 --prefix 97813/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:48.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:48.542" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:48.105Z", 
            "ETag": "2021-07-14T22:59:48.105Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:48.155" endtime="20210714 22:59:48.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:48.543" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:48.105Z", 
            "ETag": "2021-07-14T22:59:48.105Z", 
            "StorageClass": "STANDARD", 
            "Key": "97813/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:59:48.543" endtime="20210714 22:59:48.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:48.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:48.544" endtime="20210714 22:59:48.544"/>
</kw>
<status status="PASS" starttime="20210714 22:59:48.155" endtime="20210714 22:59:48.544"/>
</kw>
<msg timestamp="20210714 22:59:48.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:48.154" endtime="20210714 22:59:48.545"/>
</kw>
<msg timestamp="20210714 22:59:48.545" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:48.105Z", 
            "ETag": "2021-07-14T22:59:48.105Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:48.154" endtime="20210714 22:59:48.545"/>
</kw>
<msg timestamp="20210714 22:59:48.545" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:48.105Z", 
            "ETag": "2021-07-14T22:59:48.105Z", 
            "StorageClass": "STANDARD", 
            "Key": "978...</msg>
<status status="PASS" starttime="20210714 22:59:48.153" endtime="20210714 22:59:48.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:48.545" endtime="20210714 22:59:48.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:45.574" endtime="20210714 22:59:48.546"/>
</test>
<test id="s1-s14-s8-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:48.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 97813/copyobject/f1 --copy-source bucket-08434/97813/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:48.943" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:48.943" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.549" endtime="20210714 22:59:48.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:48.945" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.944" endtime="20210714 22:59:48.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:48.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:48.945" endtime="20210714 22:59:48.945"/>
</kw>
<msg timestamp="20210714 22:59:48.946" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.548" endtime="20210714 22:59:48.946"/>
</kw>
<msg timestamp="20210714 22:59:48.946" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.547" endtime="20210714 22:59:48.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:48.946" endtime="20210714 22:59:48.947"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:48.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-14278 --key 97813/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/97813/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:49.341" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:49.341" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.948" endtime="20210714 22:59:49.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:49.342" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:49.342" endtime="20210714 22:59:49.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:49.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:49.343" endtime="20210714 22:59:49.343"/>
</kw>
<msg timestamp="20210714 22:59:49.343" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.947" endtime="20210714 22:59:49.343"/>
</kw>
<msg timestamp="20210714 22:59:49.344" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:48.947" endtime="20210714 22:59:49.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:49.344" endtime="20210714 22:59:49.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:48.546" endtime="20210714 22:59:49.345"/>
</test>
<test id="s1-s14-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:49.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-14278 --key 97813/copyobject/f1 --copy-source destbucket-14278/97813/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:49.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:49.736" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:49.701Z", 
        "ETag": "4de5336f-e590-4591-af37-fe6da67f5acb"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:49.348" endtime="20210714 22:59:49.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:49.738" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:49.701Z", 
        "ETag": "4de5336f-e590-4591-af37-fe6da67f5acb"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:49.737" endtime="20210714 22:59:49.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:49.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:49.738" endtime="20210714 22:59:49.739"/>
</kw>
<status status="PASS" starttime="20210714 22:59:49.348" endtime="20210714 22:59:49.739"/>
</kw>
<msg timestamp="20210714 22:59:49.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:49.347" endtime="20210714 22:59:49.739"/>
</kw>
<msg timestamp="20210714 22:59:49.739" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:49.701Z", 
        "ETag": "4de5336f-e590-4591-af37-fe6da67f5acb"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:49.347" endtime="20210714 22:59:49.739"/>
</kw>
<msg timestamp="20210714 22:59:49.740" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-14T22:59:49.701Z", 
        "ETag": "4de5336f-e590-4591-af37-fe6da67f5acb"
    }
}</msg>
<status status="PASS" starttime="20210714 22:59:49.346" endtime="20210714 22:59:49.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:49.740" endtime="20210714 22:59:49.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:49.345" endtime="20210714 22:59:49.741"/>
</test>
<test id="s1-s14-s8-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:49.745" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-14278 --key 97813/copyobject/f1 --copy-source bucket-08434/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:50.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:50.144" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:59:49.743" endtime="20210714 22:59:50.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:50.145" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:59:50.144" endtime="20210714 22:59:50.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:50.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:50.145" endtime="20210714 22:59:50.146"/>
</kw>
<msg timestamp="20210714 22:59:50.146" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:59:49.743" endtime="20210714 22:59:50.146"/>
</kw>
<msg timestamp="20210714 22:59:50.146" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210714 22:59:49.742" endtime="20210714 22:59:50.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:50.147" endtime="20210714 22:59:50.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:49.741" endtime="20210714 22:59:50.147"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:59:43.546" endtime="20210714 22:59:50.148"/>
</suite>
<suite id="s1-s14-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:50.158" level="INFO">${random} = 96704</msg>
<status status="PASS" starttime="20210714 22:59:50.158" endtime="20210714 22:59:50.158"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:50.160" level="INFO">${PREFIX} = 96704</msg>
<status status="PASS" starttime="20210714 22:59:50.159" endtime="20210714 22:59:50.160"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.158" endtime="20210714 22:59:50.160"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.157" endtime="20210714 22:59:50.160"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:50.163" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:50.165" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:59:50.165" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:59:50.161" endtime="20210714 22:59:50.165"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:50.165" endtime="20210714 22:59:50.166"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:50.168" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:50.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:50.285" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:59:50.166" endtime="20210714 22:59:50.285"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:50.289" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:50.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:50.634" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:59:50.287" endtime="20210714 22:59:50.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:50.635" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 22:59:50.634" endtime="20210714 22:59:50.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:50.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:50.635" endtime="20210714 22:59:50.636"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.287" endtime="20210714 22:59:50.636"/>
</kw>
<msg timestamp="20210714 22:59:50.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:50.287" endtime="20210714 22:59:50.637"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.286" endtime="20210714 22:59:50.637"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.286" endtime="20210714 22:59:50.637"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.285" endtime="20210714 22:59:50.637"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.160" endtime="20210714 22:59:50.637"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.160" endtime="20210714 22:59:50.637"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:50.639" endtime="20210714 22:59:50.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:50.639" endtime="20210714 22:59:50.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:50.643" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:50.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:50.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:50.641" endtime="20210714 22:59:50.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:50.927" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:50.926" endtime="20210714 22:59:50.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:50.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:50.927" endtime="20210714 22:59:50.928"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.641" endtime="20210714 22:59:50.928"/>
</kw>
<msg timestamp="20210714 22:59:50.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:50.640" endtime="20210714 22:59:50.928"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.640" endtime="20210714 22:59:50.928"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:50.931" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:51.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:51.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:50.929" endtime="20210714 22:59:51.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:51.212" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:51.212" endtime="20210714 22:59:51.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:51.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:51.212" endtime="20210714 22:59:51.213"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.929" endtime="20210714 22:59:51.213"/>
</kw>
<msg timestamp="20210714 22:59:51.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:50.929" endtime="20210714 22:59:51.214"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.928" endtime="20210714 22:59:51.214"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:51.217" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:51.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:51.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:51.215" endtime="20210714 22:59:51.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:51.499" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:51.499" endtime="20210714 22:59:51.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:51.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:51.500" endtime="20210714 22:59:51.500"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.215" endtime="20210714 22:59:51.500"/>
</kw>
<msg timestamp="20210714 22:59:51.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:51.214" endtime="20210714 22:59:51.501"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.214" endtime="20210714 22:59:51.501"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:51.504" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:51.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:51.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:51.502" endtime="20210714 22:59:51.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:51.787" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:51.786" endtime="20210714 22:59:51.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:51.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:51.787" endtime="20210714 22:59:51.788"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.502" endtime="20210714 22:59:51.788"/>
</kw>
<msg timestamp="20210714 22:59:51.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:51.502" endtime="20210714 22:59:51.788"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.501" endtime="20210714 22:59:51.788"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.640" endtime="20210714 22:59:51.789"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.639" endtime="20210714 22:59:51.789"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.638" endtime="20210714 22:59:51.789"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.638" endtime="20210714 22:59:51.789"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:51.790" level="INFO">${postfix} = 82296</msg>
<status status="PASS" starttime="20210714 22:59:51.790" endtime="20210714 22:59:51.790"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 22:59:51.791" level="INFO">${bucket} = bucket-82296</msg>
<status status="PASS" starttime="20210714 22:59:51.790" endtime="20210714 22:59:51.791"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:51.795" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-82296 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:52.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:52.187" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-82296"
}</msg>
<status status="PASS" starttime="20210714 22:59:51.793" endtime="20210714 22:59:52.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:52.188" level="INFO">{
    "Location": "http://s3g:9878/bucket-82296"
}</msg>
<status status="PASS" starttime="20210714 22:59:52.187" endtime="20210714 22:59:52.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:52.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:52.188" endtime="20210714 22:59:52.189"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.792" endtime="20210714 22:59:52.189"/>
</kw>
<msg timestamp="20210714 22:59:52.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:51.792" endtime="20210714 22:59:52.189"/>
</kw>
<msg timestamp="20210714 22:59:52.189" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-82296"
}</msg>
<status status="PASS" starttime="20210714 22:59:51.791" endtime="20210714 22:59:52.189"/>
</kw>
<msg timestamp="20210714 22:59:52.190" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-82296"
}</msg>
<status status="PASS" starttime="20210714 22:59:51.791" endtime="20210714 22:59:52.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:52.190" endtime="20210714 22:59:52.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:52.190" endtime="20210714 22:59:52.191"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.791" endtime="20210714 22:59:52.191"/>
</kw>
<status status="PASS" starttime="20210714 22:59:51.789" endtime="20210714 22:59:52.191"/>
</kw>
<msg timestamp="20210714 22:59:52.191" level="INFO">${BUCKET} = bucket-82296</msg>
<status status="PASS" starttime="20210714 22:59:51.789" endtime="20210714 22:59:52.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:52.192" level="INFO">${BUCKET} = bucket-82296</msg>
<status status="PASS" starttime="20210714 22:59:52.191" endtime="20210714 22:59:52.192"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:52.192" endtime="20210714 22:59:52.192"/>
</kw>
<status status="PASS" starttime="20210714 22:59:50.157" endtime="20210714 22:59:52.192"/>
</kw>
<test id="s1-s14-s9-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:52.197" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:59:52.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:52.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:52.195" endtime="20210714 22:59:52.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:52.200" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:52.200" endtime="20210714 22:59:52.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:52.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:52.200" endtime="20210714 22:59:52.201"/>
</kw>
<status status="PASS" starttime="20210714 22:59:52.194" endtime="20210714 22:59:52.201"/>
</kw>
<msg timestamp="20210714 22:59:52.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:52.194" endtime="20210714 22:59:52.201"/>
</kw>
<status status="PASS" starttime="20210714 22:59:52.193" endtime="20210714 22:59:52.202"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:52.205" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-82296 --key 96704/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:52.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:52.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:52.203" endtime="20210714 22:59:52.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:52.662" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:52.662" endtime="20210714 22:59:52.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:52.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:52.662" endtime="20210714 22:59:52.663"/>
</kw>
<status status="PASS" starttime="20210714 22:59:52.203" endtime="20210714 22:59:52.663"/>
</kw>
<msg timestamp="20210714 22:59:52.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:52.203" endtime="20210714 22:59:52.663"/>
</kw>
<msg timestamp="20210714 22:59:52.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:52.202" endtime="20210714 22:59:52.664"/>
</kw>
<msg timestamp="20210714 22:59:52.664" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:52.202" endtime="20210714 22:59:52.664"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:52.668" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-82296 --prefix 96704/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:53.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:53.069" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:52.616Z", 
            "ETag": "2021-07-14T22:59:52.616Z", 
            "StorageClass": "STANDARD", 
            "Key": "967...</msg>
<status status="PASS" starttime="20210714 22:59:52.666" endtime="20210714 22:59:53.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:53.070" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:52.616Z", 
            "ETag": "2021-07-14T22:59:52.616Z", 
            "StorageClass": "STANDARD", 
            "Key": "96704/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 22:59:53.069" endtime="20210714 22:59:53.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:53.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:53.070" endtime="20210714 22:59:53.071"/>
</kw>
<status status="PASS" starttime="20210714 22:59:52.666" endtime="20210714 22:59:53.071"/>
</kw>
<msg timestamp="20210714 22:59:53.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:52.665" endtime="20210714 22:59:53.071"/>
</kw>
<msg timestamp="20210714 22:59:53.072" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:52.616Z", 
            "ETag": "2021-07-14T22:59:52.616Z", 
            "StorageClass": "STANDARD", 
            "Key": "967...</msg>
<status status="PASS" starttime="20210714 22:59:52.665" endtime="20210714 22:59:53.072"/>
</kw>
<msg timestamp="20210714 22:59:53.072" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T22:59:52.616Z", 
            "ETag": "2021-07-14T22:59:52.616Z", 
            "StorageClass": "STANDARD", 
            "Key": "967...</msg>
<status status="PASS" starttime="20210714 22:59:52.664" endtime="20210714 22:59:53.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:53.072" endtime="20210714 22:59:53.073"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:53.077" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296 --key 96704/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:53.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:53.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:53.075" endtime="20210714 22:59:53.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:53.469" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:53.469" endtime="20210714 22:59:53.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:53.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:53.470" endtime="20210714 22:59:53.470"/>
</kw>
<status status="PASS" starttime="20210714 22:59:53.074" endtime="20210714 22:59:53.471"/>
</kw>
<msg timestamp="20210714 22:59:53.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:53.074" endtime="20210714 22:59:53.471"/>
</kw>
<msg timestamp="20210714 22:59:53.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:53.073" endtime="20210714 22:59:53.471"/>
</kw>
<msg timestamp="20210714 22:59:53.471" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:53.073" endtime="20210714 22:59:53.471"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:53.476" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-82296 --prefix 96704/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:53.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:53.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:53.473" endtime="20210714 22:59:53.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:53.863" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:53.862" endtime="20210714 22:59:53.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:53.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:53.863" endtime="20210714 22:59:53.863"/>
</kw>
<status status="PASS" starttime="20210714 22:59:53.473" endtime="20210714 22:59:53.864"/>
</kw>
<msg timestamp="20210714 22:59:53.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:53.473" endtime="20210714 22:59:53.864"/>
</kw>
<msg timestamp="20210714 22:59:53.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:53.472" endtime="20210714 22:59:53.864"/>
</kw>
<msg timestamp="20210714 22:59:53.864" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:53.472" endtime="20210714 22:59:53.864"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:53.865" endtime="20210714 22:59:53.865"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>500</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:53.865" endtime="20210714 22:59:53.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:52.192" endtime="20210714 22:59:53.866"/>
</test>
<test id="s1-s14-s9-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:53.871" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-82296/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:54.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:54.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:53.869" endtime="20210714 22:59:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:54.244" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:54.243" endtime="20210714 22:59:54.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:54.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:54.244" endtime="20210714 22:59:54.244"/>
</kw>
<status status="PASS" starttime="20210714 22:59:53.868" endtime="20210714 22:59:54.245"/>
</kw>
<msg timestamp="20210714 22:59:54.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:53.868" endtime="20210714 22:59:54.245"/>
</kw>
<msg timestamp="20210714 22:59:54.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:53.867" endtime="20210714 22:59:54.245"/>
</kw>
<msg timestamp="20210714 22:59:54.245" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:53.867" endtime="20210714 22:59:54.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:54.246" endtime="20210714 22:59:54.246"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:54.250" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296 --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:54.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:54.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:54.248" endtime="20210714 22:59:54.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:54.636" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:54.635" endtime="20210714 22:59:54.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:54.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:54.636" endtime="20210714 22:59:54.637"/>
</kw>
<status status="PASS" starttime="20210714 22:59:54.247" endtime="20210714 22:59:54.637"/>
</kw>
<msg timestamp="20210714 22:59:54.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:54.247" endtime="20210714 22:59:54.637"/>
</kw>
<msg timestamp="20210714 22:59:54.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:54.247" endtime="20210714 22:59:54.637"/>
</kw>
<msg timestamp="20210714 22:59:54.638" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:54.246" endtime="20210714 22:59:54.638"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:54.641" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-82296/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:55.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:55.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:54.640" endtime="20210714 22:59:55.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:55.019" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:55.019" endtime="20210714 22:59:55.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:55.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:55.020" endtime="20210714 22:59:55.020"/>
</kw>
<status status="PASS" starttime="20210714 22:59:54.639" endtime="20210714 22:59:55.020"/>
</kw>
<msg timestamp="20210714 22:59:55.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:54.639" endtime="20210714 22:59:55.021"/>
</kw>
<msg timestamp="20210714 22:59:55.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:54.638" endtime="20210714 22:59:55.021"/>
</kw>
<msg timestamp="20210714 22:59:55.021" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:54.638" endtime="20210714 22:59:55.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:55.021" endtime="20210714 22:59:55.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:53.866" endtime="20210714 22:59:55.022"/>
</test>
<test id="s1-s14-s9-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:55.026" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:59:55.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:55.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:55.024" endtime="20210714 22:59:55.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:55.030" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:55.029" endtime="20210714 22:59:55.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:55.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:55.030" endtime="20210714 22:59:55.031"/>
</kw>
<status status="PASS" starttime="20210714 22:59:55.024" endtime="20210714 22:59:55.031"/>
</kw>
<msg timestamp="20210714 22:59:55.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:55.024" endtime="20210714 22:59:55.031"/>
</kw>
<status status="PASS" starttime="20210714 22:59:55.023" endtime="20210714 22:59:55.031"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:55.036" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-82296/96704/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:55.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:55.529" level="INFO">${output} = Completed 29 Bytes/29 Bytes (374 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 22:59:55.035" endtime="20210714 22:59:55.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:55.530" level="INFO">Completed 29 Bytes/29 Bytes (374 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 22:59:55.529" endtime="20210714 22:59:55.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:55.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:55.530" endtime="20210714 22:59:55.531"/>
</kw>
<status status="PASS" starttime="20210714 22:59:55.034" endtime="20210714 22:59:55.531"/>
</kw>
<msg timestamp="20210714 22:59:55.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:55.034" endtime="20210714 22:59:55.531"/>
</kw>
<msg timestamp="20210714 22:59:55.532" level="INFO">${output} = Completed 29 Bytes/29 Bytes (374 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 22:59:55.032" endtime="20210714 22:59:55.532"/>
</kw>
<msg timestamp="20210714 22:59:55.532" level="INFO">${result} = Completed 29 Bytes/29 Bytes (374 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210714 22:59:55.031" endtime="20210714 22:59:55.532"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:55.536" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-82296/96704/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:55.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:55.912" level="INFO">${output} = 2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:55.534" endtime="20210714 22:59:55.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:55.914" level="INFO">2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:55.913" endtime="20210714 22:59:55.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:55.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:55.914" endtime="20210714 22:59:55.914"/>
</kw>
<status status="PASS" starttime="20210714 22:59:55.533" endtime="20210714 22:59:55.915"/>
</kw>
<msg timestamp="20210714 22:59:55.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:55.533" endtime="20210714 22:59:55.915"/>
</kw>
<msg timestamp="20210714 22:59:55.915" level="INFO">${output} = 2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:55.533" endtime="20210714 22:59:55.915"/>
</kw>
<msg timestamp="20210714 22:59:55.915" level="INFO">${result} = 2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:55.532" endtime="20210714 22:59:55.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:55.916" endtime="20210714 22:59:55.916"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:55.920" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296 --key 96704/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:56.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:56.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:55.918" endtime="20210714 22:59:56.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:56.306" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:56.305" endtime="20210714 22:59:56.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:56.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:56.306" endtime="20210714 22:59:56.306"/>
</kw>
<status status="PASS" starttime="20210714 22:59:55.917" endtime="20210714 22:59:56.307"/>
</kw>
<msg timestamp="20210714 22:59:56.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:55.917" endtime="20210714 22:59:56.307"/>
</kw>
<msg timestamp="20210714 22:59:56.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:55.917" endtime="20210714 22:59:56.307"/>
</kw>
<msg timestamp="20210714 22:59:56.307" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:55.916" endtime="20210714 22:59:56.307"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:56.312" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-82296/96704/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:56.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:56.695" level="INFO">${output} = 2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:56.309" endtime="20210714 22:59:56.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:56.697" level="INFO">2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:56.696" endtime="20210714 22:59:56.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:56.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:56.697" endtime="20210714 22:59:56.697"/>
</kw>
<status status="PASS" starttime="20210714 22:59:56.309" endtime="20210714 22:59:56.698"/>
</kw>
<msg timestamp="20210714 22:59:56.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:56.309" endtime="20210714 22:59:56.698"/>
</kw>
<msg timestamp="20210714 22:59:56.698" level="INFO">${output} = 2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:56.308" endtime="20210714 22:59:56.698"/>
</kw>
<msg timestamp="20210714 22:59:56.698" level="INFO">${result} = 2021-07-14 22:59:55         29 f1</msg>
<status status="PASS" starttime="20210714 22:59:56.308" endtime="20210714 22:59:56.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:56.699" endtime="20210714 22:59:56.699"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:56.703" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296 --key 96704/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:57.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:57.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:56.701" endtime="20210714 22:59:57.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:57.103" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:57.102" endtime="20210714 22:59:57.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:57.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:57.103" endtime="20210714 22:59:57.104"/>
</kw>
<status status="PASS" starttime="20210714 22:59:56.700" endtime="20210714 22:59:57.104"/>
</kw>
<msg timestamp="20210714 22:59:57.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:56.700" endtime="20210714 22:59:57.104"/>
</kw>
<msg timestamp="20210714 22:59:57.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:56.700" endtime="20210714 22:59:57.105"/>
</kw>
<msg timestamp="20210714 22:59:57.105" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:56.699" endtime="20210714 22:59:57.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:55.022" endtime="20210714 22:59:57.105"/>
</test>
<test id="s1-s14-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:57.111" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 22:59:57.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:57.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:57.109" endtime="20210714 22:59:57.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:57.115" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:57.114" endtime="20210714 22:59:57.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:57.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:57.115" endtime="20210714 22:59:57.116"/>
</kw>
<status status="PASS" starttime="20210714 22:59:57.109" endtime="20210714 22:59:57.116"/>
</kw>
<msg timestamp="20210714 22:59:57.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:57.108" endtime="20210714 22:59:57.116"/>
</kw>
<status status="PASS" starttime="20210714 22:59:57.108" endtime="20210714 22:59:57.116"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:57.120" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-82296/96704/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:57.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:57.603" level="INFO">${output} = Completed 29 Bytes/29 Bytes (376 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.118" endtime="20210714 22:59:57.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:57.604" level="INFO">Completed 29 Bytes/29 Bytes (376 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.604" endtime="20210714 22:59:57.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:57.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:57.605" endtime="20210714 22:59:57.605"/>
</kw>
<status status="PASS" starttime="20210714 22:59:57.118" endtime="20210714 22:59:57.606"/>
</kw>
<msg timestamp="20210714 22:59:57.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:57.117" endtime="20210714 22:59:57.606"/>
</kw>
<msg timestamp="20210714 22:59:57.606" level="INFO">${output} = Completed 29 Bytes/29 Bytes (376 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.117" endtime="20210714 22:59:57.606"/>
</kw>
<msg timestamp="20210714 22:59:57.606" level="INFO">${result} = Completed 29 Bytes/29 Bytes (376 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-82296/96704/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.116" endtime="20210714 22:59:57.606"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:57.611" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-82296/96704/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:57.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:57.995" level="INFO">${output} = 2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.609" endtime="20210714 22:59:57.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:57.996" level="INFO">2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.995" endtime="20210714 22:59:57.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:57.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:57.996" endtime="20210714 22:59:57.997"/>
</kw>
<status status="PASS" starttime="20210714 22:59:57.608" endtime="20210714 22:59:57.997"/>
</kw>
<msg timestamp="20210714 22:59:57.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:57.608" endtime="20210714 22:59:57.997"/>
</kw>
<msg timestamp="20210714 22:59:57.997" level="INFO">${output} = 2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.607" endtime="20210714 22:59:57.997"/>
</kw>
<msg timestamp="20210714 22:59:57.998" level="INFO">${result} = 2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:57.606" endtime="20210714 22:59:57.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:57.998" endtime="20210714 22:59:57.998"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:58.002" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296 --key 96704/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:58.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:58.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:58.000" endtime="20210714 22:59:58.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:58.386" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:58.385" endtime="20210714 22:59:58.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:58.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:58.386" endtime="20210714 22:59:58.387"/>
</kw>
<status status="PASS" starttime="20210714 22:59:58.000" endtime="20210714 22:59:58.387"/>
</kw>
<msg timestamp="20210714 22:59:58.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:57.999" endtime="20210714 22:59:58.387"/>
</kw>
<msg timestamp="20210714 22:59:58.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:57.999" endtime="20210714 22:59:58.387"/>
</kw>
<msg timestamp="20210714 22:59:58.388" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:57.998" endtime="20210714 22:59:58.388"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:58.392" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-82296/96704/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:58.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:58.767" level="INFO">${output} = 2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:58.390" endtime="20210714 22:59:58.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:58.768" level="INFO">2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:58.767" endtime="20210714 22:59:58.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:58.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:58.768" endtime="20210714 22:59:58.769"/>
</kw>
<status status="PASS" starttime="20210714 22:59:58.389" endtime="20210714 22:59:58.769"/>
</kw>
<msg timestamp="20210714 22:59:58.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:58.389" endtime="20210714 22:59:58.770"/>
</kw>
<msg timestamp="20210714 22:59:58.770" level="INFO">${output} = 2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:58.388" endtime="20210714 22:59:58.770"/>
</kw>
<msg timestamp="20210714 22:59:58.770" level="INFO">${result} = 2021-07-14 22:59:57         29 filefile</msg>
<status status="PASS" starttime="20210714 22:59:58.388" endtime="20210714 22:59:58.770"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:58.770" endtime="20210714 22:59:58.771"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:58.775" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296 --key 96704/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:59.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:59.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:58.773" endtime="20210714 22:59:59.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:59.178" level="INFO"/>
<status status="PASS" starttime="20210714 22:59:59.177" endtime="20210714 22:59:59.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:59.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:59.178" endtime="20210714 22:59:59.179"/>
</kw>
<status status="PASS" starttime="20210714 22:59:58.772" endtime="20210714 22:59:59.179"/>
</kw>
<msg timestamp="20210714 22:59:59.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:58.772" endtime="20210714 22:59:59.179"/>
</kw>
<msg timestamp="20210714 22:59:59.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:59:58.771" endtime="20210714 22:59:59.180"/>
</kw>
<msg timestamp="20210714 22:59:59.180" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 22:59:58.771" endtime="20210714 22:59:59.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:57.107" endtime="20210714 22:59:59.180"/>
</test>
<test id="s1-s14-s9-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:59.186" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-82296-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:59.567" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 22:59:59.567" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:59.184" endtime="20210714 22:59:59.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:59:59.568" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:59.568" endtime="20210714 22:59:59.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:59:59.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:59:59.569" endtime="20210714 22:59:59.569"/>
</kw>
<msg timestamp="20210714 22:59:59.570" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:59.183" endtime="20210714 22:59:59.570"/>
</kw>
<msg timestamp="20210714 22:59:59.570" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210714 22:59:59.183" endtime="20210714 22:59:59.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:59:59.570" endtime="20210714 22:59:59.570"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 22:59:59.182" endtime="20210714 22:59:59.571"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:59:50.150" endtime="20210714 22:59:59.572"/>
</suite>
<suite id="s1-s14-s10" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 22:59:59.582" level="INFO">${random} = 90487</msg>
<status status="PASS" starttime="20210714 22:59:59.582" endtime="20210714 22:59:59.582"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 22:59:59.584" level="INFO">${PREFIX} = 90487</msg>
<status status="PASS" starttime="20210714 22:59:59.583" endtime="20210714 22:59:59.584"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.582" endtime="20210714 22:59:59.584"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.582" endtime="20210714 22:59:59.584"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:59.587" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:59.589" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:59:59.589" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 22:59:59.585" endtime="20210714 22:59:59.589"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 22:59:59.589" endtime="20210714 22:59:59.590"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:59.591" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:59:59.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:59:59.709" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 22:59:59.590" endtime="20210714 22:59:59.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:59:59.714" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:00.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:00.060" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 22:59:59.712" endtime="20210714 23:00:00.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:00.061" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 23:00:00.060" endtime="20210714 23:00:00.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:00.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:00.061" endtime="20210714 23:00:00.062"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.711" endtime="20210714 23:00:00.062"/>
</kw>
<msg timestamp="20210714 23:00:00.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:59:59.711" endtime="20210714 23:00:00.062"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.711" endtime="20210714 23:00:00.062"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.710" endtime="20210714 23:00:00.063"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.710" endtime="20210714 23:00:00.063"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.584" endtime="20210714 23:00:00.063"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.584" endtime="20210714 23:00:00.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:00.064" endtime="20210714 23:00:00.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:00.065" endtime="20210714 23:00:00.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:00.069" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:00.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:00.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:00.067" endtime="20210714 23:00:00.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:00.350" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:00.350" endtime="20210714 23:00:00.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:00.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:00.350" endtime="20210714 23:00:00.351"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.067" endtime="20210714 23:00:00.351"/>
</kw>
<msg timestamp="20210714 23:00:00.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:00.066" endtime="20210714 23:00:00.351"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.066" endtime="20210714 23:00:00.352"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:00.355" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:00.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:00.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:00.353" endtime="20210714 23:00:00.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:00.636" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:00.635" endtime="20210714 23:00:00.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:00.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:00.636" endtime="20210714 23:00:00.636"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.353" endtime="20210714 23:00:00.637"/>
</kw>
<msg timestamp="20210714 23:00:00.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:00.352" endtime="20210714 23:00:00.637"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.352" endtime="20210714 23:00:00.637"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:00.640" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:00.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:00.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:00.638" endtime="20210714 23:00:00.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:00.923" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:00.922" endtime="20210714 23:00:00.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:00.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:00.923" endtime="20210714 23:00:00.924"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.638" endtime="20210714 23:00:00.924"/>
</kw>
<msg timestamp="20210714 23:00:00.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:00.638" endtime="20210714 23:00:00.924"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.637" endtime="20210714 23:00:00.924"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:00.928" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:01.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:01.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:00.926" endtime="20210714 23:00:01.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:01.214" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:01.213" endtime="20210714 23:00:01.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:01.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:01.214" endtime="20210714 23:00:01.215"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.925" endtime="20210714 23:00:01.215"/>
</kw>
<msg timestamp="20210714 23:00:01.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:00.925" endtime="20210714 23:00:01.215"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.925" endtime="20210714 23:00:01.216"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.065" endtime="20210714 23:00:01.216"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.065" endtime="20210714 23:00:01.216"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.064" endtime="20210714 23:00:01.216"/>
</kw>
<status status="PASS" starttime="20210714 23:00:00.063" endtime="20210714 23:00:01.216"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:00:01.218" level="INFO">${postfix} = 86325</msg>
<status status="PASS" starttime="20210714 23:00:01.217" endtime="20210714 23:00:01.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 23:00:01.218" level="INFO">${bucket} = bucket-86325</msg>
<status status="PASS" starttime="20210714 23:00:01.218" endtime="20210714 23:00:01.218"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:01.222" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-86325 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:01.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:01.715" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-86325"
}</msg>
<status status="PASS" starttime="20210714 23:00:01.220" endtime="20210714 23:00:01.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:01.716" level="INFO">{
    "Location": "http://s3g:9878/bucket-86325"
}</msg>
<status status="PASS" starttime="20210714 23:00:01.715" endtime="20210714 23:00:01.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:01.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:01.716" endtime="20210714 23:00:01.717"/>
</kw>
<status status="PASS" starttime="20210714 23:00:01.220" endtime="20210714 23:00:01.717"/>
</kw>
<msg timestamp="20210714 23:00:01.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:01.219" endtime="20210714 23:00:01.717"/>
</kw>
<msg timestamp="20210714 23:00:01.717" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-86325"
}</msg>
<status status="PASS" starttime="20210714 23:00:01.219" endtime="20210714 23:00:01.717"/>
</kw>
<msg timestamp="20210714 23:00:01.718" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-86325"
}</msg>
<status status="PASS" starttime="20210714 23:00:01.219" endtime="20210714 23:00:01.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:01.718" endtime="20210714 23:00:01.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:01.718" endtime="20210714 23:00:01.719"/>
</kw>
<status status="PASS" starttime="20210714 23:00:01.218" endtime="20210714 23:00:01.719"/>
</kw>
<status status="PASS" starttime="20210714 23:00:01.217" endtime="20210714 23:00:01.719"/>
</kw>
<msg timestamp="20210714 23:00:01.719" level="INFO">${BUCKET} = bucket-86325</msg>
<status status="PASS" starttime="20210714 23:00:01.216" endtime="20210714 23:00:01.719"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:00:01.720" level="INFO">${BUCKET} = bucket-86325</msg>
<status status="PASS" starttime="20210714 23:00:01.719" endtime="20210714 23:00:01.720"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:01.720" endtime="20210714 23:00:01.720"/>
</kw>
<status status="PASS" starttime="20210714 22:59:59.581" endtime="20210714 23:00:01.720"/>
</kw>
<test id="s1-s14-s10-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:01.725" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 23:00:01.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:01.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:01.723" endtime="20210714 23:00:01.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:01.728" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:01.727" endtime="20210714 23:00:01.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:01.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:01.728" endtime="20210714 23:00:01.729"/>
</kw>
<status status="PASS" starttime="20210714 23:00:01.722" endtime="20210714 23:00:01.729"/>
</kw>
<msg timestamp="20210714 23:00:01.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:01.722" endtime="20210714 23:00:01.729"/>
</kw>
<status status="PASS" starttime="20210714 23:00:01.721" endtime="20210714 23:00:01.729"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:01.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-86325 --key 90487/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:02.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:02.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:01.731" endtime="20210714 23:00:02.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:02.156" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:02.155" endtime="20210714 23:00:02.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:02.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:02.156" endtime="20210714 23:00:02.157"/>
</kw>
<status status="PASS" starttime="20210714 23:00:01.731" endtime="20210714 23:00:02.157"/>
</kw>
<msg timestamp="20210714 23:00:02.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:01.731" endtime="20210714 23:00:02.158"/>
</kw>
<msg timestamp="20210714 23:00:02.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:01.730" endtime="20210714 23:00:02.158"/>
</kw>
<msg timestamp="20210714 23:00:02.158" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:00:01.730" endtime="20210714 23:00:02.158"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:02.162" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-86325 --key 90487/multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:02.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:02.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:02.160" endtime="20210714 23:00:02.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:02.608" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:02.607" endtime="20210714 23:00:02.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:02.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:02.608" endtime="20210714 23:00:02.609"/>
</kw>
<status status="PASS" starttime="20210714 23:00:02.160" endtime="20210714 23:00:02.609"/>
</kw>
<msg timestamp="20210714 23:00:02.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:02.159" endtime="20210714 23:00:02.609"/>
</kw>
<msg timestamp="20210714 23:00:02.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:02.159" endtime="20210714 23:00:02.610"/>
</kw>
<msg timestamp="20210714 23:00:02.610" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:00:02.158" endtime="20210714 23:00:02.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:02.614" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-86325 --key 90487/multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:03.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:03.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:02.612" endtime="20210714 23:00:03.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:03.051" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:03.051" endtime="20210714 23:00:03.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:03.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:03.051" endtime="20210714 23:00:03.052"/>
</kw>
<status status="PASS" starttime="20210714 23:00:02.612" endtime="20210714 23:00:03.052"/>
</kw>
<msg timestamp="20210714 23:00:03.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:02.611" endtime="20210714 23:00:03.052"/>
</kw>
<msg timestamp="20210714 23:00:03.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:02.611" endtime="20210714 23:00:03.053"/>
</kw>
<msg timestamp="20210714 23:00:03.053" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:00:02.610" endtime="20210714 23:00:03.053"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:03.057" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-86325 --prefix 90487/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:03.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:03.449" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:02.112Z", 
            "ETag": "2021-07-14T23:00:02.112Z", 
            "StorageClass": "STANDARD", 
            "Key": "904...</msg>
<status status="PASS" starttime="20210714 23:00:03.055" endtime="20210714 23:00:03.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:03.450" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:02.112Z", 
            "ETag": "2021-07-14T23:00:02.112Z", 
            "StorageClass": "STANDARD", 
            "Key": "90487/multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-07-14T23:00:02.564Z", 
            "ETag": "2021-07-14T23:00:02.564Z", 
            "StorageClass": "STANDARD", 
            "Key": "90487/multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-07-14T23:00:03.006Z", 
            "ETag": "2021-07-14T23:00:03.006Z", 
            "StorageClass": "STANDARD", 
            "Key": "90487/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:00:03.450" endtime="20210714 23:00:03.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:03.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:03.451" endtime="20210714 23:00:03.451"/>
</kw>
<status status="PASS" starttime="20210714 23:00:03.055" endtime="20210714 23:00:03.451"/>
</kw>
<msg timestamp="20210714 23:00:03.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:03.054" endtime="20210714 23:00:03.452"/>
</kw>
<msg timestamp="20210714 23:00:03.452" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:02.112Z", 
            "ETag": "2021-07-14T23:00:02.112Z", 
            "StorageClass": "STANDARD", 
            "Key": "904...</msg>
<status status="PASS" starttime="20210714 23:00:03.054" endtime="20210714 23:00:03.452"/>
</kw>
<msg timestamp="20210714 23:00:03.452" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:02.112Z", 
            "ETag": "2021-07-14T23:00:02.112Z", 
            "StorageClass": "STANDARD", 
            "Key": "904...</msg>
<status status="PASS" starttime="20210714 23:00:03.053" endtime="20210714 23:00:03.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:03.452" endtime="20210714 23:00:03.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:03.453" endtime="20210714 23:00:03.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:03.453" endtime="20210714 23:00:03.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:03.454" endtime="20210714 23:00:03.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:03.454" endtime="20210714 23:00:03.455"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:03.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket bucket-86325 --delete 'Objects=[{Key=90487/multidelete/f1},{Key=90487/multidelete/f2},{Key=90487/multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:03.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:03.864" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "90487/multidelete/f1"
        }, 
        {
            "Key": "90487/multidelete/f2"
        }, 
        {
            "Key": "90487/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210714 23:00:03.457" endtime="20210714 23:00:03.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:03.866" level="INFO">{
    "Deleted": [
        {
            "Key": "90487/multidelete/f1"
        }, 
        {
            "Key": "90487/multidelete/f2"
        }, 
        {
            "Key": "90487/multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:00:03.865" endtime="20210714 23:00:03.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:03.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:03.866" endtime="20210714 23:00:03.867"/>
</kw>
<status status="PASS" starttime="20210714 23:00:03.457" endtime="20210714 23:00:03.867"/>
</kw>
<msg timestamp="20210714 23:00:03.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:03.456" endtime="20210714 23:00:03.867"/>
</kw>
<msg timestamp="20210714 23:00:03.867" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "90487/multidelete/f1"
        }, 
        {
            "Key": "90487/multidelete/f2"
        }, 
        {
            "Key": "90487/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210714 23:00:03.456" endtime="20210714 23:00:03.867"/>
</kw>
<msg timestamp="20210714 23:00:03.868" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "90487/multidelete/f1"
        }, 
        {
            "Key": "90487/multidelete/f2"
        }, 
        {
            "Key": "90487/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210714 23:00:03.455" endtime="20210714 23:00:03.868"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:03.868" endtime="20210714 23:00:03.868"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:03.872" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-86325 --prefix 90487/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:04.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:04.264" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:03.006Z", 
            "ETag": "2021-07-14T23:00:03.006Z", 
            "StorageClass": "STANDARD", 
            "Key": "904...</msg>
<status status="PASS" starttime="20210714 23:00:03.870" endtime="20210714 23:00:04.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:04.265" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:03.006Z", 
            "ETag": "2021-07-14T23:00:03.006Z", 
            "StorageClass": "STANDARD", 
            "Key": "90487/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:00:04.264" endtime="20210714 23:00:04.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:04.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:04.265" endtime="20210714 23:00:04.266"/>
</kw>
<status status="PASS" starttime="20210714 23:00:03.870" endtime="20210714 23:00:04.266"/>
</kw>
<msg timestamp="20210714 23:00:04.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:03.869" endtime="20210714 23:00:04.266"/>
</kw>
<msg timestamp="20210714 23:00:04.267" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:03.006Z", 
            "ETag": "2021-07-14T23:00:03.006Z", 
            "StorageClass": "STANDARD", 
            "Key": "904...</msg>
<status status="PASS" starttime="20210714 23:00:03.869" endtime="20210714 23:00:04.267"/>
</kw>
<msg timestamp="20210714 23:00:04.267" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:03.006Z", 
            "ETag": "2021-07-14T23:00:03.006Z", 
            "StorageClass": "STANDARD", 
            "Key": "904...</msg>
<status status="PASS" starttime="20210714 23:00:03.868" endtime="20210714 23:00:04.267"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:04.267" endtime="20210714 23:00:04.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:04.268" endtime="20210714 23:00:04.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:04.268" endtime="20210714 23:00:04.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:04.269" endtime="20210714 23:00:04.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:04.269" endtime="20210714 23:00:04.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:01.721" endtime="20210714 23:00:04.270"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 22:59:59.574" endtime="20210714 23:00:04.271"/>
</suite>
<suite id="s1-s14-s11" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:00:04.280" level="INFO">${random} = 32322</msg>
<status status="PASS" starttime="20210714 23:00:04.280" endtime="20210714 23:00:04.280"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:00:04.282" level="INFO">${PREFIX} = 32322</msg>
<status status="PASS" starttime="20210714 23:00:04.280" endtime="20210714 23:00:04.282"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.280" endtime="20210714 23:00:04.282"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.280" endtime="20210714 23:00:04.282"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:04.284" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:04.286" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:00:04.286" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 23:00:04.283" endtime="20210714 23:00:04.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:04.287" endtime="20210714 23:00:04.287"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:04.289" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:04.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:04.405" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 23:00:04.287" endtime="20210714 23:00:04.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:04.410" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:04.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:04.754" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 23:00:04.408" endtime="20210714 23:00:04.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:04.755" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 23:00:04.755" endtime="20210714 23:00:04.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:04.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:04.755" endtime="20210714 23:00:04.756"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.408" endtime="20210714 23:00:04.756"/>
</kw>
<msg timestamp="20210714 23:00:04.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:04.408" endtime="20210714 23:00:04.756"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.407" endtime="20210714 23:00:04.757"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.407" endtime="20210714 23:00:04.757"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.406" endtime="20210714 23:00:04.757"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.282" endtime="20210714 23:00:04.757"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.282" endtime="20210714 23:00:04.757"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:04.758" endtime="20210714 23:00:04.758"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:04.759" endtime="20210714 23:00:04.759"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:04.762" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:05.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:05.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:04.760" endtime="20210714 23:00:05.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:05.045" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:05.044" endtime="20210714 23:00:05.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:05.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:05.045" endtime="20210714 23:00:05.046"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.760" endtime="20210714 23:00:05.046"/>
</kw>
<msg timestamp="20210714 23:00:05.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:04.760" endtime="20210714 23:00:05.046"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.760" endtime="20210714 23:00:05.046"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:05.050" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:05.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:05.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:05.048" endtime="20210714 23:00:05.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:05.331" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:05.330" endtime="20210714 23:00:05.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:05.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:05.331" endtime="20210714 23:00:05.332"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.047" endtime="20210714 23:00:05.332"/>
</kw>
<msg timestamp="20210714 23:00:05.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:05.047" endtime="20210714 23:00:05.332"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.046" endtime="20210714 23:00:05.332"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:05.336" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:05.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:05.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:05.334" endtime="20210714 23:00:05.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:05.618" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:05.618" endtime="20210714 23:00:05.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:05.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:05.618" endtime="20210714 23:00:05.619"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.334" endtime="20210714 23:00:05.619"/>
</kw>
<msg timestamp="20210714 23:00:05.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:05.333" endtime="20210714 23:00:05.619"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.333" endtime="20210714 23:00:05.620"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:05.623" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:05.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:05.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:05.621" endtime="20210714 23:00:05.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:05.903" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:05.902" endtime="20210714 23:00:05.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:05.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:05.903" endtime="20210714 23:00:05.904"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.620" endtime="20210714 23:00:05.904"/>
</kw>
<msg timestamp="20210714 23:00:05.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:05.620" endtime="20210714 23:00:05.904"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.620" endtime="20210714 23:00:05.905"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.759" endtime="20210714 23:00:05.905"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.759" endtime="20210714 23:00:05.905"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.758" endtime="20210714 23:00:05.905"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.757" endtime="20210714 23:00:05.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:00:05.906" level="INFO">${postfix} = 76317</msg>
<status status="PASS" starttime="20210714 23:00:05.906" endtime="20210714 23:00:05.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 23:00:05.907" level="INFO">${bucket} = bucket-76317</msg>
<status status="PASS" starttime="20210714 23:00:05.907" endtime="20210714 23:00:05.907"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:05.911" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-76317 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:06.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:06.298" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-76317"
}</msg>
<status status="PASS" starttime="20210714 23:00:05.909" endtime="20210714 23:00:06.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:06.299" level="INFO">{
    "Location": "http://s3g:9878/bucket-76317"
}</msg>
<status status="PASS" starttime="20210714 23:00:06.299" endtime="20210714 23:00:06.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:06.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:06.300" endtime="20210714 23:00:06.300"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.908" endtime="20210714 23:00:06.300"/>
</kw>
<msg timestamp="20210714 23:00:06.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:05.908" endtime="20210714 23:00:06.301"/>
</kw>
<msg timestamp="20210714 23:00:06.301" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-76317"
}</msg>
<status status="PASS" starttime="20210714 23:00:05.908" endtime="20210714 23:00:06.301"/>
</kw>
<msg timestamp="20210714 23:00:06.301" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-76317"
}</msg>
<status status="PASS" starttime="20210714 23:00:05.907" endtime="20210714 23:00:06.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:06.301" endtime="20210714 23:00:06.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:06.302" endtime="20210714 23:00:06.302"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.907" endtime="20210714 23:00:06.302"/>
</kw>
<status status="PASS" starttime="20210714 23:00:05.906" endtime="20210714 23:00:06.302"/>
</kw>
<msg timestamp="20210714 23:00:06.303" level="INFO">${BUCKET} = bucket-76317</msg>
<status status="PASS" starttime="20210714 23:00:05.905" endtime="20210714 23:00:06.303"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:00:06.303" level="INFO">${BUCKET} = bucket-76317</msg>
<status status="PASS" starttime="20210714 23:00:06.303" endtime="20210714 23:00:06.303"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:06.303" endtime="20210714 23:00:06.304"/>
</kw>
<status status="PASS" starttime="20210714 23:00:04.279" endtime="20210714 23:00:06.304"/>
</kw>
<test id="s1-s14-s11-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:06.310" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210714 23:00:06.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:06.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:06.307" endtime="20210714 23:00:06.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:06.312" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:06.311" endtime="20210714 23:00:06.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:06.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:06.312" endtime="20210714 23:00:06.313"/>
</kw>
<status status="PASS" starttime="20210714 23:00:06.306" endtime="20210714 23:00:06.313"/>
</kw>
<msg timestamp="20210714 23:00:06.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:06.305" endtime="20210714 23:00:06.313"/>
</kw>
<status status="PASS" starttime="20210714 23:00:06.305" endtime="20210714 23:00:06.314"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:06.317" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-76317 --key 32322/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:07.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:07.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:06.316" endtime="20210714 23:00:07.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:07.134" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:07.133" endtime="20210714 23:00:07.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:07.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:07.134" endtime="20210714 23:00:07.135"/>
</kw>
<status status="PASS" starttime="20210714 23:00:06.315" endtime="20210714 23:00:07.135"/>
</kw>
<msg timestamp="20210714 23:00:07.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:06.315" endtime="20210714 23:00:07.135"/>
</kw>
<msg timestamp="20210714 23:00:07.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:06.314" endtime="20210714 23:00:07.135"/>
</kw>
<msg timestamp="20210714 23:00:07.136" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:00:06.314" endtime="20210714 23:00:07.136"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:07.140" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-76317 --prefix 32322/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:07.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:07.521" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "323...</msg>
<status status="PASS" starttime="20210714 23:00:07.138" endtime="20210714 23:00:07.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:07.522" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "32322/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:00:07.521" endtime="20210714 23:00:07.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:07.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:07.522" endtime="20210714 23:00:07.523"/>
</kw>
<status status="PASS" starttime="20210714 23:00:07.137" endtime="20210714 23:00:07.523"/>
</kw>
<msg timestamp="20210714 23:00:07.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:07.137" endtime="20210714 23:00:07.523"/>
</kw>
<msg timestamp="20210714 23:00:07.523" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "323...</msg>
<status status="PASS" starttime="20210714 23:00:07.136" endtime="20210714 23:00:07.524"/>
</kw>
<msg timestamp="20210714 23:00:07.524" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "323...</msg>
<status status="PASS" starttime="20210714 23:00:07.136" endtime="20210714 23:00:07.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:07.524" endtime="20210714 23:00:07.524"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:07.528" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:07.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:07.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:07.526" endtime="20210714 23:00:07.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:07.531" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:07.531" endtime="20210714 23:00:07.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:07.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:07.531" endtime="20210714 23:00:07.532"/>
</kw>
<status status="PASS" starttime="20210714 23:00:07.525" endtime="20210714 23:00:07.532"/>
</kw>
<msg timestamp="20210714 23:00:07.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:07.525" endtime="20210714 23:00:07.532"/>
</kw>
<status status="PASS" starttime="20210714 23:00:07.524" endtime="20210714 23:00:07.533"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:07.537" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-76317 --key 32322/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:07.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:07.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:07.535" endtime="20210714 23:00:07.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:07.930" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:07.930" endtime="20210714 23:00:07.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:07.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:07.931" endtime="20210714 23:00:07.931"/>
</kw>
<status status="PASS" starttime="20210714 23:00:07.535" endtime="20210714 23:00:07.931"/>
</kw>
<msg timestamp="20210714 23:00:07.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:07.534" endtime="20210714 23:00:07.932"/>
</kw>
<msg timestamp="20210714 23:00:07.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:07.533" endtime="20210714 23:00:07.932"/>
</kw>
<msg timestamp="20210714 23:00:07.932" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210714 23:00:07.533" endtime="20210714 23:00:07.932"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:07.936" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-76317 --prefix 32322/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:08.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:08.323" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "323...</msg>
<status status="PASS" starttime="20210714 23:00:07.934" endtime="20210714 23:00:08.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:08.325" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "32322/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2021-07-14T23:00:07.891Z", 
            "ETag": "2021-07-14T23:00:07.891Z", 
            "StorageClass": "STANDARD", 
            "Key": "32322/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" starttime="20210714 23:00:08.324" endtime="20210714 23:00:08.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:08.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:08.325" endtime="20210714 23:00:08.325"/>
</kw>
<status status="PASS" starttime="20210714 23:00:07.934" endtime="20210714 23:00:08.326"/>
</kw>
<msg timestamp="20210714 23:00:08.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:07.933" endtime="20210714 23:00:08.326"/>
</kw>
<msg timestamp="20210714 23:00:08.326" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "323...</msg>
<status status="PASS" starttime="20210714 23:00:07.933" endtime="20210714 23:00:08.326"/>
</kw>
<msg timestamp="20210714 23:00:08.327" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-14T23:00:07.086Z", 
            "ETag": "2021-07-14T23:00:07.086Z", 
            "StorageClass": "STANDARD", 
            "Key": "323...</msg>
<status status="PASS" starttime="20210714 23:00:07.932" endtime="20210714 23:00:08.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:08.327" endtime="20210714 23:00:08.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:06.304" endtime="20210714 23:00:08.327"/>
</test>
<test id="s1-s14-s11-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:08.332" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:08.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:08.752" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:0...</msg>
<status status="PASS" starttime="20210714 23:00:08.330" endtime="20210714 23:00:08.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:08.754" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:08 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:08.753" endtime="20210714 23:00:08.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:08.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:08.754" endtime="20210714 23:00:08.755"/>
</kw>
<status status="PASS" starttime="20210714 23:00:08.330" endtime="20210714 23:00:08.755"/>
</kw>
<msg timestamp="20210714 23:00:08.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:08.330" endtime="20210714 23:00:08.755"/>
</kw>
<msg timestamp="20210714 23:00:08.755" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:0...</msg>
<status status="PASS" starttime="20210714 23:00:08.329" endtime="20210714 23:00:08.755"/>
</kw>
<msg timestamp="20210714 23:00:08.756" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:0...</msg>
<status status="PASS" starttime="20210714 23:00:08.329" endtime="20210714 23:00:08.756"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:08.760" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:08.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:08.763" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:00:08.758" endtime="20210714 23:00:08.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:08.764" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:00:08.763" endtime="20210714 23:00:08.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:08.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:08.764" endtime="20210714 23:00:08.765"/>
</kw>
<status status="PASS" starttime="20210714 23:00:08.757" endtime="20210714 23:00:08.765"/>
</kw>
<msg timestamp="20210714 23:00:08.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:08.757" endtime="20210714 23:00:08.765"/>
</kw>
<msg timestamp="20210714 23:00:08.766" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:00:08.756" endtime="20210714 23:00:08.766"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:08.769" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:08.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:08.772" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:00:08.767" endtime="20210714 23:00:08.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:08.773" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:00:08.772" endtime="20210714 23:00:08.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:08.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:08.773" endtime="20210714 23:00:08.773"/>
</kw>
<status status="PASS" starttime="20210714 23:00:08.767" endtime="20210714 23:00:08.774"/>
</kw>
<msg timestamp="20210714 23:00:08.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:08.767" endtime="20210714 23:00:08.774"/>
</kw>
<msg timestamp="20210714 23:00:08.774" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210714 23:00:08.766" endtime="20210714 23:00:08.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:08.774" endtime="20210714 23:00:08.775"/>
</kw>
<status status="PASS" starttime="20210714 23:00:08.756" endtime="20210714 23:00:08.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:08.328" endtime="20210714 23:00:08.775"/>
</test>
<test id="s1-s14-s11-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:08.780" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:09.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:09.191" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:08.778" endtime="20210714 23:00:09.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:09.193" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:09 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:09.192" endtime="20210714 23:00:09.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:09.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:09.193" endtime="20210714 23:00:09.194"/>
</kw>
<status status="PASS" starttime="20210714 23:00:08.778" endtime="20210714 23:00:09.194"/>
</kw>
<msg timestamp="20210714 23:00:09.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:08.778" endtime="20210714 23:00:09.194"/>
</kw>
<msg timestamp="20210714 23:00:09.194" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:08.777" endtime="20210714 23:00:09.194"/>
</kw>
<msg timestamp="20210714 23:00:09.195" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:08.776" endtime="20210714 23:00:09.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:09.195" endtime="20210714 23:00:09.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:09.195" endtime="20210714 23:00:09.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:09.196" endtime="20210714 23:00:09.196"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:09.199" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:00:09.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:09.202" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210714 23:00:09.197" endtime="20210714 23:00:09.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:09.203" level="INFO">Rando</msg>
<status status="PASS" starttime="20210714 23:00:09.202" endtime="20210714 23:00:09.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:09.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:09.203" endtime="20210714 23:00:09.203"/>
</kw>
<status status="PASS" starttime="20210714 23:00:09.197" endtime="20210714 23:00:09.204"/>
</kw>
<msg timestamp="20210714 23:00:09.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:09.197" endtime="20210714 23:00:09.204"/>
</kw>
<msg timestamp="20210714 23:00:09.204" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20210714 23:00:09.196" endtime="20210714 23:00:09.204"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:09.208" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:09.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:09.210" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210714 23:00:09.206" endtime="20210714 23:00:09.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:09.211" level="INFO">Rando</msg>
<status status="PASS" starttime="20210714 23:00:09.210" endtime="20210714 23:00:09.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:09.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:09.211" endtime="20210714 23:00:09.211"/>
</kw>
<status status="PASS" starttime="20210714 23:00:09.205" endtime="20210714 23:00:09.212"/>
</kw>
<msg timestamp="20210714 23:00:09.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:09.205" endtime="20210714 23:00:09.212"/>
</kw>
<msg timestamp="20210714 23:00:09.212" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20210714 23:00:09.204" endtime="20210714 23:00:09.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:09.212" endtime="20210714 23:00:09.213"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:09.216" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:09.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:09.630" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:09.215" endtime="20210714 23:00:09.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:09.631" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:09 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:09.630" endtime="20210714 23:00:09.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:09.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:09.631" endtime="20210714 23:00:09.632"/>
</kw>
<status status="PASS" starttime="20210714 23:00:09.214" endtime="20210714 23:00:09.632"/>
</kw>
<msg timestamp="20210714 23:00:09.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:09.214" endtime="20210714 23:00:09.632"/>
</kw>
<msg timestamp="20210714 23:00:09.633" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:09.213" endtime="20210714 23:00:09.633"/>
</kw>
<msg timestamp="20210714 23:00:09.633" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:09.213" endtime="20210714 23:00:09.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:09.633" endtime="20210714 23:00:09.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:09.633" endtime="20210714 23:00:09.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:09.634" endtime="20210714 23:00:09.634"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:09.638" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:00:09.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:09.640" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210714 23:00:09.636" endtime="20210714 23:00:09.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:09.641" level="INFO">ndo</msg>
<status status="PASS" starttime="20210714 23:00:09.640" endtime="20210714 23:00:09.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:09.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:09.641" endtime="20210714 23:00:09.642"/>
</kw>
<status status="PASS" starttime="20210714 23:00:09.635" endtime="20210714 23:00:09.642"/>
</kw>
<msg timestamp="20210714 23:00:09.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:09.635" endtime="20210714 23:00:09.642"/>
</kw>
<msg timestamp="20210714 23:00:09.642" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20210714 23:00:09.634" endtime="20210714 23:00:09.642"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:09.645" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:09.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:09.648" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210714 23:00:09.644" endtime="20210714 23:00:09.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:09.649" level="INFO">ndo</msg>
<status status="PASS" starttime="20210714 23:00:09.648" endtime="20210714 23:00:09.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:09.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:09.649" endtime="20210714 23:00:09.649"/>
</kw>
<status status="PASS" starttime="20210714 23:00:09.643" endtime="20210714 23:00:09.650"/>
</kw>
<msg timestamp="20210714 23:00:09.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:09.643" endtime="20210714 23:00:09.650"/>
</kw>
<msg timestamp="20210714 23:00:09.650" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20210714 23:00:09.643" endtime="20210714 23:00:09.650"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:09.650" endtime="20210714 23:00:09.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:09.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:10.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:10.064" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:09.653" endtime="20210714 23:00:10.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.065" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:10 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:10.064" endtime="20210714 23:00:10.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.065" endtime="20210714 23:00:10.066"/>
</kw>
<status status="PASS" starttime="20210714 23:00:09.653" endtime="20210714 23:00:10.066"/>
</kw>
<msg timestamp="20210714 23:00:10.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:09.652" endtime="20210714 23:00:10.066"/>
</kw>
<msg timestamp="20210714 23:00:10.067" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:09.651" endtime="20210714 23:00:10.067"/>
</kw>
<msg timestamp="20210714 23:00:10.067" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:09.651" endtime="20210714 23:00:10.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.067" endtime="20210714 23:00:10.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.068" endtime="20210714 23:00:10.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.068" endtime="20210714 23:00:10.068"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.072" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:00:10.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:10.074" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.070" endtime="20210714 23:00:10.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.075" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.075" endtime="20210714 23:00:10.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.075" endtime="20210714 23:00:10.076"/>
</kw>
<status status="PASS" starttime="20210714 23:00:10.069" endtime="20210714 23:00:10.076"/>
</kw>
<msg timestamp="20210714 23:00:10.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:10.069" endtime="20210714 23:00:10.076"/>
</kw>
<msg timestamp="20210714 23:00:10.076" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.069" endtime="20210714 23:00:10.076"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.080" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:10.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:10.082" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.078" endtime="20210714 23:00:10.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.082" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.082" endtime="20210714 23:00:10.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.083" endtime="20210714 23:00:10.083"/>
</kw>
<status status="PASS" starttime="20210714 23:00:10.077" endtime="20210714 23:00:10.083"/>
</kw>
<msg timestamp="20210714 23:00:10.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:10.077" endtime="20210714 23:00:10.084"/>
</kw>
<msg timestamp="20210714 23:00:10.084" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.077" endtime="20210714 23:00:10.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:10.084" endtime="20210714 23:00:10.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:08.776" endtime="20210714 23:00:10.085"/>
</test>
<test id="s1-s14-s11-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:10.481" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:00:10.481" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:10.088" endtime="20210714 23:00:10.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.482" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:10.482" endtime="20210714 23:00:10.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.483" endtime="20210714 23:00:10.483"/>
</kw>
<msg timestamp="20210714 23:00:10.483" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:10.087" endtime="20210714 23:00:10.483"/>
</kw>
<msg timestamp="20210714 23:00:10.484" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:10.086" endtime="20210714 23:00:10.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.484" endtime="20210714 23:00:10.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:10.085" endtime="20210714 23:00:10.485"/>
</test>
<test id="s1-s14-s11-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.490" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:10.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:10.896" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:10.488" endtime="20210714 23:00:10.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.897" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:10 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:10.896" endtime="20210714 23:00:10.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.897" endtime="20210714 23:00:10.898"/>
</kw>
<status status="PASS" starttime="20210714 23:00:10.488" endtime="20210714 23:00:10.898"/>
</kw>
<msg timestamp="20210714 23:00:10.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:10.488" endtime="20210714 23:00:10.898"/>
</kw>
<msg timestamp="20210714 23:00:10.898" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:10.487" endtime="20210714 23:00:10.899"/>
</kw>
<msg timestamp="20210714 23:00:10.899" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:10.486" endtime="20210714 23:00:10.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.899" endtime="20210714 23:00:10.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.899" endtime="20210714 23:00:10.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:10.900" endtime="20210714 23:00:10.900"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.904" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:10.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:10.906" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.902" endtime="20210714 23:00:10.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.907" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.906" endtime="20210714 23:00:10.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.907" endtime="20210714 23:00:10.908"/>
</kw>
<status status="PASS" starttime="20210714 23:00:10.901" endtime="20210714 23:00:10.908"/>
</kw>
<msg timestamp="20210714 23:00:10.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:10.901" endtime="20210714 23:00:10.908"/>
</kw>
<msg timestamp="20210714 23:00:10.908" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.900" endtime="20210714 23:00:10.908"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.911" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:10.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:10.913" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.910" endtime="20210714 23:00:10.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:10.914" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.914" endtime="20210714 23:00:10.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:10.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:10.915" endtime="20210714 23:00:10.915"/>
</kw>
<status status="PASS" starttime="20210714 23:00:10.909" endtime="20210714 23:00:10.915"/>
</kw>
<msg timestamp="20210714 23:00:10.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:10.909" endtime="20210714 23:00:10.915"/>
</kw>
<msg timestamp="20210714 23:00:10.916" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:10.908" endtime="20210714 23:00:10.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:10.916" endtime="20210714 23:00:10.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:10.485" endtime="20210714 23:00:10.917"/>
</test>
<test id="s1-s14-s11-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:10.922" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:11.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:11.330" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:10.920" endtime="20210714 23:00:11.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:11.331" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:11 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:11.330" endtime="20210714 23:00:11.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:11.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:11.331" endtime="20210714 23:00:11.332"/>
</kw>
<status status="PASS" starttime="20210714 23:00:10.919" endtime="20210714 23:00:11.332"/>
</kw>
<msg timestamp="20210714 23:00:11.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:10.919" endtime="20210714 23:00:11.332"/>
</kw>
<msg timestamp="20210714 23:00:11.332" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:10.919" endtime="20210714 23:00:11.332"/>
</kw>
<msg timestamp="20210714 23:00:11.333" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:10.918" endtime="20210714 23:00:11.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:11.333" endtime="20210714 23:00:11.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:11.333" endtime="20210714 23:00:11.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:11.334" endtime="20210714 23:00:11.334"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:11.338" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:11.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:11.340" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:11.336" endtime="20210714 23:00:11.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:11.341" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:11.340" endtime="20210714 23:00:11.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:11.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:11.341" endtime="20210714 23:00:11.342"/>
</kw>
<status status="PASS" starttime="20210714 23:00:11.335" endtime="20210714 23:00:11.342"/>
</kw>
<msg timestamp="20210714 23:00:11.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:11.335" endtime="20210714 23:00:11.342"/>
</kw>
<msg timestamp="20210714 23:00:11.342" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:11.334" endtime="20210714 23:00:11.342"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:11.346" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:11.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:11.348" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:11.344" endtime="20210714 23:00:11.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:11.348" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:11.348" endtime="20210714 23:00:11.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:11.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:11.349" endtime="20210714 23:00:11.349"/>
</kw>
<status status="PASS" starttime="20210714 23:00:11.343" endtime="20210714 23:00:11.350"/>
</kw>
<msg timestamp="20210714 23:00:11.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:11.343" endtime="20210714 23:00:11.350"/>
</kw>
<msg timestamp="20210714 23:00:11.350" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:11.342" endtime="20210714 23:00:11.350"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:11.350" endtime="20210714 23:00:11.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:10.917" endtime="20210714 23:00:11.351"/>
</test>
<test id="s1-s14-s11-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:11.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:11.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:11.762" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:11.354" endtime="20210714 23:00:11.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:11.763" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:11 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:11.762" endtime="20210714 23:00:11.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:11.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:11.763" endtime="20210714 23:00:11.764"/>
</kw>
<status status="PASS" starttime="20210714 23:00:11.353" endtime="20210714 23:00:11.764"/>
</kw>
<msg timestamp="20210714 23:00:11.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:11.353" endtime="20210714 23:00:11.764"/>
</kw>
<msg timestamp="20210714 23:00:11.765" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:11.353" endtime="20210714 23:00:11.765"/>
</kw>
<msg timestamp="20210714 23:00:11.765" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:11.352" endtime="20210714 23:00:11.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:11.765" endtime="20210714 23:00:11.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:11.766" endtime="20210714 23:00:11.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:11.766" endtime="20210714 23:00:11.767"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:11.771" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:00:11.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:11.773" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210714 23:00:11.768" endtime="20210714 23:00:11.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:11.774" level="INFO">R</msg>
<status status="PASS" starttime="20210714 23:00:11.773" endtime="20210714 23:00:11.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:11.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:11.774" endtime="20210714 23:00:11.774"/>
</kw>
<status status="PASS" starttime="20210714 23:00:11.768" endtime="20210714 23:00:11.775"/>
</kw>
<msg timestamp="20210714 23:00:11.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:11.767" endtime="20210714 23:00:11.775"/>
</kw>
<msg timestamp="20210714 23:00:11.775" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20210714 23:00:11.767" endtime="20210714 23:00:11.775"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:11.778" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:11.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:11.780" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210714 23:00:11.777" endtime="20210714 23:00:11.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:11.781" level="INFO">R</msg>
<status status="PASS" starttime="20210714 23:00:11.781" endtime="20210714 23:00:11.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:11.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:11.781" endtime="20210714 23:00:11.782"/>
</kw>
<status status="PASS" starttime="20210714 23:00:11.776" endtime="20210714 23:00:11.782"/>
</kw>
<msg timestamp="20210714 23:00:11.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:11.776" endtime="20210714 23:00:11.782"/>
</kw>
<msg timestamp="20210714 23:00:11.783" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20210714 23:00:11.775" endtime="20210714 23:00:11.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:11.783" endtime="20210714 23:00:11.783"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:11.787" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:12.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:12.193" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:11.785" endtime="20210714 23:00:12.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:12.194" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:12 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:12.194" endtime="20210714 23:00:12.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:12.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:12.195" endtime="20210714 23:00:12.195"/>
</kw>
<status status="PASS" starttime="20210714 23:00:11.785" endtime="20210714 23:00:12.196"/>
</kw>
<msg timestamp="20210714 23:00:12.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:11.784" endtime="20210714 23:00:12.196"/>
</kw>
<msg timestamp="20210714 23:00:12.196" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:11.784" endtime="20210714 23:00:12.196"/>
</kw>
<msg timestamp="20210714 23:00:12.196" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Wed, 14 Jul 2...</msg>
<status status="PASS" starttime="20210714 23:00:11.783" endtime="20210714 23:00:12.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:12.197" endtime="20210714 23:00:12.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:12.197" endtime="20210714 23:00:12.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:12.198" endtime="20210714 23:00:12.198"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:12.201" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:00:12.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:12.204" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210714 23:00:12.199" endtime="20210714 23:00:12.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:12.205" level="INFO">o</msg>
<status status="PASS" starttime="20210714 23:00:12.204" endtime="20210714 23:00:12.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:12.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:12.205" endtime="20210714 23:00:12.205"/>
</kw>
<status status="PASS" starttime="20210714 23:00:12.199" endtime="20210714 23:00:12.206"/>
</kw>
<msg timestamp="20210714 23:00:12.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:12.199" endtime="20210714 23:00:12.206"/>
</kw>
<msg timestamp="20210714 23:00:12.206" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20210714 23:00:12.198" endtime="20210714 23:00:12.206"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:12.210" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:12.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:12.212" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210714 23:00:12.208" endtime="20210714 23:00:12.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:12.213" level="INFO">o</msg>
<status status="PASS" starttime="20210714 23:00:12.212" endtime="20210714 23:00:12.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:12.213" endtime="20210714 23:00:12.214"/>
</kw>
<status status="PASS" starttime="20210714 23:00:12.207" endtime="20210714 23:00:12.214"/>
</kw>
<msg timestamp="20210714 23:00:12.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:12.207" endtime="20210714 23:00:12.214"/>
</kw>
<msg timestamp="20210714 23:00:12.214" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20210714 23:00:12.206" endtime="20210714 23:00:12.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:12.214" endtime="20210714 23:00:12.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:11.351" endtime="20210714 23:00:12.215"/>
</test>
<test id="s1-s14-s11-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:12.220" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:12.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:12.628" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:12.218" endtime="20210714 23:00:12.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:12.629" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:12 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:12.628" endtime="20210714 23:00:12.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:12.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:12.629" endtime="20210714 23:00:12.630"/>
</kw>
<status status="PASS" starttime="20210714 23:00:12.218" endtime="20210714 23:00:12.630"/>
</kw>
<msg timestamp="20210714 23:00:12.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:12.217" endtime="20210714 23:00:12.630"/>
</kw>
<msg timestamp="20210714 23:00:12.631" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:12.217" endtime="20210714 23:00:12.631"/>
</kw>
<msg timestamp="20210714 23:00:12.631" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:12.216" endtime="20210714 23:00:12.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:12.631" endtime="20210714 23:00:12.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:12.631" endtime="20210714 23:00:12.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:12.632" endtime="20210714 23:00:12.632"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:12.636" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20210714 23:00:12.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:12.638" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210714 23:00:12.634" endtime="20210714 23:00:12.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:12.639" level="INFO">ext</msg>
<status status="PASS" starttime="20210714 23:00:12.638" endtime="20210714 23:00:12.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:12.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:12.639" endtime="20210714 23:00:12.640"/>
</kw>
<status status="PASS" starttime="20210714 23:00:12.633" endtime="20210714 23:00:12.640"/>
</kw>
<msg timestamp="20210714 23:00:12.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:12.633" endtime="20210714 23:00:12.640"/>
</kw>
<msg timestamp="20210714 23:00:12.640" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20210714 23:00:12.632" endtime="20210714 23:00:12.640"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:12.644" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:12.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:12.646" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210714 23:00:12.642" endtime="20210714 23:00:12.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:12.647" level="INFO">ext</msg>
<status status="PASS" starttime="20210714 23:00:12.646" endtime="20210714 23:00:12.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:12.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:12.647" endtime="20210714 23:00:12.647"/>
</kw>
<status status="PASS" starttime="20210714 23:00:12.641" endtime="20210714 23:00:12.648"/>
</kw>
<msg timestamp="20210714 23:00:12.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:12.641" endtime="20210714 23:00:12.648"/>
</kw>
<msg timestamp="20210714 23:00:12.648" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20210714 23:00:12.641" endtime="20210714 23:00:12.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:12.648" endtime="20210714 23:00:12.649"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:12.652" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.061" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:12.651" endtime="20210714 23:00:13.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.062" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul 2021 23:00:12 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:13.062" endtime="20210714 23:00:13.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.063" endtime="20210714 23:00:13.063"/>
</kw>
<status status="PASS" starttime="20210714 23:00:12.650" endtime="20210714 23:00:13.064"/>
</kw>
<msg timestamp="20210714 23:00:13.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:12.650" endtime="20210714 23:00:13.064"/>
</kw>
<msg timestamp="20210714 23:00:13.064" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:12.649" endtime="20210714 23:00:13.064"/>
</kw>
<msg timestamp="20210714 23:00:13.064" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Wed, 14 Jul ...</msg>
<status status="PASS" starttime="20210714 23:00:12.649" endtime="20210714 23:00:13.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.065" endtime="20210714 23:00:13.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.065" endtime="20210714 23:00:13.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.066" endtime="20210714 23:00:13.066"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.069" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.072" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.067" endtime="20210714 23:00:13.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.072" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.072" endtime="20210714 23:00:13.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.073" endtime="20210714 23:00:13.073"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.067" endtime="20210714 23:00:13.073"/>
</kw>
<msg timestamp="20210714 23:00:13.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.067" endtime="20210714 23:00:13.074"/>
</kw>
<msg timestamp="20210714 23:00:13.074" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.066" endtime="20210714 23:00:13.074"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.077" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.079" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.075" endtime="20210714 23:00:13.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.080" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.080" endtime="20210714 23:00:13.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.081" endtime="20210714 23:00:13.081"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.075" endtime="20210714 23:00:13.081"/>
</kw>
<msg timestamp="20210714 23:00:13.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.075" endtime="20210714 23:00:13.082"/>
</kw>
<msg timestamp="20210714 23:00:13.082" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.074" endtime="20210714 23:00:13.082"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:13.082" endtime="20210714 23:00:13.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:12.215" endtime="20210714 23:00:13.083"/>
</test>
<test id="s1-s14-s11-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.500" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:1...</msg>
<status status="PASS" starttime="20210714 23:00:13.086" endtime="20210714 23:00:13.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.501" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:13 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:13.501" endtime="20210714 23:00:13.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.502" endtime="20210714 23:00:13.502"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.086" endtime="20210714 23:00:13.502"/>
</kw>
<msg timestamp="20210714 23:00:13.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.085" endtime="20210714 23:00:13.503"/>
</kw>
<msg timestamp="20210714 23:00:13.503" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:1...</msg>
<status status="PASS" starttime="20210714 23:00:13.084" endtime="20210714 23:00:13.503"/>
</kw>
<msg timestamp="20210714 23:00:13.503" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:1...</msg>
<status status="PASS" starttime="20210714 23:00:13.084" endtime="20210714 23:00:13.503"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.503" endtime="20210714 23:00:13.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.504" endtime="20210714 23:00:13.504"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.508" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.510" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.506" endtime="20210714 23:00:13.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.511" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.510" endtime="20210714 23:00:13.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.511" endtime="20210714 23:00:13.511"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.505" endtime="20210714 23:00:13.512"/>
</kw>
<msg timestamp="20210714 23:00:13.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.505" endtime="20210714 23:00:13.512"/>
</kw>
<msg timestamp="20210714 23:00:13.512" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.504" endtime="20210714 23:00:13.512"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.515" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.517" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.513" endtime="20210714 23:00:13.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.518" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.518" endtime="20210714 23:00:13.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.518" endtime="20210714 23:00:13.519"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.513" endtime="20210714 23:00:13.519"/>
</kw>
<msg timestamp="20210714 23:00:13.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.513" endtime="20210714 23:00:13.519"/>
</kw>
<msg timestamp="20210714 23:00:13.520" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.512" endtime="20210714 23:00:13.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:13.520" endtime="20210714 23:00:13.520"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.524" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.924" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:1...</msg>
<status status="PASS" starttime="20210714 23:00:13.522" endtime="20210714 23:00:13.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.926" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:13 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210714 23:00:13.925" endtime="20210714 23:00:13.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.926" endtime="20210714 23:00:13.927"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.522" endtime="20210714 23:00:13.927"/>
</kw>
<msg timestamp="20210714 23:00:13.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.521" endtime="20210714 23:00:13.927"/>
</kw>
<msg timestamp="20210714 23:00:13.927" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:1...</msg>
<status status="PASS" starttime="20210714 23:00:13.521" endtime="20210714 23:00:13.927"/>
</kw>
<msg timestamp="20210714 23:00:13.928" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Wed, 14 Jul 2021 23:00:07 GMT", 
    "ContentLength": 11, 
    "Expires": "Wed, 14 Jul 2021 23:00:1...</msg>
<status status="PASS" starttime="20210714 23:00:13.520" endtime="20210714 23:00:13.928"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.928" endtime="20210714 23:00:13.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:13.928" endtime="20210714 23:00:13.929"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.932" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.934" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.930" endtime="20210714 23:00:13.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.935" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.935" endtime="20210714 23:00:13.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.936" endtime="20210714 23:00:13.936"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.930" endtime="20210714 23:00:13.936"/>
</kw>
<msg timestamp="20210714 23:00:13.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.929" endtime="20210714 23:00:13.937"/>
</kw>
<msg timestamp="20210714 23:00:13.937" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.929" endtime="20210714 23:00:13.937"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.940" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:13.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:13.942" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.938" endtime="20210714 23:00:13.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:13.943" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.943" endtime="20210714 23:00:13.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:13.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:13.943" endtime="20210714 23:00:13.944"/>
</kw>
<status status="PASS" starttime="20210714 23:00:13.938" endtime="20210714 23:00:13.944"/>
</kw>
<msg timestamp="20210714 23:00:13.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:13.937" endtime="20210714 23:00:13.944"/>
</kw>
<msg timestamp="20210714 23:00:13.944" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210714 23:00:13.937" endtime="20210714 23:00:13.944"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 23:00:13.945" endtime="20210714 23:00:13.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:13.083" endtime="20210714 23:00:13.945"/>
</test>
<test id="s1-s14-s11-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:13.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:14.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:00:14.340" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:13.948" endtime="20210714 23:00:14.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:14.342" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.341" endtime="20210714 23:00:14.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:14.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:14.342" endtime="20210714 23:00:14.342"/>
</kw>
<msg timestamp="20210714 23:00:14.343" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:13.947" endtime="20210714 23:00:14.343"/>
</kw>
<msg timestamp="20210714 23:00:14.343" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:13.947" endtime="20210714 23:00:14.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:14.343" endtime="20210714 23:00:14.344"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:14.347" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:14.733" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:00:14.733" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.345" endtime="20210714 23:00:14.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:14.734" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.733" endtime="20210714 23:00:14.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:14.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:14.735" endtime="20210714 23:00:14.735"/>
</kw>
<msg timestamp="20210714 23:00:14.736" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.344" endtime="20210714 23:00:14.736"/>
</kw>
<msg timestamp="20210714 23:00:14.736" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.344" endtime="20210714 23:00:14.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:14.736" endtime="20210714 23:00:14.736"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:14.741" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-76317 --key 32322/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:15.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20210714 23:00:15.138" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.739" endtime="20210714 23:00:15.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:15.139" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:15.139" endtime="20210714 23:00:15.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:15.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:15.140" endtime="20210714 23:00:15.140"/>
</kw>
<msg timestamp="20210714 23:00:15.141" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.737" endtime="20210714 23:00:15.141"/>
</kw>
<msg timestamp="20210714 23:00:15.141" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210714 23:00:14.737" endtime="20210714 23:00:15.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:15.141" endtime="20210714 23:00:15.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:13.946" endtime="20210714 23:00:15.142"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210714 23:00:04.272" endtime="20210714 23:00:15.143"/>
</suite>
<suite id="s1-s14-s12" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:00:15.153" level="INFO">${random} = 99226</msg>
<status status="PASS" starttime="20210714 23:00:15.153" endtime="20210714 23:00:15.153"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:00:15.155" level="INFO">${PREFIX} = 99226</msg>
<status status="PASS" starttime="20210714 23:00:15.153" endtime="20210714 23:00:15.155"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.153" endtime="20210714 23:00:15.155"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.152" endtime="20210714 23:00:15.155"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:15.157" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:15.159" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 23:00:15.159" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210714 23:00:15.156" endtime="20210714 23:00:15.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:15.160" endtime="20210714 23:00:15.160"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:15.162" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:15.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:15.279" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210714 23:00:15.160" endtime="20210714 23:00:15.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:15.283" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:15.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:15.629" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco...</msg>
<status status="PASS" starttime="20210714 23:00:15.282" endtime="20210714 23:00:15.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:15.630" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: ewr.edge.kernel.org
 * extras: repos-va.psychz.net
 * updates: mirror.jaleco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210714 23:00:15.629" endtime="20210714 23:00:15.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:15.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:15.630" endtime="20210714 23:00:15.631"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.281" endtime="20210714 23:00:15.631"/>
</kw>
<msg timestamp="20210714 23:00:15.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:15.281" endtime="20210714 23:00:15.631"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.281" endtime="20210714 23:00:15.631"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.280" endtime="20210714 23:00:15.632"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.279" endtime="20210714 23:00:15.632"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.155" endtime="20210714 23:00:15.632"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.155" endtime="20210714 23:00:15.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:15.633" endtime="20210714 23:00:15.633"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:15.633" endtime="20210714 23:00:15.634"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:15.638" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:15.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:15.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:15.636" endtime="20210714 23:00:15.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:15.920" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:15.920" endtime="20210714 23:00:15.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:15.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:15.920" endtime="20210714 23:00:15.921"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.635" endtime="20210714 23:00:15.921"/>
</kw>
<msg timestamp="20210714 23:00:15.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:15.635" endtime="20210714 23:00:15.921"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.635" endtime="20210714 23:00:15.922"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:15.925" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:16.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:16.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:15.923" endtime="20210714 23:00:16.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:16.203" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:16.202" endtime="20210714 23:00:16.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:16.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:16.203" endtime="20210714 23:00:16.204"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.923" endtime="20210714 23:00:16.204"/>
</kw>
<msg timestamp="20210714 23:00:16.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:15.922" endtime="20210714 23:00:16.204"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.922" endtime="20210714 23:00:16.204"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:16.208" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:16.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:16.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:16.206" endtime="20210714 23:00:16.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:16.489" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:16.489" endtime="20210714 23:00:16.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:16.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:16.490" endtime="20210714 23:00:16.490"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.205" endtime="20210714 23:00:16.490"/>
</kw>
<msg timestamp="20210714 23:00:16.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:16.205" endtime="20210714 23:00:16.491"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.205" endtime="20210714 23:00:16.491"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:16.494" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:16.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:16.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 23:00:16.492" endtime="20210714 23:00:16.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:16.775" level="INFO"/>
<status status="PASS" starttime="20210714 23:00:16.774" endtime="20210714 23:00:16.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:16.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:16.775" endtime="20210714 23:00:16.775"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.492" endtime="20210714 23:00:16.776"/>
</kw>
<msg timestamp="20210714 23:00:16.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:16.491" endtime="20210714 23:00:16.776"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.491" endtime="20210714 23:00:16.776"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.634" endtime="20210714 23:00:16.776"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.634" endtime="20210714 23:00:16.776"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.633" endtime="20210714 23:00:16.777"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.632" endtime="20210714 23:00:16.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210714 23:00:16.778" level="INFO">${postfix} = 88390</msg>
<status status="PASS" starttime="20210714 23:00:16.778" endtime="20210714 23:00:16.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210714 23:00:16.778" level="INFO">${bucket} = bucket-88390</msg>
<status status="PASS" starttime="20210714 23:00:16.778" endtime="20210714 23:00:16.778"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:16.783" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-88390 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:17.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:17.178" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88390"
}</msg>
<status status="PASS" starttime="20210714 23:00:16.781" endtime="20210714 23:00:17.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:17.179" level="INFO">{
    "Location": "http://s3g:9878/bucket-88390"
}</msg>
<status status="PASS" starttime="20210714 23:00:17.178" endtime="20210714 23:00:17.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:17.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:17.179" endtime="20210714 23:00:17.179"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.780" endtime="20210714 23:00:17.180"/>
</kw>
<msg timestamp="20210714 23:00:17.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:16.780" endtime="20210714 23:00:17.180"/>
</kw>
<msg timestamp="20210714 23:00:17.180" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88390"
}</msg>
<status status="PASS" starttime="20210714 23:00:16.780" endtime="20210714 23:00:17.180"/>
</kw>
<msg timestamp="20210714 23:00:17.180" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-88390"
}</msg>
<status status="PASS" starttime="20210714 23:00:16.779" endtime="20210714 23:00:17.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:17.181" endtime="20210714 23:00:17.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:17.181" endtime="20210714 23:00:17.181"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.779" endtime="20210714 23:00:17.181"/>
</kw>
<status status="PASS" starttime="20210714 23:00:16.777" endtime="20210714 23:00:17.182"/>
</kw>
<msg timestamp="20210714 23:00:17.182" level="INFO">${BUCKET} = bucket-88390</msg>
<status status="PASS" starttime="20210714 23:00:16.777" endtime="20210714 23:00:17.182"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210714 23:00:17.182" level="INFO">${BUCKET} = bucket-88390</msg>
<status status="PASS" starttime="20210714 23:00:17.182" endtime="20210714 23:00:17.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:17.183" endtime="20210714 23:00:17.183"/>
</kw>
<status status="PASS" starttime="20210714 23:00:15.152" endtime="20210714 23:00:17.183"/>
</kw>
<test id="s1-s14-s12-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:17.184" endtime="20210714 23:00:17.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:17.188" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:17.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:17.200" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 23:00:17.186" endtime="20210714 23:00:17.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:17.201" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.2...
* Connected to s3g (172.18.0.2) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Wed, 14 Jul 2021 23:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 14 Jul 2021 23:00:17 GMT
&lt; Date: Wed, 14 Jul 2021 23:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20210714 23:00:17.201" endtime="20210714 23:00:17.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:17.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:17.201" endtime="20210714 23:00:17.202"/>
</kw>
<status status="PASS" starttime="20210714 23:00:17.185" endtime="20210714 23:00:17.203"/>
</kw>
<msg timestamp="20210714 23:00:17.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:17.185" endtime="20210714 23:00:17.204"/>
</kw>
<msg timestamp="20210714 23:00:17.204" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 23:00:17.185" endtime="20210714 23:00:17.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:17.204" endtime="20210714 23:00:17.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:17.205" endtime="20210714 23:00:17.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:17.209" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:17.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:17.217" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 23:00:17.207" endtime="20210714 23:00:17.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:17.218" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.2...
* Connected to s3g (172.18.0.2) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 14 Jul 2021 23:00:17 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Wed, 14 Jul 2021 22:29:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  1197k      0 --:--:-- --:--:-- --:--:-- 1516k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20210714 23:00:17.217" endtime="20210714 23:00:17.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:17.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:17.218" endtime="20210714 23:00:17.219"/>
</kw>
<status status="PASS" starttime="20210714 23:00:17.206" endtime="20210714 23:00:17.219"/>
</kw>
<msg timestamp="20210714 23:00:17.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:17.206" endtime="20210714 23:00:17.219"/>
</kw>
<msg timestamp="20210714 23:00:17.219" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210714 23:00:17.206" endtime="20210714 23:00:17.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:17.220" endtime="20210714 23:00:17.220"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:17.183" endtime="20210714 23:00:17.220"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20210714 23:00:15.145" endtime="20210714 23:00:17.221"/>
</suite>
<status status="PASS" starttime="20210714 22:58:35.270" endtime="20210714 23:00:17.224"/>
</suite>
<suite id="s1-s15" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s15-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s15-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:20.984" endtime="20210714 23:00:20.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 10 --key-size 1025</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:20.989" level="INFO">Running command 'ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 10 --key-size 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.177" level="INFO">${output} = 2021-07-14 23:00:22,608 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:22,729 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:20.986" endtime="20210714 23:00:29.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.179" level="INFO">2021-07-14 23:00:22,608 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:22,729 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:00:22,729 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:00:23,768 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2021-07-14 23:00:23,769 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2021-07-14 23:00:23,769 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2021-07-14 23:00:23,770 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2021-07-14 23:00:23,770 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2021-07-14 23:00:23,770 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-07-14 23:00:23,770 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2021-07-14 23:00:23,770 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2021-07-14 23:00:23,774 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-07-14 23:00:23,785 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2021-07-14 23:00:23,819 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-31119, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-14 23:00:23,859 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-31119/bucket-0-53242, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 23:00:24,526 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-14 23:00:24,754 [pool-2-thread-10] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:00:24,755 [pool-2-thread-10] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-93BFA31EC2FA-&gt;1d246d39-45a9-41b8-968c-00af7f92fe3d
2021-07-14 23:00:24,756 [pool-2-thread-9] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-59F8E7A0EE28-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:00:24,755 [pool-2-thread-8] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-43982D8FEEF8-&gt;f860c5c9-cd39-4309-8b28-e605a9bbf515
2021-07-14 23:00:24,756 [pool-2-thread-8] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 23:00:24,759 [pool-2-thread-9] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 23:00:24,763 [pool-2-thread-10] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 23:00:24,791 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: a3b9c37a397ad4188041dd80621bdeefc46885f2
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,135
Average Time spent in key write: 00:00:00,619
Total bytes written: 10250
Total Execution time: 00:00:05,943
***************************************************</msg>
<status status="PASS" starttime="20210714 23:00:29.178" endtime="20210714 23:00:29.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.179" endtime="20210714 23:00:29.180"/>
</kw>
<status status="PASS" starttime="20210714 23:00:20.985" endtime="20210714 23:00:29.180"/>
</kw>
<msg timestamp="20210714 23:00:29.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:20.985" endtime="20210714 23:00:29.180"/>
</kw>
<status status="PASS" starttime="20210714 23:00:20.984" endtime="20210714 23:00:29.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:20.983" endtime="20210714 23:00:29.181"/>
</test>
<test id="s1-s15-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:29.183" endtime="20210714 23:00:29.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.187" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.369" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":170},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20210714 23:00:29.185" endtime="20210714 23:00:29.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.370" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":170},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20210714 23:00:29.369" endtime="20210714 23:00:29.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.370" endtime="20210714 23:00:29.371"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.184" endtime="20210714 23:00:29.371"/>
</kw>
<msg timestamp="20210714 23:00:29.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.184" endtime="20210714 23:00:29.371"/>
</kw>
<msg timestamp="20210714 23:00:29.371" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":170},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20210714 23:00:29.183" endtime="20210714 23:00:29.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.371" endtime="20210714 23:00:29.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.376" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.407" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-67053","bucket":"bucket-1-29685","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-1-03763","fileSize...</msg>
<status status="PASS" starttime="20210714 23:00:29.374" endtime="20210714 23:00:29.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.408" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-67053","bucket":"bucket-1-29685","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-1-03763","fileSize":16384,"count":5},{"volume":"vol-0-67053","bucket":"bucket-3-92094","fileSize":16384,"count":5},{"volume":"vol-4-85828","bucket":"bucket-2-56723","fileSize":16384,"count":5},{"volume":"vol-2-43755","bucket":"bucket-0-42045","fileSize":16384,"count":5},{"volume":"vol-0-67053","bucket":"bucket-0-85928","fileSize":16384,"count":5},{"volume":"vol-3-91161","bucket":"bucket-4-03502","fileSize":16384,"count":5},{"volume":"vol-0-67053","bucket":"bucket-2-59101","fileSize":16384,"count":5},{"volume":"vol-2-43755","bucket":"bucket-4-94908","fileSize":16384,"count":5},{"volume":"vol-4-85828","bucket":"bucket-4-77940","fileSize":16384,"count":5},{"volume":"vol-3-91161","bucket":"bucket-0-31982","fileSize":16384,"count":5},{"volume":"vol-3-91161","bucket":"bucket-2-11174","fileSize":16384,"count":5},{"volume":"vol-2-43755","bucket":"bucket-2-18263","fileSize":16384,"count":5},{"volume":"vol-4-85828","bucket":"bucket-3-07692","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-0-09150","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-4-33007","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-3-40123","fileSize":16384,"count":5},{"volume":"vol-4-85828","bucket":"bucket-1-10250","fileSize":16384,"count":5},{"volume":"vol-4-85828","bucket":"bucket-0-56965","fileSize":16384,"count":5},{"volume":"vol-2-43755","bucket":"bucket-1-74544","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-2-76587","fileSize":16384,"count":5},{"volume":"vol-2-43755","bucket":"bucket-3-86619","fileSize":16384,"count":5},{"volume":"vol-3-91161","bucket":"bucket-1-47328","fileSize":16384,"count":5},{"volume":"vol-0-67053","bucket":"bucket-4-04707","fileSize":16384,"count":5},{"volume":"vol-3-91161","bucket":"bucket-3-36861","fileSize":16384,"count":5},{"volume":"83319-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"83319-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"96167-rpcbasic","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64520-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64520-rpcwoport2","bucket":"bb1","fileSize":32768,"count":2},{"volume":"64520-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64520-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"orkuc","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":4096,"count":2},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":33554432,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-62129","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-54283","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-82452","fileSize":33554432,"count":1},{"volume":"s3v","bucket":"bucket-82452","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-82452","fileSize":4096,"count":2},{"volume":"s3v","bucket":"bucket-51447","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-08434","fileSize":1024,"count":1},{"volume":"vol-0-31119","bucket":"bucket-0-53242","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-76317","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-86325","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14278","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-54283","fileSize":16777216,"count":4}]</msg>
<status status="PASS" starttime="20210714 23:00:29.407" endtime="20210714 23:00:29.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.408" endtime="20210714 23:00:29.409"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.373" endtime="20210714 23:00:29.409"/>
</kw>
<msg timestamp="20210714 23:00:29.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.373" endtime="20210714 23:00:29.409"/>
</kw>
<msg timestamp="20210714 23:00:29.409" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-67053","bucket":"bucket-1-29685","fileSize":16384,"count":5},{"volume":"vol-1-00555","bucket":"bucket-1-03763","fileSize...</msg>
<status status="PASS" starttime="20210714 23:00:29.372" endtime="20210714 23:00:29.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.410" endtime="20210714 23:00:29.410"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.182" endtime="20210714 23:00:29.410"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.182" endtime="20210714 23:00:29.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:29.181" endtime="20210714 23:00:29.411"/>
</test>
<test id="s1-s15-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.417" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.451" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"cda2af38-6970-415e-9399-a5f835ee027b","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1626303625398,"storageR...</msg>
<status status="PASS" starttime="20210714 23:00:29.415" endtime="20210714 23:00:29.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.452" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"cda2af38-6970-415e-9399-a5f835ee027b","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1626303625398,"storageReport":{"capacity":89311358976,"used":4096,"remaining":42108850176},"pipelines":[{"pipelineID":"69d32a9a-da53-46e3-83f0-dca1a0ac44ef","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"f1ffd87e-5811-4a36-abbd-cf6015f302d7","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.2.0-SNAPSHOT","setupTime":1626302276645,"revision":"c41d08f40f56d10b2a67ca02c178813ea49cd7a1","buildDate":"2021-07-14T22:26Z","layoutVersion":2},{"uuid":"1d246d39-45a9-41b8-968c-00af7f92fe3d","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1626303625377,"storageReport":{"capacity":89311358976,"used":4096,"remaining":42108784640},"pipelines":[{"pipelineID":"69d32a9a-da53-46e3-83f0-dca1a0ac44ef","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"93958489-7566-4731-b77d-f1ff3590d6c5","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.2.0-SNAPSHOT","setupTime":1626302277721,"revision":"c41d08f40f56d10b2a67ca02c178813ea49cd7a1","buildDate":"2021-07-14T22:26Z","layoutVersion":2},{"uuid":"f860c5c9-cd39-4309-8b28-e605a9bbf515","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1626303625453,"storageReport":{"capacity":89311358976,"used":4096,"remaining":42108841984},"pipelines":[{"pipelineID":"0986964a-0b62-40b1-b3bd-08e8d9fc332f","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"69d32a9a-da53-46e3-83f0-dca1a0ac44ef","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.2.0-SNAPSHOT","setupTime":1626302277589,"revision":"c41d08f40f56d10b2a67ca02c178813ea49cd7a1","buildDate":"2021-07-14T22:26Z","layoutVersion":2}]}</msg>
<status status="PASS" starttime="20210714 23:00:29.451" endtime="20210714 23:00:29.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.452" endtime="20210714 23:00:29.453"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.413" endtime="20210714 23:00:29.453"/>
</kw>
<msg timestamp="20210714 23:00:29.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.413" endtime="20210714 23:00:29.453"/>
</kw>
<msg timestamp="20210714 23:00:29.453" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"cda2af38-6970-415e-9399-a5f835ee027b","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1626303625398,"storageR...</msg>
<status status="PASS" starttime="20210714 23:00:29.412" endtime="20210714 23:00:29.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.454" endtime="20210714 23:00:29.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.454" endtime="20210714 23:00:29.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.455" endtime="20210714 23:00:29.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.455" endtime="20210714 23:00:29.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.460" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.481" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"0986964a-0b62-40b1-b3bd-08e8d9fc332f","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLead...</msg>
<status status="PASS" starttime="20210714 23:00:29.457" endtime="20210714 23:00:29.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.482" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"0986964a-0b62-40b1-b3bd-08e8d9fc332f","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1324828,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"69d32a9a-da53-46e3-83f0-dca1a0ac44ef","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_3.ozone_default","ozone_datanode_2.ozone_default","ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1323852,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"93958489-7566-4731-b77d-f1ff3590d6c5","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1323895,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f1ffd87e-5811-4a36-abbd-cf6015f302d7","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1325218,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20210714 23:00:29.481" endtime="20210714 23:00:29.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.482" endtime="20210714 23:00:29.482"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.457" endtime="20210714 23:00:29.483"/>
</kw>
<msg timestamp="20210714 23:00:29.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.456" endtime="20210714 23:00:29.483"/>
</kw>
<msg timestamp="20210714 23:00:29.483" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"0986964a-0b62-40b1-b3bd-08e8d9fc332f","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLead...</msg>
<status status="PASS" starttime="20210714 23:00:29.456" endtime="20210714 23:00:29.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.483" endtime="20210714 23:00:29.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.484" endtime="20210714 23:00:29.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.484" endtime="20210714 23:00:29.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.485" endtime="20210714 23:00:29.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.485" endtime="20210714 23:00:29.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.486" endtime="20210714 23:00:29.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.489" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.507" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":12288,"remaining":126326476800},"containers":4,"volumes":15,"buckets":63,"keys":180}</msg>
<status status="PASS" starttime="20210714 23:00:29.488" endtime="20210714 23:00:29.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.508" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":12288,"remaining":126326476800},"containers":4,"volumes":15,"buckets":63,"keys":180}</msg>
<status status="PASS" starttime="20210714 23:00:29.507" endtime="20210714 23:00:29.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.508" endtime="20210714 23:00:29.508"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.487" endtime="20210714 23:00:29.509"/>
</kw>
<msg timestamp="20210714 23:00:29.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.487" endtime="20210714 23:00:29.509"/>
</kw>
<msg timestamp="20210714 23:00:29.509" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":12288,"remaining":126326476800},"containers":4,"volumes":15,"buckets":63,"keys":180}</msg>
<status status="PASS" starttime="20210714 23:00:29.486" endtime="20210714 23:00:29.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.509" endtime="20210714 23:00:29.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.510" endtime="20210714 23:00:29.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.510" endtime="20210714 23:00:29.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.514" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.533" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"cda2af38-6970-415e-9399-a5f835ee027b","datanodeHost":"ozone_datanode_2.ozone_default","firstSeenTime":1626302357342,"lastSeenTime":1626303617203},{"containerId":1,"da...</msg>
<status status="PASS" starttime="20210714 23:00:29.512" endtime="20210714 23:00:29.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.534" level="INFO">[{"containerId":1,"datanodeUuid":"cda2af38-6970-415e-9399-a5f835ee027b","datanodeHost":"ozone_datanode_2.ozone_default","firstSeenTime":1626302357342,"lastSeenTime":1626303617203},{"containerId":1,"datanodeUuid":"1d246d39-45a9-41b8-968c-00af7f92fe3d","datanodeHost":"ozone_datanode_1.ozone_default","firstSeenTime":1626302357658,"lastSeenTime":1626303617655},{"containerId":1,"datanodeUuid":"f860c5c9-cd39-4309-8b28-e605a9bbf515","datanodeHost":"ozone_datanode_3.ozone_default","firstSeenTime":1626302357822,"lastSeenTime":1626303587814}]</msg>
<status status="PASS" starttime="20210714 23:00:29.533" endtime="20210714 23:00:29.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.534" endtime="20210714 23:00:29.534"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.511" endtime="20210714 23:00:29.535"/>
</kw>
<msg timestamp="20210714 23:00:29.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.511" endtime="20210714 23:00:29.535"/>
</kw>
<msg timestamp="20210714 23:00:29.535" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"cda2af38-6970-415e-9399-a5f835ee027b","datanodeHost":"ozone_datanode_2.ozone_default","firstSeenTime":1626302357342,"lastSeenTime":1626303617203},{"containerId":1,"da...</msg>
<status status="PASS" starttime="20210714 23:00:29.511" endtime="20210714 23:00:29.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.535" endtime="20210714 23:00:29.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:29.411" endtime="20210714 23:00:29.536"/>
</test>
<test id="s1-s15-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210714 23:00:29.537" endtime="20210714 23:00:29.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:29.543" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:29.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:29.561" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20210714 23:00:29.540" endtime="20210714 23:00:29.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:29.561" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.de8738b4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.532db0c6.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.85d14250.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.c5be3927.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.561" endtime="20210714 23:00:29.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:29.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:29.562" endtime="20210714 23:00:29.562"/>
</kw>
<status status="PASS" starttime="20210714 23:00:29.540" endtime="20210714 23:00:29.563"/>
</kw>
<msg timestamp="20210714 23:00:29.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:29.539" endtime="20210714 23:00:29.563"/>
</kw>
<msg timestamp="20210714 23:00:29.563" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20210714 23:00:29.539" endtime="20210714 23:00:29.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:29.563" endtime="20210714 23:00:29.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:29.536" endtime="20210714 23:00:29.564"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20210714 23:00:20.960" endtime="20210714 23:00:29.565"/>
</suite>
<status status="PASS" starttime="20210714 23:00:20.937" endtime="20210714 23:00:29.566"/>
</suite>
<suite id="s1-s16" name="Om-Ratis" source="/opt/hadoop/smoketest/om-ratis">
<suite id="s1-s16-s1" name="testOMAdminCmd" source="/opt/hadoop/smoketest/om-ratis/testOMAdminCmd.robot">
<test id="s1-s16-s1-t1" name="Check om admin command">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone admin om roles -id=omServiceIdDefault</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:33.357" level="INFO">Running command 'ozone admin om roles -id=omServiceIdDefault 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:35.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:35.243" level="INFO">${output} = Error: This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are []</msg>
<status status="PASS" starttime="20210714 23:00:33.353" endtime="20210714 23:00:35.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:35.245" level="INFO">Error: This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are []</msg>
<status status="PASS" starttime="20210714 23:00:35.244" endtime="20210714 23:00:35.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:35.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:35.245" endtime="20210714 23:00:35.245"/>
</kw>
<msg timestamp="20210714 23:00:35.246" level="INFO">${result} = Error: This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are []</msg>
<status status="PASS" starttime="20210714 23:00:33.353" endtime="20210714 23:00:35.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This command works only on OzoneManager HA cluster.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:35.246" endtime="20210714 23:00:35.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:33.352" endtime="20210714 23:00:35.246"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210714 23:00:33.329" endtime="20210714 23:00:35.248"/>
</suite>
<status status="PASS" starttime="20210714 23:00:33.306" endtime="20210714 23:00:35.249"/>
</suite>
<suite id="s1-s17" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s17-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s17-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:39.066" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:44.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:44.239" level="INFO">${output} = 2021-07-14 23:00:40,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:40,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:39.063" endtime="20210714 23:00:44.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:44.240" level="INFO">2021-07-14 23:00:40,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:40,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:00:40,672 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:00:40,814 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-07-14 23:00:40,826 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:41,773 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-14 23:00:41,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:42,396 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-14 23:00:42,591 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:00:42,592 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-BF05B7CB9479-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:00:42,592 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 23:00:42,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:43,854 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:00:43,905 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1381.093463, max=1381.093463, mean=1381.093463, stddev=0.0, median=1381.093463, p75=1381.093463, p95=1381.093463, p98=1381.093463, p99=1381.093463, p999=1381.093463, mean_rate=0.47470661519551954, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:00:43,905 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-14 23:00:43,906 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:00:43,906 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:00:44.240" endtime="20210714 23:00:44.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:44.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:44.241" endtime="20210714 23:00:44.241"/>
</kw>
<status status="PASS" starttime="20210714 23:00:39.063" endtime="20210714 23:00:44.241"/>
</kw>
<msg timestamp="20210714 23:00:44.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:39.062" endtime="20210714 23:00:44.242"/>
</kw>
<msg timestamp="20210714 23:00:44.242" level="INFO">${result} = 2021-07-14 23:00:40,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:40,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:39.061" endtime="20210714 23:00:44.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:44.242" endtime="20210714 23:00:44.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:39.061" endtime="20210714 23:00:44.243"/>
</test>
<test id="s1-s17-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:44.248" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:48.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:48.164" level="INFO">${output} = 2021-07-14 23:00:45,753 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:45,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:44.246" endtime="20210714 23:00:48.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:48.165" level="INFO">2021-07-14 23:00:45,753 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:45,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:00:45,885 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:00:46,067 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-07-14 23:00:46,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:47,083 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:48,084 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:00:48,119 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=64.751662, max=64.751662, mean=64.751662, stddev=0.0, median=64.751662, p75=64.751662, p95=64.751662, p98=64.751662, p99=64.751662, p999=64.751662, mean_rate=0.9062859836318371, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:00:48,121 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-14 23:00:48,123 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:00:48,123 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:00:48.165" endtime="20210714 23:00:48.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:48.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:48.166" endtime="20210714 23:00:48.166"/>
</kw>
<status status="PASS" starttime="20210714 23:00:44.245" endtime="20210714 23:00:48.166"/>
</kw>
<msg timestamp="20210714 23:00:48.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:44.245" endtime="20210714 23:00:48.167"/>
</kw>
<msg timestamp="20210714 23:00:48.167" level="INFO">${result} = 2021-07-14 23:00:45,753 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:45,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:44.244" endtime="20210714 23:00:48.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:48.167" endtime="20210714 23:00:48.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:44.243" endtime="20210714 23:00:48.168"/>
</test>
<test id="s1-s17-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:48.172" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:51.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:51.993" level="INFO">${output} = 2021-07-14 23:00:49,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:49,874 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:48.170" endtime="20210714 23:00:51.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:51.994" level="INFO">2021-07-14 23:00:49,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:49,874 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:00:49,874 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:00:50,005 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-07-14 23:00:50,019 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:51,023 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:00:51,941 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.154046, max=18.154046, mean=18.154046, stddev=0.0, median=18.154046, p75=18.154046, p95=18.154046, p98=18.154046, p99=18.154046, p999=18.154046, mean_rate=0.9781456258297445, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:00:51,942 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-14 23:00:51,958 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:00:51,958 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:00:51.994" endtime="20210714 23:00:51.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:51.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:51.995" endtime="20210714 23:00:51.995"/>
</kw>
<status status="PASS" starttime="20210714 23:00:48.170" endtime="20210714 23:00:51.995"/>
</kw>
<msg timestamp="20210714 23:00:51.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:48.170" endtime="20210714 23:00:51.996"/>
</kw>
<msg timestamp="20210714 23:00:51.996" level="INFO">${result} = 2021-07-14 23:00:49,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:49,874 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:48.169" endtime="20210714 23:00:51.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:00:51.996" endtime="20210714 23:00:51.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:48.168" endtime="20210714 23:00:51.997"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210714 23:00:39.047" endtime="20210714 23:00:51.998"/>
</suite>
<suite id="s1-s17-s2" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s17-s2-t1" name="Ozone Client Key Remover">
<kw name="Ozone Client Key Generator For Remover" type="SETUP">
<arg>${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:52.007" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockr 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:00:57.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:00:57.136" level="INFO">${output} = 2021-07-14 23:00:53,504 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:53,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:52.006" endtime="20210714 23:00:57.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:00:57.137" level="INFO">2021-07-14 23:00:53,504 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:53,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:00:53,590 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:00:53,722 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr
2021-07-14 23:00:53,734 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:54,743 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:55,333 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-14 23:00:55,561 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-14 23:00:55,562 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-55482D2B0DAB-&gt;cda2af38-6970-415e-9399-a5f835ee027b
2021-07-14 23:00:55,563 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-14 23:00:55,745 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:56,745 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:00:56,774 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1436.324994, max=1436.324994, mean=1436.324994, stddev=0.0, median=1436.324994, p75=1436.324994, p95=1436.324994, p98=1436.324994, p99=1436.324994, p999=1436.324994, mean_rate=0.47928163275071733, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:00:56,774 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-14 23:00:56,777 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:00:56,777 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:00:57.137" endtime="20210714 23:00:57.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:00:57.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:00:57.138" endtime="20210714 23:00:57.138"/>
</kw>
<status status="PASS" starttime="20210714 23:00:52.005" endtime="20210714 23:00:57.139"/>
</kw>
<msg timestamp="20210714 23:00:57.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:52.005" endtime="20210714 23:00:57.139"/>
</kw>
<status status="PASS" starttime="20210714 23:00:52.004" endtime="20210714 23:00:57.139"/>
</kw>
<status status="PASS" starttime="20210714 23:00:52.004" endtime="20210714 23:00:57.139"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t=1 -n=1 -p ${OCKR_PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:00:57.143" level="INFO">Running command 'ozone freon ockr  -t=1 -n=1 -p ockr 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:00.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:00.959" level="INFO">${output} = 2021-07-14 23:00:58,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:58,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:57.141" endtime="20210714 23:01:00.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:00.961" level="INFO">2021-07-14 23:00:58,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:58,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:00:58,816 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:00:58,954 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr
2021-07-14 23:00:58,967 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:00:59,984 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:01:00,935 [Thread-4] INFO metrics: type=TIMER, name=remove, count=1, min=11.98813, max=11.98813, mean=11.98813, stddev=0.0, median=11.98813, p75=11.98813, p95=11.98813, p98=11.98813, p99=11.98813, p999=11.98813, mean_rate=0.9477102409828313, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:01:00,936 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-14 23:01:00,936 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:01:00,936 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:01:00.960" endtime="20210714 23:01:00.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:00.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:00.961" endtime="20210714 23:01:00.961"/>
</kw>
<status status="PASS" starttime="20210714 23:00:57.140" endtime="20210714 23:01:00.962"/>
</kw>
<msg timestamp="20210714 23:01:00.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:00:57.140" endtime="20210714 23:01:00.962"/>
</kw>
<msg timestamp="20210714 23:01:00.962" level="INFO">${result} = 2021-07-14 23:00:58,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:00:58,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:00:57.139" endtime="20210714 23:01:00.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:00.962" endtime="20210714 23:01:00.963"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:00:52.003" endtime="20210714 23:01:00.963"/>
</test>
<test id="s1-s17-s2-t2" name="OM Bucket Remover">
<kw name="OM Bucket Generator For Remover" type="SETUP">
<arg>${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:00.968" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombr 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:04.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:04.861" level="INFO">${output} = 2021-07-14 23:01:02,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:02,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:01:00.966" endtime="20210714 23:01:04.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:04.862" level="INFO">2021-07-14 23:01:02,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:02,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:01:02,678 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:01:02,813 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr
2021-07-14 23:01:02,827 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:03,835 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:01:04,754 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=15.204138, max=15.204138, mean=15.204138, stddev=0.0, median=15.204138, p75=15.204138, p95=15.204138, p98=15.204138, p99=15.204138, p999=15.204138, mean_rate=0.9760468727380113, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:01:04,755 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-14 23:01:04,757 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:01:04,757 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:01:04.861" endtime="20210714 23:01:04.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:04.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:04.862" endtime="20210714 23:01:04.863"/>
</kw>
<status status="PASS" starttime="20210714 23:01:00.966" endtime="20210714 23:01:04.863"/>
</kw>
<msg timestamp="20210714 23:01:04.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:00.965" endtime="20210714 23:01:04.863"/>
</kw>
<status status="PASS" starttime="20210714 23:01:00.965" endtime="20210714 23:01:04.864"/>
</kw>
<status status="PASS" starttime="20210714 23:01:00.964" endtime="20210714 23:01:04.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t=1 -n=1 -p ${OMBR_PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:04.868" level="INFO">Running command 'ozone freon ombr  -t=1 -n=1 -p ombr 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:08.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:08.308" level="INFO">${output} = 2021-07-14 23:01:06,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:06,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:01:04.866" endtime="20210714 23:01:08.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:08.309" level="INFO">2021-07-14 23:01:06,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:06,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:01:06,505 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:01:06,682 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr
2021-07-14 23:01:06,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:07,704 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:01:08,283 [Thread-4] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=289.020321, max=289.020321, mean=289.020321, stddev=0.0, median=289.020321, p75=289.020321, p95=289.020321, p98=289.020321, p99=289.020321, p999=289.020321, mean_rate=0.9603993724750501, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:01:08,286 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-14 23:01:08,286 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:01:08,286 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:01:08.309" endtime="20210714 23:01:08.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:08.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:08.309" endtime="20210714 23:01:08.310"/>
</kw>
<status status="PASS" starttime="20210714 23:01:04.865" endtime="20210714 23:01:08.310"/>
</kw>
<msg timestamp="20210714 23:01:08.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:04.865" endtime="20210714 23:01:08.310"/>
</kw>
<msg timestamp="20210714 23:01:08.311" level="INFO">${result} = 2021-07-14 23:01:06,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:06,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:01:04.864" endtime="20210714 23:01:08.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:08.311" endtime="20210714 23:01:08.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:00.963" endtime="20210714 23:01:08.312"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20210714 23:00:52.000" endtime="20210714 23:01:08.313"/>
</suite>
<suite id="s1-s17-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s17-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 23:01:08.322" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 23:01:13.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 23:01:13.557" level="INFO">${output} = 2021-07-14 23:01:09,810 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:09,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:01:08.320" endtime="20210714 23:01:13.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 23:01:13.558" level="INFO">2021-07-14 23:01:09,810 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:09,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-14 23:01:09,917 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-14 23:01:10,092 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-07-14 23:01:10,106 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:11,107 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:11,537 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-14 23:01:12,108 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-14 23:01:13,108 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-14 23:01:13,214 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=31.602879, max=31.602879, mean=31.602879, stddev=0.0, median=31.602879, p75=31.602879, p95=31.602879, p98=31.602879, p99=31.602879, p999=31.602879, mean_rate=0.9620618666717269, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-14 23:01:13,215 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-14 23:01:13,221 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-14 23:01:13,221 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210714 23:01:13.557" endtime="20210714 23:01:13.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 23:01:13.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 23:01:13.558" endtime="20210714 23:01:13.559"/>
</kw>
<status status="PASS" starttime="20210714 23:01:08.320" endtime="20210714 23:01:13.559"/>
</kw>
<msg timestamp="20210714 23:01:13.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 23:01:08.319" endtime="20210714 23:01:13.559"/>
</kw>
<msg timestamp="20210714 23:01:13.559" level="INFO">${result} = 2021-07-14 23:01:09,810 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-14 23:01:09,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210714 23:01:08.319" endtime="20210714 23:01:13.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 23:01:13.560" endtime="20210714 23:01:13.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210714 23:01:08.318" endtime="20210714 23:01:13.560"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210714 23:01:08.314" endtime="20210714 23:01:13.561"/>
</suite>
<status status="PASS" starttime="20210714 23:00:39.024" endtime="20210714 23:01:13.562"/>
</suite>
<suite id="s1-s18" name="Lib" source="/opt/hadoop/smoketest/lib">
<suite id="s1-s18-s1" name="Fs Tests" source="/opt/hadoop/smoketest/lib/fs_tests.robot">
<test id="s1-s18-s1-t1" name="Format o3fs URL without path">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.169" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 22:38:38.169" endtime="20210714 22:38:38.169"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.170" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.169" endtime="20210714 22:38:38.170"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.168" endtime="20210714 22:38:38.170"/>
</kw>
<msg timestamp="20210714 22:38:38.170" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.167" endtime="20210714 22:38:38.170"/>
</kw>
<msg timestamp="20210714 22:38:38.171" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20210714 22:38:38.166" endtime="20210714 22:38:38.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.171" endtime="20210714 22:38:38.171"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.165" endtime="20210714 22:38:38.171"/>
</test>
<test id="s1-s18-s1-t2" name="Format o3fs URL with path">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.174" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 22:38:38.174" endtime="20210714 22:38:38.174"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.175" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.174" endtime="20210714 22:38:38.175"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.173" endtime="20210714 22:38:38.175"/>
</kw>
<msg timestamp="20210714 22:38:38.175" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.173" endtime="20210714 22:38:38.175"/>
</kw>
<msg timestamp="20210714 22:38:38.175" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.172" endtime="20210714 22:38:38.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.176" endtime="20210714 22:38:38.176"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.171" endtime="20210714 22:38:38.176"/>
</test>
<test id="s1-s18-s1-t3" name="Format o3fs URL with OM">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.179" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 22:38:38.179" endtime="20210714 22:38:38.179"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.179" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20210714 22:38:38.179" endtime="20210714 22:38:38.179"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.178" endtime="20210714 22:38:38.180"/>
</kw>
<msg timestamp="20210714 22:38:38.180" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20210714 22:38:38.177" endtime="20210714 22:38:38.180"/>
</kw>
<msg timestamp="20210714 22:38:38.180" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.177" endtime="20210714 22:38:38.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.180" endtime="20210714 22:38:38.181"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.176" endtime="20210714 22:38:38.181"/>
</test>
<test id="s1-s18-s1-t4" name="Format ofs URL without path">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.184" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 22:38:38.184" endtime="20210714 22:38:38.184"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.185" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.184" endtime="20210714 22:38:38.185"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.183" endtime="20210714 22:38:38.185"/>
</kw>
<msg timestamp="20210714 22:38:38.185" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.183" endtime="20210714 22:38:38.185"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:38:38.186" endtime="20210714 22:38:38.187"/>
</kw>
<msg timestamp="20210714 22:38:38.187" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 22:38:38.185" endtime="20210714 22:38:38.187"/>
</kw>
<msg timestamp="20210714 22:38:38.187" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20210714 22:38:38.182" endtime="20210714 22:38:38.188"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.188" endtime="20210714 22:38:38.188"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.181" endtime="20210714 22:38:38.188"/>
</test>
<test id="s1-s18-s1-t5" name="Format ofs URL with path">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.191" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 22:38:38.191" endtime="20210714 22:38:38.191"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.191" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.191" endtime="20210714 22:38:38.192"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.190" endtime="20210714 22:38:38.192"/>
</kw>
<msg timestamp="20210714 22:38:38.192" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.189" endtime="20210714 22:38:38.192"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.194" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20210714 22:38:38.193" endtime="20210714 22:38:38.194"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.194" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.194" endtime="20210714 22:38:38.194"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.193" endtime="20210714 22:38:38.194"/>
</kw>
<msg timestamp="20210714 22:38:38.194" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.192" endtime="20210714 22:38:38.194"/>
</kw>
<msg timestamp="20210714 22:38:38.195" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.189" endtime="20210714 22:38:38.195"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.195" endtime="20210714 22:38:38.195"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.188" endtime="20210714 22:38:38.195"/>
</test>
<test id="s1-s18-s1-t6" name="Format ofs URL with OM">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.198" level="INFO">${last} = 4</msg>
<status status="PASS" starttime="20210714 22:38:38.198" endtime="20210714 22:38:38.198"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.199" level="INFO">${result} = om:1234/</msg>
<status status="PASS" starttime="20210714 22:38:38.198" endtime="20210714 22:38:38.199"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.197" endtime="20210714 22:38:38.199"/>
</kw>
<msg timestamp="20210714 22:38:38.199" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" starttime="20210714 22:38:38.196" endtime="20210714 22:38:38.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.201" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20210714 22:38:38.200" endtime="20210714 22:38:38.201"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.201" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.201" endtime="20210714 22:38:38.201"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.200" endtime="20210714 22:38:38.202"/>
</kw>
<msg timestamp="20210714 22:38:38.202" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.199" endtime="20210714 22:38:38.202"/>
</kw>
<msg timestamp="20210714 22:38:38.202" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20210714 22:38:38.196" endtime="20210714 22:38:38.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.202" endtime="20210714 22:38:38.202"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.196" endtime="20210714 22:38:38.203"/>
</test>
<test id="s1-s18-s1-t7" name="Format FS URL with ofs scheme">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.207" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 22:38:38.207" endtime="20210714 22:38:38.207"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.208" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.207" endtime="20210714 22:38:38.208"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.206" endtime="20210714 22:38:38.208"/>
</kw>
<msg timestamp="20210714 22:38:38.208" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.205" endtime="20210714 22:38:38.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:38:38.209" endtime="20210714 22:38:38.210"/>
</kw>
<msg timestamp="20210714 22:38:38.210" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 22:38:38.208" endtime="20210714 22:38:38.210"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.205" endtime="20210714 22:38:38.210"/>
</kw>
<msg timestamp="20210714 22:38:38.210" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20210714 22:38:38.204" endtime="20210714 22:38:38.210"/>
</kw>
<msg timestamp="20210714 22:38:38.210" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20210714 22:38:38.203" endtime="20210714 22:38:38.210"/>
</kw>
<kw name="Format ofs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.213" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210714 22:38:38.213" endtime="20210714 22:38:38.213"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.214" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.213" endtime="20210714 22:38:38.214"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.212" endtime="20210714 22:38:38.214"/>
</kw>
<msg timestamp="20210714 22:38:38.214" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210714 22:38:38.212" endtime="20210714 22:38:38.214"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210714 22:38:38.215" endtime="20210714 22:38:38.216"/>
</kw>
<msg timestamp="20210714 22:38:38.216" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210714 22:38:38.214" endtime="20210714 22:38:38.216"/>
</kw>
<msg timestamp="20210714 22:38:38.216" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20210714 22:38:38.211" endtime="20210714 22:38:38.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.216" endtime="20210714 22:38:38.217"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.203" endtime="20210714 22:38:38.217"/>
</test>
<test id="s1-s18-s1-t8" name="Format FS URL with o3fs scheme">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.221" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 22:38:38.221" endtime="20210714 22:38:38.221"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.222" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.222" endtime="20210714 22:38:38.222"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.221" endtime="20210714 22:38:38.222"/>
</kw>
<msg timestamp="20210714 22:38:38.222" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.220" endtime="20210714 22:38:38.222"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.219" endtime="20210714 22:38:38.223"/>
</kw>
<msg timestamp="20210714 22:38:38.223" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20210714 22:38:38.219" endtime="20210714 22:38:38.223"/>
</kw>
<msg timestamp="20210714 22:38:38.223" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20210714 22:38:38.218" endtime="20210714 22:38:38.223"/>
</kw>
<kw name="Format o3fs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.226" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210714 22:38:38.226" endtime="20210714 22:38:38.226"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.226" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.226" endtime="20210714 22:38:38.226"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.225" endtime="20210714 22:38:38.227"/>
</kw>
<msg timestamp="20210714 22:38:38.227" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210714 22:38:38.224" endtime="20210714 22:38:38.227"/>
</kw>
<msg timestamp="20210714 22:38:38.227" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20210714 22:38:38.223" endtime="20210714 22:38:38.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.227" endtime="20210714 22:38:38.228"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.217" endtime="20210714 22:38:38.228"/>
</test>
<test id="s1-s18-s1-t9" name="Format FS URL with unsupported scheme">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<var>${result}</var>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Format FS URL" library="fs">
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20210714 22:38:38.230" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" starttime="20210714 22:38:38.230" endtime="20210714 22:38:38.231"/>
</kw>
<status status="FAIL" starttime="20210714 22:38:38.230" endtime="20210714 22:38:38.231"/>
</kw>
<status status="FAIL" starttime="20210714 22:38:38.229" endtime="20210714 22:38:38.231"/>
</kw>
<msg timestamp="20210714 22:38:38.231" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" starttime="20210714 22:38:38.228" endtime="20210714 22:38:38.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>http</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:38:38.231" endtime="20210714 22:38:38.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>nsupported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210714 22:38:38.232" endtime="20210714 22:38:38.232"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.228" endtime="20210714 22:38:38.232"/>
</test>
<status status="PASS" starttime="20210714 22:38:38.154" endtime="20210714 22:38:38.233"/>
</suite>
<suite id="s1-s18-s2" name="Os Tests" source="/opt/hadoop/smoketest/lib/os_tests.robot">
<test id="s1-s18-s2-t1" name="Execute">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>echo 42</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:38.251" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:38.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210714 22:38:38.252" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20210714 22:38:38.248" endtime="20210714 22:38:38.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:38.253" level="INFO">42</msg>
<status status="PASS" starttime="20210714 22:38:38.252" endtime="20210714 22:38:38.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:38:38.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:38:38.253" endtime="20210714 22:38:38.253"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.247" endtime="20210714 22:38:38.254"/>
</kw>
<msg timestamp="20210714 22:38:38.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210714 22:38:38.247" endtime="20210714 22:38:38.254"/>
</kw>
<msg timestamp="20210714 22:38:38.254" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20210714 22:38:38.247" endtime="20210714 22:38:38.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>42</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.254" endtime="20210714 22:38:38.254"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.246" endtime="20210714 22:38:38.255"/>
</test>
<test id="s1-s18-s2-t2" name="Execute failing command">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute" library="os">
<arg>false</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:38.258" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:38.259" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:38:38.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210714 22:38:38.257" endtime="20210714 22:38:38.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:38.260" level="INFO"/>
<status status="PASS" starttime="20210714 22:38:38.260" endtime="20210714 22:38:38.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:38:38.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210714 22:38:38.261" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210714 22:38:38.260" endtime="20210714 22:38:38.261"/>
</kw>
<status status="FAIL" starttime="20210714 22:38:38.256" endtime="20210714 22:38:38.261"/>
</kw>
<msg timestamp="20210714 22:38:38.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210714 22:38:38.256" endtime="20210714 22:38:38.261"/>
</kw>
<status status="FAIL" starttime="20210714 22:38:38.256" endtime="20210714 22:38:38.261"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.255" endtime="20210714 22:38:38.262"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.255" endtime="20210714 22:38:38.262"/>
</test>
<test id="s1-s18-s2-t3" name="Execute And Ignore Error">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>echo 123 &amp;&amp; false</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:38.264" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:38.265" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:38:38.265" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20210714 22:38:38.263" endtime="20210714 22:38:38.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:38.266" level="INFO">123</msg>
<status status="PASS" starttime="20210714 22:38:38.266" endtime="20210714 22:38:38.266"/>
</kw>
<msg timestamp="20210714 22:38:38.267" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20210714 22:38:38.263" endtime="20210714 22:38:38.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>123</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.267" endtime="20210714 22:38:38.267"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.262" endtime="20210714 22:38:38.267"/>
</test>
<test id="s1-s18-s2-t4" name="Execute and checkrc">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:38.270" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:38.271" level="INFO">${rc} = 1</msg>
<msg timestamp="20210714 22:38:38.271" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20210714 22:38:38.268" endtime="20210714 22:38:38.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:38.272" level="INFO">failure</msg>
<status status="PASS" starttime="20210714 22:38:38.271" endtime="20210714 22:38:38.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:38:38.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210714 22:38:38.272" endtime="20210714 22:38:38.272"/>
</kw>
<msg timestamp="20210714 22:38:38.272" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20210714 22:38:38.268" endtime="20210714 22:38:38.272"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>failure</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.273" endtime="20210714 22:38:38.273"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.268" endtime="20210714 22:38:38.273"/>
</test>
<test id="s1-s18-s2-t5" name="Execute and checkrc RC mismatch">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute and checkrc" library="os">
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210714 22:38:38.276" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210714 22:38:38.277" level="INFO">${rc} = 3</msg>
<msg timestamp="20210714 22:38:38.277" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20210714 22:38:38.275" endtime="20210714 22:38:38.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210714 22:38:38.278" level="INFO">failure</msg>
<status status="PASS" starttime="20210714 22:38:38.278" endtime="20210714 22:38:38.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210714 22:38:38.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210714 22:38:38.279" level="FAIL">3 != 1</msg>
<status status="FAIL" starttime="20210714 22:38:38.278" endtime="20210714 22:38:38.279"/>
</kw>
<status status="FAIL" starttime="20210714 22:38:38.274" endtime="20210714 22:38:38.279"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.274" endtime="20210714 22:38:38.279"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.274" endtime="20210714 22:38:38.279"/>
</test>
<status status="PASS" starttime="20210714 22:38:38.233" endtime="20210714 22:38:38.280"/>
</suite>
<suite id="s1-s18-s3" name="String Tests" source="/opt/hadoop/smoketest/lib/string_tests.robot">
<test id="s1-s18-s3-t1" name="Ensure Leading without Leading">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>/</arg>
<arg>a/b</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.285" level="INFO">${first} = a</msg>
<status status="PASS" starttime="20210714 22:38:38.284" endtime="20210714 22:38:38.285"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.285" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20210714 22:38:38.285" endtime="20210714 22:38:38.285"/>
</kw>
<msg timestamp="20210714 22:38:38.285" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20210714 22:38:38.284" endtime="20210714 22:38:38.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>/a/b</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.286" endtime="20210714 22:38:38.286"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.283" endtime="20210714 22:38:38.286"/>
</test>
<test id="s1-s18-s3-t2" name="Ensure Leading with Leading">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>_</arg>
<arg>_a_b_c</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.288" level="INFO">${first} = _</msg>
<status status="PASS" starttime="20210714 22:38:38.287" endtime="20210714 22:38:38.288"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.288" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20210714 22:38:38.288" endtime="20210714 22:38:38.288"/>
</kw>
<msg timestamp="20210714 22:38:38.288" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20210714 22:38:38.287" endtime="20210714 22:38:38.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>_a_b_c</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.288" endtime="20210714 22:38:38.289"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.286" endtime="20210714 22:38:38.289"/>
</test>
<test id="s1-s18-s3-t3" name="Ensure Leading for empty">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>|</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.291" level="INFO">${first} = </msg>
<status status="PASS" starttime="20210714 22:38:38.291" endtime="20210714 22:38:38.291"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.291" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20210714 22:38:38.291" endtime="20210714 22:38:38.291"/>
</kw>
<msg timestamp="20210714 22:38:38.292" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20210714 22:38:38.290" endtime="20210714 22:38:38.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>|</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.292" endtime="20210714 22:38:38.292"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.289" endtime="20210714 22:38:38.292"/>
</test>
<test id="s1-s18-s3-t4" name="Ensure Trailing without Trailing">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>.</arg>
<arg>x.y.z</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.294" level="INFO">${last} = z</msg>
<status status="PASS" starttime="20210714 22:38:38.293" endtime="20210714 22:38:38.294"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.294" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20210714 22:38:38.294" endtime="20210714 22:38:38.294"/>
</kw>
<msg timestamp="20210714 22:38:38.295" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20210714 22:38:38.293" endtime="20210714 22:38:38.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>x.y.z.</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.295" endtime="20210714 22:38:38.295"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.293" endtime="20210714 22:38:38.295"/>
</test>
<test id="s1-s18-s3-t5" name="Ensure Trailing with Trailing">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>x</arg>
<arg>axbxcx</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.297" level="INFO">${last} = x</msg>
<status status="PASS" starttime="20210714 22:38:38.296" endtime="20210714 22:38:38.297"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.297" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20210714 22:38:38.297" endtime="20210714 22:38:38.297"/>
</kw>
<msg timestamp="20210714 22:38:38.297" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20210714 22:38:38.296" endtime="20210714 22:38:38.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>axbxcx</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.298" endtime="20210714 22:38:38.298"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.295" endtime="20210714 22:38:38.298"/>
</test>
<test id="s1-s18-s3-t6" name="Ensure Trailing for empty">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>=</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210714 22:38:38.300" level="INFO">${last} = </msg>
<status status="PASS" starttime="20210714 22:38:38.300" endtime="20210714 22:38:38.300"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210714 22:38:38.300" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20210714 22:38:38.300" endtime="20210714 22:38:38.300"/>
</kw>
<msg timestamp="20210714 22:38:38.301" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20210714 22:38:38.299" endtime="20210714 22:38:38.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>=</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210714 22:38:38.301" endtime="20210714 22:38:38.301"/>
</kw>
<status status="PASS" starttime="20210714 22:38:38.298" endtime="20210714 22:38:38.301"/>
</test>
<status status="PASS" starttime="20210714 22:38:38.281" endtime="20210714 22:38:38.302"/>
</suite>
<status status="PASS" starttime="20210714 22:38:38.130" endtime="20210714 22:38:38.303"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2153575"/>
</suite>
<statistics>
<total>
<stat pass="296" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="296" fail="1" skip="0" id="s1" name="ozone">ozone</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Ozone-Lib">ozone.Ozone-Lib</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1" name="Shell Tests">ozone.Ozone-Lib.Shell Tests</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="Cli">ozone.Cli</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Classpath">ozone.Cli.Classpath</stat>
<stat pass="5" fail="0" skip="0" id="s1-s2-s2" name="Envvars">ozone.Cli.Envvars</stat>
<stat pass="32" fail="0" skip="0" id="s1-s3" name="Admincli">ozone.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="Admin">ozone.Admincli.Admin</stat>
<stat pass="11" fail="0" skip="0" id="s1-s3-s2" name="Container">ozone.Admincli.Container</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s3" name="Datanode">ozone.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s4" name="Pipeline">ozone.Admincli.Pipeline</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s5" name="Replicationmanager">ozone.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s6" name="Safemode">ozone.Admincli.Safemode</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s7" name="Scmha">ozone.Admincli.Scmha</stat>
<stat pass="21" fail="0" skip="0" id="s1-s4" name="ozonefs-simple-ofs-bucket">ozone.ozonefs-simple-ofs-bucket</stat>
<stat pass="21" fail="0" skip="0" id="s1-s5" name="ozonefs-simple-o3fs-link">ozone.ozonefs-simple-o3fs-link</stat>
<stat pass="21" fail="0" skip="0" id="s1-s6" name="ozonefs-prefix-ofs-link">ozone.ozonefs-prefix-ofs-link</stat>
<stat pass="21" fail="0" skip="0" id="s1-s7" name="ozonefs-prefix-o3fs-bucket">ozone.ozonefs-prefix-o3fs-bucket</stat>
<stat pass="10" fail="0" skip="0" id="s1-s8" name="s3-generated-prefix-layout-objectputget">ozone.s3-generated-prefix-layout-objectputget</stat>
<stat pass="4" fail="1" skip="0" id="s1-s9" name="s3-generated-prefix-layout-objectdelete">ozone.s3-generated-prefix-layout-objectdelete</stat>
<stat pass="29" fail="0" skip="0" id="s1-s10" name="Basic">ozone.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s10-s1" name="Basic">ozone.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10-s2" name="Getconf">ozone.Basic.Getconf</stat>
<stat pass="15" fail="0" skip="0" id="s1-s10-s3" name="Links">ozone.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10-s4" name="Ozone-Shell-Single">ozone.Basic.Ozone-Shell-Single</stat>
<stat pass="7" fail="0" skip="0" id="s1-s10-s5" name="Ozone-Shell">ozone.Basic.Ozone-Shell</stat>
<stat pass="4" fail="0" skip="0" id="s1-s11" name="Gdpr">ozone.Gdpr</stat>
<stat pass="4" fail="0" skip="0" id="s1-s11-s1" name="Gdpr">ozone.Gdpr.Gdpr</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Ozone-Secure-Token">ozone.Ozone-Secure-Token</stat>
<stat pass="43" fail="0" skip="0" id="s1-s13" name="s3-link">ozone.s3-link</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s1" name="Awss3">ozone.s3-link.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s2" name="Boto3">ozone.s3-link.Boto3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s13-s3" name="Bucketcreate">ozone.s3-link.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s13-s4" name="Bucketdelete">ozone.s3-link.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s5" name="Buckethead">ozone.s3-link.Buckethead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s6" name="Bucketlist">ozone.s3-link.Bucketlist</stat>
<stat pass="13" fail="0" skip="0" id="s1-s13-s7" name="MultipartUpload">ozone.s3-link.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s13-s8" name="Objectcopy">ozone.s3-link.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s13-s9" name="Objectdelete">ozone.s3-link.Objectdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s10" name="Objectmultidelete">ozone.s3-link.Objectmultidelete</stat>
<stat pass="10" fail="0" skip="0" id="s1-s13-s11" name="Objectputget">ozone.s3-link.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s12" name="Webui">ozone.s3-link.Webui</stat>
<stat pass="43" fail="0" skip="0" id="s1-s14" name="s3-generated">ozone.s3-generated</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s1" name="Awss3">ozone.s3-generated.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s2" name="Boto3">ozone.s3-generated.Boto3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14-s3" name="Bucketcreate">ozone.s3-generated.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s14-s4" name="Bucketdelete">ozone.s3-generated.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s5" name="Buckethead">ozone.s3-generated.Buckethead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s6" name="Bucketlist">ozone.s3-generated.Bucketlist</stat>
<stat pass="13" fail="0" skip="0" id="s1-s14-s7" name="MultipartUpload">ozone.s3-generated.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s14-s8" name="Objectcopy">ozone.s3-generated.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s14-s9" name="Objectdelete">ozone.s3-generated.Objectdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s10" name="Objectmultidelete">ozone.s3-generated.Objectmultidelete</stat>
<stat pass="10" fail="0" skip="0" id="s1-s14-s11" name="Objectputget">ozone.s3-generated.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s12" name="Webui">ozone.s3-generated.Webui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15" name="Recon">ozone.Recon</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15-s1" name="Recon-Api">ozone.Recon.Recon-Api</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Om-Ratis">ozone.Om-Ratis</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16-s1" name="testOMAdminCmd">ozone.Om-Ratis.testOMAdminCmd</stat>
<stat pass="6" fail="0" skip="0" id="s1-s17" name="Freon">ozone.Freon</stat>
<stat pass="3" fail="0" skip="0" id="s1-s17-s1" name="Generate">ozone.Freon.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s17-s2" name="Remove">ozone.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17-s3" name="Validate">ozone.Freon.Validate</stat>
<stat pass="20" fail="0" skip="0" id="s1-s18" name="Lib">ozone.Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s18-s1" name="Fs Tests">ozone.Lib.Fs Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s18-s2" name="Os Tests">ozone.Lib.Os Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s18-s3" name="String Tests">ozone.Lib.String Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
