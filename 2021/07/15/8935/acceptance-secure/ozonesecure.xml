<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210715 01:52:48.388" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:39.809" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:39.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:39.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:04:39.806" endtime="20210715 01:04:39.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:39.814" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:04:39.813" endtime="20210715 01:04:39.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:39.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:39.814" endtime="20210715 01:04:39.814"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.806" endtime="20210715 01:04:39.815"/>
</kw>
<msg timestamp="20210715 01:04:39.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:39.805" endtime="20210715 01:04:39.815"/>
</kw>
<msg timestamp="20210715 01:04:39.815" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210715 01:04:39.805" endtime="20210715 01:04:39.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:39.818" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:39.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:39.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:04:39.817" endtime="20210715 01:04:39.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:39.826" level="INFO"/>
<status status="PASS" starttime="20210715 01:04:39.825" endtime="20210715 01:04:39.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:39.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:39.826" endtime="20210715 01:04:39.827"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.816" endtime="20210715 01:04:39.827"/>
</kw>
<msg timestamp="20210715 01:04:39.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:39.816" endtime="20210715 01:04:39.827"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.816" endtime="20210715 01:04:39.827"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.815" endtime="20210715 01:04:39.827"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.805" endtime="20210715 01:04:39.828"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.804" endtime="20210715 01:04:39.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:39.831" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:39.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:39.934" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210715 01:04:39.829" endtime="20210715 01:04:39.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:39.936" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 15 Jul 2021 01:04:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCK/M/TVYsYYtEbmIuOmyMMzuedPoOyKQN6Xe5PgHsYt8WVJHv0DsKR5UKuSv7P191yyyOP1SsHPAf6X1qxm/YSX+9
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1626347079923&amp;s=UtWk44bsuO7abbW4zqelhxt0Gnf+aIc1oHSHmc6LAbg="; Path=/; HttpOnly
Last-Modified: Thu, 15 Jul 2021 00:49:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210715 01:04:39.935" endtime="20210715 01:04:39.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:39.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:39.936" endtime="20210715 01:04:39.937"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.829" endtime="20210715 01:04:39.937"/>
</kw>
<msg timestamp="20210715 01:04:39.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:39.828" endtime="20210715 01:04:39.937"/>
</kw>
<msg timestamp="20210715 01:04:39.938" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210715 01:04:39.828" endtime="20210715 01:04:39.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:04:39.938" endtime="20210715 01:04:39.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:04:39.803" endtime="20210715 01:04:39.938"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:39.949" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:39.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:39.953" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:04:39.943" endtime="20210715 01:04:39.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:39.954" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:04:39.953" endtime="20210715 01:04:39.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:39.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:39.954" endtime="20210715 01:04:39.955"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.943" endtime="20210715 01:04:39.955"/>
</kw>
<msg timestamp="20210715 01:04:39.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:39.942" endtime="20210715 01:04:39.955"/>
</kw>
<msg timestamp="20210715 01:04:39.955" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:04:39.942" endtime="20210715 01:04:39.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:04:39.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:04:39.955" endtime="20210715 01:04:39.957"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:39.961" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:39.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:39.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:04:39.959" endtime="20210715 01:04:39.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:39.968" level="INFO"/>
<status status="PASS" starttime="20210715 01:04:39.968" endtime="20210715 01:04:39.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:39.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:39.969" endtime="20210715 01:04:39.969"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.958" endtime="20210715 01:04:39.970"/>
</kw>
<msg timestamp="20210715 01:04:39.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:39.958" endtime="20210715 01:04:39.970"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.957" endtime="20210715 01:04:39.970"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.957" endtime="20210715 01:04:39.970"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.941" endtime="20210715 01:04:39.970"/>
</kw>
<status status="PASS" starttime="20210715 01:04:39.940" endtime="20210715 01:04:39.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:39.974" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:39.941" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:04:39.972" endtime="20210715 01:09:39.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:09:39.941" endtime="20210715 01:09:39.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:09:39.942" endtime="20210715 01:09:39.942"/>
</kw>
<status status="FAIL" starttime="20210715 01:04:39.971" endtime="20210715 01:09:39.942"/>
</kw>
<msg timestamp="20210715 01:09:39.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:04:39.971" endtime="20210715 01:09:39.942"/>
</kw>
<status status="FAIL" starttime="20210715 01:04:39.970" endtime="20210715 01:09:39.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210715 01:09:39.943" endtime="20210715 01:09:39.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:09:39.943" endtime="20210715 01:09:39.943"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210715 01:04:39.939" endtime="20210715 01:09:39.943">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210715 01:04:39.781" endtime="20210715 01:09:39.945"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:39.957" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:42.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:09:42.446" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210715 01:09:39.953" endtime="20210715 01:09:42.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:42.447" level="INFO">om</msg>
<status status="PASS" starttime="20210715 01:09:42.446" endtime="20210715 01:09:42.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:42.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:42.447" endtime="20210715 01:09:42.448"/>
</kw>
<status status="PASS" starttime="20210715 01:09:39.953" endtime="20210715 01:09:42.448"/>
</kw>
<msg timestamp="20210715 01:09:42.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:39.953" endtime="20210715 01:09:42.448"/>
</kw>
<msg timestamp="20210715 01:09:42.449" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210715 01:09:39.952" endtime="20210715 01:09:42.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:42.449" endtime="20210715 01:09:42.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:42.452" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:45.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:09:45.011" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210715 01:09:42.450" endtime="20210715 01:09:45.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:45.013" level="INFO">om</msg>
<status status="PASS" starttime="20210715 01:09:45.012" endtime="20210715 01:09:45.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:45.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:45.013" endtime="20210715 01:09:45.014"/>
</kw>
<status status="PASS" starttime="20210715 01:09:42.450" endtime="20210715 01:09:45.014"/>
</kw>
<msg timestamp="20210715 01:09:45.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:42.450" endtime="20210715 01:09:45.014"/>
</kw>
<msg timestamp="20210715 01:09:45.014" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210715 01:09:42.449" endtime="20210715 01:09:45.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:45.014" endtime="20210715 01:09:45.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:09:39.950" endtime="20210715 01:09:45.015"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:45.021" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:47.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:09:47.457" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:09:45.018" endtime="20210715 01:09:47.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:47.458" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:09:47.457" endtime="20210715 01:09:47.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:47.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:47.458" endtime="20210715 01:09:47.459"/>
</kw>
<status status="PASS" starttime="20210715 01:09:45.018" endtime="20210715 01:09:47.459"/>
</kw>
<msg timestamp="20210715 01:09:47.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:45.017" endtime="20210715 01:09:47.459"/>
</kw>
<msg timestamp="20210715 01:09:47.459" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210715 01:09:45.017" endtime="20210715 01:09:47.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:47.460" endtime="20210715 01:09:47.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:47.463" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:50.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:09:50.129" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:09:47.461" endtime="20210715 01:09:50.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:50.130" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:09:50.129" endtime="20210715 01:09:50.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:50.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:50.130" endtime="20210715 01:09:50.131"/>
</kw>
<status status="PASS" starttime="20210715 01:09:47.461" endtime="20210715 01:09:50.131"/>
</kw>
<msg timestamp="20210715 01:09:50.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:47.461" endtime="20210715 01:09:50.131"/>
</kw>
<msg timestamp="20210715 01:09:50.132" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210715 01:09:47.460" endtime="20210715 01:09:50.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:50.132" endtime="20210715 01:09:50.132"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:09:45.016" endtime="20210715 01:09:50.132"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:50.139" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:52.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:09:52.415" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210715 01:09:50.135" endtime="20210715 01:09:52.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:52.416" level="INFO">om</msg>
<status status="PASS" starttime="20210715 01:09:52.416" endtime="20210715 01:09:52.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:52.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:52.416" endtime="20210715 01:09:52.417"/>
</kw>
<status status="PASS" starttime="20210715 01:09:50.135" endtime="20210715 01:09:52.417"/>
</kw>
<msg timestamp="20210715 01:09:52.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:50.134" endtime="20210715 01:09:52.417"/>
</kw>
<msg timestamp="20210715 01:09:52.418" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210715 01:09:50.134" endtime="20210715 01:09:52.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:52.418" endtime="20210715 01:09:52.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:52.418" endtime="20210715 01:09:52.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:52.423" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:55.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:09:55.153" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210715 01:09:52.420" endtime="20210715 01:09:55.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:55.154" level="INFO">om</msg>
<status status="PASS" starttime="20210715 01:09:55.153" endtime="20210715 01:09:55.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:55.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:55.154" endtime="20210715 01:09:55.155"/>
</kw>
<status status="PASS" starttime="20210715 01:09:52.419" endtime="20210715 01:09:55.160"/>
</kw>
<msg timestamp="20210715 01:09:55.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:52.419" endtime="20210715 01:09:55.161"/>
</kw>
<msg timestamp="20210715 01:09:55.161" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210715 01:09:52.419" endtime="20210715 01:09:55.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:55.161" endtime="20210715 01:09:55.161"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:55.162" endtime="20210715 01:09:55.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:09:50.133" endtime="20210715 01:09:55.165"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:55.171" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:56.711" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:09:56.711" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210715 01:09:55.168" endtime="20210715 01:09:56.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:56.712" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210715 01:09:56.711" endtime="20210715 01:09:56.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:56.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:56.712" endtime="20210715 01:09:56.713"/>
</kw>
<msg timestamp="20210715 01:09:56.713" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210715 01:09:55.167" endtime="20210715 01:09:56.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:56.713" endtime="20210715 01:09:56.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:56.716" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:09:57.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:09:57.990" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210715 01:09:56.714" endtime="20210715 01:09:57.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:09:57.991" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210715 01:09:57.990" endtime="20210715 01:09:57.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:09:57.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:09:57.991" endtime="20210715 01:09:57.992"/>
</kw>
<msg timestamp="20210715 01:09:57.992" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210715 01:09:56.714" endtime="20210715 01:09:57.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:09:57.992" endtime="20210715 01:09:57.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:09:55.167" endtime="20210715 01:09:57.993"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210715 01:09:39.946" endtime="20210715 01:09:57.995"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210715 01:09:58.013" level="INFO">${random} = 87566</msg>
<status status="PASS" starttime="20210715 01:09:58.012" endtime="20210715 01:09:58.013"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:09:58.014" level="INFO">${source} = 87566-source</msg>
<status status="PASS" starttime="20210715 01:09:58.013" endtime="20210715 01:09:58.014"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:09:58.016" level="INFO">${target} = 87566-target</msg>
<status status="PASS" starttime="20210715 01:09:58.014" endtime="20210715 01:09:58.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:09:58.019" level="INFO">Running command 'ozone sh volume create 87566-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:10:03.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:10:03.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:09:58.017" endtime="20210715 01:10:03.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:10:03.298" level="INFO"/>
<status status="PASS" starttime="20210715 01:10:03.298" endtime="20210715 01:10:03.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:10:03.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:10:03.299" endtime="20210715 01:10:03.299"/>
</kw>
<status status="PASS" starttime="20210715 01:09:58.017" endtime="20210715 01:10:03.299"/>
</kw>
<msg timestamp="20210715 01:10:03.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:09:58.016" endtime="20210715 01:10:03.300"/>
</kw>
<status status="PASS" starttime="20210715 01:09:58.016" endtime="20210715 01:10:03.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:10:03.303" level="INFO">Running command 'ozone sh volume create 87566-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:10:08.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:10:08.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:10:03.301" endtime="20210715 01:10:08.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:10:08.460" level="INFO"/>
<status status="PASS" starttime="20210715 01:10:08.459" endtime="20210715 01:10:08.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:10:08.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:10:08.460" endtime="20210715 01:10:08.461"/>
</kw>
<status status="PASS" starttime="20210715 01:10:03.301" endtime="20210715 01:10:08.461"/>
</kw>
<msg timestamp="20210715 01:10:08.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:10:03.300" endtime="20210715 01:10:08.462"/>
</kw>
<status status="PASS" starttime="20210715 01:10:03.300" endtime="20210715 01:10:08.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:10:08.470" level="INFO">Running command 'ozone sh bucket create 87566-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:10:14.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:10:14.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:10:08.467" endtime="20210715 01:10:14.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:10:14.735" level="INFO"/>
<status status="PASS" starttime="20210715 01:10:14.735" endtime="20210715 01:10:14.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:10:14.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:10:14.735" endtime="20210715 01:10:14.736"/>
</kw>
<status status="PASS" starttime="20210715 01:10:08.466" endtime="20210715 01:10:14.736"/>
</kw>
<msg timestamp="20210715 01:10:14.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:10:08.464" endtime="20210715 01:10:14.736"/>
</kw>
<status status="PASS" starttime="20210715 01:10:08.463" endtime="20210715 01:10:14.736"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:10:14.740" level="INFO">Running command 'ozone sh key put 87566-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:13:25.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:13:25.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:10:14.738" endtime="20210715 01:13:25.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:13:25.625" level="INFO"/>
<status status="PASS" starttime="20210715 01:13:25.625" endtime="20210715 01:13:25.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:13:25.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:13:25.625" endtime="20210715 01:13:25.626"/>
</kw>
<status status="PASS" starttime="20210715 01:10:14.737" endtime="20210715 01:13:25.626"/>
</kw>
<msg timestamp="20210715 01:13:25.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:10:14.737" endtime="20210715 01:13:25.626"/>
</kw>
<status status="PASS" starttime="20210715 01:10:14.736" endtime="20210715 01:13:25.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:13:25.630" level="INFO">Running command 'ozone sh bucket create 87566-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:13:31.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:13:31.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:13:25.628" endtime="20210715 01:13:31.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:13:31.165" level="INFO"/>
<status status="PASS" starttime="20210715 01:13:31.164" endtime="20210715 01:13:31.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:13:31.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:13:31.165" endtime="20210715 01:13:31.165"/>
</kw>
<status status="PASS" starttime="20210715 01:13:25.627" endtime="20210715 01:13:31.166"/>
</kw>
<msg timestamp="20210715 01:13:31.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:13:25.627" endtime="20210715 01:13:31.166"/>
</kw>
<status status="PASS" starttime="20210715 01:13:25.627" endtime="20210715 01:13:31.166"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:13:31.169" level="INFO">Running command 'ozone sh bucket link 87566-source/readable-bucket 87566-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:13:36.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:13:36.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:13:31.167" endtime="20210715 01:13:36.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:13:36.460" level="INFO"/>
<status status="PASS" starttime="20210715 01:13:36.459" endtime="20210715 01:13:36.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:13:36.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:13:36.460" endtime="20210715 01:13:36.460"/>
</kw>
<status status="PASS" starttime="20210715 01:13:31.167" endtime="20210715 01:13:36.461"/>
</kw>
<msg timestamp="20210715 01:13:36.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:13:31.167" endtime="20210715 01:13:36.462"/>
</kw>
<status status="PASS" starttime="20210715 01:13:31.166" endtime="20210715 01:13:36.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:13:36.466" level="INFO">Running command 'ozone sh bucket link 87566-source/readable-bucket 87566-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:13:43.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:13:43.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:13:36.463" endtime="20210715 01:13:43.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:13:43.263" level="INFO"/>
<status status="PASS" starttime="20210715 01:13:43.262" endtime="20210715 01:13:43.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:13:43.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:13:43.263" endtime="20210715 01:13:43.264"/>
</kw>
<status status="PASS" starttime="20210715 01:13:36.463" endtime="20210715 01:13:43.265"/>
</kw>
<msg timestamp="20210715 01:13:43.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:13:36.462" endtime="20210715 01:13:43.265"/>
</kw>
<status status="PASS" starttime="20210715 01:13:36.462" endtime="20210715 01:13:43.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:13:43.271" level="INFO">Running command 'ozone sh bucket link 87566-source/unreadable-bucket 87566-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:13:49.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:13:49.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:13:43.268" endtime="20210715 01:13:49.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:13:49.564" level="INFO"/>
<status status="PASS" starttime="20210715 01:13:49.564" endtime="20210715 01:13:49.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:13:49.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:13:49.565" endtime="20210715 01:13:49.565"/>
</kw>
<status status="PASS" starttime="20210715 01:13:43.267" endtime="20210715 01:13:49.566"/>
</kw>
<msg timestamp="20210715 01:13:49.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:13:43.266" endtime="20210715 01:13:49.566"/>
</kw>
<status status="PASS" starttime="20210715 01:13:43.266" endtime="20210715 01:13:49.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:13:49.570" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 87566-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:13:54.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:13:54.455" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:13:49.568" endtime="20210715 01:13:54.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:13:54.457" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:13:54.456" endtime="20210715 01:13:54.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:13:54.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:13:54.457" endtime="20210715 01:13:54.457"/>
</kw>
<status status="PASS" starttime="20210715 01:13:49.567" endtime="20210715 01:13:54.457"/>
</kw>
<msg timestamp="20210715 01:13:54.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:13:49.567" endtime="20210715 01:13:54.458"/>
</kw>
<status status="PASS" starttime="20210715 01:13:49.566" endtime="20210715 01:13:54.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:13:54.461" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 87566-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:00.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:00.686" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:13:54.459" endtime="20210715 01:14:00.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:00.687" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:00.686" endtime="20210715 01:14:00.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:00.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:00.687" endtime="20210715 01:14:00.688"/>
</kw>
<status status="PASS" starttime="20210715 01:13:54.459" endtime="20210715 01:14:00.688"/>
</kw>
<msg timestamp="20210715 01:14:00.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:13:54.458" endtime="20210715 01:14:00.688"/>
</kw>
<status status="PASS" starttime="20210715 01:13:54.458" endtime="20210715 01:14:00.688"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:00.692" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 87566-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:06.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:06.801" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:00.690" endtime="20210715 01:14:06.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:06.802" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:06.802" endtime="20210715 01:14:06.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:06.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:06.803" endtime="20210715 01:14:06.803"/>
</kw>
<status status="PASS" starttime="20210715 01:14:00.690" endtime="20210715 01:14:06.803"/>
</kw>
<msg timestamp="20210715 01:14:06.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:00.689" endtime="20210715 01:14:06.803"/>
</kw>
<status status="PASS" starttime="20210715 01:14:00.689" endtime="20210715 01:14:06.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:06.808" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 87566-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:12.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:12.591" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:06.805" endtime="20210715 01:14:12.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:12.592" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:12.591" endtime="20210715 01:14:12.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:12.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:12.592" endtime="20210715 01:14:12.593"/>
</kw>
<status status="PASS" starttime="20210715 01:14:06.805" endtime="20210715 01:14:12.593"/>
</kw>
<msg timestamp="20210715 01:14:12.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:06.804" endtime="20210715 01:14:12.593"/>
</kw>
<status status="PASS" starttime="20210715 01:14:06.804" endtime="20210715 01:14:12.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:12.597" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 87566-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:18.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:18.686" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:12.595" endtime="20210715 01:14:18.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:18.687" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:14:18.687" endtime="20210715 01:14:18.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:18.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:18.688" endtime="20210715 01:14:18.688"/>
</kw>
<status status="PASS" starttime="20210715 01:14:12.594" endtime="20210715 01:14:18.688"/>
</kw>
<msg timestamp="20210715 01:14:18.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:12.594" endtime="20210715 01:14:18.689"/>
</kw>
<status status="PASS" starttime="20210715 01:14:12.593" endtime="20210715 01:14:18.689"/>
</kw>
<status status="PASS" starttime="20210715 01:10:08.463" endtime="20210715 01:14:18.689"/>
</kw>
<status status="PASS" starttime="20210715 01:10:08.462" endtime="20210715 01:14:18.689"/>
</kw>
<status status="PASS" starttime="20210715 01:09:58.012" endtime="20210715 01:14:18.690"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:18.695" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:18.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:18.699" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:14:18.693" endtime="20210715 01:14:18.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:18.700" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:14:18.700" endtime="20210715 01:14:18.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:18.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:18.701" endtime="20210715 01:14:18.702"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.693" endtime="20210715 01:14:18.702"/>
</kw>
<msg timestamp="20210715 01:14:18.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:18.692" endtime="20210715 01:14:18.702"/>
</kw>
<msg timestamp="20210715 01:14:18.702" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:14:18.692" endtime="20210715 01:14:18.702"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:14:18.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:14:18.702" endtime="20210715 01:14:18.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:18.709" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:18.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:18.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:14:18.706" endtime="20210715 01:14:18.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:18.785" level="INFO"/>
<status status="PASS" starttime="20210715 01:14:18.784" endtime="20210715 01:14:18.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:18.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:18.785" endtime="20210715 01:14:18.786"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.706" endtime="20210715 01:14:18.786"/>
</kw>
<msg timestamp="20210715 01:14:18.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:18.705" endtime="20210715 01:14:18.786"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.704" endtime="20210715 01:14:18.786"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.704" endtime="20210715 01:14:18.786"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.691" endtime="20210715 01:14:18.787"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.691" endtime="20210715 01:14:18.787"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:18.790" level="INFO">Running command 'ozone sh bucket link 87566-source/no-such-bucket 87566-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:24.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:24.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:14:18.788" endtime="20210715 01:14:24.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:24.886" level="INFO"/>
<status status="PASS" starttime="20210715 01:14:24.885" endtime="20210715 01:14:24.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:24.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:24.886" endtime="20210715 01:14:24.887"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.788" endtime="20210715 01:14:24.887"/>
</kw>
<msg timestamp="20210715 01:14:24.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:18.787" endtime="20210715 01:14:24.887"/>
</kw>
<status status="PASS" starttime="20210715 01:14:18.787" endtime="20210715 01:14:24.887"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:24.890" level="INFO">Running command 'ozone sh key list 87566-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:30.445" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:14:30.445" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210715 01:14:24.888" endtime="20210715 01:14:30.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:30.446" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210715 01:14:30.446" endtime="20210715 01:14:30.447"/>
</kw>
<msg timestamp="20210715 01:14:30.447" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210715 01:14:24.888" endtime="20210715 01:14:30.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:14:30.447" endtime="20210715 01:14:30.447"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:14:18.690" endtime="20210715 01:14:30.448"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:30.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:30.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:30.459" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:14:30.451" endtime="20210715 01:14:30.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:30.461" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:14:30.460" endtime="20210715 01:14:30.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:30.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:30.462" endtime="20210715 01:14:30.465"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.451" endtime="20210715 01:14:30.466"/>
</kw>
<msg timestamp="20210715 01:14:30.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:30.451" endtime="20210715 01:14:30.466"/>
</kw>
<msg timestamp="20210715 01:14:30.467" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:14:30.450" endtime="20210715 01:14:30.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:14:30.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:14:30.468" endtime="20210715 01:14:30.469"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:30.474" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:30.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:30.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:14:30.471" endtime="20210715 01:14:30.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:30.482" level="INFO"/>
<status status="PASS" starttime="20210715 01:14:30.482" endtime="20210715 01:14:30.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:30.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:30.483" endtime="20210715 01:14:30.483"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.471" endtime="20210715 01:14:30.484"/>
</kw>
<msg timestamp="20210715 01:14:30.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:30.471" endtime="20210715 01:14:30.484"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.470" endtime="20210715 01:14:30.484"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.469" endtime="20210715 01:14:30.484"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.450" endtime="20210715 01:14:30.484"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.449" endtime="20210715 01:14:30.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:30.488" level="INFO">Running command 'ozone sh bucket link 87566-source/bucket1 87566-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:36.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:36.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:14:30.486" endtime="20210715 01:14:36.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:36.597" level="INFO"/>
<status status="PASS" starttime="20210715 01:14:36.597" endtime="20210715 01:14:36.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:36.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:36.597" endtime="20210715 01:14:36.598"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.486" endtime="20210715 01:14:36.598"/>
</kw>
<msg timestamp="20210715 01:14:36.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:30.485" endtime="20210715 01:14:36.599"/>
</kw>
<status status="PASS" starttime="20210715 01:14:30.485" endtime="20210715 01:14:36.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:36.604" level="INFO">Running command 'ozone sh bucket create 87566-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:14:43.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:14:43.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:14:36.600" endtime="20210715 01:14:43.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:14:43.122" level="INFO"/>
<status status="PASS" starttime="20210715 01:14:43.121" endtime="20210715 01:14:43.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:14:43.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:14:43.122" endtime="20210715 01:14:43.123"/>
</kw>
<status status="PASS" starttime="20210715 01:14:36.600" endtime="20210715 01:14:43.123"/>
</kw>
<msg timestamp="20210715 01:14:43.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:14:36.599" endtime="20210715 01:14:43.123"/>
</kw>
<status status="PASS" starttime="20210715 01:14:36.599" endtime="20210715 01:14:43.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:14:43.128" level="INFO">Running command 'ozone sh key put 87566-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:16:30.449" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:14:43.125" endtime="20210715 01:16:30.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:16:30.451" endtime="20210715 01:16:30.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:16:30.451" endtime="20210715 01:16:30.451"/>
</kw>
<status status="FAIL" starttime="20210715 01:14:43.125" endtime="20210715 01:16:30.451"/>
</kw>
<msg timestamp="20210715 01:16:30.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:14:43.125" endtime="20210715 01:16:30.451"/>
</kw>
<status status="FAIL" starttime="20210715 01:14:43.124" endtime="20210715 01:16:30.452"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210715 01:16:30.452" endtime="20210715 01:16:30.452"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210715 01:14:30.448" endtime="20210715 01:16:30.452">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:16:30.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:16:30.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:16:30.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:16:30.458" endtime="20210715 01:16:30.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:16:30.473" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:16:30.471" endtime="20210715 01:16:30.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:16:30.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:16:30.473" endtime="20210715 01:16:30.474"/>
</kw>
<status status="PASS" starttime="20210715 01:16:30.457" endtime="20210715 01:16:30.475"/>
</kw>
<msg timestamp="20210715 01:16:30.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:16:30.456" endtime="20210715 01:16:30.475"/>
</kw>
<msg timestamp="20210715 01:16:30.476" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:16:30.455" endtime="20210715 01:16:30.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:16:30.478" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:16:30.477" endtime="20210715 01:16:30.478"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:16:30.485" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:16:30.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:16:30.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:16:30.482" endtime="20210715 01:16:30.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:16:30.504" level="INFO"/>
<status status="PASS" starttime="20210715 01:16:30.501" endtime="20210715 01:16:30.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:16:30.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:16:30.504" endtime="20210715 01:16:30.505"/>
</kw>
<status status="PASS" starttime="20210715 01:16:30.481" endtime="20210715 01:16:30.506"/>
</kw>
<msg timestamp="20210715 01:16:30.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:16:30.480" endtime="20210715 01:16:30.506"/>
</kw>
<status status="PASS" starttime="20210715 01:16:30.479" endtime="20210715 01:16:30.506"/>
</kw>
<status status="PASS" starttime="20210715 01:16:30.478" endtime="20210715 01:16:30.506"/>
</kw>
<status status="PASS" starttime="20210715 01:16:30.455" endtime="20210715 01:16:30.506"/>
</kw>
<status status="PASS" starttime="20210715 01:16:30.454" endtime="20210715 01:16:30.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:16:30.515" level="INFO">Running command 'ozone sh key put 87566-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:30.454" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:16:30.510" endtime="20210715 01:18:30.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:18:30.455" endtime="20210715 01:18:30.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:18:30.456" endtime="20210715 01:18:30.456"/>
</kw>
<status status="FAIL" starttime="20210715 01:16:30.508" endtime="20210715 01:18:30.456"/>
</kw>
<msg timestamp="20210715 01:18:30.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:16:30.507" endtime="20210715 01:18:30.456"/>
</kw>
<status status="FAIL" starttime="20210715 01:16:30.506" endtime="20210715 01:18:30.456"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210715 01:18:30.457" endtime="20210715 01:18:30.457"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210715 01:16:30.453" endtime="20210715 01:18:30.457">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:30.463" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:30.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:30.467" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:18:30.461" endtime="20210715 01:18:30.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:30.468" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:18:30.467" endtime="20210715 01:18:30.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:30.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:30.468" endtime="20210715 01:18:30.468"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.460" endtime="20210715 01:18:30.469"/>
</kw>
<msg timestamp="20210715 01:18:30.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:30.460" endtime="20210715 01:18:30.470"/>
</kw>
<msg timestamp="20210715 01:18:30.470" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:18:30.460" endtime="20210715 01:18:30.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:18:30.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:18:30.470" endtime="20210715 01:18:30.471"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:30.476" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:30.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:30.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:18:30.474" endtime="20210715 01:18:30.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:30.485" level="INFO"/>
<status status="PASS" starttime="20210715 01:18:30.484" endtime="20210715 01:18:30.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:30.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:30.485" endtime="20210715 01:18:30.486"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.473" endtime="20210715 01:18:30.486"/>
</kw>
<msg timestamp="20210715 01:18:30.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:30.473" endtime="20210715 01:18:30.486"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.472" endtime="20210715 01:18:30.486"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.472" endtime="20210715 01:18:30.486"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.459" endtime="20210715 01:18:30.487"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.459" endtime="20210715 01:18:30.487"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:30.490" level="INFO">Running command 'ozone sh key list 87566-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:37.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:37.072" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210715 01:18:30.488" endtime="20210715 01:18:37.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:37.073" level="INFO">key1</msg>
<status status="PASS" starttime="20210715 01:18:37.072" endtime="20210715 01:18:37.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:37.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:37.074" endtime="20210715 01:18:37.075"/>
</kw>
<status status="PASS" starttime="20210715 01:18:30.488" endtime="20210715 01:18:37.075"/>
</kw>
<msg timestamp="20210715 01:18:37.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:30.487" endtime="20210715 01:18:37.075"/>
</kw>
<msg timestamp="20210715 01:18:37.076" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210715 01:18:30.487" endtime="20210715 01:18:37.076"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:37.081" level="INFO">Running command 'ozone sh key list 87566-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:44.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:44.181" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210715 01:18:37.078" endtime="20210715 01:18:44.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:44.182" level="INFO">key1</msg>
<status status="PASS" starttime="20210715 01:18:44.182" endtime="20210715 01:18:44.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:44.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:44.183" endtime="20210715 01:18:44.183"/>
</kw>
<status status="PASS" starttime="20210715 01:18:37.077" endtime="20210715 01:18:44.184"/>
</kw>
<msg timestamp="20210715 01:18:44.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:37.076" endtime="20210715 01:18:44.184"/>
</kw>
<msg timestamp="20210715 01:18:44.184" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210715 01:18:37.076" endtime="20210715 01:18:44.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:18:44.184" endtime="20210715 01:18:44.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:18:44.185" endtime="20210715 01:18:44.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210715 01:18:44.186" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210715 01:18:44.186" endtime="20210715 01:18:44.186"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210715 01:18:30.458" endtime="20210715 01:18:44.186">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:44.195" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:44.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:44.199" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:18:44.191" endtime="20210715 01:18:44.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:44.201" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:18:44.200" endtime="20210715 01:18:44.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:44.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:44.201" endtime="20210715 01:18:44.202"/>
</kw>
<status status="PASS" starttime="20210715 01:18:44.190" endtime="20210715 01:18:44.202"/>
</kw>
<msg timestamp="20210715 01:18:44.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:44.190" endtime="20210715 01:18:44.202"/>
</kw>
<msg timestamp="20210715 01:18:44.202" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:18:44.189" endtime="20210715 01:18:44.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:18:44.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:18:44.203" endtime="20210715 01:18:44.203"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:44.209" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:44.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:44.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:18:44.206" endtime="20210715 01:18:44.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:44.221" level="INFO"/>
<status status="PASS" starttime="20210715 01:18:44.220" endtime="20210715 01:18:44.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:44.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:44.221" endtime="20210715 01:18:44.222"/>
</kw>
<status status="PASS" starttime="20210715 01:18:44.205" endtime="20210715 01:18:44.223"/>
</kw>
<msg timestamp="20210715 01:18:44.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:44.204" endtime="20210715 01:18:44.223"/>
</kw>
<status status="PASS" starttime="20210715 01:18:44.204" endtime="20210715 01:18:44.224"/>
</kw>
<status status="PASS" starttime="20210715 01:18:44.203" endtime="20210715 01:18:44.224"/>
</kw>
<status status="PASS" starttime="20210715 01:18:44.189" endtime="20210715 01:18:44.224"/>
</kw>
<status status="PASS" starttime="20210715 01:18:44.188" endtime="20210715 01:18:44.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:44.228" level="INFO">Running command 'ozone sh key delete 87566-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:50.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:18:50.668" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210715 01:18:44.226" endtime="20210715 01:18:50.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:50.669" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210715 01:18:50.668" endtime="20210715 01:18:50.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:50.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210715 01:18:50.670" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210715 01:18:50.669" endtime="20210715 01:18:50.670"/>
</kw>
<status status="FAIL" starttime="20210715 01:18:44.225" endtime="20210715 01:18:50.670"/>
</kw>
<msg timestamp="20210715 01:18:50.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:18:44.225" endtime="20210715 01:18:50.670"/>
</kw>
<status status="FAIL" starttime="20210715 01:18:44.224" endtime="20210715 01:18:50.670"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210715 01:18:50.677" endtime="20210715 01:18:50.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:18:50.677" endtime="20210715 01:18:50.677"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210715 01:18:44.187" endtime="20210715 01:18:50.677">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:50.685" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:50.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:50.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:18:50.681" endtime="20210715 01:18:50.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:50.690" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:18:50.690" endtime="20210715 01:18:50.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:50.691" endtime="20210715 01:18:50.695"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.681" endtime="20210715 01:18:50.695"/>
</kw>
<msg timestamp="20210715 01:18:50.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:50.681" endtime="20210715 01:18:50.695"/>
</kw>
<msg timestamp="20210715 01:18:50.695" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:18:50.680" endtime="20210715 01:18:50.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:18:50.696" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:18:50.696" endtime="20210715 01:18:50.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:50.708" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:50.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:50.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:18:50.698" endtime="20210715 01:18:50.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:50.720" level="INFO"/>
<status status="PASS" starttime="20210715 01:18:50.719" endtime="20210715 01:18:50.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:50.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:50.720" endtime="20210715 01:18:50.721"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.698" endtime="20210715 01:18:50.721"/>
</kw>
<msg timestamp="20210715 01:18:50.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:50.697" endtime="20210715 01:18:50.722"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.697" endtime="20210715 01:18:50.722"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.696" endtime="20210715 01:18:50.722"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.680" endtime="20210715 01:18:50.722"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.679" endtime="20210715 01:18:50.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:50.730" level="INFO">Running command 'ozone sh bucket list 87566-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:56.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:56.675" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210715 01:18:50.724" endtime="20210715 01:18:56.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:56.677" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:14:24.736Z",
  "modificationTime" : "2021-07-15T01:14:24.736Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:49.366Z",
  "modificationTime" : "2021-07-15T01:14:18.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:14:36.317Z",
  "modificationTime" : "2021-07-15T01:14:36.317Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:36.218Z",
  "modificationTime" : "2021-07-15T01:14:12.352Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:43.024Z",
  "modificationTime" : "2021-07-15T01:13:43.024Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210715 01:18:56.676" endtime="20210715 01:18:56.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:56.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:56.677" endtime="20210715 01:18:56.678"/>
</kw>
<status status="PASS" starttime="20210715 01:18:50.723" endtime="20210715 01:18:56.678"/>
</kw>
<msg timestamp="20210715 01:18:56.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:50.723" endtime="20210715 01:18:56.678"/>
</kw>
<msg timestamp="20210715 01:18:56.678" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210715 01:18:50.722" endtime="20210715 01:18:56.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:18:56.678" endtime="20210715 01:18:56.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:18:56.679" endtime="20210715 01:18:56.679"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:18:50.678" endtime="20210715 01:18:56.679"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:56.688" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:56.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:56.691" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:18:56.685" endtime="20210715 01:18:56.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:56.692" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:18:56.691" endtime="20210715 01:18:56.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:56.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:56.692" endtime="20210715 01:18:56.693"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.684" endtime="20210715 01:18:56.694"/>
</kw>
<msg timestamp="20210715 01:18:56.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:56.684" endtime="20210715 01:18:56.694"/>
</kw>
<msg timestamp="20210715 01:18:56.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:18:56.683" endtime="20210715 01:18:56.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:18:56.696" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:18:56.695" endtime="20210715 01:18:56.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:56.701" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:18:56.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:18:56.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:18:56.699" endtime="20210715 01:18:56.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:18:56.713" level="INFO"/>
<status status="PASS" starttime="20210715 01:18:56.712" endtime="20210715 01:18:56.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:18:56.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:18:56.714" endtime="20210715 01:18:56.715"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.697" endtime="20210715 01:18:56.715"/>
</kw>
<msg timestamp="20210715 01:18:56.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:56.697" endtime="20210715 01:18:56.716"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.696" endtime="20210715 01:18:56.716"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.696" endtime="20210715 01:18:56.716"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.682" endtime="20210715 01:18:56.716"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.682" endtime="20210715 01:18:56.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:18:56.720" level="INFO">Running command 'ozone sh bucket info 87566-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:03.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:03.834" level="INFO">${output} = 87566-source bucket1</msg>
<status status="PASS" starttime="20210715 01:18:56.718" endtime="20210715 01:19:03.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:03.836" level="INFO">87566-source bucket1</msg>
<status status="PASS" starttime="20210715 01:19:03.835" endtime="20210715 01:19:03.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:03.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:03.837" endtime="20210715 01:19:03.838"/>
</kw>
<status status="PASS" starttime="20210715 01:18:56.717" endtime="20210715 01:19:03.839"/>
</kw>
<msg timestamp="20210715 01:19:03.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:18:56.717" endtime="20210715 01:19:03.839"/>
</kw>
<msg timestamp="20210715 01:19:03.840" level="INFO">${result} = 87566-source bucket1</msg>
<status status="PASS" starttime="20210715 01:18:56.716" endtime="20210715 01:19:03.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:19:03.840" endtime="20210715 01:19:03.841"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:18:56.680" endtime="20210715 01:19:03.841"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:03.852" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:03.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:03.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:19:03.849" endtime="20210715 01:19:03.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:03.858" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:19:03.857" endtime="20210715 01:19:03.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:03.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:03.859" endtime="20210715 01:19:03.860"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.848" endtime="20210715 01:19:03.860"/>
</kw>
<msg timestamp="20210715 01:19:03.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:03.847" endtime="20210715 01:19:03.861"/>
</kw>
<msg timestamp="20210715 01:19:03.861" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:19:03.846" endtime="20210715 01:19:03.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:19:03.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:19:03.861" endtime="20210715 01:19:03.863"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:03.869" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:03.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:03.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:19:03.866" endtime="20210715 01:19:03.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:03.882" level="INFO"/>
<status status="PASS" starttime="20210715 01:19:03.881" endtime="20210715 01:19:03.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:03.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:03.883" endtime="20210715 01:19:03.884"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.865" endtime="20210715 01:19:03.884"/>
</kw>
<msg timestamp="20210715 01:19:03.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:03.865" endtime="20210715 01:19:03.885"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.864" endtime="20210715 01:19:03.885"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.863" endtime="20210715 01:19:03.885"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.846" endtime="20210715 01:19:03.885"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.845" endtime="20210715 01:19:03.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:03.891" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 87566-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:10.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:10.147" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:19:03.889" endtime="20210715 01:19:10.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:10.148" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:19:10.147" endtime="20210715 01:19:10.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:10.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:10.149" endtime="20210715 01:19:10.149"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.889" endtime="20210715 01:19:10.149"/>
</kw>
<msg timestamp="20210715 01:19:10.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:03.888" endtime="20210715 01:19:10.150"/>
</kw>
<status status="PASS" starttime="20210715 01:19:03.888" endtime="20210715 01:19:10.150"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:10.155" level="INFO">Running command 'ozone sh bucket getacl 87566-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:16.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:16.885" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210715 01:19:10.152" endtime="20210715 01:19:16.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:16.886" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210715 01:19:16.885" endtime="20210715 01:19:16.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:16.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:16.886" endtime="20210715 01:19:16.887"/>
</kw>
<status status="PASS" starttime="20210715 01:19:10.152" endtime="20210715 01:19:16.887"/>
</kw>
<msg timestamp="20210715 01:19:16.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:10.151" endtime="20210715 01:19:16.887"/>
</kw>
<msg timestamp="20210715 01:19:16.887" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210715 01:19:10.151" endtime="20210715 01:19:16.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:19:16.888" endtime="20210715 01:19:16.888"/>
</kw>
<status status="PASS" starttime="20210715 01:19:10.150" endtime="20210715 01:19:16.888"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:16.893" level="INFO">Running command 'ozone sh bucket getacl 87566-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:23.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:23.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:19:16.891" endtime="20210715 01:19:23.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:23.335" level="INFO"/>
<status status="PASS" starttime="20210715 01:19:23.333" endtime="20210715 01:19:23.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:23.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:23.335" endtime="20210715 01:19:23.337"/>
</kw>
<status status="PASS" starttime="20210715 01:19:16.891" endtime="20210715 01:19:23.337"/>
</kw>
<msg timestamp="20210715 01:19:23.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:16.891" endtime="20210715 01:19:23.338"/>
</kw>
<msg timestamp="20210715 01:19:23.339" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210715 01:19:16.890" endtime="20210715 01:19:23.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:19:23.339" endtime="20210715 01:19:23.340"/>
</kw>
<status status="PASS" starttime="20210715 01:19:16.889" endtime="20210715 01:19:23.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:23.346" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 87566-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:29.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:29.329" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:19:23.344" endtime="20210715 01:19:29.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:29.330" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:19:29.329" endtime="20210715 01:19:29.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:29.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:29.330" endtime="20210715 01:19:29.331"/>
</kw>
<status status="PASS" starttime="20210715 01:19:23.342" endtime="20210715 01:19:29.331"/>
</kw>
<msg timestamp="20210715 01:19:29.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:23.341" endtime="20210715 01:19:29.331"/>
</kw>
<status status="PASS" starttime="20210715 01:19:23.341" endtime="20210715 01:19:29.331"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:29.337" level="INFO">Running command 'ozone sh bucket getacl 87566-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:35.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:35.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:19:29.335" endtime="20210715 01:19:35.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:35.498" level="INFO"/>
<status status="PASS" starttime="20210715 01:19:35.497" endtime="20210715 01:19:35.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:35.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:35.498" endtime="20210715 01:19:35.499"/>
</kw>
<status status="PASS" starttime="20210715 01:19:29.334" endtime="20210715 01:19:35.499"/>
</kw>
<msg timestamp="20210715 01:19:35.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:29.334" endtime="20210715 01:19:35.499"/>
</kw>
<msg timestamp="20210715 01:19:35.500" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210715 01:19:29.333" endtime="20210715 01:19:35.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:19:35.500" endtime="20210715 01:19:35.500"/>
</kw>
<status status="PASS" starttime="20210715 01:19:29.331" endtime="20210715 01:19:35.500"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:35.507" level="INFO">Running command 'ozone sh bucket getacl 87566-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:42.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:42.948" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210715 01:19:35.504" endtime="20210715 01:19:42.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:42.951" level="INFO">READ</msg>
<status status="PASS" starttime="20210715 01:19:42.949" endtime="20210715 01:19:42.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:42.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:42.951" endtime="20210715 01:19:42.952"/>
</kw>
<status status="PASS" starttime="20210715 01:19:35.503" endtime="20210715 01:19:42.953"/>
</kw>
<msg timestamp="20210715 01:19:42.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:35.503" endtime="20210715 01:19:42.953"/>
</kw>
<msg timestamp="20210715 01:19:42.953" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210715 01:19:35.502" endtime="20210715 01:19:42.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:19:42.954" endtime="20210715 01:19:42.954"/>
</kw>
<status status="PASS" starttime="20210715 01:19:35.501" endtime="20210715 01:19:42.956"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:19:03.843" endtime="20210715 01:19:42.956"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:42.964" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:42.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:42.968" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:19:42.961" endtime="20210715 01:19:42.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:42.970" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:19:42.969" endtime="20210715 01:19:42.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:42.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:42.970" endtime="20210715 01:19:42.971"/>
</kw>
<status status="PASS" starttime="20210715 01:19:42.961" endtime="20210715 01:19:42.971"/>
</kw>
<msg timestamp="20210715 01:19:42.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:42.960" endtime="20210715 01:19:42.971"/>
</kw>
<msg timestamp="20210715 01:19:42.971" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:19:42.960" endtime="20210715 01:19:42.971"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:19:42.972" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:19:42.972" endtime="20210715 01:19:42.972"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:42.977" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:43.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:43.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:19:42.975" endtime="20210715 01:19:43.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:43.057" level="INFO"/>
<status status="PASS" starttime="20210715 01:19:43.056" endtime="20210715 01:19:43.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:43.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:43.057" endtime="20210715 01:19:43.058"/>
</kw>
<status status="PASS" starttime="20210715 01:19:42.974" endtime="20210715 01:19:43.058"/>
</kw>
<msg timestamp="20210715 01:19:43.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:42.974" endtime="20210715 01:19:43.058"/>
</kw>
<status status="PASS" starttime="20210715 01:19:42.973" endtime="20210715 01:19:43.059"/>
</kw>
<status status="PASS" starttime="20210715 01:19:42.972" endtime="20210715 01:19:43.059"/>
</kw>
<status status="PASS" starttime="20210715 01:19:42.959" endtime="20210715 01:19:43.059"/>
</kw>
<status status="PASS" starttime="20210715 01:19:42.958" endtime="20210715 01:19:43.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:43.062" level="INFO">Running command 'ozone sh bucket link 87566-source/bucket2 87566-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:49.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:19:49.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:19:43.060" endtime="20210715 01:19:49.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:49.236" level="INFO"/>
<status status="PASS" starttime="20210715 01:19:49.235" endtime="20210715 01:19:49.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:19:49.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:19:49.237" endtime="20210715 01:19:49.238"/>
</kw>
<status status="PASS" starttime="20210715 01:19:43.060" endtime="20210715 01:19:49.239"/>
</kw>
<msg timestamp="20210715 01:19:49.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:43.060" endtime="20210715 01:19:49.239"/>
</kw>
<status status="PASS" starttime="20210715 01:19:43.059" endtime="20210715 01:19:49.240"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:49.244" level="INFO">Running command 'ozone sh bucket create 87566-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:19:54.943" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:19:54.944" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210715 01:19:49.241" endtime="20210715 01:19:54.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:19:54.945" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210715 01:19:54.944" endtime="20210715 01:19:54.945"/>
</kw>
<msg timestamp="20210715 01:19:54.945" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210715 01:19:49.240" endtime="20210715 01:19:54.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:19:54.946" endtime="20210715 01:19:54.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:19:54.950" level="INFO">Running command 'ozone sh bucket create 87566-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:00.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:00.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:19:54.948" endtime="20210715 01:20:00.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:00.831" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:00.830" endtime="20210715 01:20:00.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:00.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:00.831" endtime="20210715 01:20:00.833"/>
</kw>
<status status="PASS" starttime="20210715 01:19:54.947" endtime="20210715 01:20:00.833"/>
</kw>
<msg timestamp="20210715 01:20:00.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:19:54.947" endtime="20210715 01:20:00.834"/>
</kw>
<status status="PASS" starttime="20210715 01:19:54.946" endtime="20210715 01:20:00.835"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:00.839" level="INFO">Running command 'ozone sh bucket link 87566-source/bucket1 87566-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:05.482" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:20:05.482" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210715 01:20:00.836" endtime="20210715 01:20:05.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:05.483" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210715 01:20:05.483" endtime="20210715 01:20:05.484"/>
</kw>
<msg timestamp="20210715 01:20:05.484" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210715 01:20:00.835" endtime="20210715 01:20:05.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:05.484" endtime="20210715 01:20:05.484"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:19:42.957" endtime="20210715 01:20:05.485"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:05.490" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:05.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:05.493" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:05.488" endtime="20210715 01:20:05.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:05.494" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:05.494" endtime="20210715 01:20:05.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:05.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:05.494" endtime="20210715 01:20:05.495"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.488" endtime="20210715 01:20:05.495"/>
</kw>
<msg timestamp="20210715 01:20:05.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:05.487" endtime="20210715 01:20:05.495"/>
</kw>
<msg timestamp="20210715 01:20:05.496" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:05.487" endtime="20210715 01:20:05.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:05.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:05.496" endtime="20210715 01:20:05.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:05.500" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:05.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:05.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:05.498" endtime="20210715 01:20:05.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:05.507" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:05.507" endtime="20210715 01:20:05.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:05.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:05.508" endtime="20210715 01:20:05.508"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.498" endtime="20210715 01:20:05.508"/>
</kw>
<msg timestamp="20210715 01:20:05.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:05.498" endtime="20210715 01:20:05.509"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.497" endtime="20210715 01:20:05.509"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.496" endtime="20210715 01:20:05.509"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.487" endtime="20210715 01:20:05.509"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.486" endtime="20210715 01:20:05.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:05.513" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:05.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:05.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:05.511" endtime="20210715 01:20:05.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:05.517" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:05.517" endtime="20210715 01:20:05.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:05.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:05.518" endtime="20210715 01:20:05.518"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.511" endtime="20210715 01:20:05.518"/>
</kw>
<msg timestamp="20210715 01:20:05.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:05.511" endtime="20210715 01:20:05.518"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.510" endtime="20210715 01:20:05.519"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:05.522" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:05.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:05.525" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:05.520" endtime="20210715 01:20:05.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:05.526" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:05.526" endtime="20210715 01:20:05.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:05.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:05.527" endtime="20210715 01:20:05.527"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.520" endtime="20210715 01:20:05.527"/>
</kw>
<msg timestamp="20210715 01:20:05.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:05.520" endtime="20210715 01:20:05.528"/>
</kw>
<msg timestamp="20210715 01:20:05.528" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:05.519" endtime="20210715 01:20:05.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:05.529" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:05.528" endtime="20210715 01:20:05.529"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:05.532" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:05.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:05.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:05.530" endtime="20210715 01:20:05.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:05.539" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:05.539" endtime="20210715 01:20:05.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:05.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:05.540" endtime="20210715 01:20:05.540"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.530" endtime="20210715 01:20:05.541"/>
</kw>
<msg timestamp="20210715 01:20:05.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:05.530" endtime="20210715 01:20:05.541"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.529" endtime="20210715 01:20:05.541"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.529" endtime="20210715 01:20:05.541"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.519" endtime="20210715 01:20:05.541"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.519" endtime="20210715 01:20:05.541"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:05.544" level="INFO">Running command 'ozone sh key list 87566-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:11.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:11.675" level="INFO">${output} = {
  "volumeName" : "87566-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-15T01:10:21.257Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210715 01:20:05.542" endtime="20210715 01:20:11.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:11.677" level="INFO">{
  "volumeName" : "87566-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-15T01:10:21.257Z",
  "modificationTime" : "2021-07-15T01:13:24.717Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210715 01:20:11.676" endtime="20210715 01:20:11.677"/>
</kw>
<msg timestamp="20210715 01:20:11.677" level="INFO">${result} = {
  "volumeName" : "87566-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-15T01:10:21.257Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210715 01:20:05.542" endtime="20210715 01:20:11.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:11.678" endtime="20210715 01:20:11.678"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.510" endtime="20210715 01:20:11.678"/>
</kw>
<status status="PASS" starttime="20210715 01:20:05.509" endtime="20210715 01:20:11.678"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:20:05.485" endtime="20210715 01:20:11.678"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:11.684" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:11.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:11.688" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:11.682" endtime="20210715 01:20:11.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:11.690" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:11.689" endtime="20210715 01:20:11.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:11.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:11.690" endtime="20210715 01:20:11.691"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.682" endtime="20210715 01:20:11.691"/>
</kw>
<msg timestamp="20210715 01:20:11.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:11.681" endtime="20210715 01:20:11.692"/>
</kw>
<msg timestamp="20210715 01:20:11.692" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:11.681" endtime="20210715 01:20:11.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:11.693" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:11.692" endtime="20210715 01:20:11.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:11.704" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:11.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:11.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:11.699" endtime="20210715 01:20:11.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:11.718" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:11.715" endtime="20210715 01:20:11.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:11.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:11.718" endtime="20210715 01:20:11.719"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.698" endtime="20210715 01:20:11.719"/>
</kw>
<msg timestamp="20210715 01:20:11.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:11.698" endtime="20210715 01:20:11.719"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.693" endtime="20210715 01:20:11.719"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.693" endtime="20210715 01:20:11.719"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.680" endtime="20210715 01:20:11.719"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.680" endtime="20210715 01:20:11.720"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:11.725" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:11.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:11.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:11.722" endtime="20210715 01:20:11.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:11.731" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:11.730" endtime="20210715 01:20:11.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:11.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:11.732" endtime="20210715 01:20:11.732"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.722" endtime="20210715 01:20:11.733"/>
</kw>
<msg timestamp="20210715 01:20:11.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:11.721" endtime="20210715 01:20:11.733"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.721" endtime="20210715 01:20:11.733"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:11.738" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:11.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:11.743" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:11.736" endtime="20210715 01:20:11.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:11.744" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:11.743" endtime="20210715 01:20:11.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:11.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:11.745" endtime="20210715 01:20:11.746"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.735" endtime="20210715 01:20:11.746"/>
</kw>
<msg timestamp="20210715 01:20:11.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:11.735" endtime="20210715 01:20:11.746"/>
</kw>
<msg timestamp="20210715 01:20:11.746" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:11.734" endtime="20210715 01:20:11.746"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:11.747" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:11.747" endtime="20210715 01:20:11.747"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:11.752" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:11.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:11.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:11.749" endtime="20210715 01:20:11.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:11.762" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:11.761" endtime="20210715 01:20:11.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:11.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:11.762" endtime="20210715 01:20:11.763"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.749" endtime="20210715 01:20:11.763"/>
</kw>
<msg timestamp="20210715 01:20:11.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:11.749" endtime="20210715 01:20:11.763"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.748" endtime="20210715 01:20:11.763"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.747" endtime="20210715 01:20:11.763"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.734" endtime="20210715 01:20:11.764"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.733" endtime="20210715 01:20:11.764"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:11.767" level="INFO">Running command 'ozone sh key list 87566-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:17.975" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:20:17.975" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 87566-target unreadable-link null</msg>
<status status="PASS" starttime="20210715 01:20:11.765" endtime="20210715 01:20:17.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:17.976" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 87566-target unreadable-link null</msg>
<status status="PASS" starttime="20210715 01:20:17.976" endtime="20210715 01:20:17.976"/>
</kw>
<msg timestamp="20210715 01:20:17.977" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 87566-target unreadable-link null</msg>
<status status="PASS" starttime="20210715 01:20:11.764" endtime="20210715 01:20:17.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:17.978" endtime="20210715 01:20:17.979"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.720" endtime="20210715 01:20:17.979"/>
</kw>
<status status="PASS" starttime="20210715 01:20:11.720" endtime="20210715 01:20:17.979"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:20:11.679" endtime="20210715 01:20:17.980"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:17.989" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:17.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:17.993" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:17.986" endtime="20210715 01:20:17.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:17.996" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:17.994" endtime="20210715 01:20:17.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:17.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:17.996" endtime="20210715 01:20:17.997"/>
</kw>
<status status="PASS" starttime="20210715 01:20:17.985" endtime="20210715 01:20:17.998"/>
</kw>
<msg timestamp="20210715 01:20:17.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:17.985" endtime="20210715 01:20:17.998"/>
</kw>
<msg timestamp="20210715 01:20:17.999" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:17.984" endtime="20210715 01:20:17.999"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:18.000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:17.999" endtime="20210715 01:20:18.000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:18.009" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:18.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:18.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:18.004" endtime="20210715 01:20:18.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:18.018" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:18.017" endtime="20210715 01:20:18.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:18.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:18.018" endtime="20210715 01:20:18.019"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.003" endtime="20210715 01:20:18.020"/>
</kw>
<msg timestamp="20210715 01:20:18.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:18.002" endtime="20210715 01:20:18.020"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.001" endtime="20210715 01:20:18.020"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.000" endtime="20210715 01:20:18.020"/>
</kw>
<status status="PASS" starttime="20210715 01:20:17.983" endtime="20210715 01:20:18.020"/>
</kw>
<status status="PASS" starttime="20210715 01:20:17.983" endtime="20210715 01:20:18.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:18.025" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:18.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:18.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:18.023" endtime="20210715 01:20:18.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:18.033" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:18.032" endtime="20210715 01:20:18.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:18.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:18.034" endtime="20210715 01:20:18.035"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.022" endtime="20210715 01:20:18.035"/>
</kw>
<msg timestamp="20210715 01:20:18.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:18.022" endtime="20210715 01:20:18.036"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.022" endtime="20210715 01:20:18.036"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:18.043" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:18.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:18.047" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:18.041" endtime="20210715 01:20:18.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:18.048" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:18.048" endtime="20210715 01:20:18.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:18.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:18.049" endtime="20210715 01:20:18.049"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.040" endtime="20210715 01:20:18.050"/>
</kw>
<msg timestamp="20210715 01:20:18.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:18.039" endtime="20210715 01:20:18.050"/>
</kw>
<msg timestamp="20210715 01:20:18.050" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:18.038" endtime="20210715 01:20:18.050"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:18.051" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:18.050" endtime="20210715 01:20:18.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:18.057" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:18.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:18.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:18.054" endtime="20210715 01:20:18.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:18.070" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:18.068" endtime="20210715 01:20:18.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:18.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:18.070" endtime="20210715 01:20:18.072"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.054" endtime="20210715 01:20:18.072"/>
</kw>
<msg timestamp="20210715 01:20:18.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:18.053" endtime="20210715 01:20:18.073"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.052" endtime="20210715 01:20:18.073"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.051" endtime="20210715 01:20:18.073"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.037" endtime="20210715 01:20:18.073"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.037" endtime="20210715 01:20:18.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:18.078" level="INFO">Running command 'ozone sh bucket info 87566-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:24.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:24.229" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210715 01:20:18.075" endtime="20210715 01:20:24.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:24.230" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:49.366Z",
  "modificationTime" : "2021-07-15T01:14:18.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210715 01:20:24.230" endtime="20210715 01:20:24.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:24.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:24.230" endtime="20210715 01:20:24.231"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.075" endtime="20210715 01:20:24.231"/>
</kw>
<msg timestamp="20210715 01:20:24.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:18.074" endtime="20210715 01:20:24.232"/>
</kw>
<msg timestamp="20210715 01:20:24.232" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210715 01:20:18.074" endtime="20210715 01:20:24.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:24.233" endtime="20210715 01:20:24.234"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:24.234" endtime="20210715 01:20:24.235"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:24.240" level="INFO">Running command 'ozone sh key list 87566-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:28.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:20:28.467" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 87566-source unreadable-bucket </msg>
<status status="PASS" starttime="20210715 01:20:24.236" endtime="20210715 01:20:28.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:28.469" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 87566-source unreadable-bucket </msg>
<status status="PASS" starttime="20210715 01:20:28.468" endtime="20210715 01:20:28.469"/>
</kw>
<msg timestamp="20210715 01:20:28.469" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 87566-source unreadable-bucket </msg>
<status status="PASS" starttime="20210715 01:20:24.235" endtime="20210715 01:20:28.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:28.469" endtime="20210715 01:20:28.470"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.021" endtime="20210715 01:20:28.470"/>
</kw>
<status status="PASS" starttime="20210715 01:20:18.021" endtime="20210715 01:20:28.470"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:20:17.981" endtime="20210715 01:20:28.470"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:28.476" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:28.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:28.479" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:28.474" endtime="20210715 01:20:28.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:28.480" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:28.479" endtime="20210715 01:20:28.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:28.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:28.480" endtime="20210715 01:20:28.480"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.473" endtime="20210715 01:20:28.481"/>
</kw>
<msg timestamp="20210715 01:20:28.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:28.473" endtime="20210715 01:20:28.481"/>
</kw>
<msg timestamp="20210715 01:20:28.481" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:28.473" endtime="20210715 01:20:28.481"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:28.482" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:28.481" endtime="20210715 01:20:28.482"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:28.487" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:28.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:28.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:28.484" endtime="20210715 01:20:28.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:28.493" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:28.492" endtime="20210715 01:20:28.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:28.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:28.493" endtime="20210715 01:20:28.493"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.483" endtime="20210715 01:20:28.494"/>
</kw>
<msg timestamp="20210715 01:20:28.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:28.483" endtime="20210715 01:20:28.494"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.482" endtime="20210715 01:20:28.494"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.482" endtime="20210715 01:20:28.494"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.472" endtime="20210715 01:20:28.494"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.472" endtime="20210715 01:20:28.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:28.497" level="INFO">Running command 'ozone sh bucket link 87566-target/loop1 87566-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:34.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:34.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:28.496" endtime="20210715 01:20:34.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:34.124" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:34.124" endtime="20210715 01:20:34.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:34.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:34.125" endtime="20210715 01:20:34.126"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.495" endtime="20210715 01:20:34.126"/>
</kw>
<msg timestamp="20210715 01:20:34.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:28.495" endtime="20210715 01:20:34.126"/>
</kw>
<status status="PASS" starttime="20210715 01:20:28.494" endtime="20210715 01:20:34.127"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:34.132" level="INFO">Running command 'ozone sh bucket link 87566-target/loop2 87566-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:39.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:39.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:34.129" endtime="20210715 01:20:39.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:39.851" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:39.851" endtime="20210715 01:20:39.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:39.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:39.852" endtime="20210715 01:20:39.852"/>
</kw>
<status status="PASS" starttime="20210715 01:20:34.129" endtime="20210715 01:20:39.852"/>
</kw>
<msg timestamp="20210715 01:20:39.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:34.128" endtime="20210715 01:20:39.853"/>
</kw>
<status status="PASS" starttime="20210715 01:20:34.127" endtime="20210715 01:20:39.853"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:39.856" level="INFO">Running command 'ozone sh bucket link 87566-target/loop3 87566-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:44.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:44.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:39.854" endtime="20210715 01:20:44.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:44.286" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:44.285" endtime="20210715 01:20:44.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:44.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:44.286" endtime="20210715 01:20:44.287"/>
</kw>
<status status="PASS" starttime="20210715 01:20:39.854" endtime="20210715 01:20:44.287"/>
</kw>
<msg timestamp="20210715 01:20:44.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:39.854" endtime="20210715 01:20:44.287"/>
</kw>
<status status="PASS" starttime="20210715 01:20:39.853" endtime="20210715 01:20:44.287"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:44.291" level="INFO">Running command 'ozone sh key list 87566-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:51.092" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:20:51.092" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210715 01:20:44.288" endtime="20210715 01:20:51.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:51.094" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210715 01:20:51.093" endtime="20210715 01:20:51.094"/>
</kw>
<msg timestamp="20210715 01:20:51.094" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210715 01:20:44.287" endtime="20210715 01:20:51.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:20:51.095" endtime="20210715 01:20:51.095"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:20:28.471" endtime="20210715 01:20:51.096"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:51.103" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:51.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:51.108" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:20:51.100" endtime="20210715 01:20:51.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:51.109" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:20:51.109" endtime="20210715 01:20:51.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:51.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:51.110" endtime="20210715 01:20:51.110"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.100" endtime="20210715 01:20:51.110"/>
</kw>
<msg timestamp="20210715 01:20:51.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:51.100" endtime="20210715 01:20:51.111"/>
</kw>
<msg timestamp="20210715 01:20:51.111" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:20:51.099" endtime="20210715 01:20:51.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:20:51.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:20:51.111" endtime="20210715 01:20:51.112"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:51.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:51.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:51.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:51.114" endtime="20210715 01:20:51.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:51.128" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:51.127" endtime="20210715 01:20:51.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:51.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:51.129" endtime="20210715 01:20:51.130"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.113" endtime="20210715 01:20:51.130"/>
</kw>
<msg timestamp="20210715 01:20:51.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:51.113" endtime="20210715 01:20:51.131"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.112" endtime="20210715 01:20:51.131"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.112" endtime="20210715 01:20:51.131"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.098" endtime="20210715 01:20:51.131"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.098" endtime="20210715 01:20:51.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:51.135" level="INFO">Running command 'ozone sh bucket link 87566-source/bucket1 87566-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:20:57.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:20:57.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:20:51.133" endtime="20210715 01:20:57.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:20:57.369" level="INFO"/>
<status status="PASS" starttime="20210715 01:20:57.367" endtime="20210715 01:20:57.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:20:57.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:20:57.369" endtime="20210715 01:20:57.370"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.133" endtime="20210715 01:20:57.371"/>
</kw>
<msg timestamp="20210715 01:20:57.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:20:51.132" endtime="20210715 01:20:57.371"/>
</kw>
<status status="PASS" starttime="20210715 01:20:51.132" endtime="20210715 01:20:57.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:20:57.378" level="INFO">Running command 'ozone sh key put 87566-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:22:51.097" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:20:57.374" endtime="20210715 01:22:51.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:22:51.098" endtime="20210715 01:22:51.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:22:51.098" endtime="20210715 01:22:51.098"/>
</kw>
<status status="FAIL" starttime="20210715 01:20:57.373" endtime="20210715 01:22:51.099"/>
</kw>
<msg timestamp="20210715 01:22:51.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:20:57.373" endtime="20210715 01:22:51.099"/>
</kw>
<status status="FAIL" starttime="20210715 01:20:57.372" endtime="20210715 01:22:51.099"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210715 01:22:51.099" endtime="20210715 01:22:51.099"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210715 01:20:51.096" endtime="20210715 01:22:51.100">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:22:51.106" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:22:51.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:22:51.111" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:22:51.104" endtime="20210715 01:22:51.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:22:51.112" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:22:51.111" endtime="20210715 01:22:51.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:22:51.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:22:51.112" endtime="20210715 01:22:51.112"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.103" endtime="20210715 01:22:51.113"/>
</kw>
<msg timestamp="20210715 01:22:51.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:22:51.103" endtime="20210715 01:22:51.113"/>
</kw>
<msg timestamp="20210715 01:22:51.114" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:22:51.103" endtime="20210715 01:22:51.114"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:22:51.115" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:22:51.114" endtime="20210715 01:22:51.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:22:51.120" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:22:51.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:22:51.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:22:51.117" endtime="20210715 01:22:51.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:22:51.128" level="INFO"/>
<status status="PASS" starttime="20210715 01:22:51.127" endtime="20210715 01:22:51.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:22:51.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:22:51.128" endtime="20210715 01:22:51.129"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.117" endtime="20210715 01:22:51.129"/>
</kw>
<msg timestamp="20210715 01:22:51.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:22:51.116" endtime="20210715 01:22:51.129"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.116" endtime="20210715 01:22:51.129"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.115" endtime="20210715 01:22:51.129"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.102" endtime="20210715 01:22:51.130"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.102" endtime="20210715 01:22:51.130"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:22:51.134" level="INFO">Running command 'ozone sh bucket delete 87566-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:22:55.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:22:55.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:22:51.132" endtime="20210715 01:22:55.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:22:55.081" level="INFO"/>
<status status="PASS" starttime="20210715 01:22:55.080" endtime="20210715 01:22:55.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:22:55.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:22:55.082" endtime="20210715 01:22:55.082"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.131" endtime="20210715 01:22:55.083"/>
</kw>
<msg timestamp="20210715 01:22:55.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:22:51.131" endtime="20210715 01:22:55.083"/>
</kw>
<status status="PASS" starttime="20210715 01:22:51.130" endtime="20210715 01:22:55.083"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:22:55.087" level="INFO">Running command 'ozone sh bucket list 87566-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:01.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:01.951" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210715 01:22:55.085" endtime="20210715 01:23:01.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:01.952" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:20:00.751Z",
  "modificationTime" : "2021-07-15T01:20:00.751Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:14:24.736Z",
  "modificationTime" : "2021-07-15T01:14:24.736Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:49.366Z",
  "modificationTime" : "2021-07-15T01:14:18.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:19:49.139Z",
  "modificationTime" : "2021-07-15T01:19:49.139Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:20:57.151Z",
  "modificationTime" : "2021-07-15T01:20:57.151Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:20:44.017Z",
  "modificationTime" : "2021-07-15T01:20:44.017Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:20:33.968Z",
  "modificationTime" : "2021-07-15T01:20:33.968Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:20:39.699Z",
  "modificationTime" : "2021-07-15T01:20:39.699Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:36.218Z",
  "modificationTime" : "2021-07-15T01:14:12.352Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-15T01:13:43.024Z",
  "modificationTime" : "2021-07-15T01:13:43.024Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "87566-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210715 01:23:01.951" endtime="20210715 01:23:01.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:01.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:01.952" endtime="20210715 01:23:01.953"/>
</kw>
<status status="PASS" starttime="20210715 01:22:55.084" endtime="20210715 01:23:01.953"/>
</kw>
<msg timestamp="20210715 01:23:01.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:22:55.084" endtime="20210715 01:23:01.953"/>
</kw>
<msg timestamp="20210715 01:23:01.954" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "87566-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210715 01:22:55.083" endtime="20210715 01:23:01.954"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:23:01.954" endtime="20210715 01:23:01.954"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:01.958" level="INFO">Running command 'ozone sh key list 87566-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:08.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:08.497" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210715 01:23:01.956" endtime="20210715 01:23:08.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:08.498" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210715 01:23:08.497" endtime="20210715 01:23:08.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:08.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:08.498" endtime="20210715 01:23:08.499"/>
</kw>
<status status="PASS" starttime="20210715 01:23:01.955" endtime="20210715 01:23:08.499"/>
</kw>
<msg timestamp="20210715 01:23:08.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:01.955" endtime="20210715 01:23:08.499"/>
</kw>
<msg timestamp="20210715 01:23:08.499" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210715 01:23:01.954" endtime="20210715 01:23:08.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:23:08.500" endtime="20210715 01:23:08.500"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:22:51.100" endtime="20210715 01:23:08.500"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210715 01:09:57.999" endtime="20210715 01:23:08.502"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210715 01:23:08.526" level="INFO">${random} = 81674</msg>
<status status="PASS" starttime="20210715 01:23:08.526" endtime="20210715 01:23:08.526"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:23:08.527" level="INFO">${prefix} = 81674</msg>
<status status="PASS" starttime="20210715 01:23:08.526" endtime="20210715 01:23:08.527"/>
</kw>
<status status="PASS" starttime="20210715 01:23:08.525" endtime="20210715 01:23:08.527"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:08.532" level="INFO">Running command 'ozone sh volume info /81674-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:14.850" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:23:14.850" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81674-rpcbasic is not found</msg>
<status status="PASS" starttime="20210715 01:23:08.530" endtime="20210715 01:23:14.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:14.852" level="INFO">VOLUME_NOT_FOUND Volume 81674-rpcbasic is not found</msg>
<status status="PASS" starttime="20210715 01:23:14.851" endtime="20210715 01:23:14.852"/>
</kw>
<msg timestamp="20210715 01:23:14.852" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81674-rpcbasic is not found</msg>
<status status="PASS" starttime="20210715 01:23:08.529" endtime="20210715 01:23:14.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:23:14.852" endtime="20210715 01:23:14.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:14.857" level="INFO">Running command 'ozone sh volume create /81674-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:22.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:22.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:23:14.855" endtime="20210715 01:23:22.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:22.193" level="INFO"/>
<status status="PASS" starttime="20210715 01:23:22.192" endtime="20210715 01:23:22.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:22.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:22.194" endtime="20210715 01:23:22.195"/>
</kw>
<status status="PASS" starttime="20210715 01:23:14.854" endtime="20210715 01:23:22.195"/>
</kw>
<msg timestamp="20210715 01:23:22.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:14.854" endtime="20210715 01:23:22.195"/>
</kw>
<msg timestamp="20210715 01:23:22.196" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210715 01:23:14.853" endtime="20210715 01:23:22.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:23:22.196" endtime="20210715 01:23:22.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:22.203" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="81674-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:28.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:28.943" level="INFO">${output} = {
  "metadata": {},
  "name": "81674-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:23:22.200" endtime="20210715 01:23:28.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:28.946" level="INFO">{
  "metadata": {},
  "name": "81674-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:23:21.886Z",
  "modificationTime": "2021-07-15T01:23:21.886Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:23:28.945" endtime="20210715 01:23:28.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:28.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:28.946" endtime="20210715 01:23:28.947"/>
</kw>
<status status="PASS" starttime="20210715 01:23:22.198" endtime="20210715 01:23:28.947"/>
</kw>
<msg timestamp="20210715 01:23:28.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:22.198" endtime="20210715 01:23:28.947"/>
</kw>
<msg timestamp="20210715 01:23:28.948" level="INFO">${result} = {
  "metadata": {},
  "name": "81674-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:23:22.197" endtime="20210715 01:23:28.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:23:28.948" endtime="20210715 01:23:28.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:28.954" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81674-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:35.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:35.445" level="INFO">${output} = {
  "metadata": {},
  "name": "81674-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:23:28.951" endtime="20210715 01:23:35.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:35.446" level="INFO">{
  "metadata": {},
  "name": "81674-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:23:21.886Z",
  "modificationTime": "2021-07-15T01:23:21.886Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:23:35.446" endtime="20210715 01:23:35.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:35.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:35.447" endtime="20210715 01:23:35.447"/>
</kw>
<status status="PASS" starttime="20210715 01:23:28.951" endtime="20210715 01:23:35.447"/>
</kw>
<msg timestamp="20210715 01:23:35.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:28.950" endtime="20210715 01:23:35.448"/>
</kw>
<msg timestamp="20210715 01:23:35.448" level="INFO">${result} = {
  "metadata": {},
  "name": "81674-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:23:28.948" endtime="20210715 01:23:35.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:23:35.448" endtime="20210715 01:23:35.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:35.452" level="INFO">Running command 'ozone sh volume setquota /81674-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:41.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:41.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:23:35.450" endtime="20210715 01:23:41.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:41.160" level="INFO"/>
<status status="PASS" starttime="20210715 01:23:41.159" endtime="20210715 01:23:41.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:41.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:41.160" endtime="20210715 01:23:41.161"/>
</kw>
<status status="PASS" starttime="20210715 01:23:35.449" endtime="20210715 01:23:41.161"/>
</kw>
<msg timestamp="20210715 01:23:41.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:35.449" endtime="20210715 01:23:41.163"/>
</kw>
<status status="PASS" starttime="20210715 01:23:35.449" endtime="20210715 01:23:41.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:41.169" level="INFO">Running command 'ozone sh volume info /81674-rpcbasic | jq -r '. | select(.name=="81674-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:46.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:46.466" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:23:41.166" endtime="20210715 01:23:46.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:46.467" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:23:46.466" endtime="20210715 01:23:46.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:46.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:46.467" endtime="20210715 01:23:46.468"/>
</kw>
<status status="PASS" starttime="20210715 01:23:41.165" endtime="20210715 01:23:46.468"/>
</kw>
<msg timestamp="20210715 01:23:46.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:41.165" endtime="20210715 01:23:46.468"/>
</kw>
<msg timestamp="20210715 01:23:46.469" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:23:41.164" endtime="20210715 01:23:46.469"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:23:46.469" endtime="20210715 01:23:46.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:46.473" level="INFO">Running command 'ozone sh bucket create /81674-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:50.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:50.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:23:46.471" endtime="20210715 01:23:50.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:50.359" level="INFO"/>
<status status="PASS" starttime="20210715 01:23:50.359" endtime="20210715 01:23:50.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:50.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:50.359" endtime="20210715 01:23:50.360"/>
</kw>
<status status="PASS" starttime="20210715 01:23:46.470" endtime="20210715 01:23:50.360"/>
</kw>
<msg timestamp="20210715 01:23:50.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:46.470" endtime="20210715 01:23:50.360"/>
</kw>
<status status="PASS" starttime="20210715 01:23:46.469" endtime="20210715 01:23:50.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:50.365" level="INFO">Running command 'ozone sh bucket info /81674-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:23:56.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:23:56.461" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210715 01:23:50.363" endtime="20210715 01:23:56.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:23:56.462" level="INFO">DISK</msg>
<status status="PASS" starttime="20210715 01:23:56.462" endtime="20210715 01:23:56.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:23:56.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:23:56.462" endtime="20210715 01:23:56.463"/>
</kw>
<status status="PASS" starttime="20210715 01:23:50.362" endtime="20210715 01:23:56.463"/>
</kw>
<msg timestamp="20210715 01:23:56.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:50.362" endtime="20210715 01:23:56.463"/>
</kw>
<msg timestamp="20210715 01:23:56.464" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210715 01:23:50.361" endtime="20210715 01:23:56.464"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:23:56.464" endtime="20210715 01:23:56.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:23:56.472" level="INFO">Running command 'ozone sh bucket info /81674-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:24:03.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:24:03.099" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:23:56.468" endtime="20210715 01:24:03.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:24:03.102" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:24:03.100" endtime="20210715 01:24:03.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:24:03.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:24:03.102" endtime="20210715 01:24:03.104"/>
</kw>
<status status="PASS" starttime="20210715 01:23:56.467" endtime="20210715 01:24:03.104"/>
</kw>
<msg timestamp="20210715 01:24:03.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:23:56.466" endtime="20210715 01:24:03.105"/>
</kw>
<msg timestamp="20210715 01:24:03.106" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:23:56.464" endtime="20210715 01:24:03.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:24:03.106" endtime="20210715 01:24:03.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:24:03.115" level="INFO">Running command 'ozone sh bucket info /81674-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:24:10.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:24:10.086" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210715 01:24:03.111" endtime="20210715 01:24:10.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:24:10.089" level="INFO">100</msg>
<status status="PASS" starttime="20210715 01:24:10.087" endtime="20210715 01:24:10.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:24:10.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:24:10.089" endtime="20210715 01:24:10.091"/>
</kw>
<status status="PASS" starttime="20210715 01:24:03.110" endtime="20210715 01:24:10.091"/>
</kw>
<msg timestamp="20210715 01:24:10.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:24:03.110" endtime="20210715 01:24:10.092"/>
</kw>
<msg timestamp="20210715 01:24:10.092" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210715 01:24:03.107" endtime="20210715 01:24:10.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:24:10.093" endtime="20210715 01:24:10.094"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:24:10.101" level="INFO">Running command 'ozone sh bucket setquota /81674-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:24:15.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:24:15.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:24:10.098" endtime="20210715 01:24:15.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:24:15.958" level="INFO"/>
<status status="PASS" starttime="20210715 01:24:15.957" endtime="20210715 01:24:15.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:24:15.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:24:15.958" endtime="20210715 01:24:15.959"/>
</kw>
<status status="PASS" starttime="20210715 01:24:10.097" endtime="20210715 01:24:15.959"/>
</kw>
<msg timestamp="20210715 01:24:15.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:24:10.096" endtime="20210715 01:24:15.959"/>
</kw>
<status status="PASS" starttime="20210715 01:24:10.094" endtime="20210715 01:24:15.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:24:15.963" level="INFO">Running command 'ozone sh bucket info /81674-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:24:22.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:24:22.301" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:24:15.961" endtime="20210715 01:24:22.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:24:22.303" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210715 01:24:22.302" endtime="20210715 01:24:22.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:24:22.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:24:22.303" endtime="20210715 01:24:22.303"/>
</kw>
<status status="PASS" starttime="20210715 01:24:15.961" endtime="20210715 01:24:22.304"/>
</kw>
<msg timestamp="20210715 01:24:22.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:24:15.961" endtime="20210715 01:24:22.304"/>
</kw>
<msg timestamp="20210715 01:24:22.304" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:24:15.960" endtime="20210715 01:24:22.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:24:22.304" endtime="20210715 01:24:22.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:24:22.314" level="INFO">Running command 'ozone sh bucket info /81674-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:24:28.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:24:28.968" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210715 01:24:22.311" endtime="20210715 01:24:28.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:24:28.969" level="INFO">1000</msg>
<status status="PASS" starttime="20210715 01:24:28.968" endtime="20210715 01:24:28.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:24:28.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:24:28.970" endtime="20210715 01:24:28.970"/>
</kw>
<status status="PASS" starttime="20210715 01:24:22.310" endtime="20210715 01:24:28.970"/>
</kw>
<msg timestamp="20210715 01:24:28.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:24:22.309" endtime="20210715 01:24:28.971"/>
</kw>
<msg timestamp="20210715 01:24:28.971" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210715 01:24:22.306" endtime="20210715 01:24:28.971"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:24:28.971" endtime="20210715 01:24:28.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:24:28.975" level="INFO">Running command 'ozone sh bucket list /81674-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:24:35.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:24:35.207" level="INFO">${output} = 81674-rpcbasic</msg>
<status status="PASS" starttime="20210715 01:24:28.973" endtime="20210715 01:24:35.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:24:35.209" level="INFO">81674-rpcbasic</msg>
<status status="PASS" starttime="20210715 01:24:35.207" endtime="20210715 01:24:35.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:24:35.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:24:35.209" endtime="20210715 01:24:35.210"/>
</kw>
<status status="PASS" starttime="20210715 01:24:28.973" endtime="20210715 01:24:35.211"/>
</kw>
<msg timestamp="20210715 01:24:35.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:24:28.973" endtime="20210715 01:24:35.212"/>
</kw>
<msg timestamp="20210715 01:24:35.212" level="INFO">${result} = 81674-rpcbasic</msg>
<status status="PASS" starttime="20210715 01:24:28.972" endtime="20210715 01:24:35.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:24:35.213" endtime="20210715 01:24:35.214"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:24:35.221" level="INFO">Running command 'ozone sh key put /81674-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:27:45.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:27:45.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:24:35.219" endtime="20210715 01:27:45.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:27:45.380" level="INFO"/>
<status status="PASS" starttime="20210715 01:27:45.379" endtime="20210715 01:27:45.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:27:45.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:27:45.380" endtime="20210715 01:27:45.380"/>
</kw>
<status status="PASS" starttime="20210715 01:24:35.217" endtime="20210715 01:27:45.381"/>
</kw>
<msg timestamp="20210715 01:27:45.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:24:35.217" endtime="20210715 01:27:45.381"/>
</kw>
<status status="PASS" starttime="20210715 01:24:35.216" endtime="20210715 01:27:45.381"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:27:45.385" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:27:45.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:27:45.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:27:45.382" endtime="20210715 01:27:45.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:27:45.391" level="INFO"/>
<status status="PASS" starttime="20210715 01:27:45.389" endtime="20210715 01:27:45.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:27:45.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:27:45.391" endtime="20210715 01:27:45.391"/>
</kw>
<status status="PASS" starttime="20210715 01:27:45.382" endtime="20210715 01:27:45.392"/>
</kw>
<msg timestamp="20210715 01:27:45.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:27:45.381" endtime="20210715 01:27:45.392"/>
</kw>
<status status="PASS" starttime="20210715 01:27:45.381" endtime="20210715 01:27:45.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:27:45.396" level="INFO">Running command 'ozone sh key get /81674-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:27:55.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:27:55.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:27:45.394" endtime="20210715 01:27:55.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:27:55.382" level="INFO"/>
<status status="PASS" starttime="20210715 01:27:55.381" endtime="20210715 01:27:55.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:27:55.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:27:55.382" endtime="20210715 01:27:55.383"/>
</kw>
<status status="PASS" starttime="20210715 01:27:45.393" endtime="20210715 01:27:55.383"/>
</kw>
<msg timestamp="20210715 01:27:55.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:27:45.393" endtime="20210715 01:27:55.383"/>
</kw>
<status status="PASS" starttime="20210715 01:27:45.393" endtime="20210715 01:27:55.383"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:27:55.388" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:27:55.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:27:55.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:27:55.385" endtime="20210715 01:27:55.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:27:55.393" level="INFO"/>
<status status="PASS" starttime="20210715 01:27:55.392" endtime="20210715 01:27:55.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:27:55.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:27:55.393" endtime="20210715 01:27:55.394"/>
</kw>
<status status="PASS" starttime="20210715 01:27:55.384" endtime="20210715 01:27:55.394"/>
</kw>
<msg timestamp="20210715 01:27:55.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:27:55.384" endtime="20210715 01:27:55.394"/>
</kw>
<status status="PASS" starttime="20210715 01:27:55.384" endtime="20210715 01:27:55.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:27:55.399" level="INFO">Running command 'ozone sh key put -t RATIS /81674-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:08.528" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:27:55.397" endtime="20210715 01:28:08.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.529" endtime="20210715 01:28:08.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.530" endtime="20210715 01:28:08.530"/>
</kw>
<status status="FAIL" starttime="20210715 01:27:55.396" endtime="20210715 01:28:08.530"/>
</kw>
<msg timestamp="20210715 01:28:08.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:27:55.395" endtime="20210715 01:28:08.530"/>
</kw>
<status status="FAIL" starttime="20210715 01:27:55.394" endtime="20210715 01:28:08.530"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.531" endtime="20210715 01:28:08.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.531" endtime="20210715 01:28:08.531"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.531" endtime="20210715 01:28:08.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.531" endtime="20210715 01:28:08.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.531" endtime="20210715 01:28:08.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.531" endtime="20210715 01:28:08.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.532" endtime="20210715 01:28:08.532"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.532" endtime="20210715 01:28:08.532"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.532" endtime="20210715 01:28:08.532"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.532" endtime="20210715 01:28:08.532"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.532" endtime="20210715 01:28:08.532"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.532" endtime="20210715 01:28:08.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.533" endtime="20210715 01:28:08.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.533" endtime="20210715 01:28:08.533"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.533" endtime="20210715 01:28:08.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.533" endtime="20210715 01:28:08.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.533" endtime="20210715 01:28:08.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.534" endtime="20210715 01:28:08.534"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.534" endtime="20210715 01:28:08.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.534" endtime="20210715 01:28:08.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.534" endtime="20210715 01:28:08.534"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.534" endtime="20210715 01:28:08.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.534" endtime="20210715 01:28:08.534"/>
</kw>
<status status="FAIL" starttime="20210715 01:24:35.214" endtime="20210715 01:28:08.535"/>
</kw>
<status status="FAIL" starttime="20210715 01:24:35.214" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.535" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.535" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.535" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.535" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.535" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.535" endtime="20210715 01:28:08.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.536" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.537" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.537" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.537" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.537" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.537" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.537" endtime="20210715 01:28:08.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:28:08.538" endtime="20210715 01:28:08.538"/>
</kw>
<status status="FAIL" starttime="20210715 01:23:08.527" endtime="20210715 01:28:08.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210715 01:23:08.527" endtime="20210715 01:28:08.539">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210715 01:23:08.505" endtime="20210715 01:28:08.541"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210715 01:28:08.558" level="INFO">${random} = 67970</msg>
<status status="PASS" starttime="20210715 01:28:08.557" endtime="20210715 01:28:08.558"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:28:08.559" level="INFO">${prefix} = 67970</msg>
<status status="PASS" starttime="20210715 01:28:08.559" endtime="20210715 01:28:08.560"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.557" endtime="20210715 01:28:08.560"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:08.569" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:08.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:08.573" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:28:08.565" endtime="20210715 01:28:08.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:08.575" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:28:08.574" endtime="20210715 01:28:08.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:08.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:08.575" endtime="20210715 01:28:08.576"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.564" endtime="20210715 01:28:08.577"/>
</kw>
<msg timestamp="20210715 01:28:08.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:08.564" endtime="20210715 01:28:08.577"/>
</kw>
<msg timestamp="20210715 01:28:08.578" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:28:08.563" endtime="20210715 01:28:08.578"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:28:08.581" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:28:08.578" endtime="20210715 01:28:08.581"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:08.586" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:08.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:08.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:28:08.584" endtime="20210715 01:28:08.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:08.669" level="INFO"/>
<status status="PASS" starttime="20210715 01:28:08.668" endtime="20210715 01:28:08.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:08.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:08.669" endtime="20210715 01:28:08.670"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.583" endtime="20210715 01:28:08.671"/>
</kw>
<msg timestamp="20210715 01:28:08.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:08.583" endtime="20210715 01:28:08.671"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.582" endtime="20210715 01:28:08.671"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.582" endtime="20210715 01:28:08.671"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.562" endtime="20210715 01:28:08.671"/>
</kw>
<status status="PASS" starttime="20210715 01:28:08.561" endtime="20210715 01:28:08.671"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:08.690" level="INFO">Running command 'ozone sh volume info o3://om:9862/67970-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:14.546" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:28:14.547" level="INFO">${output} = VOLUME_NOT_FOUND Volume 67970-rpcwoport is not found</msg>
<status status="PASS" starttime="20210715 01:28:08.673" endtime="20210715 01:28:14.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:14.549" level="INFO">VOLUME_NOT_FOUND Volume 67970-rpcwoport is not found</msg>
<status status="PASS" starttime="20210715 01:28:14.548" endtime="20210715 01:28:14.550"/>
</kw>
<msg timestamp="20210715 01:28:14.551" level="INFO">${result} = VOLUME_NOT_FOUND Volume 67970-rpcwoport is not found</msg>
<status status="PASS" starttime="20210715 01:28:08.672" endtime="20210715 01:28:14.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:28:14.551" endtime="20210715 01:28:14.552"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:14.557" level="INFO">Running command 'ozone sh volume create o3://om:9862/67970-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:20.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:20.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:28:14.554" endtime="20210715 01:28:20.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:20.698" level="INFO"/>
<status status="PASS" starttime="20210715 01:28:20.697" endtime="20210715 01:28:20.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:20.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:20.698" endtime="20210715 01:28:20.699"/>
</kw>
<status status="PASS" starttime="20210715 01:28:14.553" endtime="20210715 01:28:20.700"/>
</kw>
<msg timestamp="20210715 01:28:20.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:14.553" endtime="20210715 01:28:20.700"/>
</kw>
<msg timestamp="20210715 01:28:20.700" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210715 01:28:14.552" endtime="20210715 01:28:20.700"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:28:20.700" endtime="20210715 01:28:20.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:20.706" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="67970-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:27.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:27.355" level="INFO">${output} = {
  "metadata": {},
  "name": "67970-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210715 01:28:20.704" endtime="20210715 01:28:27.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:27.357" level="INFO">{
  "metadata": {},
  "name": "67970-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:28:20.615Z",
  "modificationTime": "2021-07-15T01:28:20.615Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:28:27.356" endtime="20210715 01:28:27.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:27.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:27.357" endtime="20210715 01:28:27.357"/>
</kw>
<status status="PASS" starttime="20210715 01:28:20.703" endtime="20210715 01:28:27.358"/>
</kw>
<msg timestamp="20210715 01:28:27.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:20.703" endtime="20210715 01:28:27.358"/>
</kw>
<msg timestamp="20210715 01:28:27.358" level="INFO">${result} = {
  "metadata": {},
  "name": "67970-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210715 01:28:20.701" endtime="20210715 01:28:27.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:28:27.358" endtime="20210715 01:28:27.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:27.363" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="67970-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:32.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:32.858" level="INFO">${output} = {
  "metadata": {},
  "name": "67970-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210715 01:28:27.361" endtime="20210715 01:28:32.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:32.859" level="INFO">{
  "metadata": {},
  "name": "67970-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:28:20.615Z",
  "modificationTime": "2021-07-15T01:28:20.615Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:28:32.859" endtime="20210715 01:28:32.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:32.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:32.860" endtime="20210715 01:28:32.861"/>
</kw>
<status status="PASS" starttime="20210715 01:28:27.360" endtime="20210715 01:28:32.861"/>
</kw>
<msg timestamp="20210715 01:28:32.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:27.360" endtime="20210715 01:28:32.861"/>
</kw>
<msg timestamp="20210715 01:28:32.861" level="INFO">${result} = {
  "metadata": {},
  "name": "67970-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210715 01:28:27.359" endtime="20210715 01:28:32.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:28:32.861" endtime="20210715 01:28:32.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:32.865" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/67970-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:38.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:38.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:28:32.863" endtime="20210715 01:28:38.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:38.235" level="INFO"/>
<status status="PASS" starttime="20210715 01:28:38.235" endtime="20210715 01:28:38.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:38.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:38.236" endtime="20210715 01:28:38.236"/>
</kw>
<status status="PASS" starttime="20210715 01:28:32.863" endtime="20210715 01:28:38.236"/>
</kw>
<msg timestamp="20210715 01:28:38.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:32.862" endtime="20210715 01:28:38.237"/>
</kw>
<status status="PASS" starttime="20210715 01:28:32.862" endtime="20210715 01:28:38.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:38.241" level="INFO">Running command 'ozone sh volume info o3://om:9862/67970-rpcwoport | jq -r '. | select(.name=="67970-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:46.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:46.039" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:28:38.239" endtime="20210715 01:28:46.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:46.042" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:28:46.040" endtime="20210715 01:28:46.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:46.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:46.042" endtime="20210715 01:28:46.043"/>
</kw>
<status status="PASS" starttime="20210715 01:28:38.238" endtime="20210715 01:28:46.044"/>
</kw>
<msg timestamp="20210715 01:28:46.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:38.238" endtime="20210715 01:28:46.044"/>
</kw>
<msg timestamp="20210715 01:28:46.044" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:28:38.237" endtime="20210715 01:28:46.044"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:28:46.044" endtime="20210715 01:28:46.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:46.051" level="INFO">Running command 'ozone sh bucket create o3://om:9862/67970-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:52.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:52.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:28:46.048" endtime="20210715 01:28:52.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:52.600" level="INFO"/>
<status status="PASS" starttime="20210715 01:28:52.599" endtime="20210715 01:28:52.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:52.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:52.600" endtime="20210715 01:28:52.600"/>
</kw>
<status status="PASS" starttime="20210715 01:28:46.047" endtime="20210715 01:28:52.601"/>
</kw>
<msg timestamp="20210715 01:28:52.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:46.047" endtime="20210715 01:28:52.601"/>
</kw>
<status status="PASS" starttime="20210715 01:28:46.045" endtime="20210715 01:28:52.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:52.606" level="INFO">Running command 'ozone sh bucket info o3://om:9862/67970-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:28:59.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:28:59.669" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210715 01:28:52.603" endtime="20210715 01:28:59.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:28:59.673" level="INFO">DISK</msg>
<status status="PASS" starttime="20210715 01:28:59.670" endtime="20210715 01:28:59.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:28:59.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:28:59.673" endtime="20210715 01:28:59.675"/>
</kw>
<status status="PASS" starttime="20210715 01:28:52.603" endtime="20210715 01:28:59.675"/>
</kw>
<msg timestamp="20210715 01:28:59.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:52.602" endtime="20210715 01:28:59.676"/>
</kw>
<msg timestamp="20210715 01:28:59.676" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210715 01:28:52.601" endtime="20210715 01:28:59.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:28:59.677" endtime="20210715 01:28:59.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:28:59.685" level="INFO">Running command 'ozone sh bucket info o3://om:9862/67970-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:29:06.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:29:06.265" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:28:59.682" endtime="20210715 01:29:06.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:29:06.267" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:29:06.266" endtime="20210715 01:29:06.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:29:06.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:29:06.267" endtime="20210715 01:29:06.267"/>
</kw>
<status status="PASS" starttime="20210715 01:28:59.681" endtime="20210715 01:29:06.268"/>
</kw>
<msg timestamp="20210715 01:29:06.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:28:59.680" endtime="20210715 01:29:06.268"/>
</kw>
<msg timestamp="20210715 01:29:06.268" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:28:59.678" endtime="20210715 01:29:06.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:29:06.268" endtime="20210715 01:29:06.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:29:06.273" level="INFO">Running command 'ozone sh bucket info o3://om:9862/67970-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:29:12.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:29:12.797" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210715 01:29:06.270" endtime="20210715 01:29:12.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:29:12.799" level="INFO">100</msg>
<status status="PASS" starttime="20210715 01:29:12.798" endtime="20210715 01:29:12.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:29:12.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:29:12.799" endtime="20210715 01:29:12.799"/>
</kw>
<status status="PASS" starttime="20210715 01:29:06.270" endtime="20210715 01:29:12.800"/>
</kw>
<msg timestamp="20210715 01:29:12.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:29:06.270" endtime="20210715 01:29:12.800"/>
</kw>
<msg timestamp="20210715 01:29:12.800" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210715 01:29:06.269" endtime="20210715 01:29:12.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:29:12.800" endtime="20210715 01:29:12.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:29:12.804" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/67970-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:29:18.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:29:18.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:29:12.802" endtime="20210715 01:29:18.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:29:18.987" level="INFO"/>
<status status="PASS" starttime="20210715 01:29:18.986" endtime="20210715 01:29:18.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:29:18.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:29:18.987" endtime="20210715 01:29:18.987"/>
</kw>
<status status="PASS" starttime="20210715 01:29:12.802" endtime="20210715 01:29:18.988"/>
</kw>
<msg timestamp="20210715 01:29:18.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:29:12.801" endtime="20210715 01:29:18.988"/>
</kw>
<status status="PASS" starttime="20210715 01:29:12.801" endtime="20210715 01:29:18.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:29:18.992" level="INFO">Running command 'ozone sh bucket info o3://om:9862/67970-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:29:25.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:29:25.254" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:29:18.990" endtime="20210715 01:29:25.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:29:25.259" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210715 01:29:25.255" endtime="20210715 01:29:25.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:29:25.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:29:25.259" endtime="20210715 01:29:25.260"/>
</kw>
<status status="PASS" starttime="20210715 01:29:18.989" endtime="20210715 01:29:25.261"/>
</kw>
<msg timestamp="20210715 01:29:25.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:29:18.989" endtime="20210715 01:29:25.261"/>
</kw>
<msg timestamp="20210715 01:29:25.262" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:29:18.988" endtime="20210715 01:29:25.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:29:25.262" endtime="20210715 01:29:25.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:29:25.270" level="INFO">Running command 'ozone sh bucket info o3://om:9862/67970-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:29:31.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:29:31.919" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210715 01:29:25.266" endtime="20210715 01:29:31.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:29:31.921" level="INFO">1000</msg>
<status status="PASS" starttime="20210715 01:29:31.920" endtime="20210715 01:29:31.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:29:31.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:29:31.921" endtime="20210715 01:29:31.922"/>
</kw>
<status status="PASS" starttime="20210715 01:29:25.266" endtime="20210715 01:29:31.922"/>
</kw>
<msg timestamp="20210715 01:29:31.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:29:25.266" endtime="20210715 01:29:31.922"/>
</kw>
<msg timestamp="20210715 01:29:31.922" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210715 01:29:25.265" endtime="20210715 01:29:31.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:29:31.922" endtime="20210715 01:29:31.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:29:31.927" level="INFO">Running command 'ozone sh bucket list o3://om:9862/67970-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:29:38.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:29:38.125" level="INFO">${output} = 67970-rpcwoport</msg>
<status status="PASS" starttime="20210715 01:29:31.925" endtime="20210715 01:29:38.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:29:38.126" level="INFO">67970-rpcwoport</msg>
<status status="PASS" starttime="20210715 01:29:38.125" endtime="20210715 01:29:38.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:29:38.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:29:38.126" endtime="20210715 01:29:38.127"/>
</kw>
<status status="PASS" starttime="20210715 01:29:31.924" endtime="20210715 01:29:38.127"/>
</kw>
<msg timestamp="20210715 01:29:38.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:29:31.924" endtime="20210715 01:29:38.127"/>
</kw>
<msg timestamp="20210715 01:29:38.128" level="INFO">${result} = 67970-rpcwoport</msg>
<status status="PASS" starttime="20210715 01:29:31.923" endtime="20210715 01:29:38.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:29:38.128" endtime="20210715 01:29:38.128"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:29:38.152" level="INFO">Running command 'ozone sh key put o3://om:9862/67970-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:32:49.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:32:49.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:29:38.149" endtime="20210715 01:32:49.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:32:49.575" level="INFO"/>
<status status="PASS" starttime="20210715 01:32:49.574" endtime="20210715 01:32:49.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:32:49.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:32:49.575" endtime="20210715 01:32:49.576"/>
</kw>
<status status="PASS" starttime="20210715 01:29:38.130" endtime="20210715 01:32:49.576"/>
</kw>
<msg timestamp="20210715 01:32:49.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:29:38.130" endtime="20210715 01:32:49.576"/>
</kw>
<status status="PASS" starttime="20210715 01:29:38.129" endtime="20210715 01:32:49.577"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:32:49.580" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:32:49.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:32:49.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:32:49.578" endtime="20210715 01:32:49.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:32:49.584" level="INFO"/>
<status status="PASS" starttime="20210715 01:32:49.584" endtime="20210715 01:32:49.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:32:49.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:32:49.584" endtime="20210715 01:32:49.585"/>
</kw>
<status status="PASS" starttime="20210715 01:32:49.578" endtime="20210715 01:32:49.586"/>
</kw>
<msg timestamp="20210715 01:32:49.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:32:49.577" endtime="20210715 01:32:49.586"/>
</kw>
<status status="PASS" starttime="20210715 01:32:49.577" endtime="20210715 01:32:49.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:32:49.591" level="INFO">Running command 'ozone sh key get o3://om:9862/67970-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:32:58.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:32:58.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:32:49.588" endtime="20210715 01:32:58.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:32:58.550" level="INFO"/>
<status status="PASS" starttime="20210715 01:32:58.550" endtime="20210715 01:32:58.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:32:58.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:32:58.551" endtime="20210715 01:32:58.551"/>
</kw>
<status status="PASS" starttime="20210715 01:32:49.587" endtime="20210715 01:32:58.552"/>
</kw>
<msg timestamp="20210715 01:32:58.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:32:49.587" endtime="20210715 01:32:58.552"/>
</kw>
<status status="PASS" starttime="20210715 01:32:49.586" endtime="20210715 01:32:58.552"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:32:58.557" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:32:58.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:32:58.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:32:58.554" endtime="20210715 01:32:58.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:32:58.564" level="INFO"/>
<status status="PASS" starttime="20210715 01:32:58.562" endtime="20210715 01:32:58.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:32:58.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:32:58.564" endtime="20210715 01:32:58.566"/>
</kw>
<status status="PASS" starttime="20210715 01:32:58.553" endtime="20210715 01:32:58.566"/>
</kw>
<msg timestamp="20210715 01:32:58.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:32:58.553" endtime="20210715 01:32:58.566"/>
</kw>
<status status="PASS" starttime="20210715 01:32:58.552" endtime="20210715 01:32:58.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:32:58.572" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/67970-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:08.561" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:32:58.570" endtime="20210715 01:33:08.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.561" endtime="20210715 01:33:08.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.562" endtime="20210715 01:33:08.562"/>
</kw>
<status status="FAIL" starttime="20210715 01:32:58.569" endtime="20210715 01:33:08.562"/>
</kw>
<msg timestamp="20210715 01:33:08.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:32:58.568" endtime="20210715 01:33:08.562"/>
</kw>
<status status="FAIL" starttime="20210715 01:32:58.567" endtime="20210715 01:33:08.562"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.563" endtime="20210715 01:33:08.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.563" endtime="20210715 01:33:08.563"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.563" endtime="20210715 01:33:08.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.563" endtime="20210715 01:33:08.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.563" endtime="20210715 01:33:08.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.563" endtime="20210715 01:33:08.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.564" endtime="20210715 01:33:08.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.565" endtime="20210715 01:33:08.565"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.565" endtime="20210715 01:33:08.565"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.565" endtime="20210715 01:33:08.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.565" endtime="20210715 01:33:08.565"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.565" endtime="20210715 01:33:08.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.566" endtime="20210715 01:33:08.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.566" endtime="20210715 01:33:08.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.566" endtime="20210715 01:33:08.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.566" endtime="20210715 01:33:08.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.566" endtime="20210715 01:33:08.566"/>
</kw>
<status status="FAIL" starttime="20210715 01:29:38.129" endtime="20210715 01:33:08.566"/>
</kw>
<status status="FAIL" starttime="20210715 01:29:38.128" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.567" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.567" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.567" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.567" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.567" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.567" endtime="20210715 01:33:08.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.568" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.569" endtime="20210715 01:33:08.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.570" endtime="20210715 01:33:08.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.570" endtime="20210715 01:33:08.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:33:08.570" endtime="20210715 01:33:08.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.570" endtime="20210715 01:33:08.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:33:08.570" endtime="20210715 01:33:08.570"/>
</kw>
<status status="FAIL" starttime="20210715 01:28:08.671" endtime="20210715 01:33:08.570"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210715 01:28:08.560" endtime="20210715 01:33:08.574">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:08.591" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:08.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:08.592" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:33:08.580" endtime="20210715 01:33:08.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:08.593" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:33:08.593" endtime="20210715 01:33:08.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:08.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:08.594" endtime="20210715 01:33:08.595"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.579" endtime="20210715 01:33:08.595"/>
</kw>
<msg timestamp="20210715 01:33:08.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:08.579" endtime="20210715 01:33:08.596"/>
</kw>
<msg timestamp="20210715 01:33:08.596" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:33:08.578" endtime="20210715 01:33:08.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:33:08.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:33:08.598" endtime="20210715 01:33:08.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:08.609" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:08.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:08.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:33:08.601" endtime="20210715 01:33:08.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:08.646" level="INFO"/>
<status status="PASS" starttime="20210715 01:33:08.645" endtime="20210715 01:33:08.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:08.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:08.646" endtime="20210715 01:33:08.647"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.600" endtime="20210715 01:33:08.647"/>
</kw>
<msg timestamp="20210715 01:33:08.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:08.600" endtime="20210715 01:33:08.647"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.599" endtime="20210715 01:33:08.647"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.599" endtime="20210715 01:33:08.647"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.578" endtime="20210715 01:33:08.648"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.577" endtime="20210715 01:33:08.648"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:08.653" level="INFO">Running command 'ozone sh volume create o3://om:9862/67970-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:15.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:15.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:33:08.650" endtime="20210715 01:33:15.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:15.474" level="INFO"/>
<status status="PASS" starttime="20210715 01:33:15.473" endtime="20210715 01:33:15.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:15.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:15.474" endtime="20210715 01:33:15.475"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.650" endtime="20210715 01:33:15.475"/>
</kw>
<msg timestamp="20210715 01:33:15.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:08.650" endtime="20210715 01:33:15.475"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.649" endtime="20210715 01:33:15.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:15.481" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/67970-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:22.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:22.662" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:33:15.477" endtime="20210715 01:33:22.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:22.663" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:33:22.662" endtime="20210715 01:33:22.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:22.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:22.664" endtime="20210715 01:33:22.664"/>
</kw>
<status status="PASS" starttime="20210715 01:33:15.476" endtime="20210715 01:33:22.665"/>
</kw>
<msg timestamp="20210715 01:33:22.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:15.476" endtime="20210715 01:33:22.665"/>
</kw>
<msg timestamp="20210715 01:33:22.665" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:33:15.475" endtime="20210715 01:33:22.665"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:33:22.665" endtime="20210715 01:33:22.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:22.670" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/67970-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:28.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:28.851" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210715 01:33:22.667" endtime="20210715 01:33:28.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:28.852" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210715 01:33:28.852" endtime="20210715 01:33:28.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:28.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:28.853" endtime="20210715 01:33:28.853"/>
</kw>
<status status="PASS" starttime="20210715 01:33:22.667" endtime="20210715 01:33:28.854"/>
</kw>
<msg timestamp="20210715 01:33:28.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:22.667" endtime="20210715 01:33:28.854"/>
</kw>
<msg timestamp="20210715 01:33:28.854" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210715 01:33:22.666" endtime="20210715 01:33:28.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:28.858" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/67970-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:34.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:34.905" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:33:28.856" endtime="20210715 01:33:34.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:34.906" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:33:34.905" endtime="20210715 01:33:34.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:34.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:34.906" endtime="20210715 01:33:34.907"/>
</kw>
<status status="PASS" starttime="20210715 01:33:28.855" endtime="20210715 01:33:34.907"/>
</kw>
<msg timestamp="20210715 01:33:34.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:28.855" endtime="20210715 01:33:34.907"/>
</kw>
<msg timestamp="20210715 01:33:34.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:33:28.854" endtime="20210715 01:33:34.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:33:34.908" endtime="20210715 01:33:34.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:34.915" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/67970-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:41.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:41.169" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:33:34.913" endtime="20210715 01:33:41.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:41.170" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:33:41.169" endtime="20210715 01:33:41.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:41.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:41.171" endtime="20210715 01:33:41.172"/>
</kw>
<status status="PASS" starttime="20210715 01:33:34.912" endtime="20210715 01:33:41.172"/>
</kw>
<msg timestamp="20210715 01:33:41.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:34.911" endtime="20210715 01:33:41.173"/>
</kw>
<msg timestamp="20210715 01:33:41.173" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:33:34.909" endtime="20210715 01:33:41.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:41.179" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/67970-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:47.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:47.555" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:33:41.176" endtime="20210715 01:33:47.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:47.556" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:33:47.555" endtime="20210715 01:33:47.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:47.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:47.557" endtime="20210715 01:33:47.558"/>
</kw>
<status status="PASS" starttime="20210715 01:33:41.175" endtime="20210715 01:33:47.558"/>
</kw>
<msg timestamp="20210715 01:33:47.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:41.175" endtime="20210715 01:33:47.558"/>
</kw>
<msg timestamp="20210715 01:33:47.559" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:33:41.173" endtime="20210715 01:33:47.559"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:33:47.559" endtime="20210715 01:33:47.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:47.565" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/67970-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:33:53.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:33:53.603" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:33:47.562" endtime="20210715 01:33:53.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:33:53.605" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:33:53.604" endtime="20210715 01:33:53.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:33:53.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:33:53.607" endtime="20210715 01:33:53.609"/>
</kw>
<status status="PASS" starttime="20210715 01:33:47.561" endtime="20210715 01:33:53.609"/>
</kw>
<msg timestamp="20210715 01:33:53.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:47.561" endtime="20210715 01:33:53.610"/>
</kw>
<msg timestamp="20210715 01:33:53.610" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:33:47.560" endtime="20210715 01:33:53.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:33:53.615" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/67970-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:00.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:00.695" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210715 01:33:53.612" endtime="20210715 01:34:00.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:00.698" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:34:00.695" endtime="20210715 01:34:00.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:00.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:00.698" endtime="20210715 01:34:00.699"/>
</kw>
<status status="PASS" starttime="20210715 01:33:53.611" endtime="20210715 01:34:00.699"/>
</kw>
<msg timestamp="20210715 01:34:00.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:33:53.611" endtime="20210715 01:34:00.699"/>
</kw>
<msg timestamp="20210715 01:34:00.700" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210715 01:33:53.610" endtime="20210715 01:34:00.700"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:00.700" endtime="20210715 01:34:00.700"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:00.700" endtime="20210715 01:34:00.701"/>
</kw>
<status status="PASS" starttime="20210715 01:33:08.648" endtime="20210715 01:34:00.701"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:33:08.577" endtime="20210715 01:34:00.704"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:00.714" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:00.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:00.719" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:34:00.710" endtime="20210715 01:34:00.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:00.721" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:34:00.720" endtime="20210715 01:34:00.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:00.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:00.721" endtime="20210715 01:34:00.721"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.709" endtime="20210715 01:34:00.722"/>
</kw>
<msg timestamp="20210715 01:34:00.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:00.709" endtime="20210715 01:34:00.722"/>
</kw>
<msg timestamp="20210715 01:34:00.722" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:34:00.709" endtime="20210715 01:34:00.722"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:34:00.723" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:34:00.722" endtime="20210715 01:34:00.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:00.729" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:00.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:00.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:34:00.727" endtime="20210715 01:34:00.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:00.755" level="INFO"/>
<status status="PASS" starttime="20210715 01:34:00.754" endtime="20210715 01:34:00.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:00.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:00.755" endtime="20210715 01:34:00.756"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.725" endtime="20210715 01:34:00.756"/>
</kw>
<msg timestamp="20210715 01:34:00.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:00.724" endtime="20210715 01:34:00.756"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.723" endtime="20210715 01:34:00.757"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.723" endtime="20210715 01:34:00.757"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.708" endtime="20210715 01:34:00.757"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.707" endtime="20210715 01:34:00.757"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:00.761" level="INFO">Running command 'ozone sh bucket create o3://om:9862/67970-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:07.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:07.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:34:00.759" endtime="20210715 01:34:07.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:07.143" level="INFO"/>
<status status="PASS" starttime="20210715 01:34:07.141" endtime="20210715 01:34:07.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:07.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:07.144" endtime="20210715 01:34:07.146"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.758" endtime="20210715 01:34:07.147"/>
</kw>
<msg timestamp="20210715 01:34:07.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:00.758" endtime="20210715 01:34:07.147"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.758" endtime="20210715 01:34:07.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:07.155" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/67970-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:13.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:13.705" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:34:07.152" endtime="20210715 01:34:13.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:13.707" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:34:13.706" endtime="20210715 01:34:13.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:13.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:13.707" endtime="20210715 01:34:13.708"/>
</kw>
<status status="PASS" starttime="20210715 01:34:07.151" endtime="20210715 01:34:13.709"/>
</kw>
<msg timestamp="20210715 01:34:13.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:07.150" endtime="20210715 01:34:13.709"/>
</kw>
<msg timestamp="20210715 01:34:13.710" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:34:07.148" endtime="20210715 01:34:13.710"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:13.710" endtime="20210715 01:34:13.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:13.717" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/67970-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:19.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:19.902" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210715 01:34:13.714" endtime="20210715 01:34:19.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:19.904" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210715 01:34:19.903" endtime="20210715 01:34:19.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:19.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:19.905" endtime="20210715 01:34:19.906"/>
</kw>
<status status="PASS" starttime="20210715 01:34:13.713" endtime="20210715 01:34:19.907"/>
</kw>
<msg timestamp="20210715 01:34:19.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:13.713" endtime="20210715 01:34:19.907"/>
</kw>
<msg timestamp="20210715 01:34:19.908" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210715 01:34:13.711" endtime="20210715 01:34:19.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:19.912" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/67970-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:26.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:26.114" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:34:19.909" endtime="20210715 01:34:26.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:26.115" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:34:26.114" endtime="20210715 01:34:26.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:26.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:26.115" endtime="20210715 01:34:26.116"/>
</kw>
<status status="PASS" starttime="20210715 01:34:19.909" endtime="20210715 01:34:26.116"/>
</kw>
<msg timestamp="20210715 01:34:26.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:19.908" endtime="20210715 01:34:26.116"/>
</kw>
<msg timestamp="20210715 01:34:26.117" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:34:19.908" endtime="20210715 01:34:26.117"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:26.117" endtime="20210715 01:34:26.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:26.125" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/67970-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:32.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:32.458" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:34:26.122" endtime="20210715 01:34:32.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:32.460" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:34:32.459" endtime="20210715 01:34:32.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:32.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:32.460" endtime="20210715 01:34:32.462"/>
</kw>
<status status="PASS" starttime="20210715 01:34:26.121" endtime="20210715 01:34:32.462"/>
</kw>
<msg timestamp="20210715 01:34:32.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:26.120" endtime="20210715 01:34:32.463"/>
</kw>
<msg timestamp="20210715 01:34:32.463" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:34:26.119" endtime="20210715 01:34:32.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:32.469" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/67970-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:38.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:38.807" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:34:32.466" endtime="20210715 01:34:38.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:38.809" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:34:38.808" endtime="20210715 01:34:38.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:38.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:38.810" endtime="20210715 01:34:38.812"/>
</kw>
<status status="PASS" starttime="20210715 01:34:32.465" endtime="20210715 01:34:38.812"/>
</kw>
<msg timestamp="20210715 01:34:38.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:32.465" endtime="20210715 01:34:38.813"/>
</kw>
<msg timestamp="20210715 01:34:38.814" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:34:32.463" endtime="20210715 01:34:38.814"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:38.814" endtime="20210715 01:34:38.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:38.819" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/67970-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:45.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:45.001" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:34:38.816" endtime="20210715 01:34:45.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:45.003" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:34:45.001" endtime="20210715 01:34:45.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:45.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:45.003" endtime="20210715 01:34:45.004"/>
</kw>
<status status="PASS" starttime="20210715 01:34:38.816" endtime="20210715 01:34:45.005"/>
</kw>
<msg timestamp="20210715 01:34:45.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:38.815" endtime="20210715 01:34:45.005"/>
</kw>
<msg timestamp="20210715 01:34:45.005" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:34:38.815" endtime="20210715 01:34:45.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:45.012" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/67970-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:51.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:51.897" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210715 01:34:45.009" endtime="20210715 01:34:51.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:51.898" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:34:51.898" endtime="20210715 01:34:51.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:51.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:51.899" endtime="20210715 01:34:51.900"/>
</kw>
<status status="PASS" starttime="20210715 01:34:45.008" endtime="20210715 01:34:51.900"/>
</kw>
<msg timestamp="20210715 01:34:51.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:45.007" endtime="20210715 01:34:51.900"/>
</kw>
<msg timestamp="20210715 01:34:51.900" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210715 01:34:45.006" endtime="20210715 01:34:51.901"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:51.901" endtime="20210715 01:34:51.901"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:34:51.901" endtime="20210715 01:34:51.902"/>
</kw>
<status status="PASS" starttime="20210715 01:34:00.757" endtime="20210715 01:34:51.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:34:00.706" endtime="20210715 01:34:51.902"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:51.910" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:51.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:51.915" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:34:51.907" endtime="20210715 01:34:51.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:51.917" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:34:51.916" endtime="20210715 01:34:51.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:51.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:51.918" endtime="20210715 01:34:51.918"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.906" endtime="20210715 01:34:51.919"/>
</kw>
<msg timestamp="20210715 01:34:51.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:51.906" endtime="20210715 01:34:51.919"/>
</kw>
<msg timestamp="20210715 01:34:51.920" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:34:51.906" endtime="20210715 01:34:51.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:34:51.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:34:51.920" endtime="20210715 01:34:51.921"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:51.926" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:34:51.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:34:51.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:34:51.923" endtime="20210715 01:34:51.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:34:51.935" level="INFO"/>
<status status="PASS" starttime="20210715 01:34:51.934" endtime="20210715 01:34:51.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:34:51.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:34:51.935" endtime="20210715 01:34:51.936"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.923" endtime="20210715 01:34:51.936"/>
</kw>
<msg timestamp="20210715 01:34:51.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:51.923" endtime="20210715 01:34:51.936"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.922" endtime="20210715 01:34:51.937"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.921" endtime="20210715 01:34:51.937"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.905" endtime="20210715 01:34:51.937"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.904" endtime="20210715 01:34:51.937"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:34:51.941" level="INFO">Running command 'ozone sh key put o3://om:9862/67970-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:37:59.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:37:59.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:34:51.939" endtime="20210715 01:37:59.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:37:59.429" level="INFO"/>
<status status="PASS" starttime="20210715 01:37:59.428" endtime="20210715 01:37:59.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:37:59.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:37:59.430" endtime="20210715 01:37:59.431"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.939" endtime="20210715 01:37:59.431"/>
</kw>
<msg timestamp="20210715 01:37:59.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:34:51.938" endtime="20210715 01:37:59.432"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.938" endtime="20210715 01:37:59.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:37:59.437" level="INFO">Running command 'ozone sh key getacl o3://om:9862/67970-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:05.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:05.818" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:37:59.435" endtime="20210715 01:38:05.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:05.819" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:38:05.818" endtime="20210715 01:38:05.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:05.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:05.819" endtime="20210715 01:38:05.820"/>
</kw>
<status status="PASS" starttime="20210715 01:37:59.434" endtime="20210715 01:38:05.820"/>
</kw>
<msg timestamp="20210715 01:38:05.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:37:59.434" endtime="20210715 01:38:05.820"/>
</kw>
<msg timestamp="20210715 01:38:05.821" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:37:59.432" endtime="20210715 01:38:05.821"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:38:05.821" endtime="20210715 01:38:05.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:05.829" level="INFO">Running command 'ozone sh key addacl o3://om:9862/67970-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:11.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:11.845" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:38:05.826" endtime="20210715 01:38:11.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:11.846" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:38:11.845" endtime="20210715 01:38:11.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:11.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:11.846" endtime="20210715 01:38:11.847"/>
</kw>
<status status="PASS" starttime="20210715 01:38:05.826" endtime="20210715 01:38:11.847"/>
</kw>
<msg timestamp="20210715 01:38:11.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:05.825" endtime="20210715 01:38:11.847"/>
</kw>
<msg timestamp="20210715 01:38:11.848" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210715 01:38:05.824" endtime="20210715 01:38:11.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:11.852" level="INFO">Running command 'ozone sh key getacl o3://om:9862/67970-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:17.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:17.809" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:38:11.849" endtime="20210715 01:38:17.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:17.810" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:38:17.810" endtime="20210715 01:38:17.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:17.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:17.811" endtime="20210715 01:38:17.811"/>
</kw>
<status status="PASS" starttime="20210715 01:38:11.849" endtime="20210715 01:38:17.812"/>
</kw>
<msg timestamp="20210715 01:38:17.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:11.849" endtime="20210715 01:38:17.812"/>
</kw>
<msg timestamp="20210715 01:38:17.812" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:38:11.848" endtime="20210715 01:38:17.812"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:38:17.812" endtime="20210715 01:38:17.813"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:17.817" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/67970-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:23.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:23.633" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:38:17.815" endtime="20210715 01:38:23.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:23.635" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:38:23.634" endtime="20210715 01:38:23.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:23.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:23.635" endtime="20210715 01:38:23.636"/>
</kw>
<status status="PASS" starttime="20210715 01:38:17.814" endtime="20210715 01:38:23.637"/>
</kw>
<msg timestamp="20210715 01:38:23.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:17.814" endtime="20210715 01:38:23.637"/>
</kw>
<msg timestamp="20210715 01:38:23.638" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210715 01:38:17.813" endtime="20210715 01:38:23.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:23.644" level="INFO">Running command 'ozone sh key getacl o3://om:9862/67970-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:30.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:30.951" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:38:23.640" endtime="20210715 01:38:30.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:30.952" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:38:30.951" endtime="20210715 01:38:30.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:30.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:30.952" endtime="20210715 01:38:30.953"/>
</kw>
<status status="PASS" starttime="20210715 01:38:23.639" endtime="20210715 01:38:30.953"/>
</kw>
<msg timestamp="20210715 01:38:30.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:23.639" endtime="20210715 01:38:30.953"/>
</kw>
<msg timestamp="20210715 01:38:30.953" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:38:23.638" endtime="20210715 01:38:30.954"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:38:30.954" endtime="20210715 01:38:30.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:30.958" level="INFO">Running command 'ozone sh key setacl o3://om:9862/67970-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:36.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:36.614" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:38:30.956" endtime="20210715 01:38:36.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:36.617" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:38:36.615" endtime="20210715 01:38:36.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:36.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:36.617" endtime="20210715 01:38:36.618"/>
</kw>
<status status="PASS" starttime="20210715 01:38:30.955" endtime="20210715 01:38:36.619"/>
</kw>
<msg timestamp="20210715 01:38:36.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:30.955" endtime="20210715 01:38:36.620"/>
</kw>
<msg timestamp="20210715 01:38:36.620" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:38:30.954" endtime="20210715 01:38:36.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:36.628" level="INFO">Running command 'ozone sh key getacl o3://om:9862/67970-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:43.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:43.298" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210715 01:38:36.625" endtime="20210715 01:38:43.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:43.300" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:38:43.298" endtime="20210715 01:38:43.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:43.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:43.300" endtime="20210715 01:38:43.300"/>
</kw>
<status status="PASS" starttime="20210715 01:38:36.623" endtime="20210715 01:38:43.301"/>
</kw>
<msg timestamp="20210715 01:38:43.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:36.623" endtime="20210715 01:38:43.301"/>
</kw>
<msg timestamp="20210715 01:38:43.302" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210715 01:38:36.621" endtime="20210715 01:38:43.302"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:38:43.302" endtime="20210715 01:38:43.302"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:38:43.302" endtime="20210715 01:38:43.303"/>
</kw>
<status status="PASS" starttime="20210715 01:34:51.937" endtime="20210715 01:38:43.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:34:51.903" endtime="20210715 01:38:43.303"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:43.310" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:43.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:43.314" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:38:43.308" endtime="20210715 01:38:43.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:43.315" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:38:43.315" endtime="20210715 01:38:43.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:43.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:43.316" endtime="20210715 01:38:43.316"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.307" endtime="20210715 01:38:43.316"/>
</kw>
<msg timestamp="20210715 01:38:43.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:43.307" endtime="20210715 01:38:43.317"/>
</kw>
<msg timestamp="20210715 01:38:43.317" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:38:43.307" endtime="20210715 01:38:43.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:38:43.318" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:38:43.317" endtime="20210715 01:38:43.318"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:43.322" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:43.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:43.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:38:43.319" endtime="20210715 01:38:43.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:43.363" level="INFO"/>
<status status="PASS" starttime="20210715 01:38:43.362" endtime="20210715 01:38:43.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:43.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:43.363" endtime="20210715 01:38:43.364"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.319" endtime="20210715 01:38:43.364"/>
</kw>
<msg timestamp="20210715 01:38:43.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:43.319" endtime="20210715 01:38:43.365"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.318" endtime="20210715 01:38:43.365"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.318" endtime="20210715 01:38:43.365"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.306" endtime="20210715 01:38:43.365"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.305" endtime="20210715 01:38:43.365"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:43.370" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:49.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:49.560" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210715 01:38:43.367" endtime="20210715 01:38:49.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:49.563" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210715 01:38:49.561" endtime="20210715 01:38:49.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:49.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:49.563" endtime="20210715 01:38:49.565"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.367" endtime="20210715 01:38:49.565"/>
</kw>
<msg timestamp="20210715 01:38:49.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:43.367" endtime="20210715 01:38:49.566"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.366" endtime="20210715 01:38:49.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:49.574" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:38:56.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:38:56.068" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210715 01:38:49.571" endtime="20210715 01:38:56.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:38:56.069" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:38:56.069" endtime="20210715 01:38:56.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:38:56.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:38:56.070" endtime="20210715 01:38:56.070"/>
</kw>
<status status="PASS" starttime="20210715 01:38:49.569" endtime="20210715 01:38:56.070"/>
</kw>
<msg timestamp="20210715 01:38:56.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:49.569" endtime="20210715 01:38:56.070"/>
</kw>
<msg timestamp="20210715 01:38:56.071" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210715 01:38:49.567" endtime="20210715 01:38:56.071"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:38:56.071" endtime="20210715 01:38:56.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:38:56.077" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:39:00.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:39:00.901" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210715 01:38:56.073" endtime="20210715 01:39:00.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:39:00.902" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210715 01:39:00.902" endtime="20210715 01:39:00.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:39:00.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:39:00.903" endtime="20210715 01:39:00.903"/>
</kw>
<status status="PASS" starttime="20210715 01:38:56.073" endtime="20210715 01:39:00.904"/>
</kw>
<msg timestamp="20210715 01:39:00.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:38:56.073" endtime="20210715 01:39:00.904"/>
</kw>
<msg timestamp="20210715 01:39:00.904" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210715 01:38:56.072" endtime="20210715 01:39:00.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:39:00.908" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:39:07.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:39:07.437" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210715 01:39:00.906" endtime="20210715 01:39:07.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:39:07.438" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:39:07.437" endtime="20210715 01:39:07.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:39:07.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:39:07.438" endtime="20210715 01:39:07.439"/>
</kw>
<status status="PASS" starttime="20210715 01:39:00.905" endtime="20210715 01:39:07.439"/>
</kw>
<msg timestamp="20210715 01:39:07.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:39:00.905" endtime="20210715 01:39:07.439"/>
</kw>
<msg timestamp="20210715 01:39:07.440" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210715 01:39:00.904" endtime="20210715 01:39:07.440"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:39:07.440" endtime="20210715 01:39:07.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:39:07.445" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:39:13.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:39:13.620" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:39:07.442" endtime="20210715 01:39:13.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:39:13.623" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:39:13.621" endtime="20210715 01:39:13.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:39:13.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:39:13.623" endtime="20210715 01:39:13.624"/>
</kw>
<status status="PASS" starttime="20210715 01:39:07.441" endtime="20210715 01:39:13.624"/>
</kw>
<msg timestamp="20210715 01:39:13.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:39:07.441" endtime="20210715 01:39:13.625"/>
</kw>
<msg timestamp="20210715 01:39:13.625" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210715 01:39:07.441" endtime="20210715 01:39:13.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:39:13.631" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:39:20.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:39:20.287" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210715 01:39:13.628" endtime="20210715 01:39:20.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:39:20.294" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:39:20.289" endtime="20210715 01:39:20.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:39:20.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:39:20.294" endtime="20210715 01:39:20.296"/>
</kw>
<status status="PASS" starttime="20210715 01:39:13.627" endtime="20210715 01:39:20.297"/>
</kw>
<msg timestamp="20210715 01:39:20.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:39:13.627" endtime="20210715 01:39:20.300"/>
</kw>
<msg timestamp="20210715 01:39:20.312" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210715 01:39:13.626" endtime="20210715 01:39:20.313"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:39:20.313" endtime="20210715 01:39:20.314"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:39:20.314" endtime="20210715 01:39:20.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:39:20.322" level="INFO">Running command 'ozone sh key put o3://om:9862/67970-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:31.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:42:31.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:39:20.318" endtime="20210715 01:42:31.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:31.363" level="INFO"/>
<status status="PASS" starttime="20210715 01:42:31.363" endtime="20210715 01:42:31.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:42:31.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:42:31.364" endtime="20210715 01:42:31.364"/>
</kw>
<status status="PASS" starttime="20210715 01:39:20.317" endtime="20210715 01:42:31.365"/>
</kw>
<msg timestamp="20210715 01:42:31.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:39:20.316" endtime="20210715 01:42:31.365"/>
</kw>
<status status="PASS" starttime="20210715 01:39:20.316" endtime="20210715 01:42:31.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:31.369" level="INFO">Running command 'ozone sh key getacl o3://om:9862/67970-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:37.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:42:37.805" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:42:31.367" endtime="20210715 01:42:37.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:37.807" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210715 01:42:37.806" endtime="20210715 01:42:37.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:42:37.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:42:37.807" endtime="20210715 01:42:37.808"/>
</kw>
<status status="PASS" starttime="20210715 01:42:31.366" endtime="20210715 01:42:37.808"/>
</kw>
<msg timestamp="20210715 01:42:37.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:42:31.366" endtime="20210715 01:42:37.808"/>
</kw>
<msg timestamp="20210715 01:42:37.808" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210715 01:42:31.365" endtime="20210715 01:42:37.808"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:42:37.809" endtime="20210715 01:42:37.810"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210715 01:42:37.810" endtime="20210715 01:42:37.810"/>
</kw>
<status status="PASS" starttime="20210715 01:38:43.365" endtime="20210715 01:42:37.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210715 01:38:43.304" endtime="20210715 01:42:37.811"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:37.818" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:37.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:42:37.823" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:42:37.816" endtime="20210715 01:42:37.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:37.825" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:42:37.824" endtime="20210715 01:42:37.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:42:37.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:42:37.826" endtime="20210715 01:42:37.826"/>
</kw>
<status status="PASS" starttime="20210715 01:42:37.815" endtime="20210715 01:42:37.827"/>
</kw>
<msg timestamp="20210715 01:42:37.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:42:37.814" endtime="20210715 01:42:37.827"/>
</kw>
<msg timestamp="20210715 01:42:37.827" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:42:37.814" endtime="20210715 01:42:37.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:42:37.828" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:42:37.828" endtime="20210715 01:42:37.828"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:37.833" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:37.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:42:37.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:42:37.831" endtime="20210715 01:42:37.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:37.860" level="INFO"/>
<status status="PASS" starttime="20210715 01:42:37.859" endtime="20210715 01:42:37.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:42:37.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:42:37.860" endtime="20210715 01:42:37.860"/>
</kw>
<status status="PASS" starttime="20210715 01:42:37.830" endtime="20210715 01:42:37.861"/>
</kw>
<msg timestamp="20210715 01:42:37.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:42:37.830" endtime="20210715 01:42:37.861"/>
</kw>
<status status="PASS" starttime="20210715 01:42:37.829" endtime="20210715 01:42:37.861"/>
</kw>
<status status="PASS" starttime="20210715 01:42:37.829" endtime="20210715 01:42:37.861"/>
</kw>
<status status="PASS" starttime="20210715 01:42:37.813" endtime="20210715 01:42:37.862"/>
</kw>
<status status="PASS" starttime="20210715 01:42:37.813" endtime="20210715 01:42:37.862"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:37.866" level="INFO">Running command 'ozone sh volume info o3:///67970-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:44.279" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:42:44.279" level="INFO">${output} = VOLUME_NOT_FOUND Volume 67970-rpcwport is not found</msg>
<status status="PASS" starttime="20210715 01:42:37.864" endtime="20210715 01:42:44.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:44.280" level="INFO">VOLUME_NOT_FOUND Volume 67970-rpcwport is not found</msg>
<status status="PASS" starttime="20210715 01:42:44.280" endtime="20210715 01:42:44.280"/>
</kw>
<msg timestamp="20210715 01:42:44.281" level="INFO">${result} = VOLUME_NOT_FOUND Volume 67970-rpcwport is not found</msg>
<status status="PASS" starttime="20210715 01:42:37.863" endtime="20210715 01:42:44.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:42:44.281" endtime="20210715 01:42:44.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:44.285" level="INFO">Running command 'ozone sh volume create o3:///67970-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:50.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:42:50.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:42:44.283" endtime="20210715 01:42:50.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:50.687" level="INFO"/>
<status status="PASS" starttime="20210715 01:42:50.686" endtime="20210715 01:42:50.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:42:50.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:42:50.688" endtime="20210715 01:42:50.688"/>
</kw>
<status status="PASS" starttime="20210715 01:42:44.282" endtime="20210715 01:42:50.689"/>
</kw>
<msg timestamp="20210715 01:42:50.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:42:44.282" endtime="20210715 01:42:50.689"/>
</kw>
<msg timestamp="20210715 01:42:50.689" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210715 01:42:44.282" endtime="20210715 01:42:50.689"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:42:50.689" endtime="20210715 01:42:50.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:50.694" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="67970-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:42:57.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:42:57.211" level="INFO">${output} = {
  "metadata": {},
  "name": "67970-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:42:50.692" endtime="20210715 01:42:57.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:42:57.212" level="INFO">{
  "metadata": {},
  "name": "67970-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:42:50.628Z",
  "modificationTime": "2021-07-15T01:42:50.628Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:42:57.211" endtime="20210715 01:42:57.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:42:57.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:42:57.213" endtime="20210715 01:42:57.214"/>
</kw>
<status status="PASS" starttime="20210715 01:42:50.691" endtime="20210715 01:42:57.214"/>
</kw>
<msg timestamp="20210715 01:42:57.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:42:50.691" endtime="20210715 01:42:57.214"/>
</kw>
<msg timestamp="20210715 01:42:57.215" level="INFO">${result} = {
  "metadata": {},
  "name": "67970-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:42:50.690" endtime="20210715 01:42:57.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:42:57.215" endtime="20210715 01:42:57.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:42:57.220" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="67970-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:03.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:03.956" level="INFO">${output} = {
  "metadata": {},
  "name": "67970-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:42:57.217" endtime="20210715 01:43:03.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:03.957" level="INFO">{
  "metadata": {},
  "name": "67970-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:42:50.628Z",
  "modificationTime": "2021-07-15T01:42:50.628Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:43:03.957" endtime="20210715 01:43:03.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:03.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:03.958" endtime="20210715 01:43:03.958"/>
</kw>
<status status="PASS" starttime="20210715 01:42:57.217" endtime="20210715 01:43:03.958"/>
</kw>
<msg timestamp="20210715 01:43:03.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:42:57.216" endtime="20210715 01:43:03.959"/>
</kw>
<msg timestamp="20210715 01:43:03.959" level="INFO">${result} = {
  "metadata": {},
  "name": "67970-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210715 01:42:57.216" endtime="20210715 01:43:03.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:43:03.959" endtime="20210715 01:43:03.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:03.963" level="INFO">Running command 'ozone sh volume setquota o3:///67970-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:09.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:09.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:43:03.961" endtime="20210715 01:43:09.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:09.892" level="INFO"/>
<status status="PASS" starttime="20210715 01:43:09.892" endtime="20210715 01:43:09.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:09.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:09.893" endtime="20210715 01:43:09.893"/>
</kw>
<status status="PASS" starttime="20210715 01:43:03.961" endtime="20210715 01:43:09.893"/>
</kw>
<msg timestamp="20210715 01:43:09.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:03.960" endtime="20210715 01:43:09.894"/>
</kw>
<status status="PASS" starttime="20210715 01:43:03.960" endtime="20210715 01:43:09.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:09.898" level="INFO">Running command 'ozone sh volume info o3:///67970-rpcwport | jq -r '. | select(.name=="67970-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:17.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:17.347" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:43:09.896" endtime="20210715 01:43:17.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:17.349" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:43:17.348" endtime="20210715 01:43:17.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:17.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:17.349" endtime="20210715 01:43:17.349"/>
</kw>
<status status="PASS" starttime="20210715 01:43:09.895" endtime="20210715 01:43:17.350"/>
</kw>
<msg timestamp="20210715 01:43:17.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:09.895" endtime="20210715 01:43:17.350"/>
</kw>
<msg timestamp="20210715 01:43:17.350" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:43:09.894" endtime="20210715 01:43:17.350"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:43:17.350" endtime="20210715 01:43:17.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:17.355" level="INFO">Running command 'ozone sh bucket create o3:///67970-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:23.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:23.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:43:17.352" endtime="20210715 01:43:23.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:23.488" level="INFO"/>
<status status="PASS" starttime="20210715 01:43:23.487" endtime="20210715 01:43:23.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:23.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:23.488" endtime="20210715 01:43:23.488"/>
</kw>
<status status="PASS" starttime="20210715 01:43:17.352" endtime="20210715 01:43:23.489"/>
</kw>
<msg timestamp="20210715 01:43:23.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:17.351" endtime="20210715 01:43:23.489"/>
</kw>
<status status="PASS" starttime="20210715 01:43:17.351" endtime="20210715 01:43:23.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:23.493" level="INFO">Running command 'ozone sh bucket info o3:///67970-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:28.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:28.537" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210715 01:43:23.491" endtime="20210715 01:43:28.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:28.539" level="INFO">DISK</msg>
<status status="PASS" starttime="20210715 01:43:28.538" endtime="20210715 01:43:28.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:28.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:28.539" endtime="20210715 01:43:28.540"/>
</kw>
<status status="PASS" starttime="20210715 01:43:23.491" endtime="20210715 01:43:28.540"/>
</kw>
<msg timestamp="20210715 01:43:28.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:23.490" endtime="20210715 01:43:28.541"/>
</kw>
<msg timestamp="20210715 01:43:28.541" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210715 01:43:23.489" endtime="20210715 01:43:28.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:43:28.541" endtime="20210715 01:43:28.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:28.547" level="INFO">Running command 'ozone sh bucket info o3:///67970-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:35.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:35.621" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:43:28.544" endtime="20210715 01:43:35.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:35.624" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:43:35.622" endtime="20210715 01:43:35.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:35.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:35.624" endtime="20210715 01:43:35.625"/>
</kw>
<status status="PASS" starttime="20210715 01:43:28.543" endtime="20210715 01:43:35.626"/>
</kw>
<msg timestamp="20210715 01:43:35.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:28.543" endtime="20210715 01:43:35.626"/>
</kw>
<msg timestamp="20210715 01:43:35.627" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:43:28.542" endtime="20210715 01:43:35.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:43:35.627" endtime="20210715 01:43:35.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:35.635" level="INFO">Running command 'ozone sh bucket info o3:///67970-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:42.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:42.090" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210715 01:43:35.631" endtime="20210715 01:43:42.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:42.091" level="INFO">100</msg>
<status status="PASS" starttime="20210715 01:43:42.091" endtime="20210715 01:43:42.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:42.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:42.092" endtime="20210715 01:43:42.092"/>
</kw>
<status status="PASS" starttime="20210715 01:43:35.630" endtime="20210715 01:43:42.092"/>
</kw>
<msg timestamp="20210715 01:43:42.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:35.630" endtime="20210715 01:43:42.093"/>
</kw>
<msg timestamp="20210715 01:43:42.093" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210715 01:43:35.628" endtime="20210715 01:43:42.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:43:42.093" endtime="20210715 01:43:42.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:42.098" level="INFO">Running command 'ozone sh bucket setquota o3:///67970-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:48.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:48.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:43:42.095" endtime="20210715 01:43:48.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:48.114" level="INFO"/>
<status status="PASS" starttime="20210715 01:43:48.113" endtime="20210715 01:43:48.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:48.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:48.115" endtime="20210715 01:43:48.116"/>
</kw>
<status status="PASS" starttime="20210715 01:43:42.094" endtime="20210715 01:43:48.116"/>
</kw>
<msg timestamp="20210715 01:43:48.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:42.094" endtime="20210715 01:43:48.117"/>
</kw>
<status status="PASS" starttime="20210715 01:43:42.094" endtime="20210715 01:43:48.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:48.124" level="INFO">Running command 'ozone sh bucket info o3:///67970-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:43:54.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:43:54.280" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:43:48.121" endtime="20210715 01:43:54.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:43:54.282" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210715 01:43:54.281" endtime="20210715 01:43:54.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:43:54.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:43:54.282" endtime="20210715 01:43:54.282"/>
</kw>
<status status="PASS" starttime="20210715 01:43:48.120" endtime="20210715 01:43:54.283"/>
</kw>
<msg timestamp="20210715 01:43:54.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:48.119" endtime="20210715 01:43:54.283"/>
</kw>
<msg timestamp="20210715 01:43:54.283" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:43:48.117" endtime="20210715 01:43:54.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:43:54.283" endtime="20210715 01:43:54.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:43:54.288" level="INFO">Running command 'ozone sh bucket info o3:///67970-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:44:00.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:44:00.365" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210715 01:43:54.285" endtime="20210715 01:44:00.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:44:00.366" level="INFO">1000</msg>
<status status="PASS" starttime="20210715 01:44:00.366" endtime="20210715 01:44:00.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:44:00.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:44:00.366" endtime="20210715 01:44:00.367"/>
</kw>
<status status="PASS" starttime="20210715 01:43:54.285" endtime="20210715 01:44:00.367"/>
</kw>
<msg timestamp="20210715 01:44:00.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:43:54.285" endtime="20210715 01:44:00.367"/>
</kw>
<msg timestamp="20210715 01:44:00.368" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210715 01:43:54.284" endtime="20210715 01:44:00.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:44:00.368" endtime="20210715 01:44:00.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:44:00.373" level="INFO">Running command 'ozone sh bucket list o3:///67970-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:44:06.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:44:06.764" level="INFO">${output} = 67970-rpcwport</msg>
<status status="PASS" starttime="20210715 01:44:00.370" endtime="20210715 01:44:06.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:44:06.765" level="INFO">67970-rpcwport</msg>
<status status="PASS" starttime="20210715 01:44:06.764" endtime="20210715 01:44:06.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:44:06.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:44:06.766" endtime="20210715 01:44:06.766"/>
</kw>
<status status="PASS" starttime="20210715 01:44:00.370" endtime="20210715 01:44:06.767"/>
</kw>
<msg timestamp="20210715 01:44:06.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:44:00.369" endtime="20210715 01:44:06.767"/>
</kw>
<msg timestamp="20210715 01:44:06.767" level="INFO">${result} = 67970-rpcwport</msg>
<status status="PASS" starttime="20210715 01:44:00.368" endtime="20210715 01:44:06.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:44:06.768" endtime="20210715 01:44:06.768"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:44:06.774" level="INFO">Running command 'ozone sh key put o3:///67970-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:16.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:16.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:44:06.771" endtime="20210715 01:47:16.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:16.389" level="INFO"/>
<status status="PASS" starttime="20210715 01:47:16.388" endtime="20210715 01:47:16.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:16.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:16.389" endtime="20210715 01:47:16.390"/>
</kw>
<status status="PASS" starttime="20210715 01:44:06.771" endtime="20210715 01:47:16.390"/>
</kw>
<msg timestamp="20210715 01:47:16.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:44:06.770" endtime="20210715 01:47:16.391"/>
</kw>
<status status="PASS" starttime="20210715 01:44:06.769" endtime="20210715 01:47:16.391"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:16.395" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:16.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:16.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:47:16.392" endtime="20210715 01:47:16.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:16.398" level="INFO"/>
<status status="PASS" starttime="20210715 01:47:16.398" endtime="20210715 01:47:16.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:16.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:16.399" endtime="20210715 01:47:16.399"/>
</kw>
<status status="PASS" starttime="20210715 01:47:16.392" endtime="20210715 01:47:16.400"/>
</kw>
<msg timestamp="20210715 01:47:16.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:16.391" endtime="20210715 01:47:16.400"/>
</kw>
<status status="PASS" starttime="20210715 01:47:16.391" endtime="20210715 01:47:16.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:16.406" level="INFO">Running command 'ozone sh key get o3:///67970-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:24.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:24.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:47:16.403" endtime="20210715 01:47:24.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:24.454" level="INFO"/>
<status status="PASS" starttime="20210715 01:47:24.454" endtime="20210715 01:47:24.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:24.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:24.455" endtime="20210715 01:47:24.456"/>
</kw>
<status status="PASS" starttime="20210715 01:47:16.402" endtime="20210715 01:47:24.456"/>
</kw>
<msg timestamp="20210715 01:47:24.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:16.402" endtime="20210715 01:47:24.456"/>
</kw>
<status status="PASS" starttime="20210715 01:47:16.400" endtime="20210715 01:47:24.456"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:24.460" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:24.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:24.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:47:24.458" endtime="20210715 01:47:24.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:24.465" level="INFO"/>
<status status="PASS" starttime="20210715 01:47:24.464" endtime="20210715 01:47:24.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:24.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:24.465" endtime="20210715 01:47:24.466"/>
</kw>
<status status="PASS" starttime="20210715 01:47:24.457" endtime="20210715 01:47:24.466"/>
</kw>
<msg timestamp="20210715 01:47:24.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:24.457" endtime="20210715 01:47:24.466"/>
</kw>
<status status="PASS" starttime="20210715 01:47:24.456" endtime="20210715 01:47:24.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:24.471" level="INFO">Running command 'ozone sh key put -t RATIS o3:///67970-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:37.812" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:47:24.468" endtime="20210715 01:47:37.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.813" endtime="20210715 01:47:37.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.813" endtime="20210715 01:47:37.813"/>
</kw>
<status status="FAIL" starttime="20210715 01:47:24.468" endtime="20210715 01:47:37.814"/>
</kw>
<msg timestamp="20210715 01:47:37.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:47:24.467" endtime="20210715 01:47:37.814"/>
</kw>
<status status="FAIL" starttime="20210715 01:47:24.467" endtime="20210715 01:47:37.814"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.815" endtime="20210715 01:47:37.815"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.816" endtime="20210715 01:47:37.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.816" endtime="20210715 01:47:37.816"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.816" endtime="20210715 01:47:37.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.816" endtime="20210715 01:47:37.816"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.816" endtime="20210715 01:47:37.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.816" endtime="20210715 01:47:37.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.817" endtime="20210715 01:47:37.817"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.817" endtime="20210715 01:47:37.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.817" endtime="20210715 01:47:37.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.817" endtime="20210715 01:47:37.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.817" endtime="20210715 01:47:37.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.818" endtime="20210715 01:47:37.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.818" endtime="20210715 01:47:37.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.818" endtime="20210715 01:47:37.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.818" endtime="20210715 01:47:37.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.818" endtime="20210715 01:47:37.818"/>
</kw>
<status status="FAIL" starttime="20210715 01:44:06.769" endtime="20210715 01:47:37.818"/>
</kw>
<status status="FAIL" starttime="20210715 01:44:06.768" endtime="20210715 01:47:37.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.819" endtime="20210715 01:47:37.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.820" endtime="20210715 01:47:37.820"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.820" endtime="20210715 01:47:37.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.820" endtime="20210715 01:47:37.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.821" endtime="20210715 01:47:37.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.821" endtime="20210715 01:47:37.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.821" endtime="20210715 01:47:37.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.821" endtime="20210715 01:47:37.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.822" endtime="20210715 01:47:37.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.823" endtime="20210715 01:47:37.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.823" endtime="20210715 01:47:37.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:47:37.823" endtime="20210715 01:47:37.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.823" endtime="20210715 01:47:37.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:47:37.823" endtime="20210715 01:47:37.823"/>
</kw>
<status status="FAIL" starttime="20210715 01:42:37.862" endtime="20210715 01:47:37.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210715 01:42:37.812" endtime="20210715 01:47:37.824">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:37.831" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:37.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:37.834" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:47:37.828" endtime="20210715 01:47:37.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:37.835" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:47:37.834" endtime="20210715 01:47:37.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:37.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:37.835" endtime="20210715 01:47:37.835"/>
</kw>
<status status="PASS" starttime="20210715 01:47:37.827" endtime="20210715 01:47:37.836"/>
</kw>
<msg timestamp="20210715 01:47:37.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:37.827" endtime="20210715 01:47:37.836"/>
</kw>
<msg timestamp="20210715 01:47:37.836" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:47:37.827" endtime="20210715 01:47:37.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:47:37.837" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:47:37.836" endtime="20210715 01:47:37.837"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:37.843" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:37.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:37.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:47:37.840" endtime="20210715 01:47:37.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:37.899" level="INFO"/>
<status status="PASS" starttime="20210715 01:47:37.898" endtime="20210715 01:47:37.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:37.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:37.900" endtime="20210715 01:47:37.900"/>
</kw>
<status status="PASS" starttime="20210715 01:47:37.839" endtime="20210715 01:47:37.900"/>
</kw>
<msg timestamp="20210715 01:47:37.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:37.839" endtime="20210715 01:47:37.901"/>
</kw>
<status status="PASS" starttime="20210715 01:47:37.838" endtime="20210715 01:47:37.901"/>
</kw>
<status status="PASS" starttime="20210715 01:47:37.837" endtime="20210715 01:47:37.901"/>
</kw>
<status status="PASS" starttime="20210715 01:47:37.826" endtime="20210715 01:47:37.901"/>
</kw>
<status status="PASS" starttime="20210715 01:47:37.826" endtime="20210715 01:47:37.901"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:37.913" level="INFO">Running command 'ozone sh volume info /67970-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:43.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20210715 01:47:43.951" level="INFO">${output} = VOLUME_NOT_FOUND Volume 67970-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210715 01:47:37.904" endtime="20210715 01:47:43.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:43.953" level="INFO">VOLUME_NOT_FOUND Volume 67970-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210715 01:47:43.951" endtime="20210715 01:47:43.953"/>
</kw>
<msg timestamp="20210715 01:47:43.953" level="INFO">${result} = VOLUME_NOT_FOUND Volume 67970-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210715 01:47:37.903" endtime="20210715 01:47:43.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:47:43.953" endtime="20210715 01:47:43.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:43.957" level="INFO">Running command 'ozone sh volume create /67970-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:50.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:50.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:47:43.955" endtime="20210715 01:47:50.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:50.383" level="INFO"/>
<status status="PASS" starttime="20210715 01:47:50.382" endtime="20210715 01:47:50.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:50.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:50.383" endtime="20210715 01:47:50.384"/>
</kw>
<status status="PASS" starttime="20210715 01:47:43.954" endtime="20210715 01:47:50.384"/>
</kw>
<msg timestamp="20210715 01:47:50.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:43.954" endtime="20210715 01:47:50.384"/>
</kw>
<msg timestamp="20210715 01:47:50.385" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210715 01:47:43.954" endtime="20210715 01:47:50.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:47:50.385" endtime="20210715 01:47:50.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:50.390" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="67970-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:47:56.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:47:56.554" level="INFO">${output} = {
  "metadata": {},
  "name": "67970-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210715 01:47:50.387" endtime="20210715 01:47:56.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:47:56.556" level="INFO">{
  "metadata": {},
  "name": "67970-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:47:50.292Z",
  "modificationTime": "2021-07-15T01:47:50.292Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:47:56.555" endtime="20210715 01:47:56.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:47:56.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:47:56.557" endtime="20210715 01:47:56.558"/>
</kw>
<status status="PASS" starttime="20210715 01:47:50.387" endtime="20210715 01:47:56.559"/>
</kw>
<msg timestamp="20210715 01:47:56.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:50.386" endtime="20210715 01:47:56.559"/>
</kw>
<msg timestamp="20210715 01:47:56.560" level="INFO">${result} = {
  "metadata": {},
  "name": "67970-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210715 01:47:50.385" endtime="20210715 01:47:56.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:47:56.561" endtime="20210715 01:47:56.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:47:56.568" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="67970-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:03.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:03.711" level="INFO">${output} = {
  "metadata": {},
  "name": "67970-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210715 01:47:56.565" endtime="20210715 01:48:03.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:03.713" level="INFO">{
  "metadata": {},
  "name": "67970-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-15T01:47:50.292Z",
  "modificationTime": "2021-07-15T01:47:50.292Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210715 01:48:03.712" endtime="20210715 01:48:03.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:03.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:03.713" endtime="20210715 01:48:03.714"/>
</kw>
<status status="PASS" starttime="20210715 01:47:56.564" endtime="20210715 01:48:03.714"/>
</kw>
<msg timestamp="20210715 01:48:03.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:47:56.563" endtime="20210715 01:48:03.714"/>
</kw>
<msg timestamp="20210715 01:48:03.714" level="INFO">${result} = {
  "metadata": {},
  "name": "67970-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210715 01:47:56.562" endtime="20210715 01:48:03.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210715 01:48:03.715" endtime="20210715 01:48:03.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:03.721" level="INFO">Running command 'ozone sh volume setquota /67970-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:10.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:10.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:48:03.716" endtime="20210715 01:48:10.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:10.864" level="INFO"/>
<status status="PASS" starttime="20210715 01:48:10.863" endtime="20210715 01:48:10.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:10.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:10.864" endtime="20210715 01:48:10.865"/>
</kw>
<status status="PASS" starttime="20210715 01:48:03.716" endtime="20210715 01:48:10.865"/>
</kw>
<msg timestamp="20210715 01:48:10.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:03.716" endtime="20210715 01:48:10.865"/>
</kw>
<status status="PASS" starttime="20210715 01:48:03.715" endtime="20210715 01:48:10.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:10.871" level="INFO">Running command 'ozone sh volume info /67970-rpcwoscheme | jq -r '. | select(.name=="67970-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:17.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:17.492" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:48:10.867" endtime="20210715 01:48:17.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:17.493" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:48:17.492" endtime="20210715 01:48:17.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:17.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:17.493" endtime="20210715 01:48:17.494"/>
</kw>
<status status="PASS" starttime="20210715 01:48:10.867" endtime="20210715 01:48:17.494"/>
</kw>
<msg timestamp="20210715 01:48:17.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:10.867" endtime="20210715 01:48:17.494"/>
</kw>
<msg timestamp="20210715 01:48:17.495" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:48:10.866" endtime="20210715 01:48:17.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:48:17.495" endtime="20210715 01:48:17.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:17.500" level="INFO">Running command 'ozone sh bucket create /67970-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:23.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:23.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:48:17.497" endtime="20210715 01:48:23.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:23.046" level="INFO"/>
<status status="PASS" starttime="20210715 01:48:23.045" endtime="20210715 01:48:23.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:23.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:23.046" endtime="20210715 01:48:23.047"/>
</kw>
<status status="PASS" starttime="20210715 01:48:17.497" endtime="20210715 01:48:23.047"/>
</kw>
<msg timestamp="20210715 01:48:23.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:17.496" endtime="20210715 01:48:23.047"/>
</kw>
<status status="PASS" starttime="20210715 01:48:17.496" endtime="20210715 01:48:23.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:23.052" level="INFO">Running command 'ozone sh bucket info /67970-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:30.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:30.139" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210715 01:48:23.050" endtime="20210715 01:48:30.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:30.140" level="INFO">DISK</msg>
<status status="PASS" starttime="20210715 01:48:30.139" endtime="20210715 01:48:30.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:30.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:30.140" endtime="20210715 01:48:30.141"/>
</kw>
<status status="PASS" starttime="20210715 01:48:23.049" endtime="20210715 01:48:30.141"/>
</kw>
<msg timestamp="20210715 01:48:30.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:23.048" endtime="20210715 01:48:30.142"/>
</kw>
<msg timestamp="20210715 01:48:30.142" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210715 01:48:23.048" endtime="20210715 01:48:30.142"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:48:30.142" endtime="20210715 01:48:30.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:30.147" level="INFO">Running command 'ozone sh bucket info /67970-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:36.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:36.574" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:48:30.145" endtime="20210715 01:48:36.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:36.575" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210715 01:48:36.574" endtime="20210715 01:48:36.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:36.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:36.575" endtime="20210715 01:48:36.576"/>
</kw>
<status status="PASS" starttime="20210715 01:48:30.144" endtime="20210715 01:48:36.576"/>
</kw>
<msg timestamp="20210715 01:48:36.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:30.143" endtime="20210715 01:48:36.576"/>
</kw>
<msg timestamp="20210715 01:48:36.577" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210715 01:48:30.142" endtime="20210715 01:48:36.577"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:48:36.577" endtime="20210715 01:48:36.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:36.582" level="INFO">Running command 'ozone sh bucket info /67970-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:43.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:43.222" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210715 01:48:36.579" endtime="20210715 01:48:43.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:43.223" level="INFO">100</msg>
<status status="PASS" starttime="20210715 01:48:43.222" endtime="20210715 01:48:43.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:43.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:43.223" endtime="20210715 01:48:43.224"/>
</kw>
<status status="PASS" starttime="20210715 01:48:36.579" endtime="20210715 01:48:43.224"/>
</kw>
<msg timestamp="20210715 01:48:43.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:36.579" endtime="20210715 01:48:43.224"/>
</kw>
<msg timestamp="20210715 01:48:43.224" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210715 01:48:36.577" endtime="20210715 01:48:43.225"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:48:43.225" endtime="20210715 01:48:43.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:43.229" level="INFO">Running command 'ozone sh bucket setquota /67970-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:49.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:49.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:48:43.227" endtime="20210715 01:48:49.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:49.309" level="INFO"/>
<status status="PASS" starttime="20210715 01:48:49.308" endtime="20210715 01:48:49.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:49.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:49.310" endtime="20210715 01:48:49.311"/>
</kw>
<status status="PASS" starttime="20210715 01:48:43.226" endtime="20210715 01:48:49.311"/>
</kw>
<msg timestamp="20210715 01:48:49.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:43.226" endtime="20210715 01:48:49.312"/>
</kw>
<status status="PASS" starttime="20210715 01:48:43.225" endtime="20210715 01:48:49.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:49.319" level="INFO">Running command 'ozone sh bucket info /67970-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:48:55.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:48:55.705" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:48:49.316" endtime="20210715 01:48:55.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:48:55.706" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210715 01:48:55.706" endtime="20210715 01:48:55.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:48:55.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:48:55.707" endtime="20210715 01:48:55.707"/>
</kw>
<status status="PASS" starttime="20210715 01:48:49.315" endtime="20210715 01:48:55.707"/>
</kw>
<msg timestamp="20210715 01:48:55.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:49.314" endtime="20210715 01:48:55.708"/>
</kw>
<msg timestamp="20210715 01:48:55.708" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210715 01:48:49.312" endtime="20210715 01:48:55.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:48:55.708" endtime="20210715 01:48:55.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:48:55.715" level="INFO">Running command 'ozone sh bucket info /67970-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:49:01.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:49:01.890" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210715 01:48:55.711" endtime="20210715 01:49:01.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:49:01.892" level="INFO">1000</msg>
<status status="PASS" starttime="20210715 01:49:01.891" endtime="20210715 01:49:01.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:49:01.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:49:01.892" endtime="20210715 01:49:01.892"/>
</kw>
<status status="PASS" starttime="20210715 01:48:55.710" endtime="20210715 01:49:01.893"/>
</kw>
<msg timestamp="20210715 01:49:01.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:48:55.710" endtime="20210715 01:49:01.893"/>
</kw>
<msg timestamp="20210715 01:49:01.894" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210715 01:48:55.709" endtime="20210715 01:49:01.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:49:01.894" endtime="20210715 01:49:01.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:49:01.901" level="INFO">Running command 'ozone sh bucket list /67970-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:49:08.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:49:08.643" level="INFO">${output} = 67970-rpcwoscheme</msg>
<status status="PASS" starttime="20210715 01:49:01.897" endtime="20210715 01:49:08.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:49:08.644" level="INFO">67970-rpcwoscheme</msg>
<status status="PASS" starttime="20210715 01:49:08.644" endtime="20210715 01:49:08.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:49:08.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:49:08.646" endtime="20210715 01:49:08.647"/>
</kw>
<status status="PASS" starttime="20210715 01:49:01.896" endtime="20210715 01:49:08.647"/>
</kw>
<msg timestamp="20210715 01:49:08.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:49:01.896" endtime="20210715 01:49:08.647"/>
</kw>
<msg timestamp="20210715 01:49:08.648" level="INFO">${result} = 67970-rpcwoscheme</msg>
<status status="PASS" starttime="20210715 01:49:01.895" endtime="20210715 01:49:08.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 01:49:08.648" endtime="20210715 01:49:08.650"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:49:08.657" level="INFO">Running command 'ozone sh key put /67970-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:52:19.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:52:19.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:49:08.654" endtime="20210715 01:52:19.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:52:19.417" level="INFO"/>
<status status="PASS" starttime="20210715 01:52:19.417" endtime="20210715 01:52:19.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:52:19.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:52:19.418" endtime="20210715 01:52:19.418"/>
</kw>
<status status="PASS" starttime="20210715 01:49:08.653" endtime="20210715 01:52:19.419"/>
</kw>
<msg timestamp="20210715 01:52:19.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:49:08.652" endtime="20210715 01:52:19.419"/>
</kw>
<status status="PASS" starttime="20210715 01:49:08.651" endtime="20210715 01:52:19.419"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:52:19.423" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:52:19.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:52:19.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:52:19.421" endtime="20210715 01:52:19.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:52:19.430" level="INFO"/>
<status status="PASS" starttime="20210715 01:52:19.429" endtime="20210715 01:52:19.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:52:19.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:52:19.430" endtime="20210715 01:52:19.431"/>
</kw>
<status status="PASS" starttime="20210715 01:52:19.420" endtime="20210715 01:52:19.431"/>
</kw>
<msg timestamp="20210715 01:52:19.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:52:19.420" endtime="20210715 01:52:19.431"/>
</kw>
<status status="PASS" starttime="20210715 01:52:19.419" endtime="20210715 01:52:19.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:52:19.437" level="INFO">Running command 'ozone sh key get /67970-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:52:29.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:52:29.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:52:19.433" endtime="20210715 01:52:29.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:52:29.019" level="INFO"/>
<status status="PASS" starttime="20210715 01:52:29.019" endtime="20210715 01:52:29.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:52:29.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:52:29.020" endtime="20210715 01:52:29.020"/>
</kw>
<status status="PASS" starttime="20210715 01:52:19.433" endtime="20210715 01:52:29.021"/>
</kw>
<msg timestamp="20210715 01:52:29.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:52:19.432" endtime="20210715 01:52:29.021"/>
</kw>
<status status="PASS" starttime="20210715 01:52:19.432" endtime="20210715 01:52:29.021"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:52:29.026" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:52:29.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:52:29.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:52:29.023" endtime="20210715 01:52:29.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:52:29.030" level="INFO"/>
<status status="PASS" starttime="20210715 01:52:29.029" endtime="20210715 01:52:29.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:52:29.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:52:29.030" endtime="20210715 01:52:29.031"/>
</kw>
<status status="PASS" starttime="20210715 01:52:29.022" endtime="20210715 01:52:29.031"/>
</kw>
<msg timestamp="20210715 01:52:29.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:52:29.022" endtime="20210715 01:52:29.032"/>
</kw>
<status status="PASS" starttime="20210715 01:52:29.021" endtime="20210715 01:52:29.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:52:29.036" level="INFO">Running command 'ozone sh key put -t RATIS /67970-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:52:37.826" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210715 01:52:29.034" endtime="20210715 01:52:37.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.827" endtime="20210715 01:52:37.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.827" endtime="20210715 01:52:37.827"/>
</kw>
<status status="FAIL" starttime="20210715 01:52:29.033" endtime="20210715 01:52:37.827"/>
</kw>
<msg timestamp="20210715 01:52:37.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210715 01:52:29.033" endtime="20210715 01:52:37.828"/>
</kw>
<status status="FAIL" starttime="20210715 01:52:29.032" endtime="20210715 01:52:37.828"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.828" endtime="20210715 01:52:37.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.828" endtime="20210715 01:52:37.828"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.828" endtime="20210715 01:52:37.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.829" endtime="20210715 01:52:37.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.829" endtime="20210715 01:52:37.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.829" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.830" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.830" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.830" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.830" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.830" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.830" endtime="20210715 01:52:37.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.831" endtime="20210715 01:52:37.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.831" endtime="20210715 01:52:37.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.831" endtime="20210715 01:52:37.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.831" endtime="20210715 01:52:37.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.831" endtime="20210715 01:52:37.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.833" endtime="20210715 01:52:37.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.833" endtime="20210715 01:52:37.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.833" endtime="20210715 01:52:37.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.833" endtime="20210715 01:52:37.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.833" endtime="20210715 01:52:37.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.834" endtime="20210715 01:52:37.834"/>
</kw>
<status status="FAIL" starttime="20210715 01:49:08.651" endtime="20210715 01:52:37.834"/>
</kw>
<status status="FAIL" starttime="20210715 01:49:08.650" endtime="20210715 01:52:37.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.834" endtime="20210715 01:52:37.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.834" endtime="20210715 01:52:37.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.835" endtime="20210715 01:52:37.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.835" endtime="20210715 01:52:37.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.835" endtime="20210715 01:52:37.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.835" endtime="20210715 01:52:37.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.835" endtime="20210715 01:52:37.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.835" endtime="20210715 01:52:37.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.836" endtime="20210715 01:52:37.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.836" endtime="20210715 01:52:37.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.836" endtime="20210715 01:52:37.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.837" endtime="20210715 01:52:37.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.838" endtime="20210715 01:52:37.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.839" endtime="20210715 01:52:37.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.839" endtime="20210715 01:52:37.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.839" endtime="20210715 01:52:37.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.839" endtime="20210715 01:52:37.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.839" endtime="20210715 01:52:37.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.839" endtime="20210715 01:52:37.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.840" endtime="20210715 01:52:37.840"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.840" endtime="20210715 01:52:37.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.840" endtime="20210715 01:52:37.840"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.840" endtime="20210715 01:52:37.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210715 01:52:37.841" endtime="20210715 01:52:37.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.841" endtime="20210715 01:52:37.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210715 01:52:37.841" endtime="20210715 01:52:37.841"/>
</kw>
<status status="FAIL" starttime="20210715 01:47:37.902" endtime="20210715 01:52:37.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210715 01:47:37.825" endtime="20210715 01:52:37.842">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210715 01:28:08.547" endtime="20210715 01:52:37.845"/>
</suite>
<status status="FAIL" starttime="20210715 01:04:39.757" endtime="20210715 01:52:37.854"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:35.086" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:35.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:35.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210715 01:04:35.083" endtime="20210715 01:04:35.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:35.091" level="INFO">scm</msg>
<status status="PASS" starttime="20210715 01:04:35.091" endtime="20210715 01:04:35.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:35.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:35.092" endtime="20210715 01:04:35.092"/>
</kw>
<status status="PASS" starttime="20210715 01:04:35.083" endtime="20210715 01:04:35.097"/>
</kw>
<msg timestamp="20210715 01:04:35.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:35.082" endtime="20210715 01:04:35.098"/>
</kw>
<msg timestamp="20210715 01:04:35.099" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210715 01:04:35.082" endtime="20210715 01:04:35.099"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210715 01:04:35.099" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210715 01:04:35.099" endtime="20210715 01:04:35.100"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210715 01:04:35.104" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210715 01:04:35.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210715 01:04:35.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210715 01:04:35.102" endtime="20210715 01:04:35.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210715 01:04:35.112" level="INFO"/>
<status status="PASS" starttime="20210715 01:04:35.111" endtime="20210715 01:04:35.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210715 01:04:35.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210715 01:04:35.112" endtime="20210715 01:04:35.113"/>
</kw>
<status status="PASS" starttime="20210715 01:04:35.102" endtime="20210715 01:04:35.113"/>
</kw>
<msg timestamp="20210715 01:04:35.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210715 01:04:35.102" endtime="20210715 01:04:35.113"/>
</kw>
<status status="PASS" starttime="20210715 01:04:35.101" endtime="20210715 01:04:35.113"/>
</kw>
<status status="PASS" starttime="20210715 01:04:35.101" endtime="20210715 01:04:35.113"/>
</kw>
<status status="PASS" starttime="20210715 01:04:35.081" endtime="20210715 01:04:35.113"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210715 01:04:35.081" endtime="20210715 01:04:35.114"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210715 01:04:35.036" endtime="20210715 01:04:35.115"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2878176"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
