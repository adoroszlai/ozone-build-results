<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210712 11:15:30.816" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:07:22.680" level="INFO">${random} = 40205</msg>
<status status="PASS" starttime="20210712 11:07:22.679" endtime="20210712 11:07:22.680"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:22.682" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-40205 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:26.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:26.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:22.681" endtime="20210712 11:07:26.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:26.222" level="INFO"/>
<status status="PASS" starttime="20210712 11:07:26.221" endtime="20210712 11:07:26.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:26.223" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:26.222" endtime="20210712 11:07:26.223"/>
</kw>
<status status="PASS" starttime="20210712 11:07:22.681" endtime="20210712 11:07:26.223"/>
</kw>
<msg timestamp="20210712 11:07:26.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:22.681" endtime="20210712 11:07:26.223"/>
</kw>
<msg timestamp="20210712 11:07:26.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:22.680" endtime="20210712 11:07:26.223"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:26.224" endtime="20210712 11:07:26.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:07:22.679" endtime="20210712 11:07:26.224"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:07:22.638" endtime="20210712 11:07:26.225"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:10.663" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:12.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:12.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:10.661" endtime="20210712 11:07:12.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:12.973" level="INFO"/>
<status status="PASS" starttime="20210712 11:07:12.973" endtime="20210712 11:07:12.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:12.974" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:12.974" endtime="20210712 11:07:12.974"/>
</kw>
<status status="PASS" starttime="20210712 11:07:10.661" endtime="20210712 11:07:12.974"/>
</kw>
<msg timestamp="20210712 11:07:12.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:10.661" endtime="20210712 11:07:12.975"/>
</kw>
<msg timestamp="20210712 11:07:12.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:10.660" endtime="20210712 11:07:12.975"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:12.975" endtime="20210712 11:07:12.975"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:12.978" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:14.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:14.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:12.977" endtime="20210712 11:07:14.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:14.781" level="INFO"/>
<status status="PASS" starttime="20210712 11:07:14.781" endtime="20210712 11:07:14.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:14.782" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:14.782" endtime="20210712 11:07:14.782"/>
</kw>
<status status="PASS" starttime="20210712 11:07:12.976" endtime="20210712 11:07:14.782"/>
</kw>
<msg timestamp="20210712 11:07:14.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:12.976" endtime="20210712 11:07:14.783"/>
</kw>
<msg timestamp="20210712 11:07:14.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:12.975" endtime="20210712 11:07:14.783"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:14.783" endtime="20210712 11:07:14.783"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:14.788" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:19.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:19.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:14.786" endtime="20210712 11:07:19.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:19.241" level="INFO"/>
<status status="PASS" starttime="20210712 11:07:19.240" endtime="20210712 11:07:19.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:19.241" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:19.241" endtime="20210712 11:07:19.241"/>
</kw>
<status status="PASS" starttime="20210712 11:07:14.784" endtime="20210712 11:07:19.241"/>
</kw>
<msg timestamp="20210712 11:07:19.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:14.784" endtime="20210712 11:07:19.242"/>
</kw>
<msg timestamp="20210712 11:07:19.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:07:14.784" endtime="20210712 11:07:19.242"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:19.242" endtime="20210712 11:07:19.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:07:10.659" endtime="20210712 11:07:19.243"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:07:10.621" endtime="20210712 11:07:19.243"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:08:36.665" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:08:39.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:08:39.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:36.662" endtime="20210712 11:08:39.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:39.068" level="INFO"/>
<status status="PASS" starttime="20210712 11:08:39.067" endtime="20210712 11:08:39.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:08:39.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:08:39.068" endtime="20210712 11:08:39.068"/>
</kw>
<status status="PASS" starttime="20210712 11:08:36.661" endtime="20210712 11:08:39.069"/>
</kw>
<msg timestamp="20210712 11:08:39.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:08:36.661" endtime="20210712 11:08:39.069"/>
</kw>
<msg timestamp="20210712 11:08:39.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:36.660" endtime="20210712 11:08:39.069"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:08:39.069" endtime="20210712 11:08:39.070"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:08:39.074" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:08:41.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:08:41.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:39.072" endtime="20210712 11:08:41.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:41.215" level="INFO"/>
<status status="PASS" starttime="20210712 11:08:41.215" endtime="20210712 11:08:41.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:08:41.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:08:41.216" endtime="20210712 11:08:41.216"/>
</kw>
<status status="PASS" starttime="20210712 11:08:39.071" endtime="20210712 11:08:41.217"/>
</kw>
<msg timestamp="20210712 11:08:41.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:08:39.071" endtime="20210712 11:08:41.217"/>
</kw>
<msg timestamp="20210712 11:08:41.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:39.070" endtime="20210712 11:08:41.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:08:41.217" endtime="20210712 11:08:41.218"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:08:41.222" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:08:46.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:08:46.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:41.219" endtime="20210712 11:08:46.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:46.251" level="INFO"/>
<status status="PASS" starttime="20210712 11:08:46.250" endtime="20210712 11:08:46.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:08:46.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:08:46.251" endtime="20210712 11:08:46.252"/>
</kw>
<status status="PASS" starttime="20210712 11:08:41.219" endtime="20210712 11:08:46.252"/>
</kw>
<msg timestamp="20210712 11:08:46.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:08:41.219" endtime="20210712 11:08:46.253"/>
</kw>
<msg timestamp="20210712 11:08:46.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:41.218" endtime="20210712 11:08:46.253"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:08:46.253" endtime="20210712 11:08:46.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:08:36.660" endtime="20210712 11:08:46.254"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:08:36.603" endtime="20210712 11:08:46.255"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:08:49.742" level="INFO">${random} = 85638</msg>
<status status="PASS" starttime="20210712 11:08:49.741" endtime="20210712 11:08:49.742"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:08:49.747" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-85638 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:08:53.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:08:53.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:49.743" endtime="20210712 11:08:53.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:53.729" level="INFO"/>
<status status="PASS" starttime="20210712 11:08:53.728" endtime="20210712 11:08:53.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:08:53.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:08:53.730" endtime="20210712 11:08:53.731"/>
</kw>
<status status="PASS" starttime="20210712 11:08:49.743" endtime="20210712 11:08:53.732"/>
</kw>
<msg timestamp="20210712 11:08:53.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:08:49.743" endtime="20210712 11:08:53.732"/>
</kw>
<msg timestamp="20210712 11:08:53.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:49.742" endtime="20210712 11:08:53.733"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:08:53.733" endtime="20210712 11:08:53.734"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:08:49.740" endtime="20210712 11:08:53.734"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:08:49.686" endtime="20210712 11:08:53.735"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:08:28.760" level="INFO">${random} = 37751</msg>
<status status="PASS" starttime="20210712 11:08:28.759" endtime="20210712 11:08:28.760"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:08:28.765" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-37751 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:08:33.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:08:33.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:28.761" endtime="20210712 11:08:33.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:33.143" level="INFO"/>
<status status="PASS" starttime="20210712 11:08:33.143" endtime="20210712 11:08:33.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:08:33.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:08:33.144" endtime="20210712 11:08:33.144"/>
</kw>
<status status="PASS" starttime="20210712 11:08:28.761" endtime="20210712 11:08:33.145"/>
</kw>
<msg timestamp="20210712 11:08:33.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:08:28.761" endtime="20210712 11:08:33.145"/>
</kw>
<msg timestamp="20210712 11:08:33.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:08:28.760" endtime="20210712 11:08:33.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:08:33.145" endtime="20210712 11:08:33.146"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:08:28.758" endtime="20210712 11:08:33.146"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:08:28.706" endtime="20210712 11:08:33.148"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="30352"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:10:23.087" level="INFO">${random} = 25258</msg>
<status status="PASS" starttime="20210712 11:10:23.087" endtime="20210712 11:10:23.087"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:10:23.090" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-25258 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:10:26.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:10:26.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:23.089" endtime="20210712 11:10:26.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:10:26.764" level="INFO"/>
<status status="PASS" starttime="20210712 11:10:26.764" endtime="20210712 11:10:26.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:10:26.765" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:10:26.765" endtime="20210712 11:10:26.765"/>
</kw>
<status status="PASS" starttime="20210712 11:10:23.088" endtime="20210712 11:10:26.765"/>
</kw>
<msg timestamp="20210712 11:10:26.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:10:23.088" endtime="20210712 11:10:26.766"/>
</kw>
<msg timestamp="20210712 11:10:26.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:23.087" endtime="20210712 11:10:26.766"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:10:26.766" endtime="20210712 11:10:26.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:10:23.086" endtime="20210712 11:10:26.767"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:10:23.046" endtime="20210712 11:10:26.768"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:10:10.033" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:10:12.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:10:12.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:10.032" endtime="20210712 11:10:12.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:10:12.102" level="INFO"/>
<status status="PASS" starttime="20210712 11:10:12.102" endtime="20210712 11:10:12.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:10:12.103" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:10:12.103" endtime="20210712 11:10:12.103"/>
</kw>
<status status="PASS" starttime="20210712 11:10:10.032" endtime="20210712 11:10:12.103"/>
</kw>
<msg timestamp="20210712 11:10:12.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:10:10.031" endtime="20210712 11:10:12.103"/>
</kw>
<msg timestamp="20210712 11:10:12.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:10.031" endtime="20210712 11:10:12.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:10:12.104" endtime="20210712 11:10:12.104"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:10:12.113" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:10:14.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:10:14.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:12.105" endtime="20210712 11:10:14.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:10:14.424" level="INFO"/>
<status status="PASS" starttime="20210712 11:10:14.424" endtime="20210712 11:10:14.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:10:14.425" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:10:14.424" endtime="20210712 11:10:14.425"/>
</kw>
<status status="PASS" starttime="20210712 11:10:12.105" endtime="20210712 11:10:14.425"/>
</kw>
<msg timestamp="20210712 11:10:14.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:10:12.105" endtime="20210712 11:10:14.425"/>
</kw>
<msg timestamp="20210712 11:10:14.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:12.104" endtime="20210712 11:10:14.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:10:14.426" endtime="20210712 11:10:14.426"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:10:14.433" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:10:19.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:10:19.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:14.432" endtime="20210712 11:10:19.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:10:19.539" level="INFO"/>
<status status="PASS" starttime="20210712 11:10:19.538" endtime="20210712 11:10:19.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:10:19.540" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:10:19.539" endtime="20210712 11:10:19.540"/>
</kw>
<status status="PASS" starttime="20210712 11:10:14.430" endtime="20210712 11:10:19.540"/>
</kw>
<msg timestamp="20210712 11:10:19.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:10:14.429" endtime="20210712 11:10:19.540"/>
</kw>
<msg timestamp="20210712 11:10:19.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:10:14.426" endtime="20210712 11:10:19.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:10:19.541" endtime="20210712 11:10:19.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:10:10.030" endtime="20210712 11:10:19.541"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:10:09.990" endtime="20210712 11:10:19.542"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:11:52.831" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:11:52.831" endtime="20210712 11:11:52.832"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:11:52.832" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:11:52.832" endtime="20210712 11:11:52.832"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:11:52.833" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:11:52.832" endtime="20210712 11:11:52.833"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:11:52.833" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:11:52.833" endtime="20210712 11:11:52.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:11:52.834" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:11:52.835" level="INFO">${version_file_contents} = #Mon Jul 12 11:11:13 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626088250790
clusterID=67e8b875-06db-4b9c-ace6-ce1efeb47760
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:11:52.834" endtime="20210712 11:11:52.835"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:11:52.835" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:11:52.835" endtime="20210712 11:11:52.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:11:52.835" endtime="20210712 11:11:52.836"/>
</kw>
<status status="PASS" starttime="20210712 11:11:52.834" endtime="20210712 11:11:52.836"/>
</kw>
<status status="PASS" starttime="20210712 11:11:52.833" endtime="20210712 11:11:52.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:11:52.830" endtime="20210712 11:11:52.836"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:11:52.781" endtime="20210712 11:11:52.837"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 11:12:51.188" endtime="20210712 11:12:51.188"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:12:51.194" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:14:19.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:14:19.506" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210712 11:12:51.190" endtime="20210712 11:14:19.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:14:19.508" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210712 11:14:19.507" endtime="20210712 11:14:19.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:14:19.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:14:19.508" endtime="20210712 11:14:19.509"/>
</kw>
<status status="PASS" starttime="20210712 11:12:51.189" endtime="20210712 11:14:19.509"/>
</kw>
<msg timestamp="20210712 11:14:19.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:12:51.189" endtime="20210712 11:14:19.509"/>
</kw>
<msg timestamp="20210712 11:14:19.509" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210712 11:12:51.189" endtime="20210712 11:14:19.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:14:19.510" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210712 11:14:19.510" endtime="20210712 11:14:19.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:51.187" endtime="20210712 11:14:19.510"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 11:14:19.512" endtime="20210712 11:14:19.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:14:19.516" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:14:22.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:14:22.188" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210712 11:14:19.514" endtime="20210712 11:14:22.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:14:22.189" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210712 11:14:22.188" endtime="20210712 11:14:22.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:14:22.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:14:22.189" endtime="20210712 11:14:22.190"/>
</kw>
<status status="PASS" starttime="20210712 11:14:19.514" endtime="20210712 11:14:22.190"/>
</kw>
<msg timestamp="20210712 11:14:22.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:14:19.513" endtime="20210712 11:14:22.191"/>
</kw>
<msg timestamp="20210712 11:14:22.191" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210712 11:14:19.513" endtime="20210712 11:14:22.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:14:22.191" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210712 11:14:22.191" endtime="20210712 11:14:22.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:19.511" endtime="20210712 11:14:22.192"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210712 11:12:51.134" endtime="20210712 11:14:22.193"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:25.950" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210712 11:14:25.949" endtime="20210712 11:14:25.950"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:25.950" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:25.950" endtime="20210712 11:14:25.950"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:25.951" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:25.950" endtime="20210712 11:14:25.951"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:25.951" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:25.951" endtime="20210712 11:14:25.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:25.953" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:25.953" level="INFO">${version_file_contents} = #Mon Jul 12 11:12:58 UTC 2021
cTime=1626088168132
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
nodeType=SCM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb04
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:14:25.952" endtime="20210712 11:14:25.953"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:25.954" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:14:25.953" endtime="20210712 11:14:25.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:25.954" endtime="20210712 11:14:25.954"/>
</kw>
<status status="PASS" starttime="20210712 11:14:25.952" endtime="20210712 11:14:25.954"/>
</kw>
<status status="PASS" starttime="20210712 11:14:25.952" endtime="20210712 11:14:25.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:25.948" endtime="20210712 11:14:25.955"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:25.898" endtime="20210712 11:14:25.955"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:29.676" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:14:29.676" endtime="20210712 11:14:29.676"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:29.677" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:29.676" endtime="20210712 11:14:29.677"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:29.677" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:29.677" endtime="20210712 11:14:29.677"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:29.678" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:29.678" endtime="20210712 11:14:29.678"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:29.679" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:29.680" level="INFO">${version_file_contents} = #Mon Jul 12 11:13:08 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626088250790
clusterID=67e8b875-06db-4b9c-ace6-ce1efeb47760
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:14:29.679" endtime="20210712 11:14:29.680"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:29.680" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:14:29.680" endtime="20210712 11:14:29.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:29.680" endtime="20210712 11:14:29.681"/>
</kw>
<status status="PASS" starttime="20210712 11:14:29.679" endtime="20210712 11:14:29.681"/>
</kw>
<status status="PASS" starttime="20210712 11:14:29.678" endtime="20210712 11:14:29.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:29.675" endtime="20210712 11:14:29.681"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:29.626" endtime="20210712 11:14:29.682"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:33.372" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:14:33.372" endtime="20210712 11:14:33.372"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:33.373" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:33.373" endtime="20210712 11:14:33.373"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:33.374" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:33.373" endtime="20210712 11:14:33.374"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:33.374" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:33.374" endtime="20210712 11:14:33.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:33.375" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:33.376" level="INFO">${version_file_contents} = #Mon Jul 12 11:13:08 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626088249410
clusterID=d181d3e6-8bc7-4ef2-a987-47fd7df7a297
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:14:33.375" endtime="20210712 11:14:33.376"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:33.376" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:14:33.376" endtime="20210712 11:14:33.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:33.376" endtime="20210712 11:14:33.377"/>
</kw>
<status status="PASS" starttime="20210712 11:14:33.375" endtime="20210712 11:14:33.377"/>
</kw>
<status status="PASS" starttime="20210712 11:14:33.374" endtime="20210712 11:14:33.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:33.371" endtime="20210712 11:14:33.377"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:33.321" endtime="20210712 11:14:33.378"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:37.064" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:14:37.063" endtime="20210712 11:14:37.064"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:37.064" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:37.064" endtime="20210712 11:14:37.065"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:37.065" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:37.065" endtime="20210712 11:14:37.065"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:37.066" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:37.065" endtime="20210712 11:14:37.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:37.067" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:37.067" level="INFO">${version_file_contents} = #Mon Jul 12 11:13:08 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626088250097
clusterID=cee18ec3-3f59-46fb-8ccd-278bea337f23
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:14:37.067" endtime="20210712 11:14:37.067"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:37.068" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:14:37.068" endtime="20210712 11:14:37.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:37.068" endtime="20210712 11:14:37.069"/>
</kw>
<status status="PASS" starttime="20210712 11:14:37.066" endtime="20210712 11:14:37.069"/>
</kw>
<status status="PASS" starttime="20210712 11:14:37.066" endtime="20210712 11:14:37.069"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:37.062" endtime="20210712 11:14:37.069"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:37.011" endtime="20210712 11:14:37.070"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:40.877" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:14:40.876" endtime="20210712 11:14:40.877"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:40.877" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:40.877" endtime="20210712 11:14:40.878"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:40.878" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:40.878" endtime="20210712 11:14:40.878"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:40.879" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:40.878" endtime="20210712 11:14:40.879"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:40.880" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:40.880" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:43 UTC 2021
cTime=1626088166798
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
omUuid=1e6e9ff0-eabc-4984-98be-3eaa4f907d2c
nodeType=OM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb0...</msg>
<status status="PASS" starttime="20210712 11:14:40.880" endtime="20210712 11:14:40.880"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:40.881" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:14:40.880" endtime="20210712 11:14:40.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:40.881" endtime="20210712 11:14:40.881"/>
</kw>
<status status="PASS" starttime="20210712 11:14:40.879" endtime="20210712 11:14:40.882"/>
</kw>
<status status="PASS" starttime="20210712 11:14:40.879" endtime="20210712 11:14:40.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:40.876" endtime="20210712 11:14:40.882"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:40.825" endtime="20210712 11:14:40.882"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:44.581" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:14:44.580" endtime="20210712 11:14:44.581"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:44.582" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:44.581" endtime="20210712 11:14:44.582"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:44.582" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:44.582" endtime="20210712 11:14:44.582"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:44.583" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:44.582" endtime="20210712 11:14:44.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:44.584" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:44.584" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:44 UTC 2021
cTime=1626088167515
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
omUuid=9726d99b-c1be-4070-a66b-1e4b6bd9d25c
nodeType=OM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb0...</msg>
<status status="PASS" starttime="20210712 11:14:44.584" endtime="20210712 11:14:44.584"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:44.585" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:14:44.585" endtime="20210712 11:14:44.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:44.585" endtime="20210712 11:14:44.586"/>
</kw>
<status status="PASS" starttime="20210712 11:14:44.583" endtime="20210712 11:14:44.586"/>
</kw>
<status status="PASS" starttime="20210712 11:14:44.583" endtime="20210712 11:14:44.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:44.580" endtime="20210712 11:14:44.586"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:44.530" endtime="20210712 11:14:44.587"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:48.274" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:14:48.274" endtime="20210712 11:14:48.274"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:14:48.275" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:14:48.274" endtime="20210712 11:14:48.275"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:14:48.275" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:14:48.275" endtime="20210712 11:14:48.275"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:14:48.276" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:14:48.276" endtime="20210712 11:14:48.276"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:14:48.277" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:14:48.277" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:42 UTC 2021
cTime=1626088165239
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
omUuid=8e949e5f-0360-4bae-bdcd-a9371b943b42
nodeType=OM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb0...</msg>
<status status="PASS" starttime="20210712 11:14:48.277" endtime="20210712 11:14:48.277"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:14:48.278" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:14:48.278" endtime="20210712 11:14:48.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:48.278" endtime="20210712 11:14:48.279"/>
</kw>
<status status="PASS" starttime="20210712 11:14:48.276" endtime="20210712 11:14:48.279"/>
</kw>
<status status="PASS" starttime="20210712 11:14:48.276" endtime="20210712 11:14:48.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:48.273" endtime="20210712 11:14:48.279"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:14:48.223" endtime="20210712 11:14:48.280"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:14:51.914" level="INFO">${random} = 30339</msg>
<status status="PASS" starttime="20210712 11:14:51.914" endtime="20210712 11:14:51.914"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:14:51.920" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-30339 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:14:55.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:14:55.735" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:14:51.916" endtime="20210712 11:14:55.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:14:55.737" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:14:55.736" endtime="20210712 11:14:55.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:14:55.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:14:55.737" endtime="20210712 11:14:55.738"/>
</kw>
<status status="PASS" starttime="20210712 11:14:51.916" endtime="20210712 11:14:55.738"/>
</kw>
<msg timestamp="20210712 11:14:55.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:14:51.915" endtime="20210712 11:14:55.738"/>
</kw>
<msg timestamp="20210712 11:14:55.738" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:14:51.914" endtime="20210712 11:14:55.738"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:14:55.739" endtime="20210712 11:14:55.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:51.913" endtime="20210712 11:14:55.739"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:14:51.862" endtime="20210712 11:14:55.740"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:14:59.350" level="INFO">${random} = 28382</msg>
<status status="PASS" starttime="20210712 11:14:59.350" endtime="20210712 11:14:59.350"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:14:59.355" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-28382 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:15:03.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:15:03.446" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:14:59.352" endtime="20210712 11:15:03.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:15:03.448" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:03.447" endtime="20210712 11:15:03.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:15:03.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:15:03.448" endtime="20210712 11:15:03.449"/>
</kw>
<status status="PASS" starttime="20210712 11:14:59.352" endtime="20210712 11:15:03.449"/>
</kw>
<msg timestamp="20210712 11:15:03.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:14:59.351" endtime="20210712 11:15:03.449"/>
</kw>
<msg timestamp="20210712 11:15:03.449" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:14:59.350" endtime="20210712 11:15:03.449"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:15:03.450" endtime="20210712 11:15:03.450"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:14:59.349" endtime="20210712 11:15:03.450"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:14:59.298" endtime="20210712 11:15:03.452"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:11:56.536" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:11:56.536" endtime="20210712 11:11:56.537"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:11:56.537" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:11:56.537" endtime="20210712 11:11:56.537"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:11:56.538" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:11:56.537" endtime="20210712 11:11:56.538"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:11:56.538" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:11:56.538" endtime="20210712 11:11:56.538"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:11:56.539" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:11:56.540" level="INFO">${version_file_contents} = #Mon Jul 12 11:11:13 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626088249410
clusterID=d181d3e6-8bc7-4ef2-a987-47fd7df7a297
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:11:56.539" endtime="20210712 11:11:56.540"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:11:56.540" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:11:56.540" endtime="20210712 11:11:56.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:11:56.541" endtime="20210712 11:11:56.541"/>
</kw>
<status status="PASS" starttime="20210712 11:11:56.539" endtime="20210712 11:11:56.541"/>
</kw>
<status status="PASS" starttime="20210712 11:11:56.538" endtime="20210712 11:11:56.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:11:56.535" endtime="20210712 11:11:56.541"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:11:56.486" endtime="20210712 11:11:56.542"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:15:07.034" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:15:09.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:15:09.372" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:07.030" endtime="20210712 11:15:09.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:15:09.373" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:09.372" endtime="20210712 11:15:09.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:15:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:15:09.373" endtime="20210712 11:15:09.374"/>
</kw>
<status status="PASS" starttime="20210712 11:15:07.030" endtime="20210712 11:15:09.374"/>
</kw>
<msg timestamp="20210712 11:15:09.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:15:07.029" endtime="20210712 11:15:09.374"/>
</kw>
<msg timestamp="20210712 11:15:09.375" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:07.028" endtime="20210712 11:15:09.375"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:15:09.375" endtime="20210712 11:15:09.375"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:15:09.379" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:15:11.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:15:11.747" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:09.377" endtime="20210712 11:15:11.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:15:11.748" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:11.748" endtime="20210712 11:15:11.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:15:11.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:15:11.749" endtime="20210712 11:15:11.749"/>
</kw>
<status status="PASS" starttime="20210712 11:15:09.376" endtime="20210712 11:15:11.750"/>
</kw>
<msg timestamp="20210712 11:15:11.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:15:09.376" endtime="20210712 11:15:11.750"/>
</kw>
<msg timestamp="20210712 11:15:11.750" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:09.375" endtime="20210712 11:15:11.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:15:11.750" endtime="20210712 11:15:11.751"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:15:11.754" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:15:16.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:15:16.246" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:11.752" endtime="20210712 11:15:16.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:15:16.248" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:16.247" endtime="20210712 11:15:16.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:15:16.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:15:16.248" endtime="20210712 11:15:16.248"/>
</kw>
<status status="PASS" starttime="20210712 11:15:11.752" endtime="20210712 11:15:16.249"/>
</kw>
<msg timestamp="20210712 11:15:16.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:15:11.751" endtime="20210712 11:15:16.249"/>
</kw>
<msg timestamp="20210712 11:15:16.249" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:11.751" endtime="20210712 11:15:16.249"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:15:16.250" endtime="20210712 11:15:16.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:15:07.028" endtime="20210712 11:15:16.250"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:15:06.977" endtime="20210712 11:15:16.252"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:15:19.917" level="INFO">${random} = 70039</msg>
<status status="PASS" starttime="20210712 11:15:19.917" endtime="20210712 11:15:19.917"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:15:19.922" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-70039 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:15:23.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:15:23.939" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:19.919" endtime="20210712 11:15:23.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:15:23.940" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:23.939" endtime="20210712 11:15:23.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:15:23.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:15:23.940" endtime="20210712 11:15:23.941"/>
</kw>
<status status="PASS" starttime="20210712 11:15:19.918" endtime="20210712 11:15:23.941"/>
</kw>
<msg timestamp="20210712 11:15:23.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:15:19.918" endtime="20210712 11:15:23.941"/>
</kw>
<msg timestamp="20210712 11:15:23.942" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:15:19.917" endtime="20210712 11:15:23.942"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:15:23.942" endtime="20210712 11:15:23.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:15:19.916" endtime="20210712 11:15:23.942"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:15:19.866" endtime="20210712 11:15:23.944"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:00.441" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:12:00.440" endtime="20210712 11:12:00.441"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:00.441" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:12:00.441" endtime="20210712 11:12:00.441"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:12:00.442" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:12:00.441" endtime="20210712 11:12:00.442"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:12:00.442" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:12:00.442" endtime="20210712 11:12:00.442"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:12:00.444" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:12:00.444" level="INFO">${version_file_contents} = #Mon Jul 12 11:11:12 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626088250097
clusterID=cee18ec3-3f59-46fb-8ccd-278bea337f23
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:12:00.443" endtime="20210712 11:12:00.444"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:12:00.445" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:12:00.444" endtime="20210712 11:12:00.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:00.445" endtime="20210712 11:12:00.445"/>
</kw>
<status status="PASS" starttime="20210712 11:12:00.443" endtime="20210712 11:12:00.445"/>
</kw>
<status status="PASS" starttime="20210712 11:12:00.443" endtime="20210712 11:12:00.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:00.439" endtime="20210712 11:12:00.446"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:12:00.381" endtime="20210712 11:12:00.447"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:04.382" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:12:04.381" endtime="20210712 11:12:04.382"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:04.383" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:12:04.382" endtime="20210712 11:12:04.383"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:12:04.383" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:12:04.383" endtime="20210712 11:12:04.384"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:12:04.384" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:12:04.384" endtime="20210712 11:12:04.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:12:04.385" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:12:04.386" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:43 UTC 2021
cTime=1626088166798
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
omUuid=1e6e9ff0-eabc-4984-98be-3eaa4f907d2c
nodeType=OM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb0...</msg>
<status status="PASS" starttime="20210712 11:12:04.385" endtime="20210712 11:12:04.386"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:12:04.386" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:12:04.386" endtime="20210712 11:12:04.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:04.386" endtime="20210712 11:12:04.387"/>
</kw>
<status status="PASS" starttime="20210712 11:12:04.385" endtime="20210712 11:12:04.387"/>
</kw>
<status status="PASS" starttime="20210712 11:12:04.384" endtime="20210712 11:12:04.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:04.381" endtime="20210712 11:12:04.387"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:12:04.325" endtime="20210712 11:12:04.388"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:08.568" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:12:08.567" endtime="20210712 11:12:08.568"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:08.569" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:12:08.569" endtime="20210712 11:12:08.569"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:12:08.570" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:12:08.569" endtime="20210712 11:12:08.570"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:12:08.570" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:12:08.570" endtime="20210712 11:12:08.570"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:12:08.572" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:12:08.572" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:44 UTC 2021
cTime=1626088167515
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
omUuid=9726d99b-c1be-4070-a66b-1e4b6bd9d25c
nodeType=OM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb0...</msg>
<status status="PASS" starttime="20210712 11:12:08.571" endtime="20210712 11:12:08.572"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:12:08.573" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:12:08.572" endtime="20210712 11:12:08.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:08.573" endtime="20210712 11:12:08.573"/>
</kw>
<status status="PASS" starttime="20210712 11:12:08.571" endtime="20210712 11:12:08.573"/>
</kw>
<status status="PASS" starttime="20210712 11:12:08.570" endtime="20210712 11:12:08.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:08.566" endtime="20210712 11:12:08.574"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:12:08.501" endtime="20210712 11:12:08.575"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:12.754" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:12:12.753" endtime="20210712 11:12:12.754"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:12:12.754" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:12:12.754" endtime="20210712 11:12:12.754"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:12:12.755" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:12:12.754" endtime="20210712 11:12:12.755"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:12:12.755" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:12:12.755" endtime="20210712 11:12:12.756"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:12:12.757" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:12:12.757" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:42 UTC 2021
cTime=1626088165239
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
omUuid=8e949e5f-0360-4bae-bdcd-a9371b943b42
nodeType=OM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb0...</msg>
<status status="PASS" starttime="20210712 11:12:12.756" endtime="20210712 11:12:12.757"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:12:12.758" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:12:12.757" endtime="20210712 11:12:12.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:12.758" endtime="20210712 11:12:12.758"/>
</kw>
<status status="PASS" starttime="20210712 11:12:12.756" endtime="20210712 11:12:12.759"/>
</kw>
<status status="PASS" starttime="20210712 11:12:12.756" endtime="20210712 11:12:12.759"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:12.752" endtime="20210712 11:12:12.759"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:12:12.694" endtime="20210712 11:12:12.760"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:12:17.041" level="INFO">${random} = 04199</msg>
<status status="PASS" starttime="20210712 11:12:17.041" endtime="20210712 11:12:17.041"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:12:17.049" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-04199 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:12:22.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:12:22.506" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:17.044" endtime="20210712 11:12:22.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:12:22.508" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:22.507" endtime="20210712 11:12:22.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:12:22.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:12:22.508" endtime="20210712 11:12:22.512"/>
</kw>
<status status="PASS" starttime="20210712 11:12:17.043" endtime="20210712 11:12:22.512"/>
</kw>
<msg timestamp="20210712 11:12:22.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:12:17.042" endtime="20210712 11:12:22.512"/>
</kw>
<msg timestamp="20210712 11:12:22.512" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:17.041" endtime="20210712 11:12:22.512"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:22.513" endtime="20210712 11:12:22.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:17.040" endtime="20210712 11:12:22.513"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:12:16.982" endtime="20210712 11:12:22.515"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:12:26.505" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:12:29.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:12:29.136" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:26.500" endtime="20210712 11:12:29.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:12:29.138" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:29.137" endtime="20210712 11:12:29.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:12:29.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:12:29.138" endtime="20210712 11:12:29.139"/>
</kw>
<status status="PASS" starttime="20210712 11:12:26.499" endtime="20210712 11:12:29.139"/>
</kw>
<msg timestamp="20210712 11:12:29.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:12:26.499" endtime="20210712 11:12:29.139"/>
</kw>
<msg timestamp="20210712 11:12:29.140" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:26.498" endtime="20210712 11:12:29.140"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:29.142" endtime="20210712 11:12:29.143"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:12:29.159" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:12:32.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:12:32.348" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:29.149" endtime="20210712 11:12:32.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:12:32.349" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:32.348" endtime="20210712 11:12:32.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:12:32.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:12:32.349" endtime="20210712 11:12:32.350"/>
</kw>
<status status="PASS" starttime="20210712 11:12:29.148" endtime="20210712 11:12:32.350"/>
</kw>
<msg timestamp="20210712 11:12:32.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:12:29.144" endtime="20210712 11:12:32.350"/>
</kw>
<msg timestamp="20210712 11:12:32.350" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:29.143" endtime="20210712 11:12:32.351"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:32.351" endtime="20210712 11:12:32.352"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:12:32.356" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:12:37.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:12:37.999" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:32.354" endtime="20210712 11:12:37.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:12:38.001" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:38.000" endtime="20210712 11:12:38.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:12:38.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:12:38.001" endtime="20210712 11:12:38.002"/>
</kw>
<status status="PASS" starttime="20210712 11:12:32.353" endtime="20210712 11:12:38.002"/>
</kw>
<msg timestamp="20210712 11:12:38.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:12:32.353" endtime="20210712 11:12:38.002"/>
</kw>
<msg timestamp="20210712 11:12:38.002" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:32.352" endtime="20210712 11:12:38.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:38.003" endtime="20210712 11:12:38.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:26.498" endtime="20210712 11:12:38.004"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:12:26.446" endtime="20210712 11:12:38.005"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:12:42.258" level="INFO">${random} = 26277</msg>
<status status="PASS" starttime="20210712 11:12:42.257" endtime="20210712 11:12:42.258"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:12:42.264" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-26277 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:12:47.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:12:47.089" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:42.260" endtime="20210712 11:12:47.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:12:47.090" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:47.089" endtime="20210712 11:12:47.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:12:47.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:12:47.090" endtime="20210712 11:12:47.091"/>
</kw>
<status status="PASS" starttime="20210712 11:12:42.259" endtime="20210712 11:12:47.091"/>
</kw>
<msg timestamp="20210712 11:12:47.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:12:42.259" endtime="20210712 11:12:47.092"/>
</kw>
<msg timestamp="20210712 11:12:47.092" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:12:42.258" endtime="20210712 11:12:47.092"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:12:47.092" endtime="20210712 11:12:47.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:12:42.256" endtime="20210712 11:12:47.093"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:12:42.198" endtime="20210712 11:12:47.094"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:11:49.190" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210712 11:11:49.190" endtime="20210712 11:11:49.190"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:11:49.191" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:11:49.191" endtime="20210712 11:11:49.191"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:11:49.191" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:11:49.191" endtime="20210712 11:11:49.192"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:11:49.192" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210712 11:11:49.192" endtime="20210712 11:11:49.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:11:49.193" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:11:49.194" level="INFO">${version_file_contents} = #Mon Jul 12 11:09:28 UTC 2021
cTime=1626088168132
clusterID=CID-4b8a7739-306d-47d5-a995-47d091b92cef
nodeType=SCM
scmUuid=8052a5d6-6b98-49d1-9bfb-48b36f51fb04
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:11:49.193" endtime="20210712 11:11:49.194"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:11:49.194" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:11:49.194" endtime="20210712 11:11:49.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:11:49.194" endtime="20210712 11:11:49.195"/>
</kw>
<status status="PASS" starttime="20210712 11:11:49.193" endtime="20210712 11:11:49.195"/>
</kw>
<status status="PASS" starttime="20210712 11:11:49.192" endtime="20210712 11:11:49.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:11:49.189" endtime="20210712 11:11:49.195"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:11:49.139" endtime="20210712 11:11:49.196"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="148544"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="178896"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
