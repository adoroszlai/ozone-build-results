<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210712 11:10:13.132" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:01:57.522" level="INFO">${random} = 25193</msg>
<status status="PASS" starttime="20210712 11:01:57.521" endtime="20210712 11:01:57.522"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:01:57.526" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-25193 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:02:01.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:02:01.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:57.524" endtime="20210712 11:02:01.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:02:01.412" level="INFO"/>
<status status="PASS" starttime="20210712 11:02:01.411" endtime="20210712 11:02:01.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:02:01.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:02:01.412" endtime="20210712 11:02:01.413"/>
</kw>
<status status="PASS" starttime="20210712 11:01:57.524" endtime="20210712 11:02:01.413"/>
</kw>
<msg timestamp="20210712 11:02:01.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:01:57.524" endtime="20210712 11:02:01.413"/>
</kw>
<msg timestamp="20210712 11:02:01.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:57.522" endtime="20210712 11:02:01.414"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:02:01.414" endtime="20210712 11:02:01.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:01:57.521" endtime="20210712 11:02:01.414"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:01:57.474" endtime="20210712 11:02:01.415"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:01:44.045" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:01:46.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:01:46.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:44.044" endtime="20210712 11:01:46.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:01:46.562" level="INFO"/>
<status status="PASS" starttime="20210712 11:01:46.561" endtime="20210712 11:01:46.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:01:46.562" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:01:46.562" endtime="20210712 11:01:46.562"/>
</kw>
<status status="PASS" starttime="20210712 11:01:44.043" endtime="20210712 11:01:46.563"/>
</kw>
<msg timestamp="20210712 11:01:46.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:01:44.043" endtime="20210712 11:01:46.563"/>
</kw>
<msg timestamp="20210712 11:01:46.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:44.042" endtime="20210712 11:01:46.563"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:01:46.564" endtime="20210712 11:01:46.564"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:01:46.570" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:01:48.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:01:48.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:46.569" endtime="20210712 11:01:48.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:01:48.781" level="INFO"/>
<status status="PASS" starttime="20210712 11:01:48.779" endtime="20210712 11:01:48.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:01:48.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:01:48.781" endtime="20210712 11:01:48.782"/>
</kw>
<status status="PASS" starttime="20210712 11:01:46.565" endtime="20210712 11:01:48.782"/>
</kw>
<msg timestamp="20210712 11:01:48.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:01:46.565" endtime="20210712 11:01:48.782"/>
</kw>
<msg timestamp="20210712 11:01:48.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:46.564" endtime="20210712 11:01:48.783"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:01:48.783" endtime="20210712 11:01:48.783"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:01:48.788" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:01:53.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:01:53.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:48.787" endtime="20210712 11:01:53.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:01:53.958" level="INFO"/>
<status status="PASS" starttime="20210712 11:01:53.957" endtime="20210712 11:01:53.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:01:53.959" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:01:53.958" endtime="20210712 11:01:53.959"/>
</kw>
<status status="PASS" starttime="20210712 11:01:48.785" endtime="20210712 11:01:53.959"/>
</kw>
<msg timestamp="20210712 11:01:53.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:01:48.784" endtime="20210712 11:01:53.959"/>
</kw>
<msg timestamp="20210712 11:01:53.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:01:48.784" endtime="20210712 11:01:53.960"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:01:53.960" endtime="20210712 11:01:53.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:01:44.041" endtime="20210712 11:01:53.960"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:01:43.993" endtime="20210712 11:01:53.961"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:03:13.834" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:03:16.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:03:16.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:13.830" endtime="20210712 11:03:16.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:03:16.602" level="INFO"/>
<status status="PASS" starttime="20210712 11:03:16.602" endtime="20210712 11:03:16.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:03:16.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:03:16.603" endtime="20210712 11:03:16.603"/>
</kw>
<status status="PASS" starttime="20210712 11:03:13.830" endtime="20210712 11:03:16.604"/>
</kw>
<msg timestamp="20210712 11:03:16.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:03:13.830" endtime="20210712 11:03:16.604"/>
</kw>
<msg timestamp="20210712 11:03:16.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:13.829" endtime="20210712 11:03:16.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:03:16.605" endtime="20210712 11:03:16.605"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:03:16.611" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:03:19.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:03:19.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:16.607" endtime="20210712 11:03:19.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:03:19.258" level="INFO"/>
<status status="PASS" starttime="20210712 11:03:19.257" endtime="20210712 11:03:19.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:03:19.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:03:19.258" endtime="20210712 11:03:19.259"/>
</kw>
<status status="PASS" starttime="20210712 11:03:16.607" endtime="20210712 11:03:19.259"/>
</kw>
<msg timestamp="20210712 11:03:19.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:03:16.606" endtime="20210712 11:03:19.259"/>
</kw>
<msg timestamp="20210712 11:03:19.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:16.605" endtime="20210712 11:03:19.259"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:03:19.260" endtime="20210712 11:03:19.260"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:03:19.265" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:03:24.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:03:24.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:19.262" endtime="20210712 11:03:24.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:03:24.745" level="INFO"/>
<status status="PASS" starttime="20210712 11:03:24.744" endtime="20210712 11:03:24.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:03:24.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:03:24.745" endtime="20210712 11:03:24.746"/>
</kw>
<status status="PASS" starttime="20210712 11:03:19.262" endtime="20210712 11:03:24.746"/>
</kw>
<msg timestamp="20210712 11:03:24.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:03:19.261" endtime="20210712 11:03:24.746"/>
</kw>
<msg timestamp="20210712 11:03:24.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:19.260" endtime="20210712 11:03:24.747"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:03:24.747" endtime="20210712 11:03:24.747"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:03:13.828" endtime="20210712 11:03:24.748"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:03:13.768" endtime="20210712 11:03:24.749"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:03:28.619" level="INFO">${random} = 83273</msg>
<status status="PASS" starttime="20210712 11:03:28.618" endtime="20210712 11:03:28.619"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:03:28.625" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-83273 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:03:33.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:03:33.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:28.621" endtime="20210712 11:03:33.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:03:33.050" level="INFO"/>
<status status="PASS" starttime="20210712 11:03:33.049" endtime="20210712 11:03:33.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:03:33.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:03:33.050" endtime="20210712 11:03:33.051"/>
</kw>
<status status="PASS" starttime="20210712 11:03:28.620" endtime="20210712 11:03:33.052"/>
</kw>
<msg timestamp="20210712 11:03:33.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:03:28.620" endtime="20210712 11:03:33.052"/>
</kw>
<msg timestamp="20210712 11:03:33.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:28.619" endtime="20210712 11:03:33.053"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:03:33.053" endtime="20210712 11:03:33.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:03:28.617" endtime="20210712 11:03:33.054"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:03:28.545" endtime="20210712 11:03:33.055"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:03:05.155" level="INFO">${random} = 60113</msg>
<status status="PASS" starttime="20210712 11:03:05.155" endtime="20210712 11:03:05.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:03:05.161" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-60113 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:03:10.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:03:10.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:05.158" endtime="20210712 11:03:10.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:03:10.122" level="INFO"/>
<status status="PASS" starttime="20210712 11:03:10.122" endtime="20210712 11:03:10.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:03:10.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:03:10.123" endtime="20210712 11:03:10.124"/>
</kw>
<status status="PASS" starttime="20210712 11:03:05.157" endtime="20210712 11:03:10.124"/>
</kw>
<msg timestamp="20210712 11:03:10.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:03:05.157" endtime="20210712 11:03:10.124"/>
</kw>
<msg timestamp="20210712 11:03:10.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:03:05.156" endtime="20210712 11:03:10.125"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:03:10.125" endtime="20210712 11:03:10.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:03:05.154" endtime="20210712 11:03:10.126"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:03:05.092" endtime="20210712 11:03:10.128"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="34436"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:05:07.946" level="INFO">${random} = 56635</msg>
<status status="PASS" starttime="20210712 11:05:07.945" endtime="20210712 11:05:07.946"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:05:07.949" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-56635 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:05:11.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:05:11.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:05:07.948" endtime="20210712 11:05:11.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:05:11.999" level="INFO"/>
<status status="PASS" starttime="20210712 11:05:11.998" endtime="20210712 11:05:11.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:05:12.000" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:05:11.999" endtime="20210712 11:05:12.000"/>
</kw>
<status status="PASS" starttime="20210712 11:05:07.947" endtime="20210712 11:05:12.000"/>
</kw>
<msg timestamp="20210712 11:05:12.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:05:07.947" endtime="20210712 11:05:12.000"/>
</kw>
<msg timestamp="20210712 11:05:12.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:05:07.946" endtime="20210712 11:05:12.000"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:05:12.001" endtime="20210712 11:05:12.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:05:07.944" endtime="20210712 11:05:12.001"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:05:07.894" endtime="20210712 11:05:12.003"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:04:53.767" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:04:56.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:04:56.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:04:53.766" endtime="20210712 11:04:56.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:04:56.102" level="INFO"/>
<status status="PASS" starttime="20210712 11:04:56.101" endtime="20210712 11:04:56.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:04:56.103" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:04:56.102" endtime="20210712 11:04:56.104"/>
</kw>
<status status="PASS" starttime="20210712 11:04:53.765" endtime="20210712 11:04:56.104"/>
</kw>
<msg timestamp="20210712 11:04:56.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:04:53.765" endtime="20210712 11:04:56.104"/>
</kw>
<msg timestamp="20210712 11:04:56.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:04:53.764" endtime="20210712 11:04:56.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:04:56.105" endtime="20210712 11:04:56.105"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:04:56.118" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:04:58.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:04:58.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:04:56.117" endtime="20210712 11:04:58.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:04:58.711" level="INFO"/>
<status status="PASS" starttime="20210712 11:04:58.710" endtime="20210712 11:04:58.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:04:58.711" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:04:58.711" endtime="20210712 11:04:58.711"/>
</kw>
<status status="PASS" starttime="20210712 11:04:56.116" endtime="20210712 11:04:58.712"/>
</kw>
<msg timestamp="20210712 11:04:58.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:04:56.116" endtime="20210712 11:04:58.712"/>
</kw>
<msg timestamp="20210712 11:04:58.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:04:56.105" endtime="20210712 11:04:58.712"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:04:58.713" endtime="20210712 11:04:58.713"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:04:58.722" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:05:04.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:05:04.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:04:58.720" endtime="20210712 11:05:04.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:05:04.138" level="INFO"/>
<status status="PASS" starttime="20210712 11:05:04.137" endtime="20210712 11:05:04.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:05:04.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:05:04.138" endtime="20210712 11:05:04.138"/>
</kw>
<status status="PASS" starttime="20210712 11:04:58.715" endtime="20210712 11:05:04.139"/>
</kw>
<msg timestamp="20210712 11:05:04.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:04:58.714" endtime="20210712 11:05:04.139"/>
</kw>
<msg timestamp="20210712 11:05:04.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 11:04:58.713" endtime="20210712 11:05:04.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:05:04.140" endtime="20210712 11:05:04.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:04:53.764" endtime="20210712 11:05:04.140"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:04:53.713" endtime="20210712 11:05:04.141"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:35.883" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:06:35.881" endtime="20210712 11:06:35.884"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:35.885" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:35.884" endtime="20210712 11:06:35.885"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:35.886" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:35.885" endtime="20210712 11:06:35.886"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:35.886" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:35.886" endtime="20210712 11:06:35.886"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:35.888" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:35.888" level="INFO">${version_file_contents} = #Mon Jul 12 11:06:01 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626087938326
clusterID=e7925b2f-8c20-42a9-b0d3-f9a84247b4f1
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:06:35.887" endtime="20210712 11:06:35.888"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:35.889" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:35.888" endtime="20210712 11:06:35.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:35.889" endtime="20210712 11:06:35.889"/>
</kw>
<status status="PASS" starttime="20210712 11:06:35.887" endtime="20210712 11:06:35.889"/>
</kw>
<status status="PASS" starttime="20210712 11:06:35.886" endtime="20210712 11:06:35.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:35.880" endtime="20210712 11:06:35.890"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:35.817" endtime="20210712 11:06:35.890"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 11:07:30.624" endtime="20210712 11:07:30.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:30.630" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:08:58.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:08:58.898" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210712 11:07:30.627" endtime="20210712 11:08:58.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:58.900" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210712 11:08:58.899" endtime="20210712 11:08:58.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:08:58.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:08:58.900" endtime="20210712 11:08:58.901"/>
</kw>
<status status="PASS" starttime="20210712 11:07:30.626" endtime="20210712 11:08:58.901"/>
</kw>
<msg timestamp="20210712 11:08:58.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:30.626" endtime="20210712 11:08:58.901"/>
</kw>
<msg timestamp="20210712 11:08:58.902" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210712 11:07:30.625" endtime="20210712 11:08:58.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:08:58.903" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210712 11:08:58.902" endtime="20210712 11:08:58.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:07:30.624" endtime="20210712 11:08:58.903"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 11:08:58.904" endtime="20210712 11:08:58.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:08:58.909" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:09:01.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:09:01.744" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210712 11:08:58.906" endtime="20210712 11:09:01.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:01.745" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210712 11:09:01.744" endtime="20210712 11:09:01.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:09:01.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:09:01.745" endtime="20210712 11:09:01.746"/>
</kw>
<status status="PASS" starttime="20210712 11:08:58.906" endtime="20210712 11:09:01.746"/>
</kw>
<msg timestamp="20210712 11:09:01.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:08:58.905" endtime="20210712 11:09:01.747"/>
</kw>
<msg timestamp="20210712 11:09:01.747" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210712 11:08:58.905" endtime="20210712 11:09:01.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:01.748" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210712 11:09:01.747" endtime="20210712 11:09:01.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:08:58.903" endtime="20210712 11:09:01.748"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210712 11:07:30.553" endtime="20210712 11:09:01.750"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:05.653" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210712 11:09:05.652" endtime="20210712 11:09:05.653"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:05.653" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:05.653" endtime="20210712 11:09:05.653"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:05.654" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:05.654" endtime="20210712 11:09:05.654"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:05.655" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:05.654" endtime="20210712 11:09:05.655"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:05.656" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:05.657" level="INFO">${version_file_contents} = #Mon Jul 12 11:07:38 UTC 2021
cTime=1626087849653
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
nodeType=SCM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b15
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:09:05.656" endtime="20210712 11:09:05.657"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:05.657" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:09:05.657" endtime="20210712 11:09:05.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:05.658" endtime="20210712 11:09:05.658"/>
</kw>
<status status="PASS" starttime="20210712 11:09:05.656" endtime="20210712 11:09:05.658"/>
</kw>
<status status="PASS" starttime="20210712 11:09:05.655" endtime="20210712 11:09:05.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:05.650" endtime="20210712 11:09:05.659"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:05.585" endtime="20210712 11:09:05.659"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:09.606" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:09:09.605" endtime="20210712 11:09:09.606"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:09.606" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:09.606" endtime="20210712 11:09:09.607"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:09.607" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:09.607" endtime="20210712 11:09:09.607"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:09.608" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:09.607" endtime="20210712 11:09:09.608"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:09.609" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:09.610" level="INFO">${version_file_contents} = #Mon Jul 12 11:07:49 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626087938326
clusterID=e7925b2f-8c20-42a9-b0d3-f9a84247b4f1
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:09:09.609" endtime="20210712 11:09:09.610"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:09.611" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:09:09.610" endtime="20210712 11:09:09.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:09.611" endtime="20210712 11:09:09.612"/>
</kw>
<status status="PASS" starttime="20210712 11:09:09.608" endtime="20210712 11:09:09.612"/>
</kw>
<status status="PASS" starttime="20210712 11:09:09.608" endtime="20210712 11:09:09.612"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:09.604" endtime="20210712 11:09:09.612"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:09.539" endtime="20210712 11:09:09.613"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:13.353" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:09:13.352" endtime="20210712 11:09:13.353"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:13.354" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:13.353" endtime="20210712 11:09:13.354"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:13.355" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:13.354" endtime="20210712 11:09:13.355"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:13.355" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:13.355" endtime="20210712 11:09:13.355"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:13.357" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:13.357" level="INFO">${version_file_contents} = #Mon Jul 12 11:07:49 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626087936358
clusterID=ec7a0871-5513-4b64-8fe9-1f6bed251241
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:09:13.356" endtime="20210712 11:09:13.357"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:13.358" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:09:13.357" endtime="20210712 11:09:13.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:13.358" endtime="20210712 11:09:13.359"/>
</kw>
<status status="PASS" starttime="20210712 11:09:13.356" endtime="20210712 11:09:13.359"/>
</kw>
<status status="PASS" starttime="20210712 11:09:13.356" endtime="20210712 11:09:13.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:13.352" endtime="20210712 11:09:13.359"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:13.289" endtime="20210712 11:09:13.360"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:17.138" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:09:17.138" endtime="20210712 11:09:17.139"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:17.139" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:17.139" endtime="20210712 11:09:17.139"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:17.140" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:17.139" endtime="20210712 11:09:17.140"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:17.140" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:17.140" endtime="20210712 11:09:17.140"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:17.142" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:17.142" level="INFO">${version_file_contents} = #Mon Jul 12 11:07:49 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626087939160
clusterID=ba54c61b-791b-4874-9197-6ac8fd83e78d
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 11:09:17.141" endtime="20210712 11:09:17.142"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:17.143" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 11:09:17.142" endtime="20210712 11:09:17.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:17.143" endtime="20210712 11:09:17.144"/>
</kw>
<status status="PASS" starttime="20210712 11:09:17.141" endtime="20210712 11:09:17.144"/>
</kw>
<status status="PASS" starttime="20210712 11:09:17.141" endtime="20210712 11:09:17.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:17.137" endtime="20210712 11:09:17.144"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:17.072" endtime="20210712 11:09:17.145"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:20.917" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:09:20.916" endtime="20210712 11:09:20.917"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:20.918" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:20.917" endtime="20210712 11:09:20.918"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:20.919" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:20.918" endtime="20210712 11:09:20.919"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:20.920" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:20.919" endtime="20210712 11:09:20.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:20.921" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:20.921" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:26 UTC 2021
cTime=1626087850430
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
omUuid=db037ed5-6ec1-4d0c-bb9c-1075ae55facf
nodeType=OM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b1...</msg>
<status status="PASS" starttime="20210712 11:09:20.921" endtime="20210712 11:09:20.921"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:20.922" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:09:20.922" endtime="20210712 11:09:20.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:20.923" endtime="20210712 11:09:20.923"/>
</kw>
<status status="PASS" starttime="20210712 11:09:20.920" endtime="20210712 11:09:20.923"/>
</kw>
<status status="PASS" starttime="20210712 11:09:20.920" endtime="20210712 11:09:20.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:20.915" endtime="20210712 11:09:20.924"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:20.850" endtime="20210712 11:09:20.925"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:24.730" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:09:24.729" endtime="20210712 11:09:24.730"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:24.730" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:24.730" endtime="20210712 11:09:24.730"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:24.731" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:24.731" endtime="20210712 11:09:24.731"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:24.732" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:24.731" endtime="20210712 11:09:24.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:24.733" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:24.734" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:25 UTC 2021
cTime=1626087847490
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
omUuid=544e9cb0-525a-46b8-ac4d-f446c7e619be
nodeType=OM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b1...</msg>
<status status="PASS" starttime="20210712 11:09:24.733" endtime="20210712 11:09:24.734"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:24.734" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:09:24.734" endtime="20210712 11:09:24.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:24.735" endtime="20210712 11:09:24.735"/>
</kw>
<status status="PASS" starttime="20210712 11:09:24.732" endtime="20210712 11:09:24.735"/>
</kw>
<status status="PASS" starttime="20210712 11:09:24.732" endtime="20210712 11:09:24.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:24.728" endtime="20210712 11:09:24.736"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:24.664" endtime="20210712 11:09:24.736"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:28.555" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:09:28.555" endtime="20210712 11:09:28.555"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:09:28.556" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:09:28.556" endtime="20210712 11:09:28.556"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:09:28.557" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:09:28.556" endtime="20210712 11:09:28.557"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:09:28.557" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:09:28.557" endtime="20210712 11:09:28.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:09:28.559" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:09:28.559" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:26 UTC 2021
cTime=1626087849492
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
omUuid=7d8c7a61-1abe-436f-a71e-8ea749e31ae6
nodeType=OM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b1...</msg>
<status status="PASS" starttime="20210712 11:09:28.558" endtime="20210712 11:09:28.559"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:09:28.560" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:09:28.559" endtime="20210712 11:09:28.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:28.560" endtime="20210712 11:09:28.561"/>
</kw>
<status status="PASS" starttime="20210712 11:09:28.558" endtime="20210712 11:09:28.561"/>
</kw>
<status status="PASS" starttime="20210712 11:09:28.558" endtime="20210712 11:09:28.561"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:28.554" endtime="20210712 11:09:28.561"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:09:28.493" endtime="20210712 11:09:28.562"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:09:32.386" level="INFO">${random} = 91071</msg>
<status status="PASS" starttime="20210712 11:09:32.385" endtime="20210712 11:09:32.386"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:09:32.392" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-91071 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:09:36.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:09:36.736" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:32.388" endtime="20210712 11:09:36.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:36.737" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:36.737" endtime="20210712 11:09:36.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:09:36.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:09:36.738" endtime="20210712 11:09:36.739"/>
</kw>
<status status="PASS" starttime="20210712 11:09:32.388" endtime="20210712 11:09:36.739"/>
</kw>
<msg timestamp="20210712 11:09:36.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:09:32.387" endtime="20210712 11:09:36.739"/>
</kw>
<msg timestamp="20210712 11:09:36.739" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:32.386" endtime="20210712 11:09:36.740"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:36.740" endtime="20210712 11:09:36.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:32.384" endtime="20210712 11:09:36.740"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:09:32.318" endtime="20210712 11:09:36.742"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:09:40.587" level="INFO">${random} = 73503</msg>
<status status="PASS" starttime="20210712 11:09:40.586" endtime="20210712 11:09:40.587"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:09:40.592" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-73503 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:09:44.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:09:44.827" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:40.588" endtime="20210712 11:09:44.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:44.828" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:44.828" endtime="20210712 11:09:44.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:09:44.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:09:44.829" endtime="20210712 11:09:44.829"/>
</kw>
<status status="PASS" starttime="20210712 11:09:40.588" endtime="20210712 11:09:44.830"/>
</kw>
<msg timestamp="20210712 11:09:44.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:09:40.588" endtime="20210712 11:09:44.830"/>
</kw>
<msg timestamp="20210712 11:09:44.830" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:40.587" endtime="20210712 11:09:44.830"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:44.831" endtime="20210712 11:09:44.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:40.585" endtime="20210712 11:09:44.831"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:09:40.521" endtime="20210712 11:09:44.833"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:39.689" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:06:39.689" endtime="20210712 11:06:39.689"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:39.690" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:39.689" endtime="20210712 11:06:39.690"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:39.690" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:39.690" endtime="20210712 11:06:39.691"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:39.691" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:39.691" endtime="20210712 11:06:39.692"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:39.694" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:39.694" level="INFO">${version_file_contents} = #Mon Jul 12 11:06:00 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626087936358
clusterID=ec7a0871-5513-4b64-8fe9-1f6bed251241
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:06:39.693" endtime="20210712 11:06:39.694"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:39.695" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:39.694" endtime="20210712 11:06:39.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:39.695" endtime="20210712 11:06:39.696"/>
</kw>
<status status="PASS" starttime="20210712 11:06:39.693" endtime="20210712 11:06:39.696"/>
</kw>
<status status="PASS" starttime="20210712 11:06:39.692" endtime="20210712 11:06:39.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:39.688" endtime="20210712 11:06:39.696"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:39.627" endtime="20210712 11:06:39.697"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:09:48.597" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:09:51.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:09:51.143" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:48.594" endtime="20210712 11:09:51.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:51.144" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:51.144" endtime="20210712 11:09:51.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:09:51.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:09:51.145" endtime="20210712 11:09:51.145"/>
</kw>
<status status="PASS" starttime="20210712 11:09:48.593" endtime="20210712 11:09:51.146"/>
</kw>
<msg timestamp="20210712 11:09:51.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:09:48.593" endtime="20210712 11:09:51.146"/>
</kw>
<msg timestamp="20210712 11:09:51.146" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:48.592" endtime="20210712 11:09:51.146"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:51.146" endtime="20210712 11:09:51.147"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:09:51.150" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:09:53.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:09:53.482" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:51.149" endtime="20210712 11:09:53.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:53.483" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:53.483" endtime="20210712 11:09:53.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:09:53.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:09:53.484" endtime="20210712 11:09:53.484"/>
</kw>
<status status="PASS" starttime="20210712 11:09:51.148" endtime="20210712 11:09:53.486"/>
</kw>
<msg timestamp="20210712 11:09:53.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:09:51.148" endtime="20210712 11:09:53.486"/>
</kw>
<msg timestamp="20210712 11:09:53.486" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:51.147" endtime="20210712 11:09:53.486"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:53.486" endtime="20210712 11:09:53.487"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:09:53.490" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:09:58.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:09:58.176" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:53.489" endtime="20210712 11:09:58.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:09:58.177" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:58.176" endtime="20210712 11:09:58.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:09:58.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:09:58.177" endtime="20210712 11:09:58.178"/>
</kw>
<status status="PASS" starttime="20210712 11:09:53.488" endtime="20210712 11:09:58.178"/>
</kw>
<msg timestamp="20210712 11:09:58.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:09:53.488" endtime="20210712 11:09:58.179"/>
</kw>
<msg timestamp="20210712 11:09:58.179" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:09:53.487" endtime="20210712 11:09:58.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:09:58.179" endtime="20210712 11:09:58.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:09:48.591" endtime="20210712 11:09:58.180"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:09:48.529" endtime="20210712 11:09:58.182"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:10:01.899" level="INFO">${random} = 74787</msg>
<status status="PASS" starttime="20210712 11:10:01.898" endtime="20210712 11:10:01.899"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:10:01.904" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-74787 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:10:05.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:10:05.999" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:10:01.901" endtime="20210712 11:10:05.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:10:06.000" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:10:05.999" endtime="20210712 11:10:06.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:10:06.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:10:06.001" endtime="20210712 11:10:06.002"/>
</kw>
<status status="PASS" starttime="20210712 11:10:01.900" endtime="20210712 11:10:06.002"/>
</kw>
<msg timestamp="20210712 11:10:06.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:10:01.899" endtime="20210712 11:10:06.003"/>
</kw>
<msg timestamp="20210712 11:10:06.003" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:10:01.899" endtime="20210712 11:10:06.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:10:06.003" endtime="20210712 11:10:06.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:10:01.897" endtime="20210712 11:10:06.004"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:10:01.839" endtime="20210712 11:10:06.007"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:43.489" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 11:06:43.489" endtime="20210712 11:06:43.490"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:43.490" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:43.490" endtime="20210712 11:06:43.490"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:43.491" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:43.490" endtime="20210712 11:06:43.491"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:43.492" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:43.491" endtime="20210712 11:06:43.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:43.494" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:43.494" level="INFO">${version_file_contents} = #Mon Jul 12 11:06:01 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626087939160
clusterID=ba54c61b-791b-4874-9197-6ac8fd83e78d
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:06:43.493" endtime="20210712 11:06:43.494"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:43.495" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:43.494" endtime="20210712 11:06:43.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:43.495" endtime="20210712 11:06:43.495"/>
</kw>
<status status="PASS" starttime="20210712 11:06:43.493" endtime="20210712 11:06:43.496"/>
</kw>
<status status="PASS" starttime="20210712 11:06:43.492" endtime="20210712 11:06:43.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:43.488" endtime="20210712 11:06:43.496"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:43.426" endtime="20210712 11:06:43.497"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:47.317" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:06:47.317" endtime="20210712 11:06:47.318"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:47.318" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:47.318" endtime="20210712 11:06:47.318"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:47.319" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:47.319" endtime="20210712 11:06:47.319"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:47.320" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:47.320" endtime="20210712 11:06:47.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:47.322" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:47.322" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:26 UTC 2021
cTime=1626087850430
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
omUuid=db037ed5-6ec1-4d0c-bb9c-1075ae55facf
nodeType=OM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b1...</msg>
<status status="PASS" starttime="20210712 11:06:47.321" endtime="20210712 11:06:47.322"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:47.323" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:47.323" endtime="20210712 11:06:47.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:47.324" endtime="20210712 11:06:47.324"/>
</kw>
<status status="PASS" starttime="20210712 11:06:47.321" endtime="20210712 11:06:47.324"/>
</kw>
<status status="PASS" starttime="20210712 11:06:47.320" endtime="20210712 11:06:47.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:47.316" endtime="20210712 11:06:47.325"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:47.245" endtime="20210712 11:06:47.327"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:51.185" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:06:51.185" endtime="20210712 11:06:51.186"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:51.186" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:51.186" endtime="20210712 11:06:51.186"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:51.187" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:51.186" endtime="20210712 11:06:51.187"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:51.187" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:51.187" endtime="20210712 11:06:51.187"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:51.189" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:51.189" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:25 UTC 2021
cTime=1626087847490
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
omUuid=544e9cb0-525a-46b8-ac4d-f446c7e619be
nodeType=OM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b1...</msg>
<status status="PASS" starttime="20210712 11:06:51.188" endtime="20210712 11:06:51.189"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:51.190" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:51.189" endtime="20210712 11:06:51.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:51.190" endtime="20210712 11:06:51.190"/>
</kw>
<status status="PASS" starttime="20210712 11:06:51.188" endtime="20210712 11:06:51.191"/>
</kw>
<status status="PASS" starttime="20210712 11:06:51.188" endtime="20210712 11:06:51.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:51.184" endtime="20210712 11:06:51.191"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:51.123" endtime="20210712 11:06:51.191"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:55.020" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 11:06:55.019" endtime="20210712 11:06:55.020"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:55.021" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:55.020" endtime="20210712 11:06:55.021"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:55.021" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:55.021" endtime="20210712 11:06:55.021"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:55.022" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:55.022" endtime="20210712 11:06:55.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:55.023" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:55.024" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:26 UTC 2021
cTime=1626087849492
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
omUuid=7d8c7a61-1abe-436f-a71e-8ea749e31ae6
nodeType=OM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b1...</msg>
<status status="PASS" starttime="20210712 11:06:55.023" endtime="20210712 11:06:55.024"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:55.025" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:55.024" endtime="20210712 11:06:55.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:55.025" endtime="20210712 11:06:55.026"/>
</kw>
<status status="PASS" starttime="20210712 11:06:55.023" endtime="20210712 11:06:55.026"/>
</kw>
<status status="PASS" starttime="20210712 11:06:55.022" endtime="20210712 11:06:55.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:55.018" endtime="20210712 11:06:55.026"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:54.956" endtime="20210712 11:06:55.027"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:06:58.740" level="INFO">${random} = 41890</msg>
<status status="PASS" starttime="20210712 11:06:58.740" endtime="20210712 11:06:58.740"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:06:58.746" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-41890 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:03.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:03.210" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:06:58.742" endtime="20210712 11:07:03.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:03.211" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:03.211" endtime="20210712 11:07:03.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:03.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:03.212" endtime="20210712 11:07:03.212"/>
</kw>
<status status="PASS" starttime="20210712 11:06:58.742" endtime="20210712 11:07:03.213"/>
</kw>
<msg timestamp="20210712 11:07:03.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:06:58.741" endtime="20210712 11:07:03.213"/>
</kw>
<msg timestamp="20210712 11:07:03.213" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:06:58.741" endtime="20210712 11:07:03.213"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:03.213" endtime="20210712 11:07:03.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:58.739" endtime="20210712 11:07:03.214"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:06:58.676" endtime="20210712 11:07:03.215"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:06.957" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:10.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:10.364" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:06.954" endtime="20210712 11:07:10.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:10.366" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:10.364" endtime="20210712 11:07:10.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:10.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:10.366" endtime="20210712 11:07:10.367"/>
</kw>
<status status="PASS" starttime="20210712 11:07:06.953" endtime="20210712 11:07:10.368"/>
</kw>
<msg timestamp="20210712 11:07:10.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:06.953" endtime="20210712 11:07:10.368"/>
</kw>
<msg timestamp="20210712 11:07:10.375" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:06.952" endtime="20210712 11:07:10.375"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:10.375" endtime="20210712 11:07:10.376"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:10.385" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:13.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:13.227" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:10.379" endtime="20210712 11:07:13.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:13.228" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:13.227" endtime="20210712 11:07:13.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:13.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:13.229" endtime="20210712 11:07:13.229"/>
</kw>
<status status="PASS" starttime="20210712 11:07:10.378" endtime="20210712 11:07:13.230"/>
</kw>
<msg timestamp="20210712 11:07:13.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:10.377" endtime="20210712 11:07:13.231"/>
</kw>
<msg timestamp="20210712 11:07:13.231" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:10.376" endtime="20210712 11:07:13.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:13.232" endtime="20210712 11:07:13.232"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:13.237" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:18.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:18.598" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:13.234" endtime="20210712 11:07:18.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:18.600" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:18.599" endtime="20210712 11:07:18.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:18.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:18.600" endtime="20210712 11:07:18.600"/>
</kw>
<status status="PASS" starttime="20210712 11:07:13.234" endtime="20210712 11:07:18.601"/>
</kw>
<msg timestamp="20210712 11:07:18.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:13.233" endtime="20210712 11:07:18.601"/>
</kw>
<msg timestamp="20210712 11:07:18.601" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:13.232" endtime="20210712 11:07:18.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:18.602" endtime="20210712 11:07:18.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:07:06.951" endtime="20210712 11:07:18.603"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 11:07:06.888" endtime="20210712 11:07:18.604"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 11:07:22.363" level="INFO">${random} = 49582</msg>
<status status="PASS" starttime="20210712 11:07:22.363" endtime="20210712 11:07:22.363"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 11:07:22.369" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-49582 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 11:07:26.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 11:07:26.790" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:22.365" endtime="20210712 11:07:26.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 11:07:26.792" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:26.791" endtime="20210712 11:07:26.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 11:07:26.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 11:07:26.792" endtime="20210712 11:07:26.793"/>
</kw>
<status status="PASS" starttime="20210712 11:07:22.365" endtime="20210712 11:07:26.793"/>
</kw>
<msg timestamp="20210712 11:07:26.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 11:07:22.364" endtime="20210712 11:07:26.793"/>
</kw>
<msg timestamp="20210712 11:07:26.794" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 11:07:22.364" endtime="20210712 11:07:26.794"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:07:26.794" endtime="20210712 11:07:26.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:07:22.362" endtime="20210712 11:07:26.794"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 11:07:22.300" endtime="20210712 11:07:26.796"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:31.983" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210712 11:06:31.983" endtime="20210712 11:06:31.983"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 11:06:31.984" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 11:06:31.984" endtime="20210712 11:06:31.984"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 11:06:31.985" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 11:06:31.984" endtime="20210712 11:06:31.985"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 11:06:31.985" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210712 11:06:31.985" endtime="20210712 11:06:31.985"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 11:06:31.987" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 11:06:31.987" level="INFO">${version_file_contents} = #Mon Jul 12 11:04:09 UTC 2021
cTime=1626087849653
clusterID=CID-f7006b9b-429d-4f9e-af48-5b698169d6fb
nodeType=SCM
scmUuid=8f29d37c-1836-4dc5-9aad-633c751b7b15
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 11:06:31.986" endtime="20210712 11:06:31.987"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 11:06:31.988" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 11:06:31.987" endtime="20210712 11:06:31.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 11:06:31.988" endtime="20210712 11:06:31.989"/>
</kw>
<status status="PASS" starttime="20210712 11:06:31.986" endtime="20210712 11:06:31.989"/>
</kw>
<status status="PASS" starttime="20210712 11:06:31.986" endtime="20210712 11:06:31.989"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 11:06:31.982" endtime="20210712 11:06:31.989"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 11:06:31.919" endtime="20210712 11:06:31.990"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="150056"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="184492"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
