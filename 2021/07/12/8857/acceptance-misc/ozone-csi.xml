<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210712 09:49:12.662" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-csi" source="/opt/hadoop/smoketest/csi.robot">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:01.164" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:01.166" level="INFO">${rc} = 1</msg>
<msg timestamp="20210712 09:49:01.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 09:49:01.161" endtime="20210712 09:49:01.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:01.167" level="INFO"/>
<status status="PASS" starttime="20210712 09:49:01.166" endtime="20210712 09:49:01.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:01.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210712 09:49:01.168" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210712 09:49:01.167" endtime="20210712 09:49:01.168"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:01.160" endtime="20210712 09:49:01.168"/>
</kw>
<msg timestamp="20210712 09:49:01.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 09:49:01.160" endtime="20210712 09:49:01.168"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:01.159" endtime="20210712 09:49:01.169"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:01.159" endtime="20210712 09:49:01.169"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:02.174" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:02.176" level="INFO">${rc} = 1</msg>
<msg timestamp="20210712 09:49:02.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 09:49:02.172" endtime="20210712 09:49:02.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:02.177" level="INFO"/>
<status status="PASS" starttime="20210712 09:49:02.176" endtime="20210712 09:49:02.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:02.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210712 09:49:02.178" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210712 09:49:02.177" endtime="20210712 09:49:02.178"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:02.171" endtime="20210712 09:49:02.178"/>
</kw>
<msg timestamp="20210712 09:49:02.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 09:49:02.171" endtime="20210712 09:49:02.178"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:02.170" endtime="20210712 09:49:02.179"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:02.169" endtime="20210712 09:49:02.179"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:03.184" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:03.186" level="INFO">${rc} = 1</msg>
<msg timestamp="20210712 09:49:03.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 09:49:03.181" endtime="20210712 09:49:03.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:03.187" level="INFO"/>
<status status="PASS" starttime="20210712 09:49:03.186" endtime="20210712 09:49:03.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:03.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210712 09:49:03.188" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210712 09:49:03.187" endtime="20210712 09:49:03.188"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:03.181" endtime="20210712 09:49:03.188"/>
</kw>
<msg timestamp="20210712 09:49:03.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 09:49:03.180" endtime="20210712 09:49:03.188"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:03.180" endtime="20210712 09:49:03.188"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:03.179" endtime="20210712 09:49:03.189"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:04.194" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:04.195" level="INFO">${rc} = 1</msg>
<msg timestamp="20210712 09:49:04.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 09:49:04.191" endtime="20210712 09:49:04.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:04.197" level="INFO"/>
<status status="PASS" starttime="20210712 09:49:04.196" endtime="20210712 09:49:04.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:04.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210712 09:49:04.198" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210712 09:49:04.197" endtime="20210712 09:49:04.198"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:04.191" endtime="20210712 09:49:04.199"/>
</kw>
<msg timestamp="20210712 09:49:04.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 09:49:04.190" endtime="20210712 09:49:04.199"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:04.190" endtime="20210712 09:49:04.199"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:04.189" endtime="20210712 09:49:04.199"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:05.207" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:05.210" level="INFO">${rc} = 1</msg>
<msg timestamp="20210712 09:49:05.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 09:49:05.203" endtime="20210712 09:49:05.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:05.212" level="INFO"/>
<status status="PASS" starttime="20210712 09:49:05.211" endtime="20210712 09:49:05.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:05.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210712 09:49:05.213" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210712 09:49:05.212" endtime="20210712 09:49:05.213"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:05.202" endtime="20210712 09:49:05.213"/>
</kw>
<msg timestamp="20210712 09:49:05.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 09:49:05.202" endtime="20210712 09:49:05.214"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:05.201" endtime="20210712 09:49:05.214"/>
</kw>
<status status="FAIL" starttime="20210712 09:49:05.200" endtime="20210712 09:49:05.214"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:06.220" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:06.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 09:49:06.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 09:49:06.218" endtime="20210712 09:49:06.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:06.223" level="INFO"/>
<status status="PASS" starttime="20210712 09:49:06.223" endtime="20210712 09:49:06.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:06.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 09:49:06.223" endtime="20210712 09:49:06.224"/>
</kw>
<status status="PASS" starttime="20210712 09:49:06.217" endtime="20210712 09:49:06.224"/>
</kw>
<msg timestamp="20210712 09:49:06.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 09:49:06.216" endtime="20210712 09:49:06.225"/>
</kw>
<status status="PASS" starttime="20210712 09:49:06.216" endtime="20210712 09:49:06.225"/>
</kw>
<status status="PASS" starttime="20210712 09:49:06.215" endtime="20210712 09:49:06.225"/>
</kw>
<status status="PASS" starttime="20210712 09:49:01.158" endtime="20210712 09:49:06.225"/>
</kw>
<timeout value="1 minute"/>
<status status="PASS" starttime="20210712 09:49:01.157" endtime="20210712 09:49:06.226"/>
</test>
<test id="s1-t2" name="Test CSI identity service">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 09:49:06.232" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 09:49:06.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 09:49:06.533" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20210712 09:49:06.230" endtime="20210712 09:49:06.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 09:49:06.535" level="INFO">"org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20210712 09:49:06.534" endtime="20210712 09:49:06.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 09:49:06.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 09:49:06.535" endtime="20210712 09:49:06.536"/>
</kw>
<status status="PASS" starttime="20210712 09:49:06.229" endtime="20210712 09:49:06.536"/>
</kw>
<msg timestamp="20210712 09:49:06.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 09:49:06.229" endtime="20210712 09:49:06.536"/>
</kw>
<msg timestamp="20210712 09:49:06.537" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20210712 09:49:06.228" endtime="20210712 09:49:06.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 09:49:06.537" endtime="20210712 09:49:06.537"/>
</kw>
<timeout value="1 minute"/>
<status status="PASS" starttime="20210712 09:49:06.227" endtime="20210712 09:49:06.537"/>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" starttime="20210712 09:49:01.096" endtime="20210712 09:49:06.539"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozone-csi">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
