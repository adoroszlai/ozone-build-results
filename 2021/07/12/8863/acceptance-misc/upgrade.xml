<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210712 14:27:30.448" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:18:40.479" level="INFO">${random} = 59119</msg>
<status status="PASS" starttime="20210712 14:18:40.478" endtime="20210712 14:18:40.479"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:18:40.482" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-59119 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:18:44.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:18:44.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:40.481" endtime="20210712 14:18:44.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:18:44.453" level="INFO"/>
<status status="PASS" starttime="20210712 14:18:44.452" endtime="20210712 14:18:44.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:18:44.453" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:18:44.453" endtime="20210712 14:18:44.454"/>
</kw>
<status status="PASS" starttime="20210712 14:18:40.480" endtime="20210712 14:18:44.454"/>
</kw>
<msg timestamp="20210712 14:18:44.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:18:40.480" endtime="20210712 14:18:44.454"/>
</kw>
<msg timestamp="20210712 14:18:44.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:40.479" endtime="20210712 14:18:44.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:18:44.455" endtime="20210712 14:18:44.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:18:40.477" endtime="20210712 14:18:44.456"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:18:40.426" endtime="20210712 14:18:44.457"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:18:26.167" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:18:28.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:18:28.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:26.165" endtime="20210712 14:18:28.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:18:28.997" level="INFO"/>
<status status="PASS" starttime="20210712 14:18:28.996" endtime="20210712 14:18:28.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:18:28.998" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:18:28.997" endtime="20210712 14:18:28.998"/>
</kw>
<status status="PASS" starttime="20210712 14:18:26.165" endtime="20210712 14:18:28.998"/>
</kw>
<msg timestamp="20210712 14:18:28.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:18:26.164" endtime="20210712 14:18:28.998"/>
</kw>
<msg timestamp="20210712 14:18:28.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:26.163" endtime="20210712 14:18:28.999"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:18:28.999" endtime="20210712 14:18:28.999"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:18:29.010" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:18:31.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:18:31.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:29.001" endtime="20210712 14:18:31.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:18:31.285" level="INFO"/>
<status status="PASS" starttime="20210712 14:18:31.284" endtime="20210712 14:18:31.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:18:31.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:18:31.286" endtime="20210712 14:18:31.286"/>
</kw>
<status status="PASS" starttime="20210712 14:18:29.001" endtime="20210712 14:18:31.287"/>
</kw>
<msg timestamp="20210712 14:18:31.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:18:29.000" endtime="20210712 14:18:31.287"/>
</kw>
<msg timestamp="20210712 14:18:31.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:28.999" endtime="20210712 14:18:31.287"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:18:31.287" endtime="20210712 14:18:31.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:18:31.293" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:18:36.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:18:36.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:31.291" endtime="20210712 14:18:36.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:18:36.630" level="INFO"/>
<status status="PASS" starttime="20210712 14:18:36.629" endtime="20210712 14:18:36.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:18:36.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:18:36.630" endtime="20210712 14:18:36.631"/>
</kw>
<status status="PASS" starttime="20210712 14:18:31.289" endtime="20210712 14:18:36.631"/>
</kw>
<msg timestamp="20210712 14:18:36.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:18:31.288" endtime="20210712 14:18:36.631"/>
</kw>
<msg timestamp="20210712 14:18:36.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:18:31.288" endtime="20210712 14:18:36.632"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:18:36.632" endtime="20210712 14:18:36.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:18:26.163" endtime="20210712 14:18:36.633"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 14:18:26.112" endtime="20210712 14:18:36.633"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:19:56.469" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:19:59.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:19:59.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:19:56.466" endtime="20210712 14:19:59.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:19:59.325" level="INFO"/>
<status status="PASS" starttime="20210712 14:19:59.325" endtime="20210712 14:19:59.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:19:59.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:19:59.326" endtime="20210712 14:19:59.326"/>
</kw>
<status status="PASS" starttime="20210712 14:19:56.465" endtime="20210712 14:19:59.327"/>
</kw>
<msg timestamp="20210712 14:19:59.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:19:56.465" endtime="20210712 14:19:59.327"/>
</kw>
<msg timestamp="20210712 14:19:59.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:19:56.463" endtime="20210712 14:19:59.327"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:19:59.328" endtime="20210712 14:19:59.328"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:19:59.337" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:20:02.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:20:02.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:19:59.332" endtime="20210712 14:20:02.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:20:02.127" level="INFO"/>
<status status="PASS" starttime="20210712 14:20:02.126" endtime="20210712 14:20:02.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:20:02.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:20:02.127" endtime="20210712 14:20:02.128"/>
</kw>
<status status="PASS" starttime="20210712 14:19:59.331" endtime="20210712 14:20:02.128"/>
</kw>
<msg timestamp="20210712 14:20:02.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:19:59.330" endtime="20210712 14:20:02.128"/>
</kw>
<msg timestamp="20210712 14:20:02.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:19:59.328" endtime="20210712 14:20:02.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:20:02.129" endtime="20210712 14:20:02.130"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:20:02.135" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:20:07.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:20:07.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:20:02.133" endtime="20210712 14:20:07.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:20:07.655" level="INFO"/>
<status status="PASS" starttime="20210712 14:20:07.654" endtime="20210712 14:20:07.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:20:07.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:20:07.655" endtime="20210712 14:20:07.656"/>
</kw>
<status status="PASS" starttime="20210712 14:20:02.132" endtime="20210712 14:20:07.656"/>
</kw>
<msg timestamp="20210712 14:20:07.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:20:02.132" endtime="20210712 14:20:07.656"/>
</kw>
<msg timestamp="20210712 14:20:07.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:20:02.130" endtime="20210712 14:20:07.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:20:07.657" endtime="20210712 14:20:07.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:19:56.462" endtime="20210712 14:20:07.657"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 14:19:56.394" endtime="20210712 14:20:07.659"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:20:11.469" level="INFO">${random} = 72842</msg>
<status status="PASS" starttime="20210712 14:20:11.468" endtime="20210712 14:20:11.469"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:20:11.476" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-72842 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:20:15.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:20:15.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:20:11.471" endtime="20210712 14:20:15.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:20:15.852" level="INFO"/>
<status status="PASS" starttime="20210712 14:20:15.851" endtime="20210712 14:20:15.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:20:15.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:20:15.852" endtime="20210712 14:20:15.853"/>
</kw>
<status status="PASS" starttime="20210712 14:20:11.471" endtime="20210712 14:20:15.853"/>
</kw>
<msg timestamp="20210712 14:20:15.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:20:11.470" endtime="20210712 14:20:15.854"/>
</kw>
<msg timestamp="20210712 14:20:15.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:20:11.469" endtime="20210712 14:20:15.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:20:15.854" endtime="20210712 14:20:15.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:20:11.468" endtime="20210712 14:20:15.855"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:20:11.404" endtime="20210712 14:20:15.856"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:19:47.273" level="INFO">${random} = 72551</msg>
<status status="PASS" starttime="20210712 14:19:47.272" endtime="20210712 14:19:47.273"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:19:47.282" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-72551 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:19:52.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:19:52.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:19:47.276" endtime="20210712 14:19:52.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:19:52.557" level="INFO"/>
<status status="PASS" starttime="20210712 14:19:52.556" endtime="20210712 14:19:52.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:19:52.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:19:52.557" endtime="20210712 14:19:52.558"/>
</kw>
<status status="PASS" starttime="20210712 14:19:47.275" endtime="20210712 14:19:52.558"/>
</kw>
<msg timestamp="20210712 14:19:52.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:19:47.275" endtime="20210712 14:19:52.559"/>
</kw>
<msg timestamp="20210712 14:19:52.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:19:47.273" endtime="20210712 14:19:52.559"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:19:52.559" endtime="20210712 14:19:52.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:19:47.271" endtime="20210712 14:19:52.560"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:19:47.202" endtime="20210712 14:19:52.562"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="35629"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:21:55.614" level="INFO">${random} = 91546</msg>
<status status="PASS" starttime="20210712 14:21:55.613" endtime="20210712 14:21:55.614"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:21:55.617" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-91546 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:21:59.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:21:59.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:55.616" endtime="20210712 14:21:59.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:21:59.957" level="INFO"/>
<status status="PASS" starttime="20210712 14:21:59.957" endtime="20210712 14:21:59.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:21:59.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:21:59.958" endtime="20210712 14:21:59.959"/>
</kw>
<status status="PASS" starttime="20210712 14:21:55.615" endtime="20210712 14:21:59.959"/>
</kw>
<msg timestamp="20210712 14:21:59.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:21:55.615" endtime="20210712 14:21:59.959"/>
</kw>
<msg timestamp="20210712 14:21:59.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:55.614" endtime="20210712 14:21:59.960"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:21:59.960" endtime="20210712 14:21:59.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:21:55.612" endtime="20210712 14:21:59.960"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:21:55.563" endtime="20210712 14:21:59.962"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:21:40.522" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:21:43.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:21:43.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:40.520" endtime="20210712 14:21:43.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:21:43.136" level="INFO"/>
<status status="PASS" starttime="20210712 14:21:43.135" endtime="20210712 14:21:43.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:21:43.140" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:21:43.136" endtime="20210712 14:21:43.140"/>
</kw>
<status status="PASS" starttime="20210712 14:21:40.520" endtime="20210712 14:21:43.141"/>
</kw>
<msg timestamp="20210712 14:21:43.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:21:40.519" endtime="20210712 14:21:43.141"/>
</kw>
<msg timestamp="20210712 14:21:43.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:40.519" endtime="20210712 14:21:43.141"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:21:43.141" endtime="20210712 14:21:43.142"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:21:43.151" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:21:45.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:21:45.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:43.149" endtime="20210712 14:21:45.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:21:45.664" level="INFO"/>
<status status="PASS" starttime="20210712 14:21:45.663" endtime="20210712 14:21:45.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:21:45.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:21:45.664" endtime="20210712 14:21:45.665"/>
</kw>
<status status="PASS" starttime="20210712 14:21:43.149" endtime="20210712 14:21:45.665"/>
</kw>
<msg timestamp="20210712 14:21:45.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:21:43.143" endtime="20210712 14:21:45.665"/>
</kw>
<msg timestamp="20210712 14:21:45.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:43.142" endtime="20210712 14:21:45.666"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:21:45.666" endtime="20210712 14:21:45.667"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:21:45.672" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:21:51.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:21:51.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:45.670" endtime="20210712 14:21:51.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:21:51.580" level="INFO"/>
<status status="PASS" starttime="20210712 14:21:51.580" endtime="20210712 14:21:51.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:21:51.581" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:21:51.581" endtime="20210712 14:21:51.581"/>
</kw>
<status status="PASS" starttime="20210712 14:21:45.668" endtime="20210712 14:21:51.582"/>
</kw>
<msg timestamp="20210712 14:21:51.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:21:45.667" endtime="20210712 14:21:51.582"/>
</kw>
<msg timestamp="20210712 14:21:51.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 14:21:45.667" endtime="20210712 14:21:51.582"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:21:51.582" endtime="20210712 14:21:51.583"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:21:40.518" endtime="20210712 14:21:51.583"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 14:21:40.468" endtime="20210712 14:21:51.584"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:33.440" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 14:23:33.439" endtime="20210712 14:23:33.440"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:33.441" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:33.441" endtime="20210712 14:23:33.441"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:33.442" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:33.441" endtime="20210712 14:23:33.442"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:33.443" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:33.442" endtime="20210712 14:23:33.443"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:33.444" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:33.445" level="INFO">${version_file_contents} = #Mon Jul 12 14:22:54 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626099748232
clusterID=eeb30c06-cf1d-49de-9148-1067397a1870
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 14:23:33.444" endtime="20210712 14:23:33.445"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:33.445" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:33.445" endtime="20210712 14:23:33.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:33.446" endtime="20210712 14:23:33.446"/>
</kw>
<status status="PASS" starttime="20210712 14:23:33.443" endtime="20210712 14:23:33.446"/>
</kw>
<status status="PASS" starttime="20210712 14:23:33.443" endtime="20210712 14:23:33.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:33.438" endtime="20210712 14:23:33.447"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:33.364" endtime="20210712 14:23:33.448"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 14:24:34.588" endtime="20210712 14:24:34.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:24:34.595" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:26:08.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:26:08.122" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210712 14:24:34.590" endtime="20210712 14:26:08.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:26:08.123" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210712 14:26:08.122" endtime="20210712 14:26:08.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:26:08.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:26:08.124" endtime="20210712 14:26:08.124"/>
</kw>
<status status="PASS" starttime="20210712 14:24:34.590" endtime="20210712 14:26:08.125"/>
</kw>
<msg timestamp="20210712 14:26:08.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:24:34.589" endtime="20210712 14:26:08.125"/>
</kw>
<msg timestamp="20210712 14:26:08.126" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210712 14:24:34.589" endtime="20210712 14:26:08.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:26:08.126" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210712 14:26:08.126" endtime="20210712 14:26:08.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:24:34.587" endtime="20210712 14:26:08.126"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 14:26:08.128" endtime="20210712 14:26:08.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:26:08.133" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:26:11.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:26:11.179" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210712 14:26:08.131" endtime="20210712 14:26:11.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:26:11.181" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210712 14:26:11.180" endtime="20210712 14:26:11.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:26:11.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:26:11.182" endtime="20210712 14:26:11.183"/>
</kw>
<status status="PASS" starttime="20210712 14:26:08.130" endtime="20210712 14:26:11.183"/>
</kw>
<msg timestamp="20210712 14:26:11.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:26:08.130" endtime="20210712 14:26:11.184"/>
</kw>
<msg timestamp="20210712 14:26:11.184" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210712 14:26:08.129" endtime="20210712 14:26:11.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:26:11.185" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210712 14:26:11.184" endtime="20210712 14:26:11.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:08.127" endtime="20210712 14:26:11.185"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210712 14:24:34.517" endtime="20210712 14:26:11.187"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:15.447" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210712 14:26:15.446" endtime="20210712 14:26:15.447"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:15.448" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:15.447" endtime="20210712 14:26:15.448"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:15.449" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:15.448" endtime="20210712 14:26:15.449"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:15.450" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:15.449" endtime="20210712 14:26:15.450"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:15.451" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:15.452" level="INFO">${version_file_contents} = #Mon Jul 12 14:24:42 UTC 2021
cTime=1626099643920
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
nodeType=SCM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464d
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 14:26:15.451" endtime="20210712 14:26:15.452"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:15.453" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 14:26:15.452" endtime="20210712 14:26:15.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:15.453" endtime="20210712 14:26:15.454"/>
</kw>
<status status="PASS" starttime="20210712 14:26:15.450" endtime="20210712 14:26:15.454"/>
</kw>
<status status="PASS" starttime="20210712 14:26:15.450" endtime="20210712 14:26:15.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:15.445" endtime="20210712 14:26:15.454"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:15.375" endtime="20210712 14:26:15.455"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:19.721" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 14:26:19.720" endtime="20210712 14:26:19.721"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:19.721" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:19.721" endtime="20210712 14:26:19.721"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:19.722" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:19.722" endtime="20210712 14:26:19.722"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:19.723" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:19.722" endtime="20210712 14:26:19.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:19.724" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:19.725" level="INFO">${version_file_contents} = #Mon Jul 12 14:24:51 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626099748232
clusterID=eeb30c06-cf1d-49de-9148-1067397a1870
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 14:26:19.724" endtime="20210712 14:26:19.725"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:19.726" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 14:26:19.725" endtime="20210712 14:26:19.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:19.726" endtime="20210712 14:26:19.726"/>
</kw>
<status status="PASS" starttime="20210712 14:26:19.724" endtime="20210712 14:26:19.727"/>
</kw>
<status status="PASS" starttime="20210712 14:26:19.723" endtime="20210712 14:26:19.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:19.719" endtime="20210712 14:26:19.727"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:19.648" endtime="20210712 14:26:19.728"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:23.915" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 14:26:23.914" endtime="20210712 14:26:23.915"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:23.916" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:23.915" endtime="20210712 14:26:23.916"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:23.917" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:23.916" endtime="20210712 14:26:23.917"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:23.917" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:23.917" endtime="20210712 14:26:23.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:23.919" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:23.919" level="INFO">${version_file_contents} = #Mon Jul 12 14:24:52 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626099749373
clusterID=93b5f373-d40a-4ba7-a684-a8997bb17009
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 14:26:23.918" endtime="20210712 14:26:23.919"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:23.920" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 14:26:23.919" endtime="20210712 14:26:23.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:23.920" endtime="20210712 14:26:23.921"/>
</kw>
<status status="PASS" starttime="20210712 14:26:23.918" endtime="20210712 14:26:23.921"/>
</kw>
<status status="PASS" starttime="20210712 14:26:23.917" endtime="20210712 14:26:23.921"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:23.913" endtime="20210712 14:26:23.921"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:23.847" endtime="20210712 14:26:23.922"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:28.078" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 14:26:28.077" endtime="20210712 14:26:28.078"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:28.079" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:28.078" endtime="20210712 14:26:28.079"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:28.080" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:28.079" endtime="20210712 14:26:28.080"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:28.081" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:28.081" endtime="20210712 14:26:28.081"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:28.083" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:28.084" level="INFO">${version_file_contents} = #Mon Jul 12 14:24:52 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626099749485
clusterID=3bd7086e-6c87-4150-ab5f-c381ee71cccf
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210712 14:26:28.083" endtime="20210712 14:26:28.084"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:28.084" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210712 14:26:28.084" endtime="20210712 14:26:28.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:28.085" endtime="20210712 14:26:28.086"/>
</kw>
<status status="PASS" starttime="20210712 14:26:28.082" endtime="20210712 14:26:28.086"/>
</kw>
<status status="PASS" starttime="20210712 14:26:28.082" endtime="20210712 14:26:28.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:28.076" endtime="20210712 14:26:28.086"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:28.003" endtime="20210712 14:26:28.088"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:32.395" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 14:26:32.394" endtime="20210712 14:26:32.395"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:32.396" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:32.395" endtime="20210712 14:26:32.396"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:32.397" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:32.396" endtime="20210712 14:26:32.397"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:32.397" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:32.397" endtime="20210712 14:26:32.398"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:32.399" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:32.400" level="INFO">${version_file_contents} = #Mon Jul 12 14:21:10 UTC 2021
cTime=1626099652472
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
omUuid=935d3d2f-29e8-473d-907d-5c35630cfab3
nodeType=OM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464...</msg>
<status status="PASS" starttime="20210712 14:26:32.399" endtime="20210712 14:26:32.400"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:32.401" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:26:32.400" endtime="20210712 14:26:32.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:32.401" endtime="20210712 14:26:32.401"/>
</kw>
<status status="PASS" starttime="20210712 14:26:32.398" endtime="20210712 14:26:32.402"/>
</kw>
<status status="PASS" starttime="20210712 14:26:32.398" endtime="20210712 14:26:32.402"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:32.392" endtime="20210712 14:26:32.402"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:32.317" endtime="20210712 14:26:32.403"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:36.563" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 14:26:36.562" endtime="20210712 14:26:36.563"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:36.563" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:36.563" endtime="20210712 14:26:36.564"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:36.564" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:36.564" endtime="20210712 14:26:36.564"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:36.565" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:36.564" endtime="20210712 14:26:36.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:36.566" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:36.567" level="INFO">${version_file_contents} = #Mon Jul 12 14:21:10 UTC 2021
cTime=1626099654116
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
omUuid=5cd60812-61d6-477a-8925-d5c8596e72a6
nodeType=OM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464...</msg>
<status status="PASS" starttime="20210712 14:26:36.566" endtime="20210712 14:26:36.567"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:36.567" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:26:36.567" endtime="20210712 14:26:36.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:36.568" endtime="20210712 14:26:36.568"/>
</kw>
<status status="PASS" starttime="20210712 14:26:36.566" endtime="20210712 14:26:36.568"/>
</kw>
<status status="PASS" starttime="20210712 14:26:36.565" endtime="20210712 14:26:36.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:36.561" endtime="20210712 14:26:36.569"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:36.495" endtime="20210712 14:26:36.569"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:40.616" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 14:26:40.615" endtime="20210712 14:26:40.616"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:26:40.617" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:26:40.616" endtime="20210712 14:26:40.617"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:26:40.617" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:26:40.617" endtime="20210712 14:26:40.618"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:26:40.618" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 14:26:40.618" endtime="20210712 14:26:40.618"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:26:40.620" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:26:40.620" level="INFO">${version_file_contents} = #Mon Jul 12 14:21:10 UTC 2021
cTime=1626099652914
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
omUuid=b9ad867b-d663-4edd-89c3-6e7af9487ba0
nodeType=OM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464...</msg>
<status status="PASS" starttime="20210712 14:26:40.620" endtime="20210712 14:26:40.620"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:26:40.621" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:26:40.621" endtime="20210712 14:26:40.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:40.621" endtime="20210712 14:26:40.622"/>
</kw>
<status status="PASS" starttime="20210712 14:26:40.619" endtime="20210712 14:26:40.622"/>
</kw>
<status status="PASS" starttime="20210712 14:26:40.619" endtime="20210712 14:26:40.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:40.614" endtime="20210712 14:26:40.623"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:26:40.543" endtime="20210712 14:26:40.623"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:26:44.752" level="INFO">${random} = 30270</msg>
<status status="PASS" starttime="20210712 14:26:44.752" endtime="20210712 14:26:44.752"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:26:44.759" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-30270 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:26:49.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:26:49.465" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:26:44.755" endtime="20210712 14:26:49.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:26:49.466" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:26:49.465" endtime="20210712 14:26:49.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:26:49.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:26:49.466" endtime="20210712 14:26:49.467"/>
</kw>
<status status="PASS" starttime="20210712 14:26:44.754" endtime="20210712 14:26:49.467"/>
</kw>
<msg timestamp="20210712 14:26:49.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:26:44.754" endtime="20210712 14:26:49.468"/>
</kw>
<msg timestamp="20210712 14:26:49.468" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:26:44.753" endtime="20210712 14:26:49.468"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:49.468" endtime="20210712 14:26:49.469"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:44.751" endtime="20210712 14:26:49.469"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:26:44.684" endtime="20210712 14:26:49.471"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:26:53.606" level="INFO">${random} = 12975</msg>
<status status="PASS" starttime="20210712 14:26:53.606" endtime="20210712 14:26:53.606"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:26:53.615" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-12975 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:26:58.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:26:58.569" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:26:53.610" endtime="20210712 14:26:58.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:26:58.570" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:26:58.569" endtime="20210712 14:26:58.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:26:58.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:26:58.570" endtime="20210712 14:26:58.571"/>
</kw>
<status status="PASS" starttime="20210712 14:26:53.609" endtime="20210712 14:26:58.571"/>
</kw>
<msg timestamp="20210712 14:26:58.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:26:53.609" endtime="20210712 14:26:58.572"/>
</kw>
<msg timestamp="20210712 14:26:58.572" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:26:53.606" endtime="20210712 14:26:58.572"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:26:58.572" endtime="20210712 14:26:58.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:26:53.605" endtime="20210712 14:26:58.573"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:26:53.531" endtime="20210712 14:26:58.575"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:37.823" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 14:23:37.822" endtime="20210712 14:23:37.823"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:37.824" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:37.823" endtime="20210712 14:23:37.824"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:37.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:37.824" endtime="20210712 14:23:37.825"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:37.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:37.825" endtime="20210712 14:23:37.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:37.827" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:37.827" level="INFO">${version_file_contents} = #Mon Jul 12 14:22:53 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626099749373
clusterID=93b5f373-d40a-4ba7-a684-a8997bb17009
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 14:23:37.826" endtime="20210712 14:23:37.827"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:37.828" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:37.828" endtime="20210712 14:23:37.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:37.828" endtime="20210712 14:23:37.829"/>
</kw>
<status status="PASS" starttime="20210712 14:23:37.826" endtime="20210712 14:23:37.829"/>
</kw>
<status status="PASS" starttime="20210712 14:23:37.826" endtime="20210712 14:23:37.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:37.821" endtime="20210712 14:23:37.830"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:37.748" endtime="20210712 14:23:37.831"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:27:02.665" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:27:05.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:27:05.601" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:02.661" endtime="20210712 14:27:05.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:27:05.603" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:05.602" endtime="20210712 14:27:05.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:27:05.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:27:05.603" endtime="20210712 14:27:05.604"/>
</kw>
<status status="PASS" starttime="20210712 14:27:02.661" endtime="20210712 14:27:05.605"/>
</kw>
<msg timestamp="20210712 14:27:05.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:27:02.660" endtime="20210712 14:27:05.605"/>
</kw>
<msg timestamp="20210712 14:27:05.605" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:02.659" endtime="20210712 14:27:05.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:27:05.606" endtime="20210712 14:27:05.606"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:27:05.610" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:27:08.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:27:08.474" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:05.608" endtime="20210712 14:27:08.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:27:08.475" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:08.474" endtime="20210712 14:27:08.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:27:08.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:27:08.475" endtime="20210712 14:27:08.476"/>
</kw>
<status status="PASS" starttime="20210712 14:27:05.607" endtime="20210712 14:27:08.476"/>
</kw>
<msg timestamp="20210712 14:27:08.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:27:05.607" endtime="20210712 14:27:08.477"/>
</kw>
<msg timestamp="20210712 14:27:08.477" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:05.606" endtime="20210712 14:27:08.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:27:08.477" endtime="20210712 14:27:08.478"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:27:08.482" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:27:13.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:27:13.748" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:08.480" endtime="20210712 14:27:13.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:27:13.749" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:13.749" endtime="20210712 14:27:13.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:27:13.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:27:13.750" endtime="20210712 14:27:13.751"/>
</kw>
<status status="PASS" starttime="20210712 14:27:08.479" endtime="20210712 14:27:13.751"/>
</kw>
<msg timestamp="20210712 14:27:13.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:27:08.479" endtime="20210712 14:27:13.751"/>
</kw>
<msg timestamp="20210712 14:27:13.751" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:08.478" endtime="20210712 14:27:13.752"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:27:13.752" endtime="20210712 14:27:13.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:27:02.658" endtime="20210712 14:27:13.752"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 14:27:02.592" endtime="20210712 14:27:13.754"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:27:17.917" level="INFO">${random} = 95362</msg>
<status status="PASS" starttime="20210712 14:27:17.917" endtime="20210712 14:27:17.917"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:27:17.923" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-95362 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:27:22.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:27:22.828" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:17.920" endtime="20210712 14:27:22.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:27:22.830" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:22.829" endtime="20210712 14:27:22.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:27:22.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:27:22.830" endtime="20210712 14:27:22.831"/>
</kw>
<status status="PASS" starttime="20210712 14:27:17.919" endtime="20210712 14:27:22.831"/>
</kw>
<msg timestamp="20210712 14:27:22.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:27:17.919" endtime="20210712 14:27:22.831"/>
</kw>
<msg timestamp="20210712 14:27:22.832" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:27:17.917" endtime="20210712 14:27:22.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:27:22.832" endtime="20210712 14:27:22.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:27:17.916" endtime="20210712 14:27:22.833"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:27:17.849" endtime="20210712 14:27:22.835"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:42.227" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210712 14:23:42.226" endtime="20210712 14:23:42.227"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:42.228" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:42.227" endtime="20210712 14:23:42.228"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:42.228" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:42.228" endtime="20210712 14:23:42.229"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:42.229" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:42.229" endtime="20210712 14:23:42.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:42.231" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:42.231" level="INFO">${version_file_contents} = #Mon Jul 12 14:22:54 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626099749485
clusterID=3bd7086e-6c87-4150-ab5f-c381ee71cccf
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 14:23:42.231" endtime="20210712 14:23:42.231"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:42.232" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:42.232" endtime="20210712 14:23:42.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:42.233" endtime="20210712 14:23:42.233"/>
</kw>
<status status="PASS" starttime="20210712 14:23:42.230" endtime="20210712 14:23:42.233"/>
</kw>
<status status="PASS" starttime="20210712 14:23:42.230" endtime="20210712 14:23:42.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:42.225" endtime="20210712 14:23:42.234"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:42.155" endtime="20210712 14:23:42.235"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:46.596" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 14:23:46.595" endtime="20210712 14:23:46.596"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:46.597" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:46.597" endtime="20210712 14:23:46.597"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:46.598" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:46.597" endtime="20210712 14:23:46.598"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:46.598" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:46.598" endtime="20210712 14:23:46.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:46.600" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:46.601" level="INFO">${version_file_contents} = #Mon Jul 12 14:21:10 UTC 2021
cTime=1626099652472
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
omUuid=935d3d2f-29e8-473d-907d-5c35630cfab3
nodeType=OM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464...</msg>
<status status="PASS" starttime="20210712 14:23:46.600" endtime="20210712 14:23:46.601"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:46.602" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:46.601" endtime="20210712 14:23:46.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:46.602" endtime="20210712 14:23:46.602"/>
</kw>
<status status="PASS" starttime="20210712 14:23:46.599" endtime="20210712 14:23:46.602"/>
</kw>
<status status="PASS" starttime="20210712 14:23:46.599" endtime="20210712 14:23:46.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:46.595" endtime="20210712 14:23:46.603"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:46.524" endtime="20210712 14:23:46.603"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:50.975" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 14:23:50.974" endtime="20210712 14:23:50.975"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:50.976" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:50.975" endtime="20210712 14:23:50.976"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:50.976" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:50.976" endtime="20210712 14:23:50.977"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:50.977" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:50.977" endtime="20210712 14:23:50.977"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:50.979" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:50.979" level="INFO">${version_file_contents} = #Mon Jul 12 14:21:10 UTC 2021
cTime=1626099654116
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
omUuid=5cd60812-61d6-477a-8925-d5c8596e72a6
nodeType=OM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464...</msg>
<status status="PASS" starttime="20210712 14:23:50.978" endtime="20210712 14:23:50.979"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:50.980" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:50.979" endtime="20210712 14:23:50.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:50.980" endtime="20210712 14:23:50.981"/>
</kw>
<status status="PASS" starttime="20210712 14:23:50.978" endtime="20210712 14:23:50.981"/>
</kw>
<status status="PASS" starttime="20210712 14:23:50.978" endtime="20210712 14:23:50.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:50.973" endtime="20210712 14:23:50.981"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:50.903" endtime="20210712 14:23:50.982"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:55.244" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210712 14:23:55.243" endtime="20210712 14:23:55.244"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:55.245" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:55.244" endtime="20210712 14:23:55.245"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:55.245" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:55.245" endtime="20210712 14:23:55.245"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:55.246" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:55.246" endtime="20210712 14:23:55.246"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:55.248" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:55.248" level="INFO">${version_file_contents} = #Mon Jul 12 14:21:10 UTC 2021
cTime=1626099652914
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
omUuid=b9ad867b-d663-4edd-89c3-6e7af9487ba0
nodeType=OM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464...</msg>
<status status="PASS" starttime="20210712 14:23:55.248" endtime="20210712 14:23:55.248"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:55.249" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:55.248" endtime="20210712 14:23:55.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:55.249" endtime="20210712 14:23:55.250"/>
</kw>
<status status="PASS" starttime="20210712 14:23:55.247" endtime="20210712 14:23:55.250"/>
</kw>
<status status="PASS" starttime="20210712 14:23:55.246" endtime="20210712 14:23:55.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:55.242" endtime="20210712 14:23:55.250"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:55.173" endtime="20210712 14:23:55.251"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:23:59.426" level="INFO">${random} = 48255</msg>
<status status="PASS" starttime="20210712 14:23:59.426" endtime="20210712 14:23:59.427"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:23:59.433" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-48255 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:24:04.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:24:04.994" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:23:59.429" endtime="20210712 14:24:04.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:24:04.995" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:04.994" endtime="20210712 14:24:04.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:24:04.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:24:04.995" endtime="20210712 14:24:04.996"/>
</kw>
<status status="PASS" starttime="20210712 14:23:59.428" endtime="20210712 14:24:04.997"/>
</kw>
<msg timestamp="20210712 14:24:04.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:23:59.428" endtime="20210712 14:24:04.997"/>
</kw>
<msg timestamp="20210712 14:24:04.997" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:23:59.427" endtime="20210712 14:24:04.997"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:24:04.998" endtime="20210712 14:24:04.998"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:59.425" endtime="20210712 14:24:04.998"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:23:59.353" endtime="20210712 14:24:05.000"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:24:09.229" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:24:12.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:24:12.375" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:09.225" endtime="20210712 14:24:12.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:24:12.377" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:12.376" endtime="20210712 14:24:12.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:24:12.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:24:12.377" endtime="20210712 14:24:12.378"/>
</kw>
<status status="PASS" starttime="20210712 14:24:09.224" endtime="20210712 14:24:12.378"/>
</kw>
<msg timestamp="20210712 14:24:12.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:24:09.224" endtime="20210712 14:24:12.379"/>
</kw>
<msg timestamp="20210712 14:24:12.380" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:09.222" endtime="20210712 14:24:12.380"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:24:12.380" endtime="20210712 14:24:12.381"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:24:12.389" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:24:15.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:24:15.374" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:12.386" endtime="20210712 14:24:15.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:24:15.381" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:15.375" endtime="20210712 14:24:15.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:24:15.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:24:15.382" endtime="20210712 14:24:15.382"/>
</kw>
<status status="PASS" starttime="20210712 14:24:12.382" endtime="20210712 14:24:15.383"/>
</kw>
<msg timestamp="20210712 14:24:15.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:24:12.382" endtime="20210712 14:24:15.383"/>
</kw>
<msg timestamp="20210712 14:24:15.383" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:12.381" endtime="20210712 14:24:15.383"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:24:15.383" endtime="20210712 14:24:15.384"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:24:15.394" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:24:21.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:24:21.424" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:15.390" endtime="20210712 14:24:21.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:24:21.425" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:21.424" endtime="20210712 14:24:21.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:24:21.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:24:21.426" endtime="20210712 14:24:21.427"/>
</kw>
<status status="PASS" starttime="20210712 14:24:15.389" endtime="20210712 14:24:21.427"/>
</kw>
<msg timestamp="20210712 14:24:21.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:24:15.388" endtime="20210712 14:24:21.427"/>
</kw>
<msg timestamp="20210712 14:24:21.427" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:15.384" endtime="20210712 14:24:21.428"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:24:21.428" endtime="20210712 14:24:21.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:24:09.221" endtime="20210712 14:24:21.429"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210712 14:24:09.136" endtime="20210712 14:24:21.430"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 14:24:25.616" level="INFO">${random} = 22351</msg>
<status status="PASS" starttime="20210712 14:24:25.615" endtime="20210712 14:24:25.616"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 14:24:25.624" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-22351 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 14:24:30.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 14:24:30.433" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:25.619" endtime="20210712 14:24:30.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 14:24:30.435" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:30.434" endtime="20210712 14:24:30.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 14:24:30.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 14:24:30.435" endtime="20210712 14:24:30.436"/>
</kw>
<status status="PASS" starttime="20210712 14:24:25.618" endtime="20210712 14:24:30.436"/>
</kw>
<msg timestamp="20210712 14:24:30.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 14:24:25.618" endtime="20210712 14:24:30.437"/>
</kw>
<msg timestamp="20210712 14:24:30.437" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210712 14:24:25.616" endtime="20210712 14:24:30.437"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:24:30.437" endtime="20210712 14:24:30.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:24:25.614" endtime="20210712 14:24:30.438"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210712 14:24:25.533" endtime="20210712 14:24:30.439"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:29.079" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210712 14:23:29.078" endtime="20210712 14:23:29.079"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210712 14:23:29.081" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210712 14:23:29.079" endtime="20210712 14:23:29.081"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210712 14:23:29.082" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210712 14:23:29.081" endtime="20210712 14:23:29.082"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210712 14:23:29.083" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210712 14:23:29.082" endtime="20210712 14:23:29.083"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210712 14:23:29.085" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210712 14:23:29.085" level="INFO">${version_file_contents} = #Mon Jul 12 14:20:43 UTC 2021
cTime=1626099643920
clusterID=CID-70c5e90d-b1bd-42cd-ac43-551bc08d1822
nodeType=SCM
scmUuid=496c850b-c618-4802-bc1e-bc49ac94464d
layoutVersion=0
</msg>
<status status="PASS" starttime="20210712 14:23:29.084" endtime="20210712 14:23:29.085"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210712 14:23:29.087" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210712 14:23:29.085" endtime="20210712 14:23:29.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 14:23:29.087" endtime="20210712 14:23:29.088"/>
</kw>
<status status="PASS" starttime="20210712 14:23:29.083" endtime="20210712 14:23:29.088"/>
</kw>
<status status="PASS" starttime="20210712 14:23:29.083" endtime="20210712 14:23:29.088"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 14:23:29.076" endtime="20210712 14:23:29.089"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210712 14:23:28.997" endtime="20210712 14:23:29.090"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="162147"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="197776"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
