<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210712 13:27:11.862" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:12:40.028" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:12:40.028" endtime="20210712 13:12:40.028"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:12:40.029" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:12:40.029" endtime="20210712 13:12:40.031"/>
</kw>
<status status="PASS" starttime="20210712 13:12:40.027" endtime="20210712 13:12:40.031"/>
</kw>
<msg timestamp="20210712 13:12:40.032" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:12:40.027" endtime="20210712 13:12:40.032"/>
</kw>
<status status="PASS" starttime="20210712 13:12:40.026" endtime="20210712 13:12:40.032"/>
</kw>
<msg timestamp="20210712 13:12:40.032" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:12:40.025" endtime="20210712 13:12:40.032"/>
</kw>
<msg timestamp="20210712 13:12:40.033" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:12:40.024" endtime="20210712 13:12:40.033"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:12:40.034" level="INFO">${random} = 55197</msg>
<status status="PASS" starttime="20210712 13:12:40.033" endtime="20210712 13:12:40.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:40.041" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-55197 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:44.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:44.356" level="INFO">${output} = 2021-07-12 13:12:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:12:40.036" endtime="20210712 13:12:44.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:44.357" level="INFO">2021-07-12 13:12:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:12:42 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-07-12 13:12:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:12:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0D04AD1C2FDF-&gt;6a2c2d42-2f63-4509-9e5d-1454ab68a5f7
2021-07-12 13:12:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210712 13:12:44.356" endtime="20210712 13:12:44.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:44.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:44.358" endtime="20210712 13:12:44.358"/>
</kw>
<status status="PASS" starttime="20210712 13:12:40.036" endtime="20210712 13:12:44.359"/>
</kw>
<msg timestamp="20210712 13:12:44.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:40.035" endtime="20210712 13:12:44.359"/>
</kw>
<msg timestamp="20210712 13:12:44.359" level="INFO">${result} = 2021-07-12 13:12:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:12:40.034" endtime="20210712 13:12:44.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:44.363" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:46.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:46.440" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:12 o3fs://bucket1.volume1.om/ozone-55197
dr...</msg>
<status status="PASS" starttime="20210712 13:12:44.361" endtime="20210712 13:12:46.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:46.441" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:12 o3fs://bucket1.volume1.om/ozone-55197
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:12:46.440" endtime="20210712 13:12:46.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:46.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:46.441" endtime="20210712 13:12:46.442"/>
</kw>
<status status="PASS" starttime="20210712 13:12:44.360" endtime="20210712 13:12:46.442"/>
</kw>
<msg timestamp="20210712 13:12:46.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:44.360" endtime="20210712 13:12:46.442"/>
</kw>
<msg timestamp="20210712 13:12:46.443" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:12 o3fs://bucket1.volume1.om/ozone-55197
dr...</msg>
<status status="PASS" starttime="20210712 13:12:44.359" endtime="20210712 13:12:46.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:12:46.443" endtime="20210712 13:12:46.443"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:46.447" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-55197 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:50.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:50.008" level="INFO">${output} = 2021-07-12 13:12:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:12:46.445" endtime="20210712 13:12:50.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:50.010" level="INFO">2021-07-12 13:12:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:12:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210712 13:12:50.009" endtime="20210712 13:12:50.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:50.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:50.010" endtime="20210712 13:12:50.011"/>
</kw>
<status status="PASS" starttime="20210712 13:12:46.445" endtime="20210712 13:12:50.011"/>
</kw>
<msg timestamp="20210712 13:12:50.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:46.444" endtime="20210712 13:12:50.011"/>
</kw>
<msg timestamp="20210712 13:12:50.012" level="INFO">${result} = 2021-07-12 13:12:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:12:46.444" endtime="20210712 13:12:50.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:12:50.013" endtime="20210712 13:12:50.013"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 13:12:40.023" endtime="20210712 13:12:50.013"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210712 13:12:39.954" endtime="20210712 13:12:50.015"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:55.203" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:55.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:55.210" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:12:55.199" endtime="20210712 13:12:55.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:55.211" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:12:55.211" endtime="20210712 13:12:55.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:55.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:55.211" endtime="20210712 13:12:55.212"/>
</kw>
<status status="PASS" starttime="20210712 13:12:55.198" endtime="20210712 13:12:55.212"/>
</kw>
<msg timestamp="20210712 13:12:55.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:55.198" endtime="20210712 13:12:55.213"/>
</kw>
<msg timestamp="20210712 13:12:55.213" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:12:55.197" endtime="20210712 13:12:55.213"/>
</kw>
<msg timestamp="20210712 13:12:55.213" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:12:55.197" endtime="20210712 13:12:55.214"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:12:55.219" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:12:55.218" endtime="20210712 13:12:55.219"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:12:55.220" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:12:55.219" endtime="20210712 13:12:55.220"/>
</kw>
<status status="PASS" starttime="20210712 13:12:55.218" endtime="20210712 13:12:55.220"/>
</kw>
<msg timestamp="20210712 13:12:55.220" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:12:55.217" endtime="20210712 13:12:55.220"/>
</kw>
<status status="PASS" starttime="20210712 13:12:55.216" endtime="20210712 13:12:55.220"/>
</kw>
<msg timestamp="20210712 13:12:55.220" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:12:55.216" endtime="20210712 13:12:55.221"/>
</kw>
<msg timestamp="20210712 13:12:55.221" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:12:55.214" endtime="20210712 13:12:55.221"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:55.225" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:13:42.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:13:42.045" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:12:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:57 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210712 13:12:55.223" endtime="20210712 13:13:42.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:13:42.046" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:12:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:12:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-07-12 13:12:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:12:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9AF93B495813-&gt;b3c7bf30-dcb7-4594-8405-ef50058c8dea
2021-07-12 13:12:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-07-12 13:12:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:12:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1062FF271BB9-&gt;6a2c2d42-2f63-4509-9e5d-1454ab68a5f7
2021-07-12 13:12:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:12:59 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-07-12 13:12:59 INFO  JobSubmitter:198 - number of splits:3
2021-07-12 13:13:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1626095461666_0001
2021-07-12 13:13:00 INFO  YarnClientImpl:273 - Submitted application application_1626095461666_0001
2021-07-12 13:13:00 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1626095461666_0001/
2021-07-12 13:13:00 INFO  Job:1339 - Running job: job_1626095461666_0001
2021-07-12 13:13:11 INFO  Job:1360 - Job job_1626095461666_0001 running in uber mode : false
2021-07-12 13:13:11 INFO  Job:1367 -  map 0% reduce 0%
2021-07-12 13:13:18 INFO  Job:1367 -  map 33% reduce 0%
2021-07-12 13:13:24 INFO  Job:1367 -  map 67% reduce 0%
2021-07-12 13:13:29 INFO  Job:1367 -  map 100% reduce 0%
2021-07-12 13:13:37 INFO  Job:1367 -  map 100% reduce 100%
2021-07-12 13:13:41 INFO  Job:1378 - Job job_1626095461666_0001 completed successfully
2021-07-12 13:13:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=630297
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46716
		Total time spent by all reduces in occupied slots (ms)=27012
		Total time spent by all map tasks (ms)=11679
		Total time spent by all reduce tasks (ms)=6753
		Total vcore-milliseconds taken by all map tasks=11679
		Total vcore-milliseconds taken by all reduce tasks=6753
		Total megabyte-milliseconds taken by all map tasks=47837184
		Total megabyte-milliseconds taken by all reduce tasks=27660288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1339002880
		Virtual memory (bytes) snapshot=15811260416
		Total committed heap usage (bytes)=1077936128
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.271 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210712 13:13:42.045" endtime="20210712 13:13:42.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:13:42.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:13:42.046" endtime="20210712 13:13:42.047"/>
</kw>
<status status="PASS" starttime="20210712 13:12:55.222" endtime="20210712 13:13:42.047"/>
</kw>
<msg timestamp="20210712 13:13:42.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:55.222" endtime="20210712 13:13:42.048"/>
</kw>
<msg timestamp="20210712 13:13:42.048" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:12:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:12:57 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210712 13:12:55.221" endtime="20210712 13:13:42.048"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:13:42.048" endtime="20210712 13:13:42.049"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:12:55.196" endtime="20210712 13:13:42.049"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:13:42.055" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:13:42.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:13:42.064" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:13:42.053" endtime="20210712 13:13:42.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:13:42.066" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:13:42.064" endtime="20210712 13:13:42.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:13:42.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:13:42.066" endtime="20210712 13:13:42.067"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.052" endtime="20210712 13:13:42.067"/>
</kw>
<msg timestamp="20210712 13:13:42.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:13:42.052" endtime="20210712 13:13:42.068"/>
</kw>
<msg timestamp="20210712 13:13:42.068" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:13:42.051" endtime="20210712 13:13:42.068"/>
</kw>
<msg timestamp="20210712 13:13:42.068" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:13:42.051" endtime="20210712 13:13:42.068"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:13:42.069" level="INFO">${random} = lafZ1F55</msg>
<status status="PASS" starttime="20210712 13:13:42.069" endtime="20210712 13:13:42.069"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:13:42.074" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:13:42.074" endtime="20210712 13:13:42.074"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:13:42.075" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:13:42.074" endtime="20210712 13:13:42.075"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.073" endtime="20210712 13:13:42.075"/>
</kw>
<msg timestamp="20210712 13:13:42.075" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:13:42.072" endtime="20210712 13:13:42.075"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.071" endtime="20210712 13:13:42.076"/>
</kw>
<msg timestamp="20210712 13:13:42.076" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:13:42.071" endtime="20210712 13:13:42.076"/>
</kw>
<msg timestamp="20210712 13:13:42.076" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:13:42.069" endtime="20210712 13:13:42.076"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:13:42.080" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:13:42.080" endtime="20210712 13:13:42.080"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:13:42.081" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:13:42.081" endtime="20210712 13:13:42.081"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.079" endtime="20210712 13:13:42.081"/>
</kw>
<msg timestamp="20210712 13:13:42.082" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:13:42.079" endtime="20210712 13:13:42.082"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.078" endtime="20210712 13:13:42.082"/>
</kw>
<msg timestamp="20210712 13:13:42.082" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210712 13:13:42.077" endtime="20210712 13:13:42.082"/>
</kw>
<msg timestamp="20210712 13:13:42.083" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210712 13:13:42.076" endtime="20210712 13:13:42.083"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:13:42.087" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:13:42.086" endtime="20210712 13:13:42.087"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:13:42.088" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:13:42.087" endtime="20210712 13:13:42.088"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.086" endtime="20210712 13:13:42.088"/>
</kw>
<msg timestamp="20210712 13:13:42.088" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:13:42.085" endtime="20210712 13:13:42.088"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.084" endtime="20210712 13:13:42.089"/>
</kw>
<msg timestamp="20210712 13:13:42.089" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-lafZ1F55.txt</msg>
<status status="PASS" starttime="20210712 13:13:42.084" endtime="20210712 13:13:42.089"/>
</kw>
<msg timestamp="20210712 13:13:42.089" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-lafZ1F55.txt</msg>
<status status="PASS" starttime="20210712 13:13:42.083" endtime="20210712 13:13:42.089"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:13:42.093" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-lafZ1F55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:14:20.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:14:20.436" level="INFO">${output} = 2021-07-12 13:13:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:13:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210712 13:13:42.091" endtime="20210712 13:14:20.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:14:20.438" level="INFO">2021-07-12 13:13:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:13:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:13:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:13:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:13:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-07-12 13:13:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:13:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7DA71C5BACC0-&gt;6a2c2d42-2f63-4509-9e5d-1454ab68a5f7
2021-07-12 13:13:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:13:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-07-12 13:13:46 INFO  JobSubmitter:198 - number of splits:3
2021-07-12 13:13:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A59518E85A41-&gt;b3c7bf30-dcb7-4594-8405-ef50058c8dea
2021-07-12 13:13:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:13:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1626095461666_0002
2021-07-12 13:13:46 INFO  YarnClientImpl:273 - Submitted application application_1626095461666_0002
2021-07-12 13:13:46 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1626095461666_0002/
2021-07-12 13:13:46 INFO  Job:1339 - Running job: job_1626095461666_0002
2021-07-12 13:13:54 INFO  Job:1360 - Job job_1626095461666_0002 running in uber mode : false
2021-07-12 13:13:54 INFO  Job:1367 -  map 0% reduce 0%
2021-07-12 13:14:01 INFO  Job:1367 -  map 33% reduce 0%
2021-07-12 13:14:06 INFO  Job:1367 -  map 67% reduce 0%
2021-07-12 13:14:12 INFO  Job:1367 -  map 100% reduce 0%
2021-07-12 13:14:16 INFO  Job:1367 -  map 100% reduce 100%
2021-07-12 13:14:19 INFO  Job:1378 - Job job_1626095461666_0002 completed successfully
2021-07-12 13:14:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=693151
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46340
		Total time spent by all reduces in occupied slots (ms)=16648
		Total time spent by all map tasks (ms)=11585
		Total time spent by all reduce tasks (ms)=4162
		Total vcore-milliseconds taken by all map tasks=11585
		Total vcore-milliseconds taken by all reduce tasks=4162
		Total megabyte-milliseconds taken by all map tasks=47452160
		Total megabyte-milliseconds taken by all reduce tasks=17047552
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=585
		CPU time spent (ms)=8560
		Physical memory (bytes) snapshot=1446944768
		Virtual memory (bytes) snapshot=15810387968
		Total committed heap usage (bytes)=1236795392
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210712 13:14:20.437" endtime="20210712 13:14:20.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:14:20.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:14:20.438" endtime="20210712 13:14:20.439"/>
</kw>
<status status="PASS" starttime="20210712 13:13:42.090" endtime="20210712 13:14:20.439"/>
</kw>
<msg timestamp="20210712 13:14:20.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:13:42.090" endtime="20210712 13:14:20.440"/>
</kw>
<msg timestamp="20210712 13:14:20.440" level="INFO">${output} = 2021-07-12 13:13:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:13:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210712 13:13:42.089" endtime="20210712 13:14:20.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:14:20.440" endtime="20210712 13:14:20.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:14:20.441" endtime="20210712 13:14:20.442"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:13:42.050" endtime="20210712 13:14:20.442"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210712 13:12:55.127" endtime="20210712 13:14:20.444"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:14:25.808" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:14:25.807" endtime="20210712 13:14:25.808"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:14:25.809" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:14:25.808" endtime="20210712 13:14:25.809"/>
</kw>
<status status="PASS" starttime="20210712 13:14:25.807" endtime="20210712 13:14:25.809"/>
</kw>
<msg timestamp="20210712 13:14:25.809" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:14:25.806" endtime="20210712 13:14:25.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:14:25.810" endtime="20210712 13:14:25.811"/>
</kw>
<msg timestamp="20210712 13:14:25.811" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:14:25.809" endtime="20210712 13:14:25.811"/>
</kw>
<status status="PASS" starttime="20210712 13:14:25.805" endtime="20210712 13:14:25.811"/>
</kw>
<msg timestamp="20210712 13:14:25.811" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:14:25.804" endtime="20210712 13:14:25.811"/>
</kw>
<msg timestamp="20210712 13:14:25.812" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:14:25.803" endtime="20210712 13:14:25.812"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:14:25.812" level="INFO">${random} = 47019</msg>
<status status="PASS" starttime="20210712 13:14:25.812" endtime="20210712 13:14:25.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:14:25.819" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-47019 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:14:29.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:14:29.767" level="INFO">${output} = 2021-07-12 13:14:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:14:25.814" endtime="20210712 13:14:29.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:14:29.768" level="INFO">2021-07-12 13:14:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:14:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-07-12 13:14:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:14:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-65E72608FE90-&gt;6a2c2d42-2f63-4509-9e5d-1454ab68a5f7
2021-07-12 13:14:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210712 13:14:29.767" endtime="20210712 13:14:29.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:14:29.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:14:29.768" endtime="20210712 13:14:29.769"/>
</kw>
<status status="PASS" starttime="20210712 13:14:25.813" endtime="20210712 13:14:29.769"/>
</kw>
<msg timestamp="20210712 13:14:29.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:14:25.813" endtime="20210712 13:14:29.770"/>
</kw>
<msg timestamp="20210712 13:14:29.770" level="INFO">${result} = 2021-07-12 13:14:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:14:25.813" endtime="20210712 13:14:29.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:14:29.775" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:14:31.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:14:31.887" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:14 ofs://om/volume1/bucket1/ozone-47019
-rw-...</msg>
<status status="PASS" starttime="20210712 13:14:29.772" endtime="20210712 13:14:31.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:14:31.888" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:14 ofs://om/volume1/bucket1/ozone-47019
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:12 ofs://om/volume1/bucket1/ozone-55197
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:13 ofs://om/volume1/bucket1/wordcount-lafZ1F55.txt</msg>
<status status="PASS" starttime="20210712 13:14:31.887" endtime="20210712 13:14:31.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:14:31.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:14:31.889" endtime="20210712 13:14:31.889"/>
</kw>
<status status="PASS" starttime="20210712 13:14:29.771" endtime="20210712 13:14:31.890"/>
</kw>
<msg timestamp="20210712 13:14:31.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:14:29.771" endtime="20210712 13:14:31.890"/>
</kw>
<msg timestamp="20210712 13:14:31.890" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-07-12 13:14 ofs://om/volume1/bucket1/ozone-47019
-rw-...</msg>
<status status="PASS" starttime="20210712 13:14:29.770" endtime="20210712 13:14:31.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:14:31.890" endtime="20210712 13:14:31.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:14:31.895" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-47019 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:14:35.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:14:35.355" level="INFO">${output} = 2021-07-12 13:14:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:14:31.893" endtime="20210712 13:14:35.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:14:35.356" level="INFO">2021-07-12 13:14:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:14:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210712 13:14:35.355" endtime="20210712 13:14:35.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:14:35.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:14:35.357" endtime="20210712 13:14:35.357"/>
</kw>
<status status="PASS" starttime="20210712 13:14:31.892" endtime="20210712 13:14:35.358"/>
</kw>
<msg timestamp="20210712 13:14:35.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:14:31.892" endtime="20210712 13:14:35.358"/>
</kw>
<msg timestamp="20210712 13:14:35.359" level="INFO">${result} = 2021-07-12 13:14:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 ...</msg>
<status status="PASS" starttime="20210712 13:14:31.891" endtime="20210712 13:14:35.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:14:35.360" endtime="20210712 13:14:35.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 13:14:25.802" endtime="20210712 13:14:35.361"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210712 13:14:25.736" endtime="20210712 13:14:35.362"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:14:40.502" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:14:40.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:14:40.509" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:14:40.499" endtime="20210712 13:14:40.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:14:40.510" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:14:40.510" endtime="20210712 13:14:40.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:14:40.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:14:40.511" endtime="20210712 13:14:40.511"/>
</kw>
<status status="PASS" starttime="20210712 13:14:40.498" endtime="20210712 13:14:40.511"/>
</kw>
<msg timestamp="20210712 13:14:40.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:14:40.497" endtime="20210712 13:14:40.512"/>
</kw>
<msg timestamp="20210712 13:14:40.512" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:14:40.497" endtime="20210712 13:14:40.512"/>
</kw>
<msg timestamp="20210712 13:14:40.512" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:14:40.496" endtime="20210712 13:14:40.512"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:14:40.518" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:14:40.517" endtime="20210712 13:14:40.518"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:14:40.519" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:14:40.518" endtime="20210712 13:14:40.519"/>
</kw>
<status status="PASS" starttime="20210712 13:14:40.516" endtime="20210712 13:14:40.519"/>
</kw>
<msg timestamp="20210712 13:14:40.519" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:14:40.516" endtime="20210712 13:14:40.519"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:14:40.520" endtime="20210712 13:14:40.520"/>
</kw>
<msg timestamp="20210712 13:14:40.520" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:14:40.519" endtime="20210712 13:14:40.520"/>
</kw>
<status status="PASS" starttime="20210712 13:14:40.515" endtime="20210712 13:14:40.521"/>
</kw>
<msg timestamp="20210712 13:14:40.521" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:14:40.514" endtime="20210712 13:14:40.521"/>
</kw>
<msg timestamp="20210712 13:14:40.521" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:14:40.513" endtime="20210712 13:14:40.521"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:14:40.524" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:15:18.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:15:18.887" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:14:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210712 13:14:40.523" endtime="20210712 13:15:18.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:15:18.888" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:14:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:14:42 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-07-12 13:14:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:14:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-51859AA9CF6D-&gt;b3c7bf30-dcb7-4594-8405-ef50058c8dea
2021-07-12 13:14:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-07-12 13:14:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F35ABE7EBD7E-&gt;6a2c2d42-2f63-4509-9e5d-1454ab68a5f7
2021-07-12 13:14:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-07-12 13:14:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:14:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:14:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-07-12 13:14:47 INFO  JobSubmitter:198 - number of splits:3
2021-07-12 13:14:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1626095461666_0003
2021-07-12 13:14:47 INFO  YarnClientImpl:273 - Submitted application application_1626095461666_0003
2021-07-12 13:14:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1626095461666_0003/
2021-07-12 13:14:47 INFO  Job:1339 - Running job: job_1626095461666_0003
2021-07-12 13:14:55 INFO  Job:1360 - Job job_1626095461666_0003 running in uber mode : false
2021-07-12 13:14:55 INFO  Job:1367 -  map 0% reduce 0%
2021-07-12 13:15:02 INFO  Job:1367 -  map 33% reduce 0%
2021-07-12 13:15:08 INFO  Job:1367 -  map 67% reduce 0%
2021-07-12 13:15:13 INFO  Job:1367 -  map 100% reduce 0%
2021-07-12 13:15:17 INFO  Job:1367 -  map 100% reduce 100%
2021-07-12 13:15:18 INFO  Job:1378 - Job job_1626095461666_0003 completed successfully
2021-07-12 13:15:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=630085
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44596
		Total time spent by all reduces in occupied slots (ms)=16212
		Total time spent by all map tasks (ms)=11149
		Total time spent by all reduce tasks (ms)=4053
		Total vcore-milliseconds taken by all map tasks=11149
		Total vcore-milliseconds taken by all reduce tasks=4053
		Total megabyte-milliseconds taken by all map tasks=45666304
		Total megabyte-milliseconds taken by all reduce tasks=16601088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=8300
		Physical memory (bytes) snapshot=1451732992
		Virtual memory (bytes) snapshot=15817437184
		Total committed heap usage (bytes)=1170735104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.573 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210712 13:15:18.888" endtime="20210712 13:15:18.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:15:18.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:15:18.889" endtime="20210712 13:15:18.890"/>
</kw>
<status status="PASS" starttime="20210712 13:14:40.522" endtime="20210712 13:15:18.890"/>
</kw>
<msg timestamp="20210712 13:15:18.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:14:40.522" endtime="20210712 13:15:18.890"/>
</kw>
<msg timestamp="20210712 13:15:18.891" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:14:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:14:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210712 13:14:40.521" endtime="20210712 13:15:18.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:15:18.891" endtime="20210712 13:15:18.891"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:14:40.495" endtime="20210712 13:15:18.892"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:15:18.897" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:15:18.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:15:18.903" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:15:18.895" endtime="20210712 13:15:18.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:15:18.904" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:15:18.903" endtime="20210712 13:15:18.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:15:18.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:15:18.904" endtime="20210712 13:15:18.905"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.895" endtime="20210712 13:15:18.905"/>
</kw>
<msg timestamp="20210712 13:15:18.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:15:18.894" endtime="20210712 13:15:18.905"/>
</kw>
<msg timestamp="20210712 13:15:18.906" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:15:18.894" endtime="20210712 13:15:18.906"/>
</kw>
<msg timestamp="20210712 13:15:18.906" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210712 13:15:18.893" endtime="20210712 13:15:18.906"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:15:18.907" level="INFO">${random} = WyIBIyir</msg>
<status status="PASS" starttime="20210712 13:15:18.906" endtime="20210712 13:15:18.907"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:15:18.911" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:15:18.911" endtime="20210712 13:15:18.911"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:15:18.912" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:15:18.911" endtime="20210712 13:15:18.912"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.910" endtime="20210712 13:15:18.912"/>
</kw>
<msg timestamp="20210712 13:15:18.912" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:15:18.909" endtime="20210712 13:15:18.912"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:15:18.913" endtime="20210712 13:15:18.913"/>
</kw>
<msg timestamp="20210712 13:15:18.913" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:15:18.912" endtime="20210712 13:15:18.914"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.909" endtime="20210712 13:15:18.914"/>
</kw>
<msg timestamp="20210712 13:15:18.914" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:15:18.908" endtime="20210712 13:15:18.914"/>
</kw>
<msg timestamp="20210712 13:15:18.914" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:15:18.907" endtime="20210712 13:15:18.915"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:15:18.921" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:15:18.920" endtime="20210712 13:15:18.921"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:15:18.922" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:15:18.921" endtime="20210712 13:15:18.922"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.920" endtime="20210712 13:15:18.922"/>
</kw>
<msg timestamp="20210712 13:15:18.922" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:15:18.919" endtime="20210712 13:15:18.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:15:18.924" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210712 13:15:18.923" endtime="20210712 13:15:18.924"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:15:18.925" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210712 13:15:18.924" endtime="20210712 13:15:18.925"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.923" endtime="20210712 13:15:18.925"/>
</kw>
<msg timestamp="20210712 13:15:18.925" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210712 13:15:18.922" endtime="20210712 13:15:18.925"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.916" endtime="20210712 13:15:18.926"/>
</kw>
<msg timestamp="20210712 13:15:18.926" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210712 13:15:18.916" endtime="20210712 13:15:18.926"/>
</kw>
<msg timestamp="20210712 13:15:18.926" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210712 13:15:18.915" endtime="20210712 13:15:18.926"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:15:18.931" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:15:18.930" endtime="20210712 13:15:18.931"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:15:18.932" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:15:18.931" endtime="20210712 13:15:18.932"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.929" endtime="20210712 13:15:18.932"/>
</kw>
<msg timestamp="20210712 13:15:18.932" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:15:18.929" endtime="20210712 13:15:18.932"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:15:18.934" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210712 13:15:18.933" endtime="20210712 13:15:18.934"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:15:18.934" level="INFO">${result} = /wordcount-WyIBIyir.txt</msg>
<status status="PASS" starttime="20210712 13:15:18.934" endtime="20210712 13:15:18.934"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.933" endtime="20210712 13:15:18.935"/>
</kw>
<msg timestamp="20210712 13:15:18.935" level="INFO">${path_with_leading} = /wordcount-WyIBIyir.txt</msg>
<status status="PASS" starttime="20210712 13:15:18.932" endtime="20210712 13:15:18.935"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.928" endtime="20210712 13:15:18.935"/>
</kw>
<msg timestamp="20210712 13:15:18.935" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-WyIBIyir.txt</msg>
<status status="PASS" starttime="20210712 13:15:18.927" endtime="20210712 13:15:18.935"/>
</kw>
<msg timestamp="20210712 13:15:18.935" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-WyIBIyir.txt</msg>
<status status="PASS" starttime="20210712 13:15:18.926" endtime="20210712 13:15:18.936"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:15:18.939" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-WyIBIyir.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:15:55.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:15:55.221" level="INFO">${output} = 2021-07-12 13:15:20 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:15:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210712 13:15:18.937" endtime="20210712 13:15:55.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:15:55.223" level="INFO">2021-07-12 13:15:20 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:15:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:15:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:15:21 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-07-12 13:15:21 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-07-12 13:15:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:15:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E5F43A0990A5-&gt;6a2c2d42-2f63-4509-9e5d-1454ab68a5f7
2021-07-12 13:15:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:15:22 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-07-12 13:15:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FC3209623A08-&gt;b3c7bf30-dcb7-4594-8405-ef50058c8dea
2021-07-12 13:15:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:15:22 INFO  JobSubmitter:198 - number of splits:3
2021-07-12 13:15:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1626095461666_0004
2021-07-12 13:15:23 INFO  YarnClientImpl:273 - Submitted application application_1626095461666_0004
2021-07-12 13:15:23 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1626095461666_0004/
2021-07-12 13:15:23 INFO  Job:1339 - Running job: job_1626095461666_0004
2021-07-12 13:15:31 INFO  Job:1360 - Job job_1626095461666_0004 running in uber mode : false
2021-07-12 13:15:31 INFO  Job:1367 -  map 0% reduce 0%
2021-07-12 13:15:38 INFO  Job:1367 -  map 33% reduce 0%
2021-07-12 13:15:43 INFO  Job:1367 -  map 67% reduce 0%
2021-07-12 13:15:49 INFO  Job:1367 -  map 100% reduce 0%
2021-07-12 13:15:53 INFO  Job:1367 -  map 100% reduce 100%
2021-07-12 13:15:54 INFO  Job:1378 - Job job_1626095461666_0004 completed successfully
2021-07-12 13:15:54 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=693067
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45488
		Total time spent by all reduces in occupied slots (ms)=16336
		Total time spent by all map tasks (ms)=11372
		Total time spent by all reduce tasks (ms)=4084
		Total vcore-milliseconds taken by all map tasks=11372
		Total vcore-milliseconds taken by all reduce tasks=4084
		Total megabyte-milliseconds taken by all map tasks=46579712
		Total megabyte-milliseconds taken by all reduce tasks=16728064
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=774
		CPU time spent (ms)=8820
		Physical memory (bytes) snapshot=1546399744
		Virtual memory (bytes) snapshot=15788916736
		Total committed heap usage (bytes)=1415577600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210712 13:15:55.222" endtime="20210712 13:15:55.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:15:55.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:15:55.223" endtime="20210712 13:15:55.224"/>
</kw>
<status status="PASS" starttime="20210712 13:15:18.937" endtime="20210712 13:15:55.224"/>
</kw>
<msg timestamp="20210712 13:15:55.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:15:18.936" endtime="20210712 13:15:55.225"/>
</kw>
<msg timestamp="20210712 13:15:55.225" level="INFO">${output} = 2021-07-12 13:15:20 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-07-12 13:15:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210712 13:15:18.936" endtime="20210712 13:15:55.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:15:55.226" endtime="20210712 13:15:55.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:15:55.227" endtime="20210712 13:15:55.227"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:15:18.892" endtime="20210712 13:15:55.227"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210712 13:14:40.428" endtime="20210712 13:15:55.229"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:11:58.533" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:01.588" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 13:12:01.588" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:11:58.529" endtime="20210712 13:12:01.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:01.589" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:12:01.588" endtime="20210712 13:12:01.589"/>
</kw>
<msg timestamp="20210712 13:12:01.590" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:11:58.528" endtime="20210712 13:12:01.590"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:01.596" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:04.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:04.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:01.593" endtime="20210712 13:12:04.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:04.530" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:04.529" endtime="20210712 13:12:04.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:04.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:04.530" endtime="20210712 13:12:04.531"/>
</kw>
<status status="PASS" starttime="20210712 13:12:01.592" endtime="20210712 13:12:04.532"/>
</kw>
<msg timestamp="20210712 13:12:04.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:01.592" endtime="20210712 13:12:04.532"/>
</kw>
<msg timestamp="20210712 13:12:04.532" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 13:12:01.591" endtime="20210712 13:12:04.532"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:12:04.533" endtime="20210712 13:12:04.533"/>
</kw>
<status status="PASS" starttime="20210712 13:12:01.591" endtime="20210712 13:12:04.534"/>
</kw>
<status status="PASS" starttime="20210712 13:12:01.590" endtime="20210712 13:12:04.534"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:04.540" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:07.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:07.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:04.537" endtime="20210712 13:12:07.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:07.289" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:07.288" endtime="20210712 13:12:07.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:07.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:07.289" endtime="20210712 13:12:07.290"/>
</kw>
<status status="PASS" starttime="20210712 13:12:04.536" endtime="20210712 13:12:07.290"/>
</kw>
<msg timestamp="20210712 13:12:07.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:04.536" endtime="20210712 13:12:07.290"/>
</kw>
<status status="PASS" starttime="20210712 13:12:04.535" endtime="20210712 13:12:07.291"/>
</kw>
<status status="PASS" starttime="20210712 13:12:04.535" endtime="20210712 13:12:07.291"/>
</kw>
<status status="PASS" starttime="20210712 13:12:04.534" endtime="20210712 13:12:07.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 13:12:07.291" endtime="20210712 13:12:07.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:07.296" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:10.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:10.382" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210712 13:12:07.294" endtime="20210712 13:12:10.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:10.383" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T13:12:07.256Z",
  "modificationTime" : "2021-07-12T13:12:07.256Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210712 13:12:10.383" endtime="20210712 13:12:10.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:10.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:10.384" endtime="20210712 13:12:10.384"/>
</kw>
<status status="PASS" starttime="20210712 13:12:07.293" endtime="20210712 13:12:10.385"/>
</kw>
<msg timestamp="20210712 13:12:10.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:07.293" endtime="20210712 13:12:10.385"/>
</kw>
<msg timestamp="20210712 13:12:10.385" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210712 13:12:07.292" endtime="20210712 13:12:10.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:12:10.386" endtime="20210712 13:12:10.386"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:12:10.392" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:12:10.391" endtime="20210712 13:12:10.392"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:12:10.392" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:12:10.392" endtime="20210712 13:12:10.393"/>
</kw>
<status status="PASS" starttime="20210712 13:12:10.390" endtime="20210712 13:12:10.393"/>
</kw>
<msg timestamp="20210712 13:12:10.393" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:12:10.389" endtime="20210712 13:12:10.393"/>
</kw>
<status status="PASS" starttime="20210712 13:12:10.388" endtime="20210712 13:12:10.394"/>
</kw>
<msg timestamp="20210712 13:12:10.394" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210712 13:12:10.387" endtime="20210712 13:12:10.394"/>
</kw>
<msg timestamp="20210712 13:12:10.394" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210712 13:12:10.386" endtime="20210712 13:12:10.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:10.398" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:13.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:13.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:10.396" endtime="20210712 13:12:13.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:13.167" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:13.167" endtime="20210712 13:12:13.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:13.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:13.168" endtime="20210712 13:12:13.168"/>
</kw>
<status status="PASS" starttime="20210712 13:12:10.395" endtime="20210712 13:12:13.169"/>
</kw>
<msg timestamp="20210712 13:12:13.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:10.395" endtime="20210712 13:12:13.169"/>
</kw>
<status status="PASS" starttime="20210712 13:12:10.394" endtime="20210712 13:12:13.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:13.174" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:19.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:19.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:13.171" endtime="20210712 13:12:19.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:19.271" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:19.270" endtime="20210712 13:12:19.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:19.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:19.272" endtime="20210712 13:12:19.273"/>
</kw>
<status status="PASS" starttime="20210712 13:12:13.171" endtime="20210712 13:12:19.273"/>
</kw>
<msg timestamp="20210712 13:12:19.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:13.170" endtime="20210712 13:12:19.273"/>
</kw>
<status status="PASS" starttime="20210712 13:12:13.170" endtime="20210712 13:12:19.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:19.285" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:24.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:24.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:19.275" endtime="20210712 13:12:24.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:24.666" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:24.665" endtime="20210712 13:12:24.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:24.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:24.667" endtime="20210712 13:12:24.667"/>
</kw>
<status status="PASS" starttime="20210712 13:12:19.275" endtime="20210712 13:12:24.668"/>
</kw>
<msg timestamp="20210712 13:12:24.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:19.275" endtime="20210712 13:12:24.668"/>
</kw>
<status status="PASS" starttime="20210712 13:12:19.274" endtime="20210712 13:12:24.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:24.672" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:29.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:29.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:24.670" endtime="20210712 13:12:29.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:29.563" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:29.562" endtime="20210712 13:12:29.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:29.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:29.564" endtime="20210712 13:12:29.564"/>
</kw>
<status status="PASS" starttime="20210712 13:12:24.670" endtime="20210712 13:12:29.565"/>
</kw>
<msg timestamp="20210712 13:12:29.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:24.669" endtime="20210712 13:12:29.565"/>
</kw>
<status status="PASS" starttime="20210712 13:12:24.668" endtime="20210712 13:12:29.565"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 13:11:58.527" endtime="20210712 13:12:29.566"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:12:29.573" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:12:29.573" endtime="20210712 13:12:29.573"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:12:29.574" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:12:29.573" endtime="20210712 13:12:29.574"/>
</kw>
<status status="PASS" starttime="20210712 13:12:29.572" endtime="20210712 13:12:29.574"/>
</kw>
<msg timestamp="20210712 13:12:29.574" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:12:29.571" endtime="20210712 13:12:29.575"/>
</kw>
<status status="PASS" starttime="20210712 13:12:29.570" endtime="20210712 13:12:29.575"/>
</kw>
<msg timestamp="20210712 13:12:29.575" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:12:29.569" endtime="20210712 13:12:29.575"/>
</kw>
<msg timestamp="20210712 13:12:29.575" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:12:29.568" endtime="20210712 13:12:29.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:29.579" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:32.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:32.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:29.577" endtime="20210712 13:12:32.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:32.261" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:32.260" endtime="20210712 13:12:32.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:32.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:32.262" endtime="20210712 13:12:32.262"/>
</kw>
<status status="PASS" starttime="20210712 13:12:29.576" endtime="20210712 13:12:32.263"/>
</kw>
<msg timestamp="20210712 13:12:32.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:29.576" endtime="20210712 13:12:32.263"/>
</kw>
<status status="PASS" starttime="20210712 13:12:29.576" endtime="20210712 13:12:32.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:12:32.268" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:12:34.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:12:34.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:12:32.265" endtime="20210712 13:12:34.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:12:34.843" level="INFO"/>
<status status="PASS" starttime="20210712 13:12:34.842" endtime="20210712 13:12:34.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:12:34.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:12:34.843" endtime="20210712 13:12:34.844"/>
</kw>
<status status="PASS" starttime="20210712 13:12:32.264" endtime="20210712 13:12:34.844"/>
</kw>
<msg timestamp="20210712 13:12:34.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:12:32.264" endtime="20210712 13:12:34.844"/>
</kw>
<status status="PASS" starttime="20210712 13:12:32.263" endtime="20210712 13:12:34.845"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 13:12:29.567" endtime="20210712 13:12:34.845"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210712 13:11:58.451" endtime="20210712 13:12:34.847"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="216201"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:17:56.051" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:17:56.050" endtime="20210712 13:17:56.051"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:17:56.052" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:17:56.051" endtime="20210712 13:17:56.052"/>
</kw>
<status status="PASS" starttime="20210712 13:17:56.050" endtime="20210712 13:17:56.052"/>
</kw>
<msg timestamp="20210712 13:17:56.052" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:17:56.049" endtime="20210712 13:17:56.052"/>
</kw>
<status status="PASS" starttime="20210712 13:17:56.049" endtime="20210712 13:17:56.052"/>
</kw>
<msg timestamp="20210712 13:17:56.052" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:17:56.048" endtime="20210712 13:17:56.052"/>
</kw>
<msg timestamp="20210712 13:17:56.053" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:17:56.047" endtime="20210712 13:17:56.053"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:17:56.054" level="INFO">${random} = 94962</msg>
<status status="PASS" starttime="20210712 13:17:56.053" endtime="20210712 13:17:56.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:56.060" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-94962 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:18:00.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:18:00.458" level="INFO">${output} = 2021-07-12 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:17:56.055" endtime="20210712 13:18:00.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:18:00.459" level="INFO">2021-07-12 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:17:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:17:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:17:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:17:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:17:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1F00BA30191A-&gt;e760476e-f864-426a-8737-5c0f2e42c7bc
2021-07-12 13:17:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:18:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:18:00.459" endtime="20210712 13:18:00.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:18:00.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:18:00.460" endtime="20210712 13:18:00.460"/>
</kw>
<status status="PASS" starttime="20210712 13:17:56.055" endtime="20210712 13:18:00.460"/>
</kw>
<msg timestamp="20210712 13:18:00.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:56.054" endtime="20210712 13:18:00.461"/>
</kw>
<msg timestamp="20210712 13:18:00.461" level="INFO">${result} = 2021-07-12 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:17:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:17:56.054" endtime="20210712 13:18:00.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:18:00.465" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:18:02.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:18:02.500" level="INFO">${output} = 2021-07-12 13:18:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:18:00.463" endtime="20210712 13:18:02.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:18:02.502" level="INFO">2021-07-12 13:18:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:02 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-07-12 13:18 o3fs://bucket1.volume1.om/ozone-94962
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:17 o3fs://bucket1.volume1.om/user
2021-07-12 13:18:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:18:02.501" endtime="20210712 13:18:02.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:18:02.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:18:02.502" endtime="20210712 13:18:02.503"/>
</kw>
<status status="PASS" starttime="20210712 13:18:00.462" endtime="20210712 13:18:02.503"/>
</kw>
<msg timestamp="20210712 13:18:02.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:18:00.462" endtime="20210712 13:18:02.504"/>
</kw>
<msg timestamp="20210712 13:18:02.504" level="INFO">${result} = 2021-07-12 13:18:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:18:00.461" endtime="20210712 13:18:02.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:18:02.504" endtime="20210712 13:18:02.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:18:02.508" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-94962 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:18:06.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:18:06.728" level="INFO">${output} = 2021-07-12 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:18:02.507" endtime="20210712 13:18:06.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:18:06.729" level="INFO">2021-07-12 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:18:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:18:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:18:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-07-12 13:18:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:18:06.728" endtime="20210712 13:18:06.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:18:06.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:18:06.730" endtime="20210712 13:18:06.731"/>
</kw>
<status status="PASS" starttime="20210712 13:18:02.506" endtime="20210712 13:18:06.731"/>
</kw>
<msg timestamp="20210712 13:18:06.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:18:02.506" endtime="20210712 13:18:06.731"/>
</kw>
<msg timestamp="20210712 13:18:06.737" level="INFO">${result} = 2021-07-12 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:18:02.505" endtime="20210712 13:18:06.737"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:18:06.738" endtime="20210712 13:18:06.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 13:17:56.046" endtime="20210712 13:18:06.738"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210712 13:17:55.974" endtime="20210712 13:18:06.739"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:18:11.851" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:18:11.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:18:11.858" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:11.847" endtime="20210712 13:18:11.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:18:11.858" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:11.858" endtime="20210712 13:18:11.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:18:11.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:18:11.859" endtime="20210712 13:18:11.859"/>
</kw>
<status status="PASS" starttime="20210712 13:18:11.847" endtime="20210712 13:18:11.859"/>
</kw>
<msg timestamp="20210712 13:18:11.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:18:11.846" endtime="20210712 13:18:11.860"/>
</kw>
<msg timestamp="20210712 13:18:11.860" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:11.846" endtime="20210712 13:18:11.860"/>
</kw>
<msg timestamp="20210712 13:18:11.860" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:11.845" endtime="20210712 13:18:11.860"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:18:11.865" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:18:11.865" endtime="20210712 13:18:11.865"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:18:11.866" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:18:11.866" endtime="20210712 13:18:11.866"/>
</kw>
<status status="PASS" starttime="20210712 13:18:11.864" endtime="20210712 13:18:11.866"/>
</kw>
<msg timestamp="20210712 13:18:11.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:18:11.864" endtime="20210712 13:18:11.866"/>
</kw>
<status status="PASS" starttime="20210712 13:18:11.863" endtime="20210712 13:18:11.867"/>
</kw>
<msg timestamp="20210712 13:18:11.867" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:18:11.862" endtime="20210712 13:18:11.867"/>
</kw>
<msg timestamp="20210712 13:18:11.867" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:18:11.860" endtime="20210712 13:18:11.867"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:18:11.870" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:18:54.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:18:54.589" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18...</msg>
<status status="PASS" starttime="20210712 13:18:11.869" endtime="20210712 13:18:54.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:18:54.591" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:18:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:18:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:18:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:18:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:18:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7C3504135B03-&gt;e760476e-f864-426a-8737-5c0f2e42c7bc
2021-07-12 13:18:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-07-12 13:18:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4C42FF184E59-&gt;44d5e2a4-7dcc-4ae2-a349-adacce59bd52
2021-07-12 13:18:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-07-12 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-07-12 13:18:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:16 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:18:16 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:18:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626095799529_0001
2021-07-12 13:18:16 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:18:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:17 INFO  Configuration:2752 - resource-types.xml not found
2021-07-12 13:18:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-07-12 13:18:17 INFO  YarnClientImpl:324 - Submitted application application_1626095799529_0001
2021-07-12 13:18:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1626095799529_0001/
2021-07-12 13:18:17 INFO  Job:1619 - Running job: job_1626095799529_0001
2021-07-12 13:18:28 INFO  Job:1640 - Job job_1626095799529_0001 running in uber mode : false
2021-07-12 13:18:28 INFO  Job:1647 -  map 0% reduce 0%
2021-07-12 13:18:35 INFO  Job:1647 -  map 33% reduce 0%
2021-07-12 13:18:41 INFO  Job:1647 -  map 67% reduce 0%
2021-07-12 13:18:47 INFO  Job:1647 -  map 100% reduce 0%
2021-07-12 13:18:52 INFO  Job:1647 -  map 100% reduce 100%
2021-07-12 13:18:53 INFO  Job:1658 - Job job_1626095799529_0001 completed successfully
2021-07-12 13:18:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1038313
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45712
		Total time spent by all reduces in occupied slots (ms)=16976
		Total time spent by all map tasks (ms)=11428
		Total time spent by all reduce tasks (ms)=4244
		Total vcore-milliseconds taken by all map tasks=11428
		Total vcore-milliseconds taken by all reduce tasks=4244
		Total megabyte-milliseconds taken by all map tasks=46809088
		Total megabyte-milliseconds taken by all reduce tasks=17383424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1465864192
		Virtual memory (bytes) snapshot=15802839040
		Total committed heap usage (bytes)=1291845632
		Peak Map Physical memory (bytes)=402681856
		Peak Map Virtual memory (bytes)=3955355648
		Peak Reduce Physical memory (bytes)=314937344
		Peak Reduce Virtual memory (bytes)=3953270784
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.238 seconds
2021-07-12 13:18:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:53 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-07-12 13:18:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:18:54.590" endtime="20210712 13:18:54.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:18:54.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:18:54.591" endtime="20210712 13:18:54.592"/>
</kw>
<status status="PASS" starttime="20210712 13:18:11.868" endtime="20210712 13:18:54.592"/>
</kw>
<msg timestamp="20210712 13:18:54.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:18:11.868" endtime="20210712 13:18:54.592"/>
</kw>
<msg timestamp="20210712 13:18:54.593" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18...</msg>
<status status="PASS" starttime="20210712 13:18:11.867" endtime="20210712 13:18:54.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:18:54.593" endtime="20210712 13:18:54.593"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:18:11.844" endtime="20210712 13:18:54.594"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:18:54.600" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:18:54.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:18:54.606" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:54.598" endtime="20210712 13:18:54.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:18:54.607" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:54.606" endtime="20210712 13:18:54.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:18:54.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:18:54.607" endtime="20210712 13:18:54.608"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.598" endtime="20210712 13:18:54.608"/>
</kw>
<msg timestamp="20210712 13:18:54.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:18:54.597" endtime="20210712 13:18:54.608"/>
</kw>
<msg timestamp="20210712 13:18:54.609" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:54.597" endtime="20210712 13:18:54.609"/>
</kw>
<msg timestamp="20210712 13:18:54.609" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:18:54.596" endtime="20210712 13:18:54.609"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:18:54.610" level="INFO">${random} = 15apTPsH</msg>
<status status="PASS" starttime="20210712 13:18:54.609" endtime="20210712 13:18:54.610"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:18:54.614" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:18:54.613" endtime="20210712 13:18:54.614"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:18:54.615" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:18:54.614" endtime="20210712 13:18:54.615"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.613" endtime="20210712 13:18:54.615"/>
</kw>
<msg timestamp="20210712 13:18:54.615" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:18:54.612" endtime="20210712 13:18:54.615"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.611" endtime="20210712 13:18:54.616"/>
</kw>
<msg timestamp="20210712 13:18:54.616" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:18:54.611" endtime="20210712 13:18:54.616"/>
</kw>
<msg timestamp="20210712 13:18:54.616" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:18:54.610" endtime="20210712 13:18:54.616"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:18:54.620" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:18:54.619" endtime="20210712 13:18:54.620"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:18:54.620" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:18:54.620" endtime="20210712 13:18:54.620"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.619" endtime="20210712 13:18:54.621"/>
</kw>
<msg timestamp="20210712 13:18:54.621" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:18:54.618" endtime="20210712 13:18:54.621"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.618" endtime="20210712 13:18:54.621"/>
</kw>
<msg timestamp="20210712 13:18:54.621" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210712 13:18:54.617" endtime="20210712 13:18:54.621"/>
</kw>
<msg timestamp="20210712 13:18:54.622" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210712 13:18:54.616" endtime="20210712 13:18:54.622"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:18:54.626" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:18:54.625" endtime="20210712 13:18:54.626"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:18:54.627" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:18:54.626" endtime="20210712 13:18:54.627"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.624" endtime="20210712 13:18:54.627"/>
</kw>
<msg timestamp="20210712 13:18:54.627" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:18:54.624" endtime="20210712 13:18:54.627"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.623" endtime="20210712 13:18:54.627"/>
</kw>
<msg timestamp="20210712 13:18:54.627" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-15apTPsH.txt</msg>
<status status="PASS" starttime="20210712 13:18:54.623" endtime="20210712 13:18:54.627"/>
</kw>
<msg timestamp="20210712 13:18:54.628" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-15apTPsH.txt</msg>
<status status="PASS" starttime="20210712 13:18:54.622" endtime="20210712 13:18:54.628"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:18:54.631" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-15apTPsH.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:19:34.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:19:34.684" level="INFO">${output} = 2021-07-12 13:18:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:18:54.630" endtime="20210712 13:19:34.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:19:34.685" level="INFO">2021-07-12 13:18:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:18:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:18:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:18:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:18:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:18:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-65F59BAF97B2-&gt;44d5e2a4-7dcc-4ae2-a349-adacce59bd52
2021-07-12 13:18:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:19:00 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:19:01 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:19:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626095799529_0002
2021-07-12 13:19:01 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:19:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:01 INFO  Configuration:2752 - resource-types.xml not found
2021-07-12 13:19:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-07-12 13:19:01 INFO  YarnClientImpl:324 - Submitted application application_1626095799529_0002
2021-07-12 13:19:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1626095799529_0002/
2021-07-12 13:19:01 INFO  Job:1619 - Running job: job_1626095799529_0002
2021-07-12 13:19:09 INFO  Job:1640 - Job job_1626095799529_0002 running in uber mode : false
2021-07-12 13:19:09 INFO  Job:1647 -  map 0% reduce 0%
2021-07-12 13:19:17 INFO  Job:1647 -  map 33% reduce 0%
2021-07-12 13:19:23 INFO  Job:1647 -  map 67% reduce 0%
2021-07-12 13:19:28 INFO  Job:1647 -  map 100% reduce 0%
2021-07-12 13:19:34 INFO  Job:1647 -  map 100% reduce 100%
2021-07-12 13:19:34 INFO  Job:1658 - Job job_1626095799529_0002 completed successfully
2021-07-12 13:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:34 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1101079
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46468
		Total time spent by all reduces in occupied slots (ms)=15900
		Total time spent by all map tasks (ms)=11617
		Total time spent by all reduce tasks (ms)=3975
		Total vcore-milliseconds taken by all map tasks=11617
		Total vcore-milliseconds taken by all reduce tasks=3975
		Total megabyte-milliseconds taken by all map tasks=47583232
		Total megabyte-milliseconds taken by all reduce tasks=16281600
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=7780
		Physical memory (bytes) snapshot=1537634304
		Virtual memory (bytes) snapshot=15823679488
		Total committed heap usage (bytes)=1387790336
		Peak Map Physical memory (bytes)=402132992
		Peak Map Virtual memory (bytes)=3954737152
		Peak Reduce Physical memory (bytes)=335896576
		Peak Reduce Virtual memory (bytes)=3970236416
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299
2021-07-12 13:19:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:19:34.684" endtime="20210712 13:19:34.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:19:34.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:19:34.686" endtime="20210712 13:19:34.687"/>
</kw>
<status status="PASS" starttime="20210712 13:18:54.629" endtime="20210712 13:19:34.687"/>
</kw>
<msg timestamp="20210712 13:19:34.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:18:54.629" endtime="20210712 13:19:34.687"/>
</kw>
<msg timestamp="20210712 13:19:34.688" level="INFO">${output} = 2021-07-12 13:18:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:18:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:18:54.628" endtime="20210712 13:19:34.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:19:34.688" endtime="20210712 13:19:34.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:19:34.689" endtime="20210712 13:19:34.689"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:18:54.595" endtime="20210712 13:19:34.690"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210712 13:18:11.780" endtime="20210712 13:19:34.692"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:19:39.937" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:19:39.937" endtime="20210712 13:19:39.937"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:19:39.938" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:19:39.938" endtime="20210712 13:19:39.938"/>
</kw>
<status status="PASS" starttime="20210712 13:19:39.936" endtime="20210712 13:19:39.939"/>
</kw>
<msg timestamp="20210712 13:19:39.939" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:19:39.936" endtime="20210712 13:19:39.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:19:39.940" endtime="20210712 13:19:39.940"/>
</kw>
<msg timestamp="20210712 13:19:39.940" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:19:39.939" endtime="20210712 13:19:39.940"/>
</kw>
<status status="PASS" starttime="20210712 13:19:39.935" endtime="20210712 13:19:39.941"/>
</kw>
<msg timestamp="20210712 13:19:39.941" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:19:39.934" endtime="20210712 13:19:39.941"/>
</kw>
<msg timestamp="20210712 13:19:39.941" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:19:39.933" endtime="20210712 13:19:39.941"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:19:39.942" level="INFO">${random} = 04032</msg>
<status status="PASS" starttime="20210712 13:19:39.942" endtime="20210712 13:19:39.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:19:39.948" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-04032 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:19:44.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:19:44.043" level="INFO">${output} = 2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:19:39.944" endtime="20210712 13:19:44.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:19:44.045" level="INFO">2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:42 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:19:42 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:19:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:19:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:19:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:19:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-786D5419FB07-&gt;e760476e-f864-426a-8737-5c0f2e42c7bc
2021-07-12 13:19:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:19:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:19:44.044" endtime="20210712 13:19:44.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:19:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:19:44.045" endtime="20210712 13:19:44.046"/>
</kw>
<status status="PASS" starttime="20210712 13:19:39.943" endtime="20210712 13:19:44.046"/>
</kw>
<msg timestamp="20210712 13:19:44.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:19:39.943" endtime="20210712 13:19:44.046"/>
</kw>
<msg timestamp="20210712 13:19:44.046" level="INFO">${result} = 2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:19:39.942" endtime="20210712 13:19:44.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:19:44.051" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:19:46.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:19:46.257" level="INFO">${output} = 2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:19:44.048" endtime="20210712 13:19:46.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:19:46.258" level="INFO">2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-07-12 13:19 ofs://om/volume1/bucket1/ozone-04032
-rw-rw-rw-   3 hadoop hadoop      21867 2021-07-12 13:18 ofs://om/volume1/bucket1/ozone-94962
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:17 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:19 ofs://om/volume1/bucket1/wordcount-15apTPsH.txt
2021-07-12 13:19:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:19:46.258" endtime="20210712 13:19:46.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:19:46.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:19:46.259" endtime="20210712 13:19:46.259"/>
</kw>
<status status="PASS" starttime="20210712 13:19:44.048" endtime="20210712 13:19:46.260"/>
</kw>
<msg timestamp="20210712 13:19:46.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:19:44.047" endtime="20210712 13:19:46.260"/>
</kw>
<msg timestamp="20210712 13:19:46.260" level="INFO">${result} = 2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:19:44.047" endtime="20210712 13:19:46.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:19:46.260" endtime="20210712 13:19:46.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:19:46.265" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-04032 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:19:49.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:19:49.805" level="INFO">${output} = 2021-07-12 13:19:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:19:46.263" endtime="20210712 13:19:49.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:19:49.807" level="INFO">2021-07-12 13:19:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:19:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:19:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:19:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-07-12 13:19:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:19:49.806" endtime="20210712 13:19:49.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:19:49.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:19:49.808" endtime="20210712 13:19:49.808"/>
</kw>
<status status="PASS" starttime="20210712 13:19:46.262" endtime="20210712 13:19:49.809"/>
</kw>
<msg timestamp="20210712 13:19:49.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:19:46.262" endtime="20210712 13:19:49.809"/>
</kw>
<msg timestamp="20210712 13:19:49.811" level="INFO">${result} = 2021-07-12 13:19:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:19:46.261" endtime="20210712 13:19:49.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:19:49.811" endtime="20210712 13:19:49.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 13:19:39.932" endtime="20210712 13:19:49.812"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210712 13:19:39.865" endtime="20210712 13:19:49.813"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:19:54.891" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:19:54.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:19:54.898" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:19:54.888" endtime="20210712 13:19:54.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:19:54.899" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:19:54.899" endtime="20210712 13:19:54.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:19:54.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:19:54.900" endtime="20210712 13:19:54.900"/>
</kw>
<status status="PASS" starttime="20210712 13:19:54.887" endtime="20210712 13:19:54.901"/>
</kw>
<msg timestamp="20210712 13:19:54.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:19:54.887" endtime="20210712 13:19:54.901"/>
</kw>
<msg timestamp="20210712 13:19:54.901" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:19:54.886" endtime="20210712 13:19:54.901"/>
</kw>
<msg timestamp="20210712 13:19:54.901" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:19:54.886" endtime="20210712 13:19:54.901"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:19:54.906" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:19:54.906" endtime="20210712 13:19:54.906"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:19:54.907" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:19:54.907" endtime="20210712 13:19:54.907"/>
</kw>
<status status="PASS" starttime="20210712 13:19:54.905" endtime="20210712 13:19:54.907"/>
</kw>
<msg timestamp="20210712 13:19:54.907" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:19:54.905" endtime="20210712 13:19:54.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:19:54.908" endtime="20210712 13:19:54.909"/>
</kw>
<msg timestamp="20210712 13:19:54.909" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:19:54.908" endtime="20210712 13:19:54.909"/>
</kw>
<status status="PASS" starttime="20210712 13:19:54.904" endtime="20210712 13:19:54.909"/>
</kw>
<msg timestamp="20210712 13:19:54.909" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:19:54.903" endtime="20210712 13:19:54.909"/>
</kw>
<msg timestamp="20210712 13:19:54.910" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:19:54.902" endtime="20210712 13:19:54.910"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:19:54.913" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:20:34.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:20:34.142" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19...</msg>
<status status="PASS" starttime="20210712 13:19:54.911" endtime="20210712 13:20:34.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:20:34.143" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:19:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:19:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:19:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:19:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:19:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3B45379AEDD3-&gt;44d5e2a4-7dcc-4ae2-a349-adacce59bd52
2021-07-12 13:19:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-07-12 13:19:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-07-12 13:19:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:19:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E04AD8079CD-&gt;e760476e-f864-426a-8737-5c0f2e42c7bc
2021-07-12 13:19:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:19:59 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:19:59 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:19:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626095799529_0003
2021-07-12 13:19:59 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:19:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:59 INFO  Configuration:2752 - resource-types.xml not found
2021-07-12 13:19:59 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-07-12 13:20:00 INFO  YarnClientImpl:324 - Submitted application application_1626095799529_0003
2021-07-12 13:20:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1626095799529_0003/
2021-07-12 13:20:00 INFO  Job:1619 - Running job: job_1626095799529_0003
2021-07-12 13:20:08 INFO  Job:1640 - Job job_1626095799529_0003 running in uber mode : false
2021-07-12 13:20:08 INFO  Job:1647 -  map 0% reduce 0%
2021-07-12 13:20:15 INFO  Job:1647 -  map 33% reduce 0%
2021-07-12 13:20:21 INFO  Job:1647 -  map 67% reduce 0%
2021-07-12 13:20:27 INFO  Job:1647 -  map 100% reduce 0%
2021-07-12 13:20:32 INFO  Job:1647 -  map 100% reduce 100%
2021-07-12 13:20:33 INFO  Job:1658 - Job job_1626095799529_0003 completed successfully
2021-07-12 13:20:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1038093
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47224
		Total time spent by all reduces in occupied slots (ms)=16800
		Total time spent by all map tasks (ms)=11806
		Total time spent by all reduce tasks (ms)=4200
		Total vcore-milliseconds taken by all map tasks=11806
		Total vcore-milliseconds taken by all reduce tasks=4200
		Total megabyte-milliseconds taken by all map tasks=48357376
		Total megabyte-milliseconds taken by all reduce tasks=17203200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1258
		CPU time spent (ms)=8350
		Physical memory (bytes) snapshot=2018779136
		Virtual memory (bytes) snapshot=15793782784
		Total committed heap usage (bytes)=2054684672
		Peak Map Physical memory (bytes)=569647104
		Peak Map Virtual memory (bytes)=3946057728
		Peak Reduce Physical memory (bytes)=332910592
		Peak Reduce Virtual memory (bytes)=3971076096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.873 seconds
2021-07-12 13:20:33 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-07-12 13:20:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:20:34.142" endtime="20210712 13:20:34.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:20:34.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:20:34.143" endtime="20210712 13:20:34.144"/>
</kw>
<status status="PASS" starttime="20210712 13:19:54.911" endtime="20210712 13:20:34.145"/>
</kw>
<msg timestamp="20210712 13:20:34.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:19:54.911" endtime="20210712 13:20:34.145"/>
</kw>
<msg timestamp="20210712 13:20:34.145" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:19...</msg>
<status status="PASS" starttime="20210712 13:19:54.910" endtime="20210712 13:20:34.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:20:34.146" endtime="20210712 13:20:34.146"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:19:54.885" endtime="20210712 13:20:34.146"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:20:34.152" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:20:34.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:20:34.157" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:20:34.150" endtime="20210712 13:20:34.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:20:34.159" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:20:34.158" endtime="20210712 13:20:34.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:20:34.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:20:34.159" endtime="20210712 13:20:34.159"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.149" endtime="20210712 13:20:34.160"/>
</kw>
<msg timestamp="20210712 13:20:34.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:20:34.149" endtime="20210712 13:20:34.160"/>
</kw>
<msg timestamp="20210712 13:20:34.160" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:20:34.148" endtime="20210712 13:20:34.160"/>
</kw>
<msg timestamp="20210712 13:20:34.160" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210712 13:20:34.148" endtime="20210712 13:20:34.161"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:20:34.161" level="INFO">${random} = 5F5UQ7pQ</msg>
<status status="PASS" starttime="20210712 13:20:34.161" endtime="20210712 13:20:34.161"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:20:34.166" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:20:34.165" endtime="20210712 13:20:34.166"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:20:34.166" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:20:34.166" endtime="20210712 13:20:34.166"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.164" endtime="20210712 13:20:34.167"/>
</kw>
<msg timestamp="20210712 13:20:34.167" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:20:34.164" endtime="20210712 13:20:34.167"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:20:34.167" endtime="20210712 13:20:34.168"/>
</kw>
<msg timestamp="20210712 13:20:34.168" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:20:34.167" endtime="20210712 13:20:34.168"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.163" endtime="20210712 13:20:34.168"/>
</kw>
<msg timestamp="20210712 13:20:34.169" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:20:34.162" endtime="20210712 13:20:34.169"/>
</kw>
<msg timestamp="20210712 13:20:34.169" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:20:34.161" endtime="20210712 13:20:34.169"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:20:34.173" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:20:34.173" endtime="20210712 13:20:34.173"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:20:34.175" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:20:34.173" endtime="20210712 13:20:34.175"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.172" endtime="20210712 13:20:34.175"/>
</kw>
<msg timestamp="20210712 13:20:34.175" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:20:34.171" endtime="20210712 13:20:34.175"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:20:34.177" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210712 13:20:34.176" endtime="20210712 13:20:34.177"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:20:34.178" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210712 13:20:34.177" endtime="20210712 13:20:34.178"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.176" endtime="20210712 13:20:34.178"/>
</kw>
<msg timestamp="20210712 13:20:34.178" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210712 13:20:34.175" endtime="20210712 13:20:34.178"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.171" endtime="20210712 13:20:34.179"/>
</kw>
<msg timestamp="20210712 13:20:34.179" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210712 13:20:34.170" endtime="20210712 13:20:34.179"/>
</kw>
<msg timestamp="20210712 13:20:34.179" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210712 13:20:34.169" endtime="20210712 13:20:34.179"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:20:34.183" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:20:34.182" endtime="20210712 13:20:34.183"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:20:34.184" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:20:34.183" endtime="20210712 13:20:34.184"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.182" endtime="20210712 13:20:34.184"/>
</kw>
<msg timestamp="20210712 13:20:34.184" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:20:34.181" endtime="20210712 13:20:34.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:20:34.186" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210712 13:20:34.186" endtime="20210712 13:20:34.186"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:20:34.187" level="INFO">${result} = /wordcount-5F5UQ7pQ.txt</msg>
<status status="PASS" starttime="20210712 13:20:34.186" endtime="20210712 13:20:34.187"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.185" endtime="20210712 13:20:34.187"/>
</kw>
<msg timestamp="20210712 13:20:34.187" level="INFO">${path_with_leading} = /wordcount-5F5UQ7pQ.txt</msg>
<status status="PASS" starttime="20210712 13:20:34.185" endtime="20210712 13:20:34.187"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.181" endtime="20210712 13:20:34.188"/>
</kw>
<msg timestamp="20210712 13:20:34.188" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-5F5UQ7pQ.txt</msg>
<status status="PASS" starttime="20210712 13:20:34.180" endtime="20210712 13:20:34.188"/>
</kw>
<msg timestamp="20210712 13:20:34.188" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-5F5UQ7pQ.txt</msg>
<status status="PASS" starttime="20210712 13:20:34.179" endtime="20210712 13:20:34.188"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:20:34.192" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-5F5UQ7pQ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:21:12.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:21:12.847" level="INFO">${output} = 2021-07-12 13:20:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:20:34.190" endtime="20210712 13:21:12.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:21:12.849" level="INFO">2021-07-12 13:20:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-07-12 13:20:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-07-12 13:20:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:20:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:20:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:20:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B043DD501B93-&gt;44d5e2a4-7dcc-4ae2-a349-adacce59bd52
2021-07-12 13:20:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:20:38 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:20:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C596256AD0A-&gt;e760476e-f864-426a-8737-5c0f2e42c7bc
2021-07-12 13:20:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:20:38 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:20:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626095799529_0004
2021-07-12 13:20:38 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:20:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:38 INFO  Configuration:2752 - resource-types.xml not found
2021-07-12 13:20:38 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-07-12 13:20:38 INFO  YarnClientImpl:324 - Submitted application application_1626095799529_0004
2021-07-12 13:20:38 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1626095799529_0004/
2021-07-12 13:20:38 INFO  Job:1619 - Running job: job_1626095799529_0004
2021-07-12 13:20:47 INFO  Job:1640 - Job job_1626095799529_0004 running in uber mode : false
2021-07-12 13:20:47 INFO  Job:1647 -  map 0% reduce 0%
2021-07-12 13:20:54 INFO  Job:1647 -  map 33% reduce 0%
2021-07-12 13:21:00 INFO  Job:1647 -  map 67% reduce 0%
2021-07-12 13:21:06 INFO  Job:1647 -  map 100% reduce 0%
2021-07-12 13:21:11 INFO  Job:1647 -  map 100% reduce 100%
2021-07-12 13:21:12 INFO  Job:1658 - Job job_1626095799529_0004 completed successfully
2021-07-12 13:21:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:21:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1100995
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47436
		Total time spent by all reduces in occupied slots (ms)=16940
		Total time spent by all map tasks (ms)=11859
		Total time spent by all reduce tasks (ms)=4235
		Total vcore-milliseconds taken by all map tasks=11859
		Total vcore-milliseconds taken by all reduce tasks=4235
		Total megabyte-milliseconds taken by all map tasks=48574464
		Total megabyte-milliseconds taken by all reduce tasks=17346560
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=8320
		Physical memory (bytes) snapshot=1529810944
		Virtual memory (bytes) snapshot=15816798208
		Total committed heap usage (bytes)=1400373248
		Peak Map Physical memory (bytes)=402468864
		Peak Map Virtual memory (bytes)=3953410048
		Peak Reduce Physical memory (bytes)=335552512
		Peak Reduce Virtual memory (bytes)=3970572288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299
2021-07-12 13:21:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210712 13:21:12.848" endtime="20210712 13:21:12.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:21:12.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:21:12.849" endtime="20210712 13:21:12.850"/>
</kw>
<status status="PASS" starttime="20210712 13:20:34.189" endtime="20210712 13:21:12.850"/>
</kw>
<msg timestamp="20210712 13:21:12.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:20:34.189" endtime="20210712 13:21:12.850"/>
</kw>
<msg timestamp="20210712 13:21:12.851" level="INFO">${output} = 2021-07-12 13:20:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-07-12 13:20:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210712 13:20:34.188" endtime="20210712 13:21:12.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:21:12.851" endtime="20210712 13:21:12.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:21:12.852" endtime="20210712 13:21:12.852"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:20:34.147" endtime="20210712 13:21:12.852"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210712 13:19:54.822" endtime="20210712 13:21:12.854"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:15.265" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:18.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 13:17:18.809" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:17:15.261" endtime="20210712 13:17:18.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:18.810" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:17:18.809" endtime="20210712 13:17:18.810"/>
</kw>
<msg timestamp="20210712 13:17:18.810" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:17:15.259" endtime="20210712 13:17:18.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:18.816" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:21.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:21.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:18.813" endtime="20210712 13:17:21.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:21.558" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:21.557" endtime="20210712 13:17:21.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:21.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:21.558" endtime="20210712 13:17:21.559"/>
</kw>
<status status="PASS" starttime="20210712 13:17:18.813" endtime="20210712 13:17:21.559"/>
</kw>
<msg timestamp="20210712 13:17:21.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:18.812" endtime="20210712 13:17:21.560"/>
</kw>
<msg timestamp="20210712 13:17:21.560" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 13:17:18.812" endtime="20210712 13:17:21.560"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:17:21.560" endtime="20210712 13:17:21.560"/>
</kw>
<status status="PASS" starttime="20210712 13:17:18.811" endtime="20210712 13:17:21.561"/>
</kw>
<status status="PASS" starttime="20210712 13:17:18.811" endtime="20210712 13:17:21.561"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:21.567" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:24.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:24.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:21.564" endtime="20210712 13:17:24.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:24.179" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:24.178" endtime="20210712 13:17:24.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:24.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:24.180" endtime="20210712 13:17:24.180"/>
</kw>
<status status="PASS" starttime="20210712 13:17:21.563" endtime="20210712 13:17:24.181"/>
</kw>
<msg timestamp="20210712 13:17:24.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:21.563" endtime="20210712 13:17:24.181"/>
</kw>
<status status="PASS" starttime="20210712 13:17:21.562" endtime="20210712 13:17:24.181"/>
</kw>
<status status="PASS" starttime="20210712 13:17:21.562" endtime="20210712 13:17:24.182"/>
</kw>
<status status="PASS" starttime="20210712 13:17:21.561" endtime="20210712 13:17:24.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 13:17:24.182" endtime="20210712 13:17:24.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:24.187" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:26.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:26.986" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210712 13:17:24.184" endtime="20210712 13:17:26.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:26.987" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T13:17:24.110Z",
  "modificationTime" : "2021-07-12T13:17:24.110Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210712 13:17:26.986" endtime="20210712 13:17:26.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:26.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:26.987" endtime="20210712 13:17:26.988"/>
</kw>
<status status="PASS" starttime="20210712 13:17:24.184" endtime="20210712 13:17:26.988"/>
</kw>
<msg timestamp="20210712 13:17:26.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:24.183" endtime="20210712 13:17:26.989"/>
</kw>
<msg timestamp="20210712 13:17:26.989" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210712 13:17:24.183" endtime="20210712 13:17:26.989"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:17:26.989" endtime="20210712 13:17:26.990"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:17:26.995" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:17:26.995" endtime="20210712 13:17:26.995"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:17:26.996" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:17:26.996" endtime="20210712 13:17:26.996"/>
</kw>
<status status="PASS" starttime="20210712 13:17:26.994" endtime="20210712 13:17:26.997"/>
</kw>
<msg timestamp="20210712 13:17:26.997" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:17:26.992" endtime="20210712 13:17:26.997"/>
</kw>
<status status="PASS" starttime="20210712 13:17:26.992" endtime="20210712 13:17:26.997"/>
</kw>
<msg timestamp="20210712 13:17:26.997" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210712 13:17:26.991" endtime="20210712 13:17:26.997"/>
</kw>
<msg timestamp="20210712 13:17:26.998" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210712 13:17:26.990" endtime="20210712 13:17:26.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:27.001" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:29.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:29.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:26.999" endtime="20210712 13:17:29.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:29.680" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:29.679" endtime="20210712 13:17:29.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:29.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:29.680" endtime="20210712 13:17:29.681"/>
</kw>
<status status="PASS" starttime="20210712 13:17:26.999" endtime="20210712 13:17:29.682"/>
</kw>
<msg timestamp="20210712 13:17:29.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:26.999" endtime="20210712 13:17:29.682"/>
</kw>
<status status="PASS" starttime="20210712 13:17:26.998" endtime="20210712 13:17:29.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:29.688" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:35.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:35.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:29.686" endtime="20210712 13:17:35.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:35.515" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:35.514" endtime="20210712 13:17:35.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:35.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:35.516" endtime="20210712 13:17:35.516"/>
</kw>
<status status="PASS" starttime="20210712 13:17:29.684" endtime="20210712 13:17:35.517"/>
</kw>
<msg timestamp="20210712 13:17:35.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:29.684" endtime="20210712 13:17:35.517"/>
</kw>
<status status="PASS" starttime="20210712 13:17:29.683" endtime="20210712 13:17:35.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:35.527" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:40.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:40.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:35.519" endtime="20210712 13:17:40.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:40.782" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:40.781" endtime="20210712 13:17:40.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:40.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:40.782" endtime="20210712 13:17:40.783"/>
</kw>
<status status="PASS" starttime="20210712 13:17:35.519" endtime="20210712 13:17:40.783"/>
</kw>
<msg timestamp="20210712 13:17:40.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:35.518" endtime="20210712 13:17:40.784"/>
</kw>
<status status="PASS" starttime="20210712 13:17:35.518" endtime="20210712 13:17:40.784"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:40.788" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:45.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:45.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:40.786" endtime="20210712 13:17:45.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:45.417" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:45.416" endtime="20210712 13:17:45.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:45.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:45.417" endtime="20210712 13:17:45.418"/>
</kw>
<status status="PASS" starttime="20210712 13:17:40.785" endtime="20210712 13:17:45.418"/>
</kw>
<msg timestamp="20210712 13:17:45.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:40.785" endtime="20210712 13:17:45.418"/>
</kw>
<status status="PASS" starttime="20210712 13:17:40.784" endtime="20210712 13:17:45.419"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 13:17:15.259" endtime="20210712 13:17:45.419"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:17:45.426" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:17:45.425" endtime="20210712 13:17:45.426"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:17:45.426" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:17:45.426" endtime="20210712 13:17:45.427"/>
</kw>
<status status="PASS" starttime="20210712 13:17:45.425" endtime="20210712 13:17:45.427"/>
</kw>
<msg timestamp="20210712 13:17:45.427" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:17:45.423" endtime="20210712 13:17:45.427"/>
</kw>
<status status="PASS" starttime="20210712 13:17:45.422" endtime="20210712 13:17:45.427"/>
</kw>
<msg timestamp="20210712 13:17:45.427" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:17:45.422" endtime="20210712 13:17:45.428"/>
</kw>
<msg timestamp="20210712 13:17:45.428" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:17:45.421" endtime="20210712 13:17:45.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:45.432" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:48.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:48.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:45.429" endtime="20210712 13:17:48.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:48.270" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:48.269" endtime="20210712 13:17:48.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:48.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:48.270" endtime="20210712 13:17:48.271"/>
</kw>
<status status="PASS" starttime="20210712 13:17:45.429" endtime="20210712 13:17:48.271"/>
</kw>
<msg timestamp="20210712 13:17:48.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:45.428" endtime="20210712 13:17:48.272"/>
</kw>
<status status="PASS" starttime="20210712 13:17:45.428" endtime="20210712 13:17:48.272"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:17:48.277" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:17:50.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:17:50.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:17:48.274" endtime="20210712 13:17:50.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:17:50.896" level="INFO"/>
<status status="PASS" starttime="20210712 13:17:50.895" endtime="20210712 13:17:50.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:17:50.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:17:50.896" endtime="20210712 13:17:50.897"/>
</kw>
<status status="PASS" starttime="20210712 13:17:48.273" endtime="20210712 13:17:50.897"/>
</kw>
<msg timestamp="20210712 13:17:50.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:17:48.273" endtime="20210712 13:17:50.898"/>
</kw>
<status status="PASS" starttime="20210712 13:17:48.272" endtime="20210712 13:17:50.898"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 13:17:45.420" endtime="20210712 13:17:50.898"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210712 13:17:15.188" endtime="20210712 13:17:50.900"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="217369"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:23:33.366" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:23:33.365" endtime="20210712 13:23:33.366"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:23:33.366" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:23:33.366" endtime="20210712 13:23:33.366"/>
</kw>
<status status="PASS" starttime="20210712 13:23:33.365" endtime="20210712 13:23:33.367"/>
</kw>
<msg timestamp="20210712 13:23:33.367" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:23:33.364" endtime="20210712 13:23:33.367"/>
</kw>
<status status="PASS" starttime="20210712 13:23:33.363" endtime="20210712 13:23:33.367"/>
</kw>
<msg timestamp="20210712 13:23:33.367" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:23:33.363" endtime="20210712 13:23:33.367"/>
</kw>
<msg timestamp="20210712 13:23:33.368" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:23:33.361" endtime="20210712 13:23:33.368"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:23:33.368" level="INFO">${random} = 74872</msg>
<status status="PASS" starttime="20210712 13:23:33.368" endtime="20210712 13:23:33.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:33.376" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-74872 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:37.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:37.923" level="INFO">${output} = 2021-07-12 13:23:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:23:33.370" endtime="20210712 13:23:37.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:37.925" level="INFO">2021-07-12 13:23:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:23:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:23:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:23:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-01549040EBB0-&gt;479c3bf5-b49b-45c9-b984-776bfebf46ad
2021-07-12 13:23:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210712 13:23:37.924" endtime="20210712 13:23:37.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:37.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:37.926" endtime="20210712 13:23:37.926"/>
</kw>
<status status="PASS" starttime="20210712 13:23:33.370" endtime="20210712 13:23:37.927"/>
</kw>
<msg timestamp="20210712 13:23:37.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:33.369" endtime="20210712 13:23:37.927"/>
</kw>
<msg timestamp="20210712 13:23:37.927" level="INFO">${result} = 2021-07-12 13:23:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:23:33.368" endtime="20210712 13:23:37.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:37.931" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:40.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:40.138" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:23 o3fs://bucket1.volume1.om/ozone-74872
dr...</msg>
<status status="PASS" starttime="20210712 13:23:37.929" endtime="20210712 13:23:40.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:40.140" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:23 o3fs://bucket1.volume1.om/ozone-74872
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:23 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:23:40.139" endtime="20210712 13:23:40.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:40.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:40.140" endtime="20210712 13:23:40.141"/>
</kw>
<status status="PASS" starttime="20210712 13:23:37.928" endtime="20210712 13:23:40.141"/>
</kw>
<msg timestamp="20210712 13:23:40.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:37.928" endtime="20210712 13:23:40.143"/>
</kw>
<msg timestamp="20210712 13:23:40.144" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:23 o3fs://bucket1.volume1.om/ozone-74872
dr...</msg>
<status status="PASS" starttime="20210712 13:23:37.927" endtime="20210712 13:23:40.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:23:40.144" endtime="20210712 13:23:40.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:40.150" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-74872 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:44.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:44.117" level="INFO">${output} = 2021-07-12 13:23:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:23:40.147" endtime="20210712 13:23:44.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:44.119" level="INFO">2021-07-12 13:23:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:23:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210712 13:23:44.118" endtime="20210712 13:23:44.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:44.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:44.120" endtime="20210712 13:23:44.121"/>
</kw>
<status status="PASS" starttime="20210712 13:23:40.147" endtime="20210712 13:23:44.121"/>
</kw>
<msg timestamp="20210712 13:23:44.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:40.147" endtime="20210712 13:23:44.121"/>
</kw>
<msg timestamp="20210712 13:23:44.123" level="INFO">${result} = 2021-07-12 13:23:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:23:40.145" endtime="20210712 13:23:44.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:23:44.124" endtime="20210712 13:23:44.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 13:23:33.360" endtime="20210712 13:23:44.125"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210712 13:23:33.285" endtime="20210712 13:23:44.126"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:49.561" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:49.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:49.568" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:23:49.558" endtime="20210712 13:23:49.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:49.569" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:23:49.569" endtime="20210712 13:23:49.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:49.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:49.570" endtime="20210712 13:23:49.570"/>
</kw>
<status status="PASS" starttime="20210712 13:23:49.557" endtime="20210712 13:23:49.571"/>
</kw>
<msg timestamp="20210712 13:23:49.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:49.556" endtime="20210712 13:23:49.571"/>
</kw>
<msg timestamp="20210712 13:23:49.571" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:23:49.556" endtime="20210712 13:23:49.572"/>
</kw>
<msg timestamp="20210712 13:23:49.573" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:23:49.555" endtime="20210712 13:23:49.573"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:23:49.577" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:23:49.576" endtime="20210712 13:23:49.577"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:23:49.578" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:23:49.577" endtime="20210712 13:23:49.578"/>
</kw>
<status status="PASS" starttime="20210712 13:23:49.576" endtime="20210712 13:23:49.578"/>
</kw>
<msg timestamp="20210712 13:23:49.578" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:23:49.575" endtime="20210712 13:23:49.578"/>
</kw>
<status status="PASS" starttime="20210712 13:23:49.574" endtime="20210712 13:23:49.578"/>
</kw>
<msg timestamp="20210712 13:23:49.578" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:23:49.574" endtime="20210712 13:23:49.578"/>
</kw>
<msg timestamp="20210712 13:23:49.579" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:23:49.573" endtime="20210712 13:23:49.579"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:49.582" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:24:32.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:24:32.636" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:23:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210712 13:23:49.580" endtime="20210712 13:24:32.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:24:32.637" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:23:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:23:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:23:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:23:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7C86FCBF3672-&gt;479c3bf5-b49b-45c9-b984-776bfebf46ad
2021-07-12 13:23:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-07-12 13:23:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-738A8520D8B4-&gt;45749494-6e57-4fd8-abe3-511a169092c7
2021-07-12 13:23:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-07-12 13:23:53 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:23:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:23:54 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:23:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626096120696_0001
2021-07-12 13:23:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:23:55 INFO  Configuration:2795 - resource-types.xml not found
2021-07-12 13:23:55 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-07-12 13:23:55 INFO  YarnClientImpl:329 - Submitted application application_1626096120696_0001
2021-07-12 13:23:55 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1626096120696_0001/
2021-07-12 13:23:55 INFO  Job:1614 - Running job: job_1626096120696_0001
2021-07-12 13:24:06 INFO  Job:1635 - Job job_1626096120696_0001 running in uber mode : false
2021-07-12 13:24:06 INFO  Job:1642 -  map 0% reduce 0%
2021-07-12 13:24:13 INFO  Job:1642 -  map 33% reduce 0%
2021-07-12 13:24:19 INFO  Job:1642 -  map 67% reduce 0%
2021-07-12 13:24:25 INFO  Job:1642 -  map 100% reduce 0%
2021-07-12 13:24:30 INFO  Job:1642 -  map 100% reduce 100%
2021-07-12 13:24:31 INFO  Job:1653 - Job job_1626096120696_0001 completed successfully
2021-07-12 13:24:31 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1113697
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46504
		Total time spent by all reduces in occupied slots (ms)=17400
		Total time spent by all map tasks (ms)=11626
		Total time spent by all reduce tasks (ms)=4350
		Total vcore-milliseconds taken by all map tasks=11626
		Total vcore-milliseconds taken by all reduce tasks=4350
		Total megabyte-milliseconds taken by all map tasks=47620096
		Total megabyte-milliseconds taken by all reduce tasks=17817600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=675
		CPU time spent (ms)=7960
		Physical memory (bytes) snapshot=1449283584
		Virtual memory (bytes) snapshot=15828447232
		Total committed heap usage (bytes)=1202192384
		Peak Map Physical memory (bytes)=387739648
		Peak Map Virtual memory (bytes)=3953242112
		Peak Reduce Physical memory (bytes)=336297984
		Peak Reduce Virtual memory (bytes)=3972743168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.458 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210712 13:24:32.636" endtime="20210712 13:24:32.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:24:32.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:24:32.638" endtime="20210712 13:24:32.638"/>
</kw>
<status status="PASS" starttime="20210712 13:23:49.580" endtime="20210712 13:24:32.639"/>
</kw>
<msg timestamp="20210712 13:24:32.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:49.580" endtime="20210712 13:24:32.639"/>
</kw>
<msg timestamp="20210712 13:24:32.639" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:23:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:23:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210712 13:23:49.579" endtime="20210712 13:24:32.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:24:32.640" endtime="20210712 13:24:32.640"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:23:49.555" endtime="20210712 13:24:32.640"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:24:32.645" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:24:32.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:24:32.651" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:24:32.643" endtime="20210712 13:24:32.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:24:32.652" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:24:32.651" endtime="20210712 13:24:32.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:24:32.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:24:32.653" endtime="20210712 13:24:32.653"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.643" endtime="20210712 13:24:32.654"/>
</kw>
<msg timestamp="20210712 13:24:32.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:24:32.642" endtime="20210712 13:24:32.654"/>
</kw>
<msg timestamp="20210712 13:24:32.654" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:24:32.642" endtime="20210712 13:24:32.654"/>
</kw>
<msg timestamp="20210712 13:24:32.655" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:24:32.641" endtime="20210712 13:24:32.655"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:24:32.655" level="INFO">${random} = g8rHvZF2</msg>
<status status="PASS" starttime="20210712 13:24:32.655" endtime="20210712 13:24:32.655"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:24:32.660" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:24:32.659" endtime="20210712 13:24:32.660"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:24:32.660" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:24:32.660" endtime="20210712 13:24:32.660"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.659" endtime="20210712 13:24:32.661"/>
</kw>
<msg timestamp="20210712 13:24:32.661" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:24:32.658" endtime="20210712 13:24:32.661"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.657" endtime="20210712 13:24:32.661"/>
</kw>
<msg timestamp="20210712 13:24:32.661" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:24:32.657" endtime="20210712 13:24:32.661"/>
</kw>
<msg timestamp="20210712 13:24:32.662" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210712 13:24:32.656" endtime="20210712 13:24:32.662"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:24:32.665" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:24:32.665" endtime="20210712 13:24:32.665"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:24:32.666" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:24:32.666" endtime="20210712 13:24:32.666"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.664" endtime="20210712 13:24:32.667"/>
</kw>
<msg timestamp="20210712 13:24:32.667" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:24:32.664" endtime="20210712 13:24:32.667"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.663" endtime="20210712 13:24:32.667"/>
</kw>
<msg timestamp="20210712 13:24:32.667" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210712 13:24:32.663" endtime="20210712 13:24:32.667"/>
</kw>
<msg timestamp="20210712 13:24:32.667" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210712 13:24:32.662" endtime="20210712 13:24:32.667"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:24:32.671" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:24:32.671" endtime="20210712 13:24:32.671"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:24:32.672" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:24:32.671" endtime="20210712 13:24:32.672"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.670" endtime="20210712 13:24:32.672"/>
</kw>
<msg timestamp="20210712 13:24:32.672" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:24:32.670" endtime="20210712 13:24:32.672"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.669" endtime="20210712 13:24:32.673"/>
</kw>
<msg timestamp="20210712 13:24:32.673" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-g8rHvZF2.txt</msg>
<status status="PASS" starttime="20210712 13:24:32.668" endtime="20210712 13:24:32.673"/>
</kw>
<msg timestamp="20210712 13:24:32.673" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-g8rHvZF2.txt</msg>
<status status="PASS" starttime="20210712 13:24:32.668" endtime="20210712 13:24:32.673"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:24:32.677" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-g8rHvZF2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:25:19.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:25:19.528" level="INFO">${output} = 2021-07-12 13:24:34 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:24:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210712 13:24:32.675" endtime="20210712 13:25:19.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:25:19.530" level="INFO">2021-07-12 13:24:34 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:24:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:24:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:24:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:24:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:24:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:24:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-810411186347-&gt;45749494-6e57-4fd8-abe3-511a169092c7
2021-07-12 13:24:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:24:39 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:24:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-80E43BEA5BC5-&gt;479c3bf5-b49b-45c9-b984-776bfebf46ad
2021-07-12 13:24:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:24:42 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:24:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626096120696_0002
2021-07-12 13:24:42 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:24:42 INFO  Configuration:2795 - resource-types.xml not found
2021-07-12 13:24:42 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-07-12 13:24:42 INFO  YarnClientImpl:329 - Submitted application application_1626096120696_0002
2021-07-12 13:24:42 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1626096120696_0002/
2021-07-12 13:24:42 INFO  Job:1614 - Running job: job_1626096120696_0002
2021-07-12 13:24:50 INFO  Job:1635 - Job job_1626096120696_0002 running in uber mode : false
2021-07-12 13:24:50 INFO  Job:1642 -  map 0% reduce 0%
2021-07-12 13:24:57 INFO  Job:1642 -  map 33% reduce 0%
2021-07-12 13:25:03 INFO  Job:1642 -  map 67% reduce 0%
2021-07-12 13:25:09 INFO  Job:1642 -  map 100% reduce 0%
2021-07-12 13:25:15 INFO  Job:1642 -  map 100% reduce 100%
2021-07-12 13:25:19 INFO  Job:1653 - Job job_1626096120696_0002 completed successfully
2021-07-12 13:25:19 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1176463
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45220
		Total time spent by all reduces in occupied slots (ms)=16660
		Total time spent by all map tasks (ms)=11305
		Total time spent by all reduce tasks (ms)=4165
		Total vcore-milliseconds taken by all map tasks=11305
		Total vcore-milliseconds taken by all reduce tasks=4165
		Total megabyte-milliseconds taken by all map tasks=46305280
		Total megabyte-milliseconds taken by all reduce tasks=17059840
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=650
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1365585920
		Virtual memory (bytes) snapshot=15809646592
		Total committed heap usage (bytes)=1253572608
		Peak Map Physical memory (bytes)=347791360
		Peak Map Virtual memory (bytes)=3953811456
		Peak Reduce Physical memory (bytes)=325513216
		Peak Reduce Virtual memory (bytes)=3973943296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210712 13:25:19.528" endtime="20210712 13:25:19.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:25:19.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:25:19.530" endtime="20210712 13:25:19.531"/>
</kw>
<status status="PASS" starttime="20210712 13:24:32.674" endtime="20210712 13:25:19.532"/>
</kw>
<msg timestamp="20210712 13:25:19.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:24:32.674" endtime="20210712 13:25:19.532"/>
</kw>
<msg timestamp="20210712 13:25:19.533" level="INFO">${output} = 2021-07-12 13:24:34 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:24:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210712 13:24:32.673" endtime="20210712 13:25:19.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:25:19.533" endtime="20210712 13:25:19.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:25:19.533" endtime="20210712 13:25:19.534"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:24:32.641" endtime="20210712 13:25:19.534"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210712 13:23:49.485" endtime="20210712 13:25:19.538"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:25:24.797" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:25:24.796" endtime="20210712 13:25:24.797"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:25:24.797" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:25:24.797" endtime="20210712 13:25:24.797"/>
</kw>
<status status="PASS" starttime="20210712 13:25:24.796" endtime="20210712 13:25:24.798"/>
</kw>
<msg timestamp="20210712 13:25:24.798" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:25:24.795" endtime="20210712 13:25:24.798"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:25:24.799" endtime="20210712 13:25:24.799"/>
</kw>
<msg timestamp="20210712 13:25:24.799" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:25:24.798" endtime="20210712 13:25:24.799"/>
</kw>
<status status="PASS" starttime="20210712 13:25:24.794" endtime="20210712 13:25:24.800"/>
</kw>
<msg timestamp="20210712 13:25:24.800" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:25:24.793" endtime="20210712 13:25:24.800"/>
</kw>
<msg timestamp="20210712 13:25:24.800" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:25:24.792" endtime="20210712 13:25:24.800"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:25:24.801" level="INFO">${random} = 03856</msg>
<status status="PASS" starttime="20210712 13:25:24.800" endtime="20210712 13:25:24.801"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:25:24.807" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-03856 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:25:28.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:25:28.772" level="INFO">${output} = 2021-07-12 13:25:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:25:24.803" endtime="20210712 13:25:28.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:25:28.774" level="INFO">2021-07-12 13:25:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:25:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:25:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:25:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E79FDFB9CBA5-&gt;45749494-6e57-4fd8-abe3-511a169092c7
2021-07-12 13:25:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210712 13:25:28.773" endtime="20210712 13:25:28.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:25:28.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:25:28.774" endtime="20210712 13:25:28.775"/>
</kw>
<status status="PASS" starttime="20210712 13:25:24.802" endtime="20210712 13:25:28.775"/>
</kw>
<msg timestamp="20210712 13:25:28.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:25:24.802" endtime="20210712 13:25:28.775"/>
</kw>
<msg timestamp="20210712 13:25:28.775" level="INFO">${result} = 2021-07-12 13:25:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:25:24.801" endtime="20210712 13:25:28.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:25:28.779" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:25:30.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:25:30.827" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:25 ofs://om/volume1/bucket1/ozone-03856
-rw-...</msg>
<status status="PASS" starttime="20210712 13:25:28.777" endtime="20210712 13:25:30.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:25:30.829" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:25 ofs://om/volume1/bucket1/ozone-03856
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:23 ofs://om/volume1/bucket1/ozone-74872
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:23 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:24 ofs://om/volume1/bucket1/wordcount-g8rHvZF2.txt</msg>
<status status="PASS" starttime="20210712 13:25:30.828" endtime="20210712 13:25:30.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:25:30.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:25:30.829" endtime="20210712 13:25:30.830"/>
</kw>
<status status="PASS" starttime="20210712 13:25:28.777" endtime="20210712 13:25:30.830"/>
</kw>
<msg timestamp="20210712 13:25:30.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:25:28.776" endtime="20210712 13:25:30.830"/>
</kw>
<msg timestamp="20210712 13:25:30.831" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-07-12 13:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-07-12 13:25 ofs://om/volume1/bucket1/ozone-03856
-rw-...</msg>
<status status="PASS" starttime="20210712 13:25:28.776" endtime="20210712 13:25:30.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:25:30.831" endtime="20210712 13:25:30.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:25:30.835" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-03856 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:25:34.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:25:34.251" level="INFO">${output} = 2021-07-12 13:25:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:25:30.833" endtime="20210712 13:25:34.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:25:34.253" level="INFO">2021-07-12 13:25:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:25:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210712 13:25:34.252" endtime="20210712 13:25:34.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:25:34.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:25:34.253" endtime="20210712 13:25:34.254"/>
</kw>
<status status="PASS" starttime="20210712 13:25:30.833" endtime="20210712 13:25:34.254"/>
</kw>
<msg timestamp="20210712 13:25:34.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:25:30.832" endtime="20210712 13:25:34.255"/>
</kw>
<msg timestamp="20210712 13:25:34.256" level="INFO">${result} = 2021-07-12 13:25:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210712 13:25:30.831" endtime="20210712 13:25:34.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:25:34.256" endtime="20210712 13:25:34.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 13:25:24.791" endtime="20210712 13:25:34.257"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210712 13:25:24.726" endtime="20210712 13:25:34.259"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:25:39.390" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:25:39.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:25:39.396" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:25:39.386" endtime="20210712 13:25:39.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:25:39.397" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:25:39.396" endtime="20210712 13:25:39.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:25:39.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:25:39.397" endtime="20210712 13:25:39.398"/>
</kw>
<status status="PASS" starttime="20210712 13:25:39.386" endtime="20210712 13:25:39.398"/>
</kw>
<msg timestamp="20210712 13:25:39.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:25:39.385" endtime="20210712 13:25:39.399"/>
</kw>
<msg timestamp="20210712 13:25:39.399" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:25:39.384" endtime="20210712 13:25:39.400"/>
</kw>
<msg timestamp="20210712 13:25:39.400" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:25:39.384" endtime="20210712 13:25:39.400"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:25:39.405" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:25:39.404" endtime="20210712 13:25:39.405"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:25:39.406" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:25:39.405" endtime="20210712 13:25:39.406"/>
</kw>
<status status="PASS" starttime="20210712 13:25:39.404" endtime="20210712 13:25:39.406"/>
</kw>
<msg timestamp="20210712 13:25:39.406" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:25:39.403" endtime="20210712 13:25:39.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:25:39.407" endtime="20210712 13:25:39.407"/>
</kw>
<msg timestamp="20210712 13:25:39.407" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:25:39.406" endtime="20210712 13:25:39.407"/>
</kw>
<status status="PASS" starttime="20210712 13:25:39.403" endtime="20210712 13:25:39.408"/>
</kw>
<msg timestamp="20210712 13:25:39.408" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:25:39.402" endtime="20210712 13:25:39.408"/>
</kw>
<msg timestamp="20210712 13:25:39.408" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:25:39.401" endtime="20210712 13:25:39.408"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:25:39.412" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:26:20.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:26:20.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:25:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:41 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210712 13:25:39.410" endtime="20210712 13:26:20.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:26:20.476" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:25:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:41 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:25:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:25:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:25:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB5BDA041381-&gt;45749494-6e57-4fd8-abe3-511a169092c7
2021-07-12 13:25:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-07-12 13:25:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1A6F75F6E1FA-&gt;479c3bf5-b49b-45c9-b984-776bfebf46ad
2021-07-12 13:25:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-07-12 13:25:43 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:25:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:25:43 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:25:43 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:25:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626096120696_0003
2021-07-12 13:25:43 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:25:44 INFO  Configuration:2795 - resource-types.xml not found
2021-07-12 13:25:44 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-07-12 13:25:44 INFO  YarnClientImpl:329 - Submitted application application_1626096120696_0003
2021-07-12 13:25:44 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1626096120696_0003/
2021-07-12 13:25:44 INFO  Job:1614 - Running job: job_1626096120696_0003
2021-07-12 13:25:52 INFO  Job:1635 - Job job_1626096120696_0003 running in uber mode : false
2021-07-12 13:25:52 INFO  Job:1642 -  map 0% reduce 0%
2021-07-12 13:25:59 INFO  Job:1642 -  map 33% reduce 0%
2021-07-12 13:26:05 INFO  Job:1642 -  map 67% reduce 0%
2021-07-12 13:26:11 INFO  Job:1642 -  map 100% reduce 0%
2021-07-12 13:26:16 INFO  Job:1642 -  map 100% reduce 100%
2021-07-12 13:26:19 INFO  Job:1653 - Job job_1626096120696_0003 completed successfully
2021-07-12 13:26:19 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1113493
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44420
		Total time spent by all reduces in occupied slots (ms)=17196
		Total time spent by all map tasks (ms)=11105
		Total time spent by all reduce tasks (ms)=4299
		Total vcore-milliseconds taken by all map tasks=11105
		Total vcore-milliseconds taken by all reduce tasks=4299
		Total megabyte-milliseconds taken by all map tasks=45486080
		Total megabyte-milliseconds taken by all reduce tasks=17608704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=656
		CPU time spent (ms)=7850
		Physical memory (bytes) snapshot=1406496768
		Virtual memory (bytes) snapshot=15814647808
		Total committed heap usage (bytes)=1424490496
		Peak Map Physical memory (bytes)=367710208
		Peak Map Virtual memory (bytes)=3949912064
		Peak Reduce Physical memory (bytes)=336293888
		Peak Reduce Virtual memory (bytes)=3974447104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.824 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210712 13:26:20.475" endtime="20210712 13:26:20.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:26:20.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:26:20.476" endtime="20210712 13:26:20.477"/>
</kw>
<status status="PASS" starttime="20210712 13:25:39.410" endtime="20210712 13:26:20.477"/>
</kw>
<msg timestamp="20210712 13:26:20.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:25:39.409" endtime="20210712 13:26:20.477"/>
</kw>
<msg timestamp="20210712 13:26:20.478" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-07-12 13:25:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:25:41 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210712 13:25:39.409" endtime="20210712 13:26:20.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:26:20.478" endtime="20210712 13:26:20.479"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:25:39.383" endtime="20210712 13:26:20.479"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:26:20.485" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:26:20.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:26:20.492" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:26:20.483" endtime="20210712 13:26:20.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:26:20.494" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:26:20.493" endtime="20210712 13:26:20.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:26:20.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:26:20.494" endtime="20210712 13:26:20.495"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.482" endtime="20210712 13:26:20.495"/>
</kw>
<msg timestamp="20210712 13:26:20.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:26:20.482" endtime="20210712 13:26:20.495"/>
</kw>
<msg timestamp="20210712 13:26:20.495" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:26:20.482" endtime="20210712 13:26:20.495"/>
</kw>
<msg timestamp="20210712 13:26:20.496" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210712 13:26:20.481" endtime="20210712 13:26:20.496"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 13:26:20.496" level="INFO">${random} = ZSSH9QU2</msg>
<status status="PASS" starttime="20210712 13:26:20.496" endtime="20210712 13:26:20.496"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:26:20.501" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:26:20.500" endtime="20210712 13:26:20.501"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:26:20.502" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:26:20.501" endtime="20210712 13:26:20.502"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.500" endtime="20210712 13:26:20.503"/>
</kw>
<msg timestamp="20210712 13:26:20.503" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:26:20.499" endtime="20210712 13:26:20.503"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210712 13:26:20.503" endtime="20210712 13:26:20.504"/>
</kw>
<msg timestamp="20210712 13:26:20.504" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210712 13:26:20.503" endtime="20210712 13:26:20.504"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.498" endtime="20210712 13:26:20.504"/>
</kw>
<msg timestamp="20210712 13:26:20.505" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:26:20.498" endtime="20210712 13:26:20.505"/>
</kw>
<msg timestamp="20210712 13:26:20.505" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210712 13:26:20.497" endtime="20210712 13:26:20.505"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:26:20.509" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:26:20.509" endtime="20210712 13:26:20.509"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:26:20.510" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:26:20.509" endtime="20210712 13:26:20.510"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.508" endtime="20210712 13:26:20.510"/>
</kw>
<msg timestamp="20210712 13:26:20.510" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:26:20.507" endtime="20210712 13:26:20.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:26:20.512" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210712 13:26:20.512" endtime="20210712 13:26:20.512"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:26:20.513" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210712 13:26:20.513" endtime="20210712 13:26:20.513"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.511" endtime="20210712 13:26:20.514"/>
</kw>
<msg timestamp="20210712 13:26:20.514" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210712 13:26:20.511" endtime="20210712 13:26:20.514"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.507" endtime="20210712 13:26:20.514"/>
</kw>
<msg timestamp="20210712 13:26:20.514" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210712 13:26:20.506" endtime="20210712 13:26:20.514"/>
</kw>
<msg timestamp="20210712 13:26:20.515" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210712 13:26:20.505" endtime="20210712 13:26:20.515"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:26:20.521" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210712 13:26:20.520" endtime="20210712 13:26:20.521"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:26:20.522" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210712 13:26:20.521" endtime="20210712 13:26:20.522"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.520" endtime="20210712 13:26:20.522"/>
</kw>
<msg timestamp="20210712 13:26:20.522" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210712 13:26:20.519" endtime="20210712 13:26:20.522"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:26:20.524" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210712 13:26:20.524" endtime="20210712 13:26:20.524"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:26:20.525" level="INFO">${result} = /wordcount-ZSSH9QU2.txt</msg>
<status status="PASS" starttime="20210712 13:26:20.524" endtime="20210712 13:26:20.525"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.523" endtime="20210712 13:26:20.525"/>
</kw>
<msg timestamp="20210712 13:26:20.525" level="INFO">${path_with_leading} = /wordcount-ZSSH9QU2.txt</msg>
<status status="PASS" starttime="20210712 13:26:20.523" endtime="20210712 13:26:20.525"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.518" endtime="20210712 13:26:20.526"/>
</kw>
<msg timestamp="20210712 13:26:20.526" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ZSSH9QU2.txt</msg>
<status status="PASS" starttime="20210712 13:26:20.517" endtime="20210712 13:26:20.526"/>
</kw>
<msg timestamp="20210712 13:26:20.526" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ZSSH9QU2.txt</msg>
<status status="PASS" starttime="20210712 13:26:20.516" endtime="20210712 13:26:20.526"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:26:20.530" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ZSSH9QU2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:27:03.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:27:03.870" level="INFO">${output} = 2021-07-12 13:26:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:26:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210712 13:26:20.528" endtime="20210712 13:27:03.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:27:03.871" level="INFO">2021-07-12 13:26:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:26:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-07-12 13:26:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-07-12 13:26:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-07-12 13:26:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-07-12 13:26:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-12 13:26:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C9B4E9F51E46-&gt;479c3bf5-b49b-45c9-b984-776bfebf46ad
2021-07-12 13:26:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:26:24 INFO  FileInputFormat:292 - Total input files to process : 3
2021-07-12 13:26:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-29D38433F68A-&gt;45749494-6e57-4fd8-abe3-511a169092c7
2021-07-12 13:26:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-12 13:26:24 INFO  JobSubmitter:202 - number of splits:3
2021-07-12 13:26:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1626096120696_0004
2021-07-12 13:26:27 INFO  JobSubmitter:299 - Executing with tokens: []
2021-07-12 13:26:27 INFO  Configuration:2795 - resource-types.xml not found
2021-07-12 13:26:27 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-07-12 13:26:27 INFO  YarnClientImpl:329 - Submitted application application_1626096120696_0004
2021-07-12 13:26:27 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1626096120696_0004/
2021-07-12 13:26:27 INFO  Job:1614 - Running job: job_1626096120696_0004
2021-07-12 13:26:36 INFO  Job:1635 - Job job_1626096120696_0004 running in uber mode : false
2021-07-12 13:26:36 INFO  Job:1642 -  map 0% reduce 0%
2021-07-12 13:26:43 INFO  Job:1642 -  map 33% reduce 0%
2021-07-12 13:26:49 INFO  Job:1642 -  map 67% reduce 0%
2021-07-12 13:26:55 INFO  Job:1642 -  map 100% reduce 0%
2021-07-12 13:27:00 INFO  Job:1642 -  map 100% reduce 100%
2021-07-12 13:27:03 INFO  Job:1653 - Job job_1626096120696_0004 completed successfully
2021-07-12 13:27:03 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1176379
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46664
		Total time spent by all reduces in occupied slots (ms)=17424
		Total time spent by all map tasks (ms)=11666
		Total time spent by all reduce tasks (ms)=4356
		Total vcore-milliseconds taken by all map tasks=11666
		Total vcore-milliseconds taken by all reduce tasks=4356
		Total megabyte-milliseconds taken by all map tasks=47783936
		Total megabyte-milliseconds taken by all reduce tasks=17842176
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=941
		CPU time spent (ms)=9160
		Physical memory (bytes) snapshot=1717710848
		Virtual memory (bytes) snapshot=15827279872
		Total committed heap usage (bytes)=1522008064
		Peak Map Physical memory (bytes)=563490816
		Peak Map Virtual memory (bytes)=3954425856
		Peak Reduce Physical memory (bytes)=386588672
		Peak Reduce Virtual memory (bytes)=3973677056
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210712 13:27:03.870" endtime="20210712 13:27:03.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:27:03.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:27:03.872" endtime="20210712 13:27:03.873"/>
</kw>
<status status="PASS" starttime="20210712 13:26:20.527" endtime="20210712 13:27:03.873"/>
</kw>
<msg timestamp="20210712 13:27:03.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:26:20.527" endtime="20210712 13:27:03.873"/>
</kw>
<msg timestamp="20210712 13:27:03.874" level="INFO">${output} = 2021-07-12 13:26:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-07-12 13:26:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210712 13:26:20.526" endtime="20210712 13:27:03.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:27:03.874" endtime="20210712 13:27:03.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:27:03.875" endtime="20210712 13:27:03.875"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210712 13:26:20.480" endtime="20210712 13:27:03.875"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210712 13:25:39.310" endtime="20210712 13:27:03.877"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:22:33.035" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:22:41.923" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 13:22:41.923" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:22:33.031" endtime="20210712 13:22:41.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:22:41.925" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:22:41.924" endtime="20210712 13:22:41.925"/>
</kw>
<msg timestamp="20210712 13:22:41.926" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210712 13:22:33.029" endtime="20210712 13:22:41.926"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:22:41.930" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:22:45.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:22:45.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:22:41.928" endtime="20210712 13:22:45.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:22:45.707" level="INFO"/>
<status status="PASS" starttime="20210712 13:22:45.706" endtime="20210712 13:22:45.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:22:45.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:22:45.707" endtime="20210712 13:22:45.708"/>
</kw>
<status status="PASS" starttime="20210712 13:22:41.928" endtime="20210712 13:22:45.708"/>
</kw>
<msg timestamp="20210712 13:22:45.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:22:41.927" endtime="20210712 13:22:45.709"/>
</kw>
<msg timestamp="20210712 13:22:45.709" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 13:22:41.927" endtime="20210712 13:22:45.709"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:22:45.709" endtime="20210712 13:22:45.710"/>
</kw>
<status status="PASS" starttime="20210712 13:22:41.926" endtime="20210712 13:22:45.710"/>
</kw>
<status status="PASS" starttime="20210712 13:22:41.926" endtime="20210712 13:22:45.710"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:22:45.717" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:22:49.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:22:49.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:22:45.714" endtime="20210712 13:22:49.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:22:49.669" level="INFO"/>
<status status="PASS" starttime="20210712 13:22:49.668" endtime="20210712 13:22:49.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:22:49.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:22:49.669" endtime="20210712 13:22:49.670"/>
</kw>
<status status="PASS" starttime="20210712 13:22:45.713" endtime="20210712 13:22:49.670"/>
</kw>
<msg timestamp="20210712 13:22:49.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:22:45.712" endtime="20210712 13:22:49.670"/>
</kw>
<status status="PASS" starttime="20210712 13:22:45.711" endtime="20210712 13:22:49.671"/>
</kw>
<status status="PASS" starttime="20210712 13:22:45.711" endtime="20210712 13:22:49.671"/>
</kw>
<status status="PASS" starttime="20210712 13:22:45.710" endtime="20210712 13:22:49.671"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210712 13:22:49.671" endtime="20210712 13:22:49.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:22:49.676" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:22:53.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:22:53.604" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210712 13:22:49.674" endtime="20210712 13:22:53.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:22:53.606" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T13:22:49.478Z",
  "modificationTime" : "2021-07-12T13:22:49.478Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210712 13:22:53.605" endtime="20210712 13:22:53.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:22:53.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:22:53.606" endtime="20210712 13:22:53.607"/>
</kw>
<status status="PASS" starttime="20210712 13:22:49.673" endtime="20210712 13:22:53.607"/>
</kw>
<msg timestamp="20210712 13:22:53.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:22:49.673" endtime="20210712 13:22:53.607"/>
</kw>
<msg timestamp="20210712 13:22:53.608" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210712 13:22:49.672" endtime="20210712 13:22:53.608"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 13:22:53.608" endtime="20210712 13:22:53.608"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:22:53.614" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:22:53.613" endtime="20210712 13:22:53.614"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:22:53.615" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:22:53.614" endtime="20210712 13:22:53.615"/>
</kw>
<status status="PASS" starttime="20210712 13:22:53.613" endtime="20210712 13:22:53.615"/>
</kw>
<msg timestamp="20210712 13:22:53.615" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:22:53.611" endtime="20210712 13:22:53.615"/>
</kw>
<status status="PASS" starttime="20210712 13:22:53.610" endtime="20210712 13:22:53.616"/>
</kw>
<msg timestamp="20210712 13:22:53.616" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210712 13:22:53.610" endtime="20210712 13:22:53.616"/>
</kw>
<msg timestamp="20210712 13:22:53.616" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210712 13:22:53.609" endtime="20210712 13:22:53.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:22:53.620" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:22:57.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:22:57.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:22:53.618" endtime="20210712 13:22:57.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:22:57.831" level="INFO"/>
<status status="PASS" starttime="20210712 13:22:57.830" endtime="20210712 13:22:57.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:22:57.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:22:57.831" endtime="20210712 13:22:57.832"/>
</kw>
<status status="PASS" starttime="20210712 13:22:53.618" endtime="20210712 13:22:57.833"/>
</kw>
<msg timestamp="20210712 13:22:57.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:22:53.617" endtime="20210712 13:22:57.833"/>
</kw>
<status status="PASS" starttime="20210712 13:22:53.617" endtime="20210712 13:22:57.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:22:57.837" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:05.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:05.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:22:57.835" endtime="20210712 13:23:05.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:05.961" level="INFO"/>
<status status="PASS" starttime="20210712 13:23:05.959" endtime="20210712 13:23:05.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:05.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:05.961" endtime="20210712 13:23:05.962"/>
</kw>
<status status="PASS" starttime="20210712 13:22:57.834" endtime="20210712 13:23:05.963"/>
</kw>
<msg timestamp="20210712 13:23:05.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:22:57.834" endtime="20210712 13:23:05.963"/>
</kw>
<status status="PASS" starttime="20210712 13:22:57.833" endtime="20210712 13:23:05.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:05.967" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:12.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:12.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:23:05.965" endtime="20210712 13:23:12.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:12.792" level="INFO"/>
<status status="PASS" starttime="20210712 13:23:12.790" endtime="20210712 13:23:12.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:12.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:12.792" endtime="20210712 13:23:12.793"/>
</kw>
<status status="PASS" starttime="20210712 13:23:05.964" endtime="20210712 13:23:12.793"/>
</kw>
<msg timestamp="20210712 13:23:12.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:05.964" endtime="20210712 13:23:12.793"/>
</kw>
<status status="PASS" starttime="20210712 13:23:05.963" endtime="20210712 13:23:12.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:12.798" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:19.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:19.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:23:12.796" endtime="20210712 13:23:19.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:19.511" level="INFO"/>
<status status="PASS" starttime="20210712 13:23:19.510" endtime="20210712 13:23:19.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:19.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:19.511" endtime="20210712 13:23:19.512"/>
</kw>
<status status="PASS" starttime="20210712 13:23:12.795" endtime="20210712 13:23:19.512"/>
</kw>
<msg timestamp="20210712 13:23:19.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:12.794" endtime="20210712 13:23:19.512"/>
</kw>
<status status="PASS" starttime="20210712 13:23:12.794" endtime="20210712 13:23:19.513"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 13:22:33.028" endtime="20210712 13:23:19.513"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210712 13:23:19.520" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210712 13:23:19.519" endtime="20210712 13:23:19.520"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210712 13:23:19.521" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210712 13:23:19.520" endtime="20210712 13:23:19.521"/>
</kw>
<status status="PASS" starttime="20210712 13:23:19.518" endtime="20210712 13:23:19.521"/>
</kw>
<msg timestamp="20210712 13:23:19.521" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210712 13:23:19.517" endtime="20210712 13:23:19.521"/>
</kw>
<status status="PASS" starttime="20210712 13:23:19.516" endtime="20210712 13:23:19.522"/>
</kw>
<msg timestamp="20210712 13:23:19.522" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:23:19.515" endtime="20210712 13:23:19.522"/>
</kw>
<msg timestamp="20210712 13:23:19.522" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210712 13:23:19.514" endtime="20210712 13:23:19.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:19.526" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:23.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:23.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:23:19.524" endtime="20210712 13:23:23.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:23.803" level="INFO"/>
<status status="PASS" starttime="20210712 13:23:23.802" endtime="20210712 13:23:23.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:23.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:23.804" endtime="20210712 13:23:23.804"/>
</kw>
<status status="PASS" starttime="20210712 13:23:19.523" endtime="20210712 13:23:23.805"/>
</kw>
<msg timestamp="20210712 13:23:23.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:19.523" endtime="20210712 13:23:23.805"/>
</kw>
<status status="PASS" starttime="20210712 13:23:19.522" endtime="20210712 13:23:23.805"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 13:23:23.810" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 13:23:27.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 13:23:27.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 13:23:23.807" endtime="20210712 13:23:27.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 13:23:27.943" level="INFO"/>
<status status="PASS" starttime="20210712 13:23:27.942" endtime="20210712 13:23:27.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 13:23:27.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 13:23:27.943" endtime="20210712 13:23:27.944"/>
</kw>
<status status="PASS" starttime="20210712 13:23:23.807" endtime="20210712 13:23:27.944"/>
</kw>
<msg timestamp="20210712 13:23:27.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 13:23:23.806" endtime="20210712 13:23:27.945"/>
</kw>
<status status="PASS" starttime="20210712 13:23:23.806" endtime="20210712 13:23:27.945"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 13:23:19.513" endtime="20210712 13:23:27.945"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210712 13:22:32.951" endtime="20210712 13:23:27.947"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="249990"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="683560"/>
</suite>
<statistics>
<total>
<stat pass="24" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="24" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
