<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210712 07:41:21.944" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:52:03.146" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:52:03.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:52:03.149" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 06:52:03.142" endtime="20210712 06:52:03.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:52:03.150" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 06:52:03.150" endtime="20210712 06:52:03.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:52:03.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:52:03.150" endtime="20210712 06:52:03.151"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.141" endtime="20210712 06:52:03.151"/>
</kw>
<msg timestamp="20210712 06:52:03.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:52:03.141" endtime="20210712 06:52:03.152"/>
</kw>
<msg timestamp="20210712 06:52:03.152" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210712 06:52:03.140" endtime="20210712 06:52:03.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:52:03.156" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:52:03.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:52:03.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:52:03.154" endtime="20210712 06:52:03.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:52:03.165" level="INFO"/>
<status status="PASS" starttime="20210712 06:52:03.164" endtime="20210712 06:52:03.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:52:03.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:52:03.165" endtime="20210712 06:52:03.166"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.154" endtime="20210712 06:52:03.166"/>
</kw>
<msg timestamp="20210712 06:52:03.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:52:03.153" endtime="20210712 06:52:03.166"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.153" endtime="20210712 06:52:03.166"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.152" endtime="20210712 06:52:03.167"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.140" endtime="20210712 06:52:03.167"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.139" endtime="20210712 06:52:03.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:52:03.171" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:52:03.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:52:03.298" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210712 06:52:03.169" endtime="20210712 06:52:03.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:52:03.300" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 12 Jul 2021 06:52:03 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2aC+PH7Syk4NLypMMkHQ9Xzp6wjFnJELkx90PuMS4LZtvoyzPK/k8iNXt+/x9BjurTQhsmokwDQ85slwrKyIXEuj
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1626108723280&amp;s=257rbNMFK86K/SPyGgCLLdzcgW7C3htOgnTELtjQe/4="; Path=/; HttpOnly
Last-Modified: Mon, 12 Jul 2021 06:39:28 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210712 06:52:03.299" endtime="20210712 06:52:03.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:52:03.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:52:03.300" endtime="20210712 06:52:03.301"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.168" endtime="20210712 06:52:03.302"/>
</kw>
<msg timestamp="20210712 06:52:03.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:52:03.168" endtime="20210712 06:52:03.302"/>
</kw>
<msg timestamp="20210712 06:52:03.302" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210712 06:52:03.167" endtime="20210712 06:52:03.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:52:03.303" endtime="20210712 06:52:03.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 06:52:03.138" endtime="20210712 06:52:03.303"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:52:03.311" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:52:03.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:52:03.315" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 06:52:03.309" endtime="20210712 06:52:03.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:52:03.316" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 06:52:03.316" endtime="20210712 06:52:03.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:52:03.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:52:03.317" endtime="20210712 06:52:03.317"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.308" endtime="20210712 06:52:03.318"/>
</kw>
<msg timestamp="20210712 06:52:03.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:52:03.308" endtime="20210712 06:52:03.318"/>
</kw>
<msg timestamp="20210712 06:52:03.318" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 06:52:03.307" endtime="20210712 06:52:03.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 06:52:03.320" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 06:52:03.318" endtime="20210712 06:52:03.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:52:03.325" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:52:03.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:52:03.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:52:03.323" endtime="20210712 06:52:03.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:52:03.333" level="INFO"/>
<status status="PASS" starttime="20210712 06:52:03.332" endtime="20210712 06:52:03.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:52:03.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:52:03.333" endtime="20210712 06:52:03.334"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.322" endtime="20210712 06:52:03.334"/>
</kw>
<msg timestamp="20210712 06:52:03.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:52:03.322" endtime="20210712 06:52:03.335"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.321" endtime="20210712 06:52:03.335"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.321" endtime="20210712 06:52:03.335"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.307" endtime="20210712 06:52:03.335"/>
</kw>
<status status="PASS" starttime="20210712 06:52:03.306" endtime="20210712 06:52:03.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:52:03.339" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:03.306" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 06:52:03.337" endtime="20210712 06:57:03.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 06:57:03.307" endtime="20210712 06:57:03.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 06:57:03.307" endtime="20210712 06:57:03.307"/>
</kw>
<status status="FAIL" starttime="20210712 06:52:03.336" endtime="20210712 06:57:03.308"/>
</kw>
<msg timestamp="20210712 06:57:03.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 06:52:03.336" endtime="20210712 06:57:03.308"/>
</kw>
<status status="FAIL" starttime="20210712 06:52:03.335" endtime="20210712 06:57:03.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210712 06:57:03.308" endtime="20210712 06:57:03.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 06:57:03.309" endtime="20210712 06:57:03.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210712 06:52:03.305" endtime="20210712 06:57:03.309">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210712 06:52:03.108" endtime="20210712 06:57:03.312"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:03.326" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:06.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:06.343" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210712 06:57:03.323" endtime="20210712 06:57:06.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:06.344" level="INFO">om</msg>
<status status="PASS" starttime="20210712 06:57:06.343" endtime="20210712 06:57:06.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:06.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:06.344" endtime="20210712 06:57:06.346"/>
</kw>
<status status="PASS" starttime="20210712 06:57:03.321" endtime="20210712 06:57:06.346"/>
</kw>
<msg timestamp="20210712 06:57:06.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:03.321" endtime="20210712 06:57:06.346"/>
</kw>
<msg timestamp="20210712 06:57:06.347" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210712 06:57:03.320" endtime="20210712 06:57:06.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:06.347" endtime="20210712 06:57:06.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:06.351" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:09.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:09.137" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210712 06:57:06.349" endtime="20210712 06:57:09.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:09.138" level="INFO">om</msg>
<status status="PASS" starttime="20210712 06:57:09.137" endtime="20210712 06:57:09.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:09.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:09.138" endtime="20210712 06:57:09.139"/>
</kw>
<status status="PASS" starttime="20210712 06:57:06.348" endtime="20210712 06:57:09.139"/>
</kw>
<msg timestamp="20210712 06:57:09.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:06.348" endtime="20210712 06:57:09.140"/>
</kw>
<msg timestamp="20210712 06:57:09.140" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210712 06:57:06.347" endtime="20210712 06:57:09.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:09.140" endtime="20210712 06:57:09.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 06:57:03.319" endtime="20210712 06:57:09.141"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:09.148" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:12.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:12.348" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 06:57:09.145" endtime="20210712 06:57:12.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:12.349" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 06:57:12.349" endtime="20210712 06:57:12.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:12.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:12.350" endtime="20210712 06:57:12.350"/>
</kw>
<status status="PASS" starttime="20210712 06:57:09.144" endtime="20210712 06:57:12.351"/>
</kw>
<msg timestamp="20210712 06:57:12.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:09.144" endtime="20210712 06:57:12.351"/>
</kw>
<msg timestamp="20210712 06:57:12.351" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210712 06:57:09.143" endtime="20210712 06:57:12.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:12.352" endtime="20210712 06:57:12.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:12.357" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:15.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:15.202" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 06:57:12.354" endtime="20210712 06:57:15.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:15.203" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 06:57:15.202" endtime="20210712 06:57:15.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:15.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:15.203" endtime="20210712 06:57:15.204"/>
</kw>
<status status="PASS" starttime="20210712 06:57:12.353" endtime="20210712 06:57:15.204"/>
</kw>
<msg timestamp="20210712 06:57:15.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:12.353" endtime="20210712 06:57:15.204"/>
</kw>
<msg timestamp="20210712 06:57:15.205" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210712 06:57:12.352" endtime="20210712 06:57:15.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:15.205" endtime="20210712 06:57:15.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 06:57:09.142" endtime="20210712 06:57:15.207"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:15.215" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:17.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:17.869" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210712 06:57:15.212" endtime="20210712 06:57:17.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:17.870" level="INFO">om</msg>
<status status="PASS" starttime="20210712 06:57:17.869" endtime="20210712 06:57:17.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:17.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:17.870" endtime="20210712 06:57:17.871"/>
</kw>
<status status="PASS" starttime="20210712 06:57:15.212" endtime="20210712 06:57:17.871"/>
</kw>
<msg timestamp="20210712 06:57:17.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:15.211" endtime="20210712 06:57:17.871"/>
</kw>
<msg timestamp="20210712 06:57:17.872" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210712 06:57:15.210" endtime="20210712 06:57:17.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:17.872" endtime="20210712 06:57:17.872"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:17.873" endtime="20210712 06:57:17.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:17.877" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:20.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:20.467" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210712 06:57:17.875" endtime="20210712 06:57:20.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:20.469" level="INFO">om</msg>
<status status="PASS" starttime="20210712 06:57:20.468" endtime="20210712 06:57:20.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:20.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:20.469" endtime="20210712 06:57:20.470"/>
</kw>
<status status="PASS" starttime="20210712 06:57:17.874" endtime="20210712 06:57:20.471"/>
</kw>
<msg timestamp="20210712 06:57:20.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:17.874" endtime="20210712 06:57:20.471"/>
</kw>
<msg timestamp="20210712 06:57:20.471" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210712 06:57:17.873" endtime="20210712 06:57:20.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:20.471" endtime="20210712 06:57:20.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:20.472" endtime="20210712 06:57:20.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 06:57:15.208" endtime="20210712 06:57:20.473"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:20.478" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:22.899" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 06:57:22.899" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210712 06:57:20.476" endtime="20210712 06:57:22.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:22.901" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210712 06:57:22.900" endtime="20210712 06:57:22.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:22.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:22.901" endtime="20210712 06:57:22.902"/>
</kw>
<msg timestamp="20210712 06:57:22.902" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210712 06:57:20.475" endtime="20210712 06:57:22.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:22.902" endtime="20210712 06:57:22.903"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:22.907" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:25.639" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 06:57:25.640" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210712 06:57:22.904" endtime="20210712 06:57:25.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:25.641" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210712 06:57:25.640" endtime="20210712 06:57:25.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:25.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:25.642" endtime="20210712 06:57:25.642"/>
</kw>
<msg timestamp="20210712 06:57:25.643" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210712 06:57:22.903" endtime="20210712 06:57:25.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 06:57:25.643" endtime="20210712 06:57:25.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 06:57:20.474" endtime="20210712 06:57:25.644"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210712 06:57:03.314" endtime="20210712 06:57:25.645"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 06:57:25.666" level="INFO">${random} = 40705</msg>
<status status="PASS" starttime="20210712 06:57:25.665" endtime="20210712 06:57:25.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 06:57:25.668" level="INFO">${source} = 40705-source</msg>
<status status="PASS" starttime="20210712 06:57:25.666" endtime="20210712 06:57:25.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 06:57:25.671" level="INFO">${target} = 40705-target</msg>
<status status="PASS" starttime="20210712 06:57:25.669" endtime="20210712 06:57:25.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:25.675" level="INFO">Running command 'ozone sh volume create 40705-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:31.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:31.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:57:25.673" endtime="20210712 06:57:31.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:31.783" level="INFO"/>
<status status="PASS" starttime="20210712 06:57:31.783" endtime="20210712 06:57:31.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:31.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:31.783" endtime="20210712 06:57:31.784"/>
</kw>
<status status="PASS" starttime="20210712 06:57:25.672" endtime="20210712 06:57:31.784"/>
</kw>
<msg timestamp="20210712 06:57:31.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:25.672" endtime="20210712 06:57:31.784"/>
</kw>
<status status="PASS" starttime="20210712 06:57:25.671" endtime="20210712 06:57:31.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:31.788" level="INFO">Running command 'ozone sh volume create 40705-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:38.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:38.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:57:31.786" endtime="20210712 06:57:38.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:38.762" level="INFO"/>
<status status="PASS" starttime="20210712 06:57:38.760" endtime="20210712 06:57:38.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:38.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:38.763" endtime="20210712 06:57:38.764"/>
</kw>
<status status="PASS" starttime="20210712 06:57:31.786" endtime="20210712 06:57:38.765"/>
</kw>
<msg timestamp="20210712 06:57:38.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:31.785" endtime="20210712 06:57:38.765"/>
</kw>
<status status="PASS" starttime="20210712 06:57:31.785" endtime="20210712 06:57:38.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:38.776" level="INFO">Running command 'ozone sh bucket create 40705-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:57:44.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:57:44.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:57:38.772" endtime="20210712 06:57:44.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:57:44.579" level="INFO"/>
<status status="PASS" starttime="20210712 06:57:44.578" endtime="20210712 06:57:44.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:57:44.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:57:44.580" endtime="20210712 06:57:44.580"/>
</kw>
<status status="PASS" starttime="20210712 06:57:38.772" endtime="20210712 06:57:44.581"/>
</kw>
<msg timestamp="20210712 06:57:44.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:38.769" endtime="20210712 06:57:44.581"/>
</kw>
<status status="PASS" starttime="20210712 06:57:38.768" endtime="20210712 06:57:44.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:57:44.585" level="INFO">Running command 'ozone sh key put 40705-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:00:57.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:00:57.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:57:44.583" endtime="20210712 07:00:57.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:00:57.513" level="INFO"/>
<status status="PASS" starttime="20210712 07:00:57.512" endtime="20210712 07:00:57.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:00:57.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:00:57.514" endtime="20210712 07:00:57.515"/>
</kw>
<status status="PASS" starttime="20210712 06:57:44.583" endtime="20210712 07:00:57.515"/>
</kw>
<msg timestamp="20210712 07:00:57.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:57:44.582" endtime="20210712 07:00:57.516"/>
</kw>
<status status="PASS" starttime="20210712 06:57:44.582" endtime="20210712 07:00:57.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:00:57.520" level="INFO">Running command 'ozone sh bucket create 40705-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:04.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:04.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:00:57.518" endtime="20210712 07:01:04.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:04.541" level="INFO"/>
<status status="PASS" starttime="20210712 07:01:04.540" endtime="20210712 07:01:04.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:04.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:04.541" endtime="20210712 07:01:04.542"/>
</kw>
<status status="PASS" starttime="20210712 07:00:57.518" endtime="20210712 07:01:04.542"/>
</kw>
<msg timestamp="20210712 07:01:04.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:00:57.517" endtime="20210712 07:01:04.543"/>
</kw>
<status status="PASS" starttime="20210712 07:00:57.516" endtime="20210712 07:01:04.543"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:04.550" level="INFO">Running command 'ozone sh bucket link 40705-source/readable-bucket 40705-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:11.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:11.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:01:04.547" endtime="20210712 07:01:11.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:11.568" level="INFO"/>
<status status="PASS" starttime="20210712 07:01:11.567" endtime="20210712 07:01:11.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:11.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:11.569" endtime="20210712 07:01:11.570"/>
</kw>
<status status="PASS" starttime="20210712 07:01:04.546" endtime="20210712 07:01:11.572"/>
</kw>
<msg timestamp="20210712 07:01:11.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:04.544" endtime="20210712 07:01:11.572"/>
</kw>
<status status="PASS" starttime="20210712 07:01:04.543" endtime="20210712 07:01:11.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:11.578" level="INFO">Running command 'ozone sh bucket link 40705-source/readable-bucket 40705-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:18.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:18.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:01:11.575" endtime="20210712 07:01:18.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:18.026" level="INFO"/>
<status status="PASS" starttime="20210712 07:01:18.025" endtime="20210712 07:01:18.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:18.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:18.026" endtime="20210712 07:01:18.027"/>
</kw>
<status status="PASS" starttime="20210712 07:01:11.574" endtime="20210712 07:01:18.028"/>
</kw>
<msg timestamp="20210712 07:01:18.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:11.574" endtime="20210712 07:01:18.028"/>
</kw>
<status status="PASS" starttime="20210712 07:01:11.573" endtime="20210712 07:01:18.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:18.035" level="INFO">Running command 'ozone sh bucket link 40705-source/unreadable-bucket 40705-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:25.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:25.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:01:18.032" endtime="20210712 07:01:25.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:25.336" level="INFO"/>
<status status="PASS" starttime="20210712 07:01:25.335" endtime="20210712 07:01:25.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:25.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:25.336" endtime="20210712 07:01:25.336"/>
</kw>
<status status="PASS" starttime="20210712 07:01:18.031" endtime="20210712 07:01:25.337"/>
</kw>
<msg timestamp="20210712 07:01:25.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:18.030" endtime="20210712 07:01:25.337"/>
</kw>
<status status="PASS" starttime="20210712 07:01:18.029" endtime="20210712 07:01:25.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:25.346" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 40705-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:32.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:32.511" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:25.342" endtime="20210712 07:01:32.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:32.513" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:32.512" endtime="20210712 07:01:32.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:32.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:32.513" endtime="20210712 07:01:32.514"/>
</kw>
<status status="PASS" starttime="20210712 07:01:25.341" endtime="20210712 07:01:32.515"/>
</kw>
<msg timestamp="20210712 07:01:32.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:25.340" endtime="20210712 07:01:32.515"/>
</kw>
<status status="PASS" starttime="20210712 07:01:25.338" endtime="20210712 07:01:32.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:32.521" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 40705-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:40.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:40.721" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:32.519" endtime="20210712 07:01:40.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:40.723" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:40.722" endtime="20210712 07:01:40.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:40.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:40.723" endtime="20210712 07:01:40.724"/>
</kw>
<status status="PASS" starttime="20210712 07:01:32.518" endtime="20210712 07:01:40.725"/>
</kw>
<msg timestamp="20210712 07:01:40.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:32.517" endtime="20210712 07:01:40.726"/>
</kw>
<status status="PASS" starttime="20210712 07:01:32.516" endtime="20210712 07:01:40.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:40.733" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 40705-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:47.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:47.971" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:40.730" endtime="20210712 07:01:47.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:47.972" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:47.972" endtime="20210712 07:01:47.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:47.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:47.973" endtime="20210712 07:01:47.973"/>
</kw>
<status status="PASS" starttime="20210712 07:01:40.728" endtime="20210712 07:01:47.974"/>
</kw>
<msg timestamp="20210712 07:01:47.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:40.728" endtime="20210712 07:01:47.974"/>
</kw>
<status status="PASS" starttime="20210712 07:01:40.726" endtime="20210712 07:01:47.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:47.980" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 40705-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:01:54.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:01:54.826" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:47.977" endtime="20210712 07:01:54.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:01:54.828" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:54.827" endtime="20210712 07:01:54.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:01:54.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:01:54.828" endtime="20210712 07:01:54.829"/>
</kw>
<status status="PASS" starttime="20210712 07:01:47.975" endtime="20210712 07:01:54.829"/>
</kw>
<msg timestamp="20210712 07:01:54.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:47.975" endtime="20210712 07:01:54.829"/>
</kw>
<status status="PASS" starttime="20210712 07:01:47.975" endtime="20210712 07:01:54.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:01:54.835" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 40705-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:02.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:02.257" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:01:54.832" endtime="20210712 07:02:02.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:02.259" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:02:02.258" endtime="20210712 07:02:02.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:02.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:02.260" endtime="20210712 07:02:02.261"/>
</kw>
<status status="PASS" starttime="20210712 07:01:54.831" endtime="20210712 07:02:02.262"/>
</kw>
<msg timestamp="20210712 07:02:02.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:01:54.831" endtime="20210712 07:02:02.263"/>
</kw>
<status status="PASS" starttime="20210712 07:01:54.830" endtime="20210712 07:02:02.263"/>
</kw>
<status status="PASS" starttime="20210712 06:57:38.767" endtime="20210712 07:02:02.264"/>
</kw>
<status status="PASS" starttime="20210712 06:57:38.766" endtime="20210712 07:02:02.264"/>
</kw>
<status status="PASS" starttime="20210712 06:57:25.665" endtime="20210712 07:02:02.264"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:02.273" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:02.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:02.275" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:02:02.269" endtime="20210712 07:02:02.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:02.276" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:02:02.275" endtime="20210712 07:02:02.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:02.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:02.277" endtime="20210712 07:02:02.279"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.269" endtime="20210712 07:02:02.279"/>
</kw>
<msg timestamp="20210712 07:02:02.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:02.268" endtime="20210712 07:02:02.280"/>
</kw>
<msg timestamp="20210712 07:02:02.280" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:02:02.267" endtime="20210712 07:02:02.280"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:02:02.285" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:02:02.280" endtime="20210712 07:02:02.285"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:02.291" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:02.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:02.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:02:02.288" endtime="20210712 07:02:02.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:02.516" level="INFO"/>
<status status="PASS" starttime="20210712 07:02:02.515" endtime="20210712 07:02:02.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:02.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:02.517" endtime="20210712 07:02:02.517"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.288" endtime="20210712 07:02:02.518"/>
</kw>
<msg timestamp="20210712 07:02:02.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:02.287" endtime="20210712 07:02:02.518"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.287" endtime="20210712 07:02:02.518"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.286" endtime="20210712 07:02:02.518"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.267" endtime="20210712 07:02:02.518"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.266" endtime="20210712 07:02:02.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:02.524" level="INFO">Running command 'ozone sh bucket link 40705-source/no-such-bucket 40705-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:09.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:09.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:02:02.521" endtime="20210712 07:02:09.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:09.433" level="INFO"/>
<status status="PASS" starttime="20210712 07:02:09.432" endtime="20210712 07:02:09.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:09.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:09.433" endtime="20210712 07:02:09.433"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.520" endtime="20210712 07:02:09.434"/>
</kw>
<msg timestamp="20210712 07:02:09.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:02.519" endtime="20210712 07:02:09.434"/>
</kw>
<status status="PASS" starttime="20210712 07:02:02.519" endtime="20210712 07:02:09.434"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:09.439" level="INFO">Running command 'ozone sh key list 40705-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:16.366" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:02:16.366" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210712 07:02:09.435" endtime="20210712 07:02:16.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:16.367" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210712 07:02:16.367" endtime="20210712 07:02:16.367"/>
</kw>
<msg timestamp="20210712 07:02:16.368" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210712 07:02:09.434" endtime="20210712 07:02:16.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:02:16.368" endtime="20210712 07:02:16.369"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:02:02.265" endtime="20210712 07:02:16.369"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:16.377" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:16.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:16.380" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:02:16.375" endtime="20210712 07:02:16.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:16.382" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:02:16.381" endtime="20210712 07:02:16.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:16.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:16.382" endtime="20210712 07:02:16.382"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.374" endtime="20210712 07:02:16.383"/>
</kw>
<msg timestamp="20210712 07:02:16.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:16.374" endtime="20210712 07:02:16.383"/>
</kw>
<msg timestamp="20210712 07:02:16.383" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:02:16.373" endtime="20210712 07:02:16.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:02:16.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:02:16.384" endtime="20210712 07:02:16.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:16.391" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:16.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:16.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:02:16.387" endtime="20210712 07:02:16.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:16.400" level="INFO"/>
<status status="PASS" starttime="20210712 07:02:16.399" endtime="20210712 07:02:16.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:16.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:16.400" endtime="20210712 07:02:16.401"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.387" endtime="20210712 07:02:16.402"/>
</kw>
<msg timestamp="20210712 07:02:16.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:16.387" endtime="20210712 07:02:16.403"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.386" endtime="20210712 07:02:16.403"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.385" endtime="20210712 07:02:16.403"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.373" endtime="20210712 07:02:16.404"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.372" endtime="20210712 07:02:16.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:16.410" level="INFO">Running command 'ozone sh bucket link 40705-source/bucket1 40705-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:23.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:23.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:02:16.407" endtime="20210712 07:02:23.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:23.485" level="INFO"/>
<status status="PASS" starttime="20210712 07:02:23.484" endtime="20210712 07:02:23.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:23.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:23.485" endtime="20210712 07:02:23.486"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.406" endtime="20210712 07:02:23.486"/>
</kw>
<msg timestamp="20210712 07:02:23.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:16.406" endtime="20210712 07:02:23.486"/>
</kw>
<status status="PASS" starttime="20210712 07:02:16.404" endtime="20210712 07:02:23.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:23.491" level="INFO">Running command 'ozone sh bucket create 40705-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:02:30.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:02:30.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:02:23.488" endtime="20210712 07:02:30.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:02:30.459" level="INFO"/>
<status status="PASS" starttime="20210712 07:02:30.458" endtime="20210712 07:02:30.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:02:30.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:02:30.459" endtime="20210712 07:02:30.460"/>
</kw>
<status status="PASS" starttime="20210712 07:02:23.488" endtime="20210712 07:02:30.460"/>
</kw>
<msg timestamp="20210712 07:02:30.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:02:23.487" endtime="20210712 07:02:30.461"/>
</kw>
<status status="PASS" starttime="20210712 07:02:23.487" endtime="20210712 07:02:30.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:02:30.467" level="INFO">Running command 'ozone sh key put 40705-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:04:16.372" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:02:30.464" endtime="20210712 07:04:16.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:04:16.373" endtime="20210712 07:04:16.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:04:16.373" endtime="20210712 07:04:16.373"/>
</kw>
<status status="FAIL" starttime="20210712 07:02:30.463" endtime="20210712 07:04:16.374"/>
</kw>
<msg timestamp="20210712 07:04:16.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:02:30.463" endtime="20210712 07:04:16.374"/>
</kw>
<status status="FAIL" starttime="20210712 07:02:30.461" endtime="20210712 07:04:16.374"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210712 07:04:16.375" endtime="20210712 07:04:16.375"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210712 07:02:16.371" endtime="20210712 07:04:16.375">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:04:16.384" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:04:16.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:04:16.388" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:04:16.380" endtime="20210712 07:04:16.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:04:16.389" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:04:16.389" endtime="20210712 07:04:16.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:04:16.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:04:16.390" endtime="20210712 07:04:16.390"/>
</kw>
<status status="PASS" starttime="20210712 07:04:16.380" endtime="20210712 07:04:16.391"/>
</kw>
<msg timestamp="20210712 07:04:16.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:04:16.379" endtime="20210712 07:04:16.391"/>
</kw>
<msg timestamp="20210712 07:04:16.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:04:16.378" endtime="20210712 07:04:16.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:04:16.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:04:16.392" endtime="20210712 07:04:16.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:04:16.398" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:04:16.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:04:16.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:04:16.396" endtime="20210712 07:04:16.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:04:16.413" level="INFO"/>
<status status="PASS" starttime="20210712 07:04:16.412" endtime="20210712 07:04:16.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:04:16.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:04:16.413" endtime="20210712 07:04:16.414"/>
</kw>
<status status="PASS" starttime="20210712 07:04:16.395" endtime="20210712 07:04:16.414"/>
</kw>
<msg timestamp="20210712 07:04:16.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:04:16.394" endtime="20210712 07:04:16.414"/>
</kw>
<status status="PASS" starttime="20210712 07:04:16.394" endtime="20210712 07:04:16.415"/>
</kw>
<status status="PASS" starttime="20210712 07:04:16.393" endtime="20210712 07:04:16.415"/>
</kw>
<status status="PASS" starttime="20210712 07:04:16.378" endtime="20210712 07:04:16.415"/>
</kw>
<status status="PASS" starttime="20210712 07:04:16.377" endtime="20210712 07:04:16.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:04:16.421" level="INFO">Running command 'ozone sh key put 40705-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:16.377" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:04:16.418" endtime="20210712 07:06:16.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:06:16.378" endtime="20210712 07:06:16.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:06:16.379" endtime="20210712 07:06:16.379"/>
</kw>
<status status="FAIL" starttime="20210712 07:04:16.417" endtime="20210712 07:06:16.379"/>
</kw>
<msg timestamp="20210712 07:06:16.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:04:16.416" endtime="20210712 07:06:16.379"/>
</kw>
<status status="FAIL" starttime="20210712 07:04:16.415" endtime="20210712 07:06:16.380"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210712 07:06:16.380" endtime="20210712 07:06:16.380"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210712 07:04:16.376" endtime="20210712 07:06:16.380">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:16.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:16.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:16.393" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:06:16.384" endtime="20210712 07:06:16.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:16.395" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:06:16.393" endtime="20210712 07:06:16.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:16.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:16.395" endtime="20210712 07:06:16.396"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.384" endtime="20210712 07:06:16.397"/>
</kw>
<msg timestamp="20210712 07:06:16.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:16.384" endtime="20210712 07:06:16.397"/>
</kw>
<msg timestamp="20210712 07:06:16.398" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:06:16.383" endtime="20210712 07:06:16.398"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:06:16.399" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:06:16.398" endtime="20210712 07:06:16.399"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:16.403" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:16.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:16.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:06:16.401" endtime="20210712 07:06:16.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:16.413" level="INFO"/>
<status status="PASS" starttime="20210712 07:06:16.412" endtime="20210712 07:06:16.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:16.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:16.413" endtime="20210712 07:06:16.415"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.401" endtime="20210712 07:06:16.415"/>
</kw>
<msg timestamp="20210712 07:06:16.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:16.401" endtime="20210712 07:06:16.416"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.400" endtime="20210712 07:06:16.416"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.399" endtime="20210712 07:06:16.416"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.383" endtime="20210712 07:06:16.417"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.382" endtime="20210712 07:06:16.417"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:16.424" level="INFO">Running command 'ozone sh key list 40705-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:23.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:23.996" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210712 07:06:16.420" endtime="20210712 07:06:23.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:23.997" level="INFO">key1</msg>
<status status="PASS" starttime="20210712 07:06:23.996" endtime="20210712 07:06:23.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:23.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:23.997" endtime="20210712 07:06:23.999"/>
</kw>
<status status="PASS" starttime="20210712 07:06:16.418" endtime="20210712 07:06:23.999"/>
</kw>
<msg timestamp="20210712 07:06:23.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:16.418" endtime="20210712 07:06:24.001"/>
</kw>
<msg timestamp="20210712 07:06:24.001" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210712 07:06:16.417" endtime="20210712 07:06:24.002"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:24.005" level="INFO">Running command 'ozone sh key list 40705-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:29.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:29.480" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210712 07:06:24.003" endtime="20210712 07:06:29.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:29.483" level="INFO">key1</msg>
<status status="PASS" starttime="20210712 07:06:29.482" endtime="20210712 07:06:29.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:29.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:29.483" endtime="20210712 07:06:29.484"/>
</kw>
<status status="PASS" starttime="20210712 07:06:24.003" endtime="20210712 07:06:29.484"/>
</kw>
<msg timestamp="20210712 07:06:29.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:24.002" endtime="20210712 07:06:29.485"/>
</kw>
<msg timestamp="20210712 07:06:29.485" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210712 07:06:24.002" endtime="20210712 07:06:29.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:06:29.485" endtime="20210712 07:06:29.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:06:29.487" endtime="20210712 07:06:29.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210712 07:06:29.489" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210712 07:06:29.488" endtime="20210712 07:06:29.489"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210712 07:06:16.381" endtime="20210712 07:06:29.489">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:29.500" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:29.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:29.503" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:06:29.496" endtime="20210712 07:06:29.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:29.504" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:06:29.503" endtime="20210712 07:06:29.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:29.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:29.505" endtime="20210712 07:06:29.505"/>
</kw>
<status status="PASS" starttime="20210712 07:06:29.495" endtime="20210712 07:06:29.505"/>
</kw>
<msg timestamp="20210712 07:06:29.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:29.494" endtime="20210712 07:06:29.506"/>
</kw>
<msg timestamp="20210712 07:06:29.506" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:06:29.493" endtime="20210712 07:06:29.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:06:29.507" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:06:29.506" endtime="20210712 07:06:29.507"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:29.511" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:29.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:29.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:06:29.509" endtime="20210712 07:06:29.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:29.523" level="INFO"/>
<status status="PASS" starttime="20210712 07:06:29.522" endtime="20210712 07:06:29.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:29.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:29.524" endtime="20210712 07:06:29.525"/>
</kw>
<status status="PASS" starttime="20210712 07:06:29.509" endtime="20210712 07:06:29.526"/>
</kw>
<msg timestamp="20210712 07:06:29.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:29.508" endtime="20210712 07:06:29.526"/>
</kw>
<status status="PASS" starttime="20210712 07:06:29.508" endtime="20210712 07:06:29.527"/>
</kw>
<status status="PASS" starttime="20210712 07:06:29.507" endtime="20210712 07:06:29.527"/>
</kw>
<status status="PASS" starttime="20210712 07:06:29.493" endtime="20210712 07:06:29.528"/>
</kw>
<status status="PASS" starttime="20210712 07:06:29.492" endtime="20210712 07:06:29.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:29.533" level="INFO">Running command 'ozone sh key delete 40705-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:36.524" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:06:36.525" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210712 07:06:29.531" endtime="20210712 07:06:36.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:36.527" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210712 07:06:36.526" endtime="20210712 07:06:36.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:36.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210712 07:06:36.530" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210712 07:06:36.528" endtime="20210712 07:06:36.530"/>
</kw>
<status status="FAIL" starttime="20210712 07:06:29.530" endtime="20210712 07:06:36.531"/>
</kw>
<msg timestamp="20210712 07:06:36.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:06:29.529" endtime="20210712 07:06:36.532"/>
</kw>
<status status="FAIL" starttime="20210712 07:06:29.528" endtime="20210712 07:06:36.532"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210712 07:06:36.533" endtime="20210712 07:06:36.533"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:06:36.533" endtime="20210712 07:06:36.533"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210712 07:06:29.491" endtime="20210712 07:06:36.534">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:36.543" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:36.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:36.549" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:06:36.540" endtime="20210712 07:06:36.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:36.551" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:06:36.550" endtime="20210712 07:06:36.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:36.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:36.551" endtime="20210712 07:06:36.552"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.539" endtime="20210712 07:06:36.552"/>
</kw>
<msg timestamp="20210712 07:06:36.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:36.538" endtime="20210712 07:06:36.552"/>
</kw>
<msg timestamp="20210712 07:06:36.553" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:06:36.538" endtime="20210712 07:06:36.553"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:06:36.553" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:06:36.553" endtime="20210712 07:06:36.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:36.558" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:36.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:36.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:06:36.556" endtime="20210712 07:06:36.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:36.571" level="INFO"/>
<status status="PASS" starttime="20210712 07:06:36.570" endtime="20210712 07:06:36.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:36.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:36.571" endtime="20210712 07:06:36.572"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.556" endtime="20210712 07:06:36.573"/>
</kw>
<msg timestamp="20210712 07:06:36.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:36.555" endtime="20210712 07:06:36.573"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.554" endtime="20210712 07:06:36.574"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.554" endtime="20210712 07:06:36.574"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.537" endtime="20210712 07:06:36.574"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.536" endtime="20210712 07:06:36.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:36.581" level="INFO">Running command 'ozone sh bucket list 40705-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:44.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:44.786" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210712 07:06:36.578" endtime="20210712 07:06:44.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:44.787" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:02:09.155Z",
  "modificationTime" : "2021-07-12T07:02:09.155Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:25.058Z",
  "modificationTime" : "2021-07-12T07:02:01.956Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:02:23.140Z",
  "modificationTime" : "2021-07-12T07:02:23.140Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:11.483Z",
  "modificationTime" : "2021-07-12T07:01:54.742Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:17.735Z",
  "modificationTime" : "2021-07-12T07:01:17.735Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210712 07:06:44.786" endtime="20210712 07:06:44.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:44.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:44.788" endtime="20210712 07:06:44.789"/>
</kw>
<status status="PASS" starttime="20210712 07:06:36.576" endtime="20210712 07:06:44.789"/>
</kw>
<msg timestamp="20210712 07:06:44.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:36.576" endtime="20210712 07:06:44.789"/>
</kw>
<msg timestamp="20210712 07:06:44.790" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210712 07:06:36.575" endtime="20210712 07:06:44.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:06:44.790" endtime="20210712 07:06:44.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:06:44.791" endtime="20210712 07:06:44.791"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:06:36.535" endtime="20210712 07:06:44.792"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:44.800" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:44.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:44.807" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:06:44.798" endtime="20210712 07:06:44.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:44.808" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:06:44.807" endtime="20210712 07:06:44.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:44.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:44.809" endtime="20210712 07:06:44.809"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.796" endtime="20210712 07:06:44.810"/>
</kw>
<msg timestamp="20210712 07:06:44.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:44.796" endtime="20210712 07:06:44.810"/>
</kw>
<msg timestamp="20210712 07:06:44.811" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:06:44.795" endtime="20210712 07:06:44.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:06:44.812" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:06:44.811" endtime="20210712 07:06:44.812"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:44.817" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:44.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:44.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:06:44.815" endtime="20210712 07:06:44.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:44.825" level="INFO"/>
<status status="PASS" starttime="20210712 07:06:44.825" endtime="20210712 07:06:44.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:44.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:44.826" endtime="20210712 07:06:44.826"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.814" endtime="20210712 07:06:44.827"/>
</kw>
<msg timestamp="20210712 07:06:44.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:44.813" endtime="20210712 07:06:44.827"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.813" endtime="20210712 07:06:44.827"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.812" endtime="20210712 07:06:44.828"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.795" endtime="20210712 07:06:44.828"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.794" endtime="20210712 07:06:44.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:44.832" level="INFO">Running command 'ozone sh bucket info 40705-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:50.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:50.639" level="INFO">${output} = 40705-source bucket1</msg>
<status status="PASS" starttime="20210712 07:06:44.830" endtime="20210712 07:06:50.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:50.642" level="INFO">40705-source bucket1</msg>
<status status="PASS" starttime="20210712 07:06:50.640" endtime="20210712 07:06:50.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:50.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:50.643" endtime="20210712 07:06:50.644"/>
</kw>
<status status="PASS" starttime="20210712 07:06:44.829" endtime="20210712 07:06:50.645"/>
</kw>
<msg timestamp="20210712 07:06:50.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:44.829" endtime="20210712 07:06:50.645"/>
</kw>
<msg timestamp="20210712 07:06:50.646" level="INFO">${result} = 40705-source bucket1</msg>
<status status="PASS" starttime="20210712 07:06:44.828" endtime="20210712 07:06:50.646"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:06:50.647" endtime="20210712 07:06:50.648"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:06:44.793" endtime="20210712 07:06:50.649"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:50.661" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:50.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:50.666" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:06:50.658" endtime="20210712 07:06:50.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:50.668" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:06:50.667" endtime="20210712 07:06:50.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:50.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:50.669" endtime="20210712 07:06:50.670"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.657" endtime="20210712 07:06:50.672"/>
</kw>
<msg timestamp="20210712 07:06:50.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:50.656" endtime="20210712 07:06:50.672"/>
</kw>
<msg timestamp="20210712 07:06:50.672" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:06:50.654" endtime="20210712 07:06:50.672"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:06:50.674" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:06:50.673" endtime="20210712 07:06:50.674"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:50.681" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:50.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:50.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:06:50.679" endtime="20210712 07:06:50.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:50.691" level="INFO"/>
<status status="PASS" starttime="20210712 07:06:50.690" endtime="20210712 07:06:50.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:50.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:50.691" endtime="20210712 07:06:50.692"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.678" endtime="20210712 07:06:50.692"/>
</kw>
<msg timestamp="20210712 07:06:50.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:50.677" endtime="20210712 07:06:50.693"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.676" endtime="20210712 07:06:50.693"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.675" endtime="20210712 07:06:50.693"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.653" endtime="20210712 07:06:50.693"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.652" endtime="20210712 07:06:50.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:50.698" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 40705-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:06:57.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:06:57.655" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:06:50.696" endtime="20210712 07:06:57.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:06:57.657" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:06:57.656" endtime="20210712 07:06:57.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:06:57.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:06:57.657" endtime="20210712 07:06:57.658"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.695" endtime="20210712 07:06:57.658"/>
</kw>
<msg timestamp="20210712 07:06:57.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:50.695" endtime="20210712 07:06:57.659"/>
</kw>
<status status="PASS" starttime="20210712 07:06:50.694" endtime="20210712 07:06:57.659"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:06:57.666" level="INFO">Running command 'ozone sh bucket getacl 40705-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:02.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:02.996" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210712 07:06:57.664" endtime="20210712 07:07:02.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:02.998" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210712 07:07:02.997" endtime="20210712 07:07:02.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:03.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:02.999" endtime="20210712 07:07:03.000"/>
</kw>
<status status="PASS" starttime="20210712 07:06:57.662" endtime="20210712 07:07:03.000"/>
</kw>
<msg timestamp="20210712 07:07:03.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:06:57.662" endtime="20210712 07:07:03.001"/>
</kw>
<msg timestamp="20210712 07:07:03.001" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210712 07:06:57.660" endtime="20210712 07:07:03.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:07:03.002" endtime="20210712 07:07:03.003"/>
</kw>
<status status="PASS" starttime="20210712 07:06:57.659" endtime="20210712 07:07:03.003"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:03.012" level="INFO">Running command 'ozone sh bucket getacl 40705-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:08.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:08.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:07:03.010" endtime="20210712 07:07:08.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:08.944" level="INFO"/>
<status status="PASS" starttime="20210712 07:07:08.943" endtime="20210712 07:07:08.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:08.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:08.945" endtime="20210712 07:07:08.946"/>
</kw>
<status status="PASS" starttime="20210712 07:07:03.009" endtime="20210712 07:07:08.947"/>
</kw>
<msg timestamp="20210712 07:07:08.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:03.008" endtime="20210712 07:07:08.947"/>
</kw>
<msg timestamp="20210712 07:07:08.947" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210712 07:07:03.006" endtime="20210712 07:07:08.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:07:08.948" endtime="20210712 07:07:08.951"/>
</kw>
<status status="PASS" starttime="20210712 07:07:03.003" endtime="20210712 07:07:08.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:08.960" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 40705-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:16.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:16.325" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:07:08.956" endtime="20210712 07:07:16.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:16.327" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:07:16.326" endtime="20210712 07:07:16.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:16.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:16.327" endtime="20210712 07:07:16.328"/>
</kw>
<status status="PASS" starttime="20210712 07:07:08.954" endtime="20210712 07:07:16.328"/>
</kw>
<msg timestamp="20210712 07:07:16.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:08.953" endtime="20210712 07:07:16.329"/>
</kw>
<status status="PASS" starttime="20210712 07:07:08.952" endtime="20210712 07:07:16.329"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:16.335" level="INFO">Running command 'ozone sh bucket getacl 40705-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:23.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:23.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:07:16.332" endtime="20210712 07:07:23.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:23.831" level="INFO"/>
<status status="PASS" starttime="20210712 07:07:23.830" endtime="20210712 07:07:23.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:23.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:23.831" endtime="20210712 07:07:23.832"/>
</kw>
<status status="PASS" starttime="20210712 07:07:16.332" endtime="20210712 07:07:23.832"/>
</kw>
<msg timestamp="20210712 07:07:23.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:16.332" endtime="20210712 07:07:23.832"/>
</kw>
<msg timestamp="20210712 07:07:23.832" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210712 07:07:16.331" endtime="20210712 07:07:23.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:07:23.833" endtime="20210712 07:07:23.833"/>
</kw>
<status status="PASS" starttime="20210712 07:07:16.329" endtime="20210712 07:07:23.834"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:23.841" level="INFO">Running command 'ozone sh bucket getacl 40705-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:31.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:31.456" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210712 07:07:23.837" endtime="20210712 07:07:31.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:31.458" level="INFO">READ</msg>
<status status="PASS" starttime="20210712 07:07:31.457" endtime="20210712 07:07:31.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:31.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:31.458" endtime="20210712 07:07:31.459"/>
</kw>
<status status="PASS" starttime="20210712 07:07:23.836" endtime="20210712 07:07:31.459"/>
</kw>
<msg timestamp="20210712 07:07:31.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:23.836" endtime="20210712 07:07:31.460"/>
</kw>
<msg timestamp="20210712 07:07:31.460" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210712 07:07:23.835" endtime="20210712 07:07:31.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:07:31.461" endtime="20210712 07:07:31.461"/>
</kw>
<status status="PASS" starttime="20210712 07:07:23.834" endtime="20210712 07:07:31.462"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:06:50.650" endtime="20210712 07:07:31.462"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:31.471" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:31.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:31.476" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:07:31.469" endtime="20210712 07:07:31.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:31.478" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:07:31.477" endtime="20210712 07:07:31.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:31.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:31.479" endtime="20210712 07:07:31.480"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.468" endtime="20210712 07:07:31.481"/>
</kw>
<msg timestamp="20210712 07:07:31.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:31.468" endtime="20210712 07:07:31.481"/>
</kw>
<msg timestamp="20210712 07:07:31.482" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:07:31.466" endtime="20210712 07:07:31.482"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:07:31.484" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:07:31.482" endtime="20210712 07:07:31.484"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:31.488" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:31.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:31.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:07:31.486" endtime="20210712 07:07:31.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:31.669" level="INFO"/>
<status status="PASS" starttime="20210712 07:07:31.668" endtime="20210712 07:07:31.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:31.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:31.670" endtime="20210712 07:07:31.670"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.485" endtime="20210712 07:07:31.671"/>
</kw>
<msg timestamp="20210712 07:07:31.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:31.485" endtime="20210712 07:07:31.672"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.484" endtime="20210712 07:07:31.672"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.484" endtime="20210712 07:07:31.672"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.465" endtime="20210712 07:07:31.672"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.464" endtime="20210712 07:07:31.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:31.676" level="INFO">Running command 'ozone sh bucket link 40705-source/bucket2 40705-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:38.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:38.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:07:31.674" endtime="20210712 07:07:38.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:38.860" level="INFO"/>
<status status="PASS" starttime="20210712 07:07:38.859" endtime="20210712 07:07:38.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:38.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:38.860" endtime="20210712 07:07:38.861"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.674" endtime="20210712 07:07:38.861"/>
</kw>
<msg timestamp="20210712 07:07:38.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:31.673" endtime="20210712 07:07:38.862"/>
</kw>
<status status="PASS" starttime="20210712 07:07:31.672" endtime="20210712 07:07:38.862"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:38.868" level="INFO">Running command 'ozone sh bucket create 40705-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:45.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:07:45.552" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210712 07:07:38.865" endtime="20210712 07:07:45.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:45.553" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210712 07:07:45.552" endtime="20210712 07:07:45.553"/>
</kw>
<msg timestamp="20210712 07:07:45.553" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210712 07:07:38.862" endtime="20210712 07:07:45.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:07:45.554" endtime="20210712 07:07:45.554"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:45.558" level="INFO">Running command 'ozone sh bucket create 40705-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:07:53.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:07:53.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:07:45.556" endtime="20210712 07:07:53.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:07:53.059" level="INFO"/>
<status status="PASS" starttime="20210712 07:07:53.059" endtime="20210712 07:07:53.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:07:53.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:07:53.060" endtime="20210712 07:07:53.060"/>
</kw>
<status status="PASS" starttime="20210712 07:07:45.556" endtime="20210712 07:07:53.061"/>
</kw>
<msg timestamp="20210712 07:07:53.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:07:45.555" endtime="20210712 07:07:53.061"/>
</kw>
<status status="PASS" starttime="20210712 07:07:45.554" endtime="20210712 07:07:53.062"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:07:53.066" level="INFO">Running command 'ozone sh bucket link 40705-source/bucket1 40705-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:00.051" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:08:00.051" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210712 07:07:53.063" endtime="20210712 07:08:00.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:00.052" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210712 07:08:00.051" endtime="20210712 07:08:00.052"/>
</kw>
<msg timestamp="20210712 07:08:00.052" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210712 07:07:53.062" endtime="20210712 07:08:00.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:00.053" endtime="20210712 07:08:00.053"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:07:31.463" endtime="20210712 07:08:00.054"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:00.065" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:00.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:00.070" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:00.062" endtime="20210712 07:08:00.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:00.071" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:00.070" endtime="20210712 07:08:00.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:00.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:00.071" endtime="20210712 07:08:00.072"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.061" endtime="20210712 07:08:00.072"/>
</kw>
<msg timestamp="20210712 07:08:00.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:00.060" endtime="20210712 07:08:00.073"/>
</kw>
<msg timestamp="20210712 07:08:00.073" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:00.059" endtime="20210712 07:08:00.073"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:00.075" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:00.074" endtime="20210712 07:08:00.075"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:00.081" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:00.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:00.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:00.079" endtime="20210712 07:08:00.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:00.092" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:00.091" endtime="20210712 07:08:00.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:00.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:00.092" endtime="20210712 07:08:00.093"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.078" endtime="20210712 07:08:00.093"/>
</kw>
<msg timestamp="20210712 07:08:00.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:00.077" endtime="20210712 07:08:00.094"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.076" endtime="20210712 07:08:00.094"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.075" endtime="20210712 07:08:00.094"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.058" endtime="20210712 07:08:00.094"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.057" endtime="20210712 07:08:00.095"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:00.102" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:00.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:00.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:00.101" endtime="20210712 07:08:00.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:00.110" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:00.110" endtime="20210712 07:08:00.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:00.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:00.111" endtime="20210712 07:08:00.111"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.100" endtime="20210712 07:08:00.112"/>
</kw>
<msg timestamp="20210712 07:08:00.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:00.098" endtime="20210712 07:08:00.112"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.097" endtime="20210712 07:08:00.112"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:00.117" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:00.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:00.121" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:00.115" endtime="20210712 07:08:00.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:00.122" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:00.121" endtime="20210712 07:08:00.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:00.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:00.122" endtime="20210712 07:08:00.123"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.114" endtime="20210712 07:08:00.123"/>
</kw>
<msg timestamp="20210712 07:08:00.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:00.114" endtime="20210712 07:08:00.124"/>
</kw>
<msg timestamp="20210712 07:08:00.124" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:00.113" endtime="20210712 07:08:00.124"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:00.126" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:00.125" endtime="20210712 07:08:00.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:00.130" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:00.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:00.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:00.128" endtime="20210712 07:08:00.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:00.141" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:00.141" endtime="20210712 07:08:00.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:00.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:00.142" endtime="20210712 07:08:00.143"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.128" endtime="20210712 07:08:00.143"/>
</kw>
<msg timestamp="20210712 07:08:00.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:00.127" endtime="20210712 07:08:00.144"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.127" endtime="20210712 07:08:00.144"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.126" endtime="20210712 07:08:00.144"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.113" endtime="20210712 07:08:00.144"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.112" endtime="20210712 07:08:00.145"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:00.148" level="INFO">Running command 'ozone sh key list 40705-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:08.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:08.054" level="INFO">${output} = {
  "volumeName" : "40705-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-12T06:57:52.420Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210712 07:08:00.146" endtime="20210712 07:08:08.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:08.057" level="INFO">{
  "volumeName" : "40705-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-12T06:57:52.420Z",
  "modificationTime" : "2021-07-12T07:00:56.938Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210712 07:08:08.055" endtime="20210712 07:08:08.057"/>
</kw>
<msg timestamp="20210712 07:08:08.058" level="INFO">${result} = {
  "volumeName" : "40705-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-12T06:57:52.420Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210712 07:08:00.145" endtime="20210712 07:08:08.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:08.058" endtime="20210712 07:08:08.060"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.096" endtime="20210712 07:08:08.060"/>
</kw>
<status status="PASS" starttime="20210712 07:08:00.095" endtime="20210712 07:08:08.060"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:08:00.056" endtime="20210712 07:08:08.060"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:08.073" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:08.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:08.078" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:08.070" endtime="20210712 07:08:08.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:08.080" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:08.079" endtime="20210712 07:08:08.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:08.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:08.080" endtime="20210712 07:08:08.081"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.069" endtime="20210712 07:08:08.082"/>
</kw>
<msg timestamp="20210712 07:08:08.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:08.069" endtime="20210712 07:08:08.083"/>
</kw>
<msg timestamp="20210712 07:08:08.083" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:08.068" endtime="20210712 07:08:08.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:08.085" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:08.084" endtime="20210712 07:08:08.085"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:08.095" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:08.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:08.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:08.092" endtime="20210712 07:08:08.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:08.104" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:08.103" endtime="20210712 07:08:08.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:08.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:08.105" endtime="20210712 07:08:08.105"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.088" endtime="20210712 07:08:08.106"/>
</kw>
<msg timestamp="20210712 07:08:08.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:08.087" endtime="20210712 07:08:08.106"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.086" endtime="20210712 07:08:08.106"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.086" endtime="20210712 07:08:08.107"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.066" endtime="20210712 07:08:08.107"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.065" endtime="20210712 07:08:08.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:08.113" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:08.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:08.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:08.111" endtime="20210712 07:08:08.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:08.119" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:08.118" endtime="20210712 07:08:08.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:08.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:08.119" endtime="20210712 07:08:08.120"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.110" endtime="20210712 07:08:08.120"/>
</kw>
<msg timestamp="20210712 07:08:08.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:08.110" endtime="20210712 07:08:08.120"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.109" endtime="20210712 07:08:08.121"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:08.127" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:08.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:08.131" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:08.125" endtime="20210712 07:08:08.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:08.133" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:08.132" endtime="20210712 07:08:08.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:08.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:08.133" endtime="20210712 07:08:08.140"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.124" endtime="20210712 07:08:08.140"/>
</kw>
<msg timestamp="20210712 07:08:08.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:08.124" endtime="20210712 07:08:08.141"/>
</kw>
<msg timestamp="20210712 07:08:08.141" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:08.122" endtime="20210712 07:08:08.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:08.142" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:08.141" endtime="20210712 07:08:08.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:08.151" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:08.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:08.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:08.145" endtime="20210712 07:08:08.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:08.162" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:08.161" endtime="20210712 07:08:08.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:08.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:08.163" endtime="20210712 07:08:08.164"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.144" endtime="20210712 07:08:08.164"/>
</kw>
<msg timestamp="20210712 07:08:08.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:08.144" endtime="20210712 07:08:08.165"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.143" endtime="20210712 07:08:08.165"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.142" endtime="20210712 07:08:08.165"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.121" endtime="20210712 07:08:08.166"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.121" endtime="20210712 07:08:08.166"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:08.170" level="INFO">Running command 'ozone sh key list 40705-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:15.450" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:08:15.450" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 40705-target unreadable-link null</msg>
<status status="PASS" starttime="20210712 07:08:08.167" endtime="20210712 07:08:15.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:15.451" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 40705-target unreadable-link null</msg>
<status status="PASS" starttime="20210712 07:08:15.450" endtime="20210712 07:08:15.451"/>
</kw>
<msg timestamp="20210712 07:08:15.452" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 40705-target unreadable-link null</msg>
<status status="PASS" starttime="20210712 07:08:08.166" endtime="20210712 07:08:15.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:15.452" endtime="20210712 07:08:15.452"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.108" endtime="20210712 07:08:15.453"/>
</kw>
<status status="PASS" starttime="20210712 07:08:08.107" endtime="20210712 07:08:15.453"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:08:08.063" endtime="20210712 07:08:15.453"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:15.463" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:15.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:15.472" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:15.459" endtime="20210712 07:08:15.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:15.474" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:15.473" endtime="20210712 07:08:15.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:15.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:15.474" endtime="20210712 07:08:15.475"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.458" endtime="20210712 07:08:15.475"/>
</kw>
<msg timestamp="20210712 07:08:15.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:15.458" endtime="20210712 07:08:15.475"/>
</kw>
<msg timestamp="20210712 07:08:15.476" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:15.457" endtime="20210712 07:08:15.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:15.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:15.476" endtime="20210712 07:08:15.477"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:15.483" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:15.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:15.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:15.481" endtime="20210712 07:08:15.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:15.493" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:15.493" endtime="20210712 07:08:15.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:15.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:15.494" endtime="20210712 07:08:15.494"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.479" endtime="20210712 07:08:15.495"/>
</kw>
<msg timestamp="20210712 07:08:15.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:15.478" endtime="20210712 07:08:15.495"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.478" endtime="20210712 07:08:15.495"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.477" endtime="20210712 07:08:15.495"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.456" endtime="20210712 07:08:15.496"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.455" endtime="20210712 07:08:15.496"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:15.502" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:15.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:15.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:15.499" endtime="20210712 07:08:15.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:15.509" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:15.508" endtime="20210712 07:08:15.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:15.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:15.510" endtime="20210712 07:08:15.511"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.498" endtime="20210712 07:08:15.511"/>
</kw>
<msg timestamp="20210712 07:08:15.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:15.497" endtime="20210712 07:08:15.513"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.497" endtime="20210712 07:08:15.513"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:15.518" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:15.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:15.523" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:15.516" endtime="20210712 07:08:15.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:15.526" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:15.524" endtime="20210712 07:08:15.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:15.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:15.526" endtime="20210712 07:08:15.527"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.515" endtime="20210712 07:08:15.528"/>
</kw>
<msg timestamp="20210712 07:08:15.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:15.515" endtime="20210712 07:08:15.528"/>
</kw>
<msg timestamp="20210712 07:08:15.529" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:15.515" endtime="20210712 07:08:15.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:15.530" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:15.529" endtime="20210712 07:08:15.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:15.536" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:15.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:15.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:15.533" endtime="20210712 07:08:15.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:15.546" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:15.545" endtime="20210712 07:08:15.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:15.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:15.546" endtime="20210712 07:08:15.547"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.532" endtime="20210712 07:08:15.547"/>
</kw>
<msg timestamp="20210712 07:08:15.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:15.532" endtime="20210712 07:08:15.547"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.531" endtime="20210712 07:08:15.548"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.530" endtime="20210712 07:08:15.548"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.514" endtime="20210712 07:08:15.548"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.513" endtime="20210712 07:08:15.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:15.553" level="INFO">Running command 'ozone sh bucket info 40705-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:21.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:21.409" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210712 07:08:15.550" endtime="20210712 07:08:21.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:21.413" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:25.058Z",
  "modificationTime" : "2021-07-12T07:02:01.956Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210712 07:08:21.411" endtime="20210712 07:08:21.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:21.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:21.414" endtime="20210712 07:08:21.415"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.549" endtime="20210712 07:08:21.415"/>
</kw>
<msg timestamp="20210712 07:08:21.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:15.549" endtime="20210712 07:08:21.415"/>
</kw>
<msg timestamp="20210712 07:08:21.416" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210712 07:08:15.548" endtime="20210712 07:08:21.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:21.416" endtime="20210712 07:08:21.417"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:21.417" endtime="20210712 07:08:21.417"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:21.421" level="INFO">Running command 'ozone sh key list 40705-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:28.135" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:08:28.135" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 40705-source unreadable-bucket </msg>
<status status="PASS" starttime="20210712 07:08:21.418" endtime="20210712 07:08:28.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:28.137" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 40705-source unreadable-bucket </msg>
<status status="PASS" starttime="20210712 07:08:28.136" endtime="20210712 07:08:28.137"/>
</kw>
<msg timestamp="20210712 07:08:28.137" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 40705-source unreadable-bucket </msg>
<status status="PASS" starttime="20210712 07:08:21.417" endtime="20210712 07:08:28.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:28.138" endtime="20210712 07:08:28.138"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.496" endtime="20210712 07:08:28.138"/>
</kw>
<status status="PASS" starttime="20210712 07:08:15.496" endtime="20210712 07:08:28.139"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:08:15.454" endtime="20210712 07:08:28.139"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:28.147" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:28.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:28.151" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:28.144" endtime="20210712 07:08:28.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:28.154" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:28.152" endtime="20210712 07:08:28.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:28.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:28.155" endtime="20210712 07:08:28.157"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.144" endtime="20210712 07:08:28.158"/>
</kw>
<msg timestamp="20210712 07:08:28.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:28.143" endtime="20210712 07:08:28.158"/>
</kw>
<msg timestamp="20210712 07:08:28.159" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:28.143" endtime="20210712 07:08:28.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:28.161" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:28.159" endtime="20210712 07:08:28.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:28.168" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:28.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:28.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:28.165" endtime="20210712 07:08:28.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:28.180" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:28.178" endtime="20210712 07:08:28.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:28.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:28.180" endtime="20210712 07:08:28.181"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.164" endtime="20210712 07:08:28.182"/>
</kw>
<msg timestamp="20210712 07:08:28.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:28.163" endtime="20210712 07:08:28.182"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.162" endtime="20210712 07:08:28.183"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.161" endtime="20210712 07:08:28.183"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.142" endtime="20210712 07:08:28.183"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.142" endtime="20210712 07:08:28.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:28.190" level="INFO">Running command 'ozone sh bucket link 40705-target/loop1 40705-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:33.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:33.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:28.187" endtime="20210712 07:08:33.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:33.729" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:33.729" endtime="20210712 07:08:33.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:33.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:33.730" endtime="20210712 07:08:33.730"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.185" endtime="20210712 07:08:33.731"/>
</kw>
<msg timestamp="20210712 07:08:33.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:28.185" endtime="20210712 07:08:33.731"/>
</kw>
<status status="PASS" starttime="20210712 07:08:28.183" endtime="20210712 07:08:33.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:33.738" level="INFO">Running command 'ozone sh bucket link 40705-target/loop2 40705-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:39.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:39.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:33.734" endtime="20210712 07:08:39.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:39.227" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:39.225" endtime="20210712 07:08:39.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:39.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:39.228" endtime="20210712 07:08:39.229"/>
</kw>
<status status="PASS" starttime="20210712 07:08:33.733" endtime="20210712 07:08:39.230"/>
</kw>
<msg timestamp="20210712 07:08:39.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:33.732" endtime="20210712 07:08:39.231"/>
</kw>
<status status="PASS" starttime="20210712 07:08:33.731" endtime="20210712 07:08:39.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:39.238" level="INFO">Running command 'ozone sh bucket link 40705-target/loop3 40705-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:44.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:44.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:39.235" endtime="20210712 07:08:44.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:44.827" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:44.827" endtime="20210712 07:08:44.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:44.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:44.828" endtime="20210712 07:08:44.828"/>
</kw>
<status status="PASS" starttime="20210712 07:08:39.234" endtime="20210712 07:08:44.829"/>
</kw>
<msg timestamp="20210712 07:08:44.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:39.233" endtime="20210712 07:08:44.829"/>
</kw>
<status status="PASS" starttime="20210712 07:08:39.232" endtime="20210712 07:08:44.830"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:44.834" level="INFO">Running command 'ozone sh key list 40705-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:51.863" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:08:51.863" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210712 07:08:44.831" endtime="20210712 07:08:51.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:51.864" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210712 07:08:51.863" endtime="20210712 07:08:51.864"/>
</kw>
<msg timestamp="20210712 07:08:51.865" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210712 07:08:44.830" endtime="20210712 07:08:51.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:08:51.865" endtime="20210712 07:08:51.866"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:08:28.140" endtime="20210712 07:08:51.866"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:51.875" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:51.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:51.880" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:08:51.873" endtime="20210712 07:08:51.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:51.883" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:08:51.881" endtime="20210712 07:08:51.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:51.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:51.884" endtime="20210712 07:08:51.885"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.872" endtime="20210712 07:08:51.885"/>
</kw>
<msg timestamp="20210712 07:08:51.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:51.871" endtime="20210712 07:08:51.886"/>
</kw>
<msg timestamp="20210712 07:08:51.887" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:08:51.871" endtime="20210712 07:08:51.887"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:08:51.888" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:08:51.887" endtime="20210712 07:08:51.888"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:51.894" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:51.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:51.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:51.892" endtime="20210712 07:08:51.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:51.905" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:51.904" endtime="20210712 07:08:51.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:51.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:51.906" endtime="20210712 07:08:51.907"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.891" endtime="20210712 07:08:51.907"/>
</kw>
<msg timestamp="20210712 07:08:51.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:51.891" endtime="20210712 07:08:51.908"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.889" endtime="20210712 07:08:51.908"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.888" endtime="20210712 07:08:51.908"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.869" endtime="20210712 07:08:51.909"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.868" endtime="20210712 07:08:51.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:51.914" level="INFO">Running command 'ozone sh bucket link 40705-source/bucket1 40705-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:08:58.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:08:58.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:08:51.911" endtime="20210712 07:08:58.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:08:58.800" level="INFO"/>
<status status="PASS" starttime="20210712 07:08:58.799" endtime="20210712 07:08:58.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:08:58.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:08:58.800" endtime="20210712 07:08:58.801"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.911" endtime="20210712 07:08:58.802"/>
</kw>
<msg timestamp="20210712 07:08:58.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:08:51.910" endtime="20210712 07:08:58.802"/>
</kw>
<status status="PASS" starttime="20210712 07:08:51.909" endtime="20210712 07:08:58.802"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:08:58.807" level="INFO">Running command 'ozone sh key put 40705-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:10:51.868" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:08:58.805" endtime="20210712 07:10:51.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:10:51.869" endtime="20210712 07:10:51.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:10:51.869" endtime="20210712 07:10:51.870"/>
</kw>
<status status="FAIL" starttime="20210712 07:08:58.804" endtime="20210712 07:10:51.870"/>
</kw>
<msg timestamp="20210712 07:10:51.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:08:58.803" endtime="20210712 07:10:51.871"/>
</kw>
<status status="FAIL" starttime="20210712 07:08:58.803" endtime="20210712 07:10:51.871"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210712 07:10:51.871" endtime="20210712 07:10:51.871"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210712 07:08:51.867" endtime="20210712 07:10:51.872">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:10:51.879" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:10:51.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:10:51.883" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:10:51.876" endtime="20210712 07:10:51.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:10:51.884" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:10:51.884" endtime="20210712 07:10:51.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:10:51.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:10:51.884" endtime="20210712 07:10:51.885"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.875" endtime="20210712 07:10:51.885"/>
</kw>
<msg timestamp="20210712 07:10:51.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:10:51.875" endtime="20210712 07:10:51.886"/>
</kw>
<msg timestamp="20210712 07:10:51.886" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:10:51.875" endtime="20210712 07:10:51.886"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:10:51.887" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:10:51.886" endtime="20210712 07:10:51.887"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:10:51.893" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:10:51.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:10:51.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:10:51.889" endtime="20210712 07:10:51.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:10:51.901" level="INFO"/>
<status status="PASS" starttime="20210712 07:10:51.900" endtime="20210712 07:10:51.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:10:51.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:10:51.902" endtime="20210712 07:10:51.904"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.889" endtime="20210712 07:10:51.904"/>
</kw>
<msg timestamp="20210712 07:10:51.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:10:51.888" endtime="20210712 07:10:51.905"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.887" endtime="20210712 07:10:51.905"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.887" endtime="20210712 07:10:51.905"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.874" endtime="20210712 07:10:51.905"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.873" endtime="20210712 07:10:51.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:10:51.912" level="INFO">Running command 'ozone sh bucket delete 40705-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:10:59.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:10:59.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:10:51.908" endtime="20210712 07:10:59.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:10:59.090" level="INFO"/>
<status status="PASS" starttime="20210712 07:10:59.086" endtime="20210712 07:10:59.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:10:59.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:10:59.091" endtime="20210712 07:10:59.094"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.908" endtime="20210712 07:10:59.094"/>
</kw>
<msg timestamp="20210712 07:10:59.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:10:51.907" endtime="20210712 07:10:59.094"/>
</kw>
<status status="PASS" starttime="20210712 07:10:51.906" endtime="20210712 07:10:59.095"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:10:59.102" level="INFO">Running command 'ozone sh bucket list 40705-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:07.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:07.122" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210712 07:10:59.096" endtime="20210712 07:11:07.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:07.124" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:07:52.967Z",
  "modificationTime" : "2021-07-12T07:07:52.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:02:09.155Z",
  "modificationTime" : "2021-07-12T07:02:09.155Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:25.058Z",
  "modificationTime" : "2021-07-12T07:02:01.956Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:07:38.724Z",
  "modificationTime" : "2021-07-12T07:07:38.724Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:08:58.698Z",
  "modificationTime" : "2021-07-12T07:08:58.698Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:08:44.734Z",
  "modificationTime" : "2021-07-12T07:08:44.734Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:08:33.522Z",
  "modificationTime" : "2021-07-12T07:08:33.522Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:08:39.117Z",
  "modificationTime" : "2021-07-12T07:08:39.117Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:11.483Z",
  "modificationTime" : "2021-07-12T07:01:54.742Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-12T07:01:17.735Z",
  "modificationTime" : "2021-07-12T07:01:17.735Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "40705-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210712 07:11:07.122" endtime="20210712 07:11:07.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:07.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:07.125" endtime="20210712 07:11:07.126"/>
</kw>
<status status="PASS" starttime="20210712 07:10:59.096" endtime="20210712 07:11:07.126"/>
</kw>
<msg timestamp="20210712 07:11:07.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:10:59.096" endtime="20210712 07:11:07.127"/>
</kw>
<msg timestamp="20210712 07:11:07.127" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "40705-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210712 07:10:59.095" endtime="20210712 07:11:07.128"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:11:07.128" endtime="20210712 07:11:07.129"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:07.137" level="INFO">Running command 'ozone sh key list 40705-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:14.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:14.497" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210712 07:11:07.133" endtime="20210712 07:11:14.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:14.499" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210712 07:11:14.498" endtime="20210712 07:11:14.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:14.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:14.499" endtime="20210712 07:11:14.500"/>
</kw>
<status status="PASS" starttime="20210712 07:11:07.131" endtime="20210712 07:11:14.500"/>
</kw>
<msg timestamp="20210712 07:11:14.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:07.130" endtime="20210712 07:11:14.500"/>
</kw>
<msg timestamp="20210712 07:11:14.501" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210712 07:11:07.129" endtime="20210712 07:11:14.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:11:14.501" endtime="20210712 07:11:14.502"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 07:10:51.872" endtime="20210712 07:11:14.502"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210712 06:57:25.649" endtime="20210712 07:11:14.506"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 07:11:14.550" level="INFO">${random} = 34644</msg>
<status status="PASS" starttime="20210712 07:11:14.550" endtime="20210712 07:11:14.550"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:11:14.551" level="INFO">${prefix} = 34644</msg>
<status status="PASS" starttime="20210712 07:11:14.550" endtime="20210712 07:11:14.551"/>
</kw>
<status status="PASS" starttime="20210712 07:11:14.549" endtime="20210712 07:11:14.551"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:14.559" level="INFO">Running command 'ozone sh volume info /34644-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:22.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:11:22.228" level="INFO">${output} = VOLUME_NOT_FOUND Volume 34644-rpcbasic is not found</msg>
<status status="PASS" starttime="20210712 07:11:14.555" endtime="20210712 07:11:22.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:22.229" level="INFO">VOLUME_NOT_FOUND Volume 34644-rpcbasic is not found</msg>
<status status="PASS" starttime="20210712 07:11:22.228" endtime="20210712 07:11:22.229"/>
</kw>
<msg timestamp="20210712 07:11:22.229" level="INFO">${result} = VOLUME_NOT_FOUND Volume 34644-rpcbasic is not found</msg>
<status status="PASS" starttime="20210712 07:11:14.554" endtime="20210712 07:11:22.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:11:22.230" endtime="20210712 07:11:22.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:22.235" level="INFO">Running command 'ozone sh volume create /34644-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:28.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:28.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:11:22.232" endtime="20210712 07:11:28.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:28.873" level="INFO"/>
<status status="PASS" starttime="20210712 07:11:28.872" endtime="20210712 07:11:28.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:28.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:28.874" endtime="20210712 07:11:28.876"/>
</kw>
<status status="PASS" starttime="20210712 07:11:22.231" endtime="20210712 07:11:28.876"/>
</kw>
<msg timestamp="20210712 07:11:28.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:22.231" endtime="20210712 07:11:28.876"/>
</kw>
<msg timestamp="20210712 07:11:28.877" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 07:11:22.230" endtime="20210712 07:11:28.877"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:11:28.877" endtime="20210712 07:11:28.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:28.884" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="34644-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:36.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:36.351" level="INFO">${output} = {
  "metadata": {},
  "name": "34644-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:11:28.881" endtime="20210712 07:11:36.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:36.355" level="INFO">{
  "metadata": {},
  "name": "34644-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:11:28.766Z",
  "modificationTime": "2021-07-12T07:11:28.766Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:11:36.353" endtime="20210712 07:11:36.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:36.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:36.355" endtime="20210712 07:11:36.356"/>
</kw>
<status status="PASS" starttime="20210712 07:11:28.880" endtime="20210712 07:11:36.357"/>
</kw>
<msg timestamp="20210712 07:11:36.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:28.879" endtime="20210712 07:11:36.357"/>
</kw>
<msg timestamp="20210712 07:11:36.358" level="INFO">${result} = {
  "metadata": {},
  "name": "34644-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:11:28.877" endtime="20210712 07:11:36.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:11:36.358" endtime="20210712 07:11:36.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:36.368" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="34644-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:44.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:44.579" level="INFO">${output} = {
  "metadata": {},
  "name": "34644-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:11:36.363" endtime="20210712 07:11:44.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:44.581" level="INFO">{
  "metadata": {},
  "name": "34644-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:11:28.766Z",
  "modificationTime": "2021-07-12T07:11:28.766Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:11:44.579" endtime="20210712 07:11:44.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:44.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:44.581" endtime="20210712 07:11:44.583"/>
</kw>
<status status="PASS" starttime="20210712 07:11:36.362" endtime="20210712 07:11:44.583"/>
</kw>
<msg timestamp="20210712 07:11:44.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:36.361" endtime="20210712 07:11:44.584"/>
</kw>
<msg timestamp="20210712 07:11:44.585" level="INFO">${result} = {
  "metadata": {},
  "name": "34644-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:11:36.359" endtime="20210712 07:11:44.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:11:44.585" endtime="20210712 07:11:44.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:44.591" level="INFO">Running command 'ozone sh volume setquota /34644-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:50.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:50.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:11:44.588" endtime="20210712 07:11:50.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:50.190" level="INFO"/>
<status status="PASS" starttime="20210712 07:11:50.188" endtime="20210712 07:11:50.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:50.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:50.190" endtime="20210712 07:11:50.191"/>
</kw>
<status status="PASS" starttime="20210712 07:11:44.587" endtime="20210712 07:11:50.192"/>
</kw>
<msg timestamp="20210712 07:11:50.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:44.587" endtime="20210712 07:11:50.192"/>
</kw>
<status status="PASS" starttime="20210712 07:11:44.586" endtime="20210712 07:11:50.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:50.199" level="INFO">Running command 'ozone sh volume info /34644-rpcbasic | jq -r '. | select(.name=="34644-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:11:55.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:11:55.621" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:11:50.196" endtime="20210712 07:11:55.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:11:55.622" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:11:55.622" endtime="20210712 07:11:55.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:11:55.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:11:55.623" endtime="20210712 07:11:55.623"/>
</kw>
<status status="PASS" starttime="20210712 07:11:50.195" endtime="20210712 07:11:55.624"/>
</kw>
<msg timestamp="20210712 07:11:55.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:50.194" endtime="20210712 07:11:55.624"/>
</kw>
<msg timestamp="20210712 07:11:55.624" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:11:50.193" endtime="20210712 07:11:55.624"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:11:55.625" endtime="20210712 07:11:55.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:11:55.630" level="INFO">Running command 'ozone sh bucket create /34644-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:02.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:02.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:11:55.627" endtime="20210712 07:12:02.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:02.003" level="INFO"/>
<status status="PASS" starttime="20210712 07:12:02.002" endtime="20210712 07:12:02.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:02.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:02.003" endtime="20210712 07:12:02.004"/>
</kw>
<status status="PASS" starttime="20210712 07:11:55.627" endtime="20210712 07:12:02.004"/>
</kw>
<msg timestamp="20210712 07:12:02.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:11:55.627" endtime="20210712 07:12:02.004"/>
</kw>
<status status="PASS" starttime="20210712 07:11:55.625" endtime="20210712 07:12:02.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:02.009" level="INFO">Running command 'ozone sh bucket info /34644-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:09.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:09.291" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210712 07:12:02.007" endtime="20210712 07:12:09.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:09.292" level="INFO">DISK</msg>
<status status="PASS" starttime="20210712 07:12:09.291" endtime="20210712 07:12:09.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:09.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:09.293" endtime="20210712 07:12:09.302"/>
</kw>
<status status="PASS" starttime="20210712 07:12:02.006" endtime="20210712 07:12:09.302"/>
</kw>
<msg timestamp="20210712 07:12:09.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:02.006" endtime="20210712 07:12:09.306"/>
</kw>
<msg timestamp="20210712 07:12:09.307" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210712 07:12:02.005" endtime="20210712 07:12:09.307"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:12:09.307" endtime="20210712 07:12:09.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:09.327" level="INFO">Running command 'ozone sh bucket info /34644-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:17.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:17.660" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:12:09.318" endtime="20210712 07:12:17.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:17.663" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:12:17.661" endtime="20210712 07:12:17.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:17.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:17.663" endtime="20210712 07:12:17.664"/>
</kw>
<status status="PASS" starttime="20210712 07:12:09.318" endtime="20210712 07:12:17.665"/>
</kw>
<msg timestamp="20210712 07:12:17.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:09.309" endtime="20210712 07:12:17.665"/>
</kw>
<msg timestamp="20210712 07:12:17.665" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:12:09.308" endtime="20210712 07:12:17.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:12:17.666" endtime="20210712 07:12:17.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:17.673" level="INFO">Running command 'ozone sh bucket info /34644-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:24.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:24.927" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210712 07:12:17.669" endtime="20210712 07:12:24.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:24.928" level="INFO">100</msg>
<status status="PASS" starttime="20210712 07:12:24.928" endtime="20210712 07:12:24.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:24.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:24.929" endtime="20210712 07:12:24.929"/>
</kw>
<status status="PASS" starttime="20210712 07:12:17.668" endtime="20210712 07:12:24.930"/>
</kw>
<msg timestamp="20210712 07:12:24.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:17.668" endtime="20210712 07:12:24.930"/>
</kw>
<msg timestamp="20210712 07:12:24.930" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210712 07:12:17.667" endtime="20210712 07:12:24.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:12:24.931" endtime="20210712 07:12:24.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:24.935" level="INFO">Running command 'ozone sh bucket setquota /34644-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:31.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:31.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:12:24.933" endtime="20210712 07:12:31.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:31.997" level="INFO"/>
<status status="PASS" starttime="20210712 07:12:31.995" endtime="20210712 07:12:31.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:31.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:31.998" endtime="20210712 07:12:31.999"/>
</kw>
<status status="PASS" starttime="20210712 07:12:24.932" endtime="20210712 07:12:31.999"/>
</kw>
<msg timestamp="20210712 07:12:31.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:24.932" endtime="20210712 07:12:31.999"/>
</kw>
<status status="PASS" starttime="20210712 07:12:24.931" endtime="20210712 07:12:32.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:32.006" level="INFO">Running command 'ozone sh bucket info /34644-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:39.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:39.484" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:12:32.003" endtime="20210712 07:12:39.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:39.487" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210712 07:12:39.485" endtime="20210712 07:12:39.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:39.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:39.489" endtime="20210712 07:12:39.490"/>
</kw>
<status status="PASS" starttime="20210712 07:12:32.002" endtime="20210712 07:12:39.491"/>
</kw>
<msg timestamp="20210712 07:12:39.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:32.001" endtime="20210712 07:12:39.492"/>
</kw>
<msg timestamp="20210712 07:12:39.493" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:12:32.000" endtime="20210712 07:12:39.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:12:39.493" endtime="20210712 07:12:39.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:39.500" level="INFO">Running command 'ozone sh bucket info /34644-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:47.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:47.448" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210712 07:12:39.496" endtime="20210712 07:12:47.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:47.450" level="INFO">1000</msg>
<status status="PASS" starttime="20210712 07:12:47.449" endtime="20210712 07:12:47.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:47.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:47.451" endtime="20210712 07:12:47.453"/>
</kw>
<status status="PASS" starttime="20210712 07:12:39.496" endtime="20210712 07:12:47.454"/>
</kw>
<msg timestamp="20210712 07:12:47.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:39.495" endtime="20210712 07:12:47.454"/>
</kw>
<msg timestamp="20210712 07:12:47.455" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210712 07:12:39.494" endtime="20210712 07:12:47.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:12:47.456" endtime="20210712 07:12:47.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:47.465" level="INFO">Running command 'ozone sh bucket list /34644-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:12:53.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:12:53.346" level="INFO">${output} = 34644-rpcbasic</msg>
<status status="PASS" starttime="20210712 07:12:47.462" endtime="20210712 07:12:53.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:12:53.347" level="INFO">34644-rpcbasic</msg>
<status status="PASS" starttime="20210712 07:12:53.346" endtime="20210712 07:12:53.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:12:53.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:12:53.347" endtime="20210712 07:12:53.348"/>
</kw>
<status status="PASS" starttime="20210712 07:12:47.461" endtime="20210712 07:12:53.348"/>
</kw>
<msg timestamp="20210712 07:12:53.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:47.460" endtime="20210712 07:12:53.348"/>
</kw>
<msg timestamp="20210712 07:12:53.349" level="INFO">${result} = 34644-rpcbasic</msg>
<status status="PASS" starttime="20210712 07:12:47.457" endtime="20210712 07:12:53.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:12:53.349" endtime="20210712 07:12:53.349"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:12:53.355" level="INFO">Running command 'ozone sh key put /34644-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:03.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:03.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:12:53.353" endtime="20210712 07:16:03.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:03.482" level="INFO"/>
<status status="PASS" starttime="20210712 07:16:03.481" endtime="20210712 07:16:03.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:03.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:03.482" endtime="20210712 07:16:03.484"/>
</kw>
<status status="PASS" starttime="20210712 07:12:53.352" endtime="20210712 07:16:03.484"/>
</kw>
<msg timestamp="20210712 07:16:03.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:12:53.351" endtime="20210712 07:16:03.485"/>
</kw>
<status status="PASS" starttime="20210712 07:12:53.351" endtime="20210712 07:16:03.486"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:03.492" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:03.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:03.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:16:03.489" endtime="20210712 07:16:03.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:03.498" level="INFO"/>
<status status="PASS" starttime="20210712 07:16:03.497" endtime="20210712 07:16:03.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:03.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:03.499" endtime="20210712 07:16:03.499"/>
</kw>
<status status="PASS" starttime="20210712 07:16:03.488" endtime="20210712 07:16:03.500"/>
</kw>
<msg timestamp="20210712 07:16:03.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:03.487" endtime="20210712 07:16:03.500"/>
</kw>
<status status="PASS" starttime="20210712 07:16:03.486" endtime="20210712 07:16:03.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:03.506" level="INFO">Running command 'ozone sh key get /34644-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:14.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:14.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:16:03.503" endtime="20210712 07:16:14.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:14.334" level="INFO"/>
<status status="PASS" starttime="20210712 07:16:14.333" endtime="20210712 07:16:14.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:14.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:14.334" endtime="20210712 07:16:14.335"/>
</kw>
<status status="PASS" starttime="20210712 07:16:03.503" endtime="20210712 07:16:14.335"/>
</kw>
<msg timestamp="20210712 07:16:14.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:03.502" endtime="20210712 07:16:14.335"/>
</kw>
<status status="PASS" starttime="20210712 07:16:03.501" endtime="20210712 07:16:14.336"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:14.340" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:14.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:14.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:16:14.337" endtime="20210712 07:16:14.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:14.347" level="INFO"/>
<status status="PASS" starttime="20210712 07:16:14.346" endtime="20210712 07:16:14.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:14.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:14.347" endtime="20210712 07:16:14.348"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.337" endtime="20210712 07:16:14.348"/>
</kw>
<msg timestamp="20210712 07:16:14.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:14.336" endtime="20210712 07:16:14.348"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.336" endtime="20210712 07:16:14.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:14.353" level="INFO">Running command 'ozone sh key put -t RATIS /34644-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:14.552" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:16:14.351" endtime="20210712 07:16:14.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.554" endtime="20210712 07:16:14.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.554" endtime="20210712 07:16:14.554"/>
</kw>
<status status="FAIL" starttime="20210712 07:16:14.350" endtime="20210712 07:16:14.554"/>
</kw>
<msg timestamp="20210712 07:16:14.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:16:14.349" endtime="20210712 07:16:14.555"/>
</kw>
<status status="FAIL" starttime="20210712 07:16:14.349" endtime="20210712 07:16:14.555"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.556" endtime="20210712 07:16:14.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.556" endtime="20210712 07:16:14.556"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.556" endtime="20210712 07:16:14.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.557" endtime="20210712 07:16:14.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.557" endtime="20210712 07:16:14.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.558" endtime="20210712 07:16:14.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.559" endtime="20210712 07:16:14.560"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.560" endtime="20210712 07:16:14.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.561" endtime="20210712 07:16:14.561"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.562" endtime="20210712 07:16:14.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.565" endtime="20210712 07:16:14.565"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.565" endtime="20210712 07:16:14.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.567" endtime="20210712 07:16:14.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.568" endtime="20210712 07:16:14.568"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.568" endtime="20210712 07:16:14.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.568" endtime="20210712 07:16:14.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.569" endtime="20210712 07:16:14.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.570" endtime="20210712 07:16:14.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.570" endtime="20210712 07:16:14.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.571" endtime="20210712 07:16:14.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.573" endtime="20210712 07:16:14.574"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.575" endtime="20210712 07:16:14.576"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.576" endtime="20210712 07:16:14.576"/>
</kw>
<status status="FAIL" starttime="20210712 07:12:53.350" endtime="20210712 07:16:14.577"/>
</kw>
<status status="FAIL" starttime="20210712 07:12:53.350" endtime="20210712 07:16:14.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.579" endtime="20210712 07:16:14.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.579" endtime="20210712 07:16:14.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.580" endtime="20210712 07:16:14.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.581" endtime="20210712 07:16:14.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.582" endtime="20210712 07:16:14.582"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.583" endtime="20210712 07:16:14.583"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.584" endtime="20210712 07:16:14.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.584" endtime="20210712 07:16:14.585"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.586" endtime="20210712 07:16:14.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.587" endtime="20210712 07:16:14.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.588" endtime="20210712 07:16:14.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.589" endtime="20210712 07:16:14.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.591" endtime="20210712 07:16:14.591"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.591" endtime="20210712 07:16:14.592"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.593" endtime="20210712 07:16:14.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.594" endtime="20210712 07:16:14.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.596" endtime="20210712 07:16:14.596"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.597" endtime="20210712 07:16:14.597"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.597" endtime="20210712 07:16:14.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.597" endtime="20210712 07:16:14.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.598" endtime="20210712 07:16:14.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.598" endtime="20210712 07:16:14.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.602" endtime="20210712 07:16:14.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:16:14.602" endtime="20210712 07:16:14.602"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.602" endtime="20210712 07:16:14.602"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:16:14.603" endtime="20210712 07:16:14.603"/>
</kw>
<status status="FAIL" starttime="20210712 07:11:14.552" endtime="20210712 07:16:14.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210712 07:11:14.551" endtime="20210712 07:16:14.605">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210712 07:11:14.515" endtime="20210712 07:16:14.607"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210712 07:16:14.633" level="INFO">${random} = 95230</msg>
<status status="PASS" starttime="20210712 07:16:14.632" endtime="20210712 07:16:14.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:16:14.635" level="INFO">${prefix} = 95230</msg>
<status status="PASS" starttime="20210712 07:16:14.634" endtime="20210712 07:16:14.635"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.632" endtime="20210712 07:16:14.635"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:14.648" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:14.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:14.660" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:16:14.643" endtime="20210712 07:16:14.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:14.661" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:16:14.660" endtime="20210712 07:16:14.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:14.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:14.661" endtime="20210712 07:16:14.662"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.642" endtime="20210712 07:16:14.662"/>
</kw>
<msg timestamp="20210712 07:16:14.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:14.642" endtime="20210712 07:16:14.663"/>
</kw>
<msg timestamp="20210712 07:16:14.663" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:16:14.641" endtime="20210712 07:16:14.664"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:16:14.666" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:16:14.664" endtime="20210712 07:16:14.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:14.683" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:14.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:14.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:16:14.674" endtime="20210712 07:16:14.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:14.917" level="INFO"/>
<status status="PASS" starttime="20210712 07:16:14.917" endtime="20210712 07:16:14.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:14.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:14.918" endtime="20210712 07:16:14.919"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.670" endtime="20210712 07:16:14.919"/>
</kw>
<msg timestamp="20210712 07:16:14.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:14.670" endtime="20210712 07:16:14.920"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.668" endtime="20210712 07:16:14.920"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.667" endtime="20210712 07:16:14.920"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.640" endtime="20210712 07:16:14.920"/>
</kw>
<status status="PASS" starttime="20210712 07:16:14.638" endtime="20210712 07:16:14.920"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:14.935" level="INFO">Running command 'ozone sh volume info o3://om:9862/95230-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:28.898" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:16:28.898" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95230-rpcwoport is not found</msg>
<status status="PASS" starttime="20210712 07:16:14.922" endtime="20210712 07:16:28.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:28.900" level="INFO">VOLUME_NOT_FOUND Volume 95230-rpcwoport is not found</msg>
<status status="PASS" starttime="20210712 07:16:28.899" endtime="20210712 07:16:28.900"/>
</kw>
<msg timestamp="20210712 07:16:28.901" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95230-rpcwoport is not found</msg>
<status status="PASS" starttime="20210712 07:16:14.921" endtime="20210712 07:16:28.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:16:28.901" endtime="20210712 07:16:28.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:28.910" level="INFO">Running command 'ozone sh volume create o3://om:9862/95230-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:40.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:40.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:16:28.904" endtime="20210712 07:16:40.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:40.277" level="INFO"/>
<status status="PASS" starttime="20210712 07:16:40.276" endtime="20210712 07:16:40.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:40.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:40.277" endtime="20210712 07:16:40.278"/>
</kw>
<status status="PASS" starttime="20210712 07:16:28.903" endtime="20210712 07:16:40.279"/>
</kw>
<msg timestamp="20210712 07:16:40.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:28.903" endtime="20210712 07:16:40.279"/>
</kw>
<msg timestamp="20210712 07:16:40.279" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 07:16:28.902" endtime="20210712 07:16:40.280"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:16:40.280" endtime="20210712 07:16:40.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:40.291" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="95230-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:48.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:48.330" level="INFO">${output} = {
  "metadata": {},
  "name": "95230-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210712 07:16:40.287" endtime="20210712 07:16:48.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:48.331" level="INFO">{
  "metadata": {},
  "name": "95230-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:16:39.862Z",
  "modificationTime": "2021-07-12T07:16:39.862Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:16:48.330" endtime="20210712 07:16:48.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:48.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:48.331" endtime="20210712 07:16:48.332"/>
</kw>
<status status="PASS" starttime="20210712 07:16:40.286" endtime="20210712 07:16:48.332"/>
</kw>
<msg timestamp="20210712 07:16:48.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:40.286" endtime="20210712 07:16:48.333"/>
</kw>
<msg timestamp="20210712 07:16:48.333" level="INFO">${result} = {
  "metadata": {},
  "name": "95230-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210712 07:16:40.280" endtime="20210712 07:16:48.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:16:48.333" endtime="20210712 07:16:48.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:48.343" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="95230-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:16:55.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:16:55.721" level="INFO">${output} = {
  "metadata": {},
  "name": "95230-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210712 07:16:48.340" endtime="20210712 07:16:55.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:16:55.722" level="INFO">{
  "metadata": {},
  "name": "95230-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:16:39.862Z",
  "modificationTime": "2021-07-12T07:16:39.862Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:16:55.722" endtime="20210712 07:16:55.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:16:55.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:16:55.723" endtime="20210712 07:16:55.724"/>
</kw>
<status status="PASS" starttime="20210712 07:16:48.339" endtime="20210712 07:16:55.724"/>
</kw>
<msg timestamp="20210712 07:16:55.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:48.338" endtime="20210712 07:16:55.724"/>
</kw>
<msg timestamp="20210712 07:16:55.725" level="INFO">${result} = {
  "metadata": {},
  "name": "95230-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210712 07:16:48.337" endtime="20210712 07:16:55.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:16:55.725" endtime="20210712 07:16:55.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:16:55.730" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/95230-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:02.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:02.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:16:55.728" endtime="20210712 07:17:02.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:02.856" level="INFO"/>
<status status="PASS" starttime="20210712 07:17:02.855" endtime="20210712 07:17:02.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:02.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:02.856" endtime="20210712 07:17:02.857"/>
</kw>
<status status="PASS" starttime="20210712 07:16:55.727" endtime="20210712 07:17:02.857"/>
</kw>
<msg timestamp="20210712 07:17:02.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:16:55.726" endtime="20210712 07:17:02.857"/>
</kw>
<status status="PASS" starttime="20210712 07:16:55.726" endtime="20210712 07:17:02.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:02.863" level="INFO">Running command 'ozone sh volume info o3://om:9862/95230-rpcwoport | jq -r '. | select(.name=="95230-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:09.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:09.231" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:17:02.861" endtime="20210712 07:17:09.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:09.233" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:17:09.232" endtime="20210712 07:17:09.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:09.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:09.233" endtime="20210712 07:17:09.234"/>
</kw>
<status status="PASS" starttime="20210712 07:17:02.861" endtime="20210712 07:17:09.234"/>
</kw>
<msg timestamp="20210712 07:17:09.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:02.860" endtime="20210712 07:17:09.234"/>
</kw>
<msg timestamp="20210712 07:17:09.235" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:17:02.858" endtime="20210712 07:17:09.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:17:09.235" endtime="20210712 07:17:09.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:09.240" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95230-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:15.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:15.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:17:09.238" endtime="20210712 07:17:15.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:15.734" level="INFO"/>
<status status="PASS" starttime="20210712 07:17:15.732" endtime="20210712 07:17:15.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:15.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:15.734" endtime="20210712 07:17:15.738"/>
</kw>
<status status="PASS" starttime="20210712 07:17:09.237" endtime="20210712 07:17:15.739"/>
</kw>
<msg timestamp="20210712 07:17:15.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:09.237" endtime="20210712 07:17:15.739"/>
</kw>
<status status="PASS" starttime="20210712 07:17:09.236" endtime="20210712 07:17:15.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:15.745" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95230-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:23.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:23.039" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210712 07:17:15.742" endtime="20210712 07:17:23.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:23.041" level="INFO">DISK</msg>
<status status="PASS" starttime="20210712 07:17:23.039" endtime="20210712 07:17:23.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:23.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:23.041" endtime="20210712 07:17:23.042"/>
</kw>
<status status="PASS" starttime="20210712 07:17:15.741" endtime="20210712 07:17:23.042"/>
</kw>
<msg timestamp="20210712 07:17:23.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:15.741" endtime="20210712 07:17:23.042"/>
</kw>
<msg timestamp="20210712 07:17:23.042" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210712 07:17:15.740" endtime="20210712 07:17:23.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:17:23.043" endtime="20210712 07:17:23.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:23.050" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95230-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:30.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:30.900" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:17:23.046" endtime="20210712 07:17:30.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:30.903" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:17:30.901" endtime="20210712 07:17:30.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:30.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:30.903" endtime="20210712 07:17:30.905"/>
</kw>
<status status="PASS" starttime="20210712 07:17:23.045" endtime="20210712 07:17:30.905"/>
</kw>
<msg timestamp="20210712 07:17:30.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:23.044" endtime="20210712 07:17:30.906"/>
</kw>
<msg timestamp="20210712 07:17:30.906" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:17:23.043" endtime="20210712 07:17:30.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:17:30.907" endtime="20210712 07:17:30.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:30.914" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95230-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:38.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:38.706" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210712 07:17:30.911" endtime="20210712 07:17:38.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:38.708" level="INFO">100</msg>
<status status="PASS" starttime="20210712 07:17:38.706" endtime="20210712 07:17:38.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:38.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:38.709" endtime="20210712 07:17:38.710"/>
</kw>
<status status="PASS" starttime="20210712 07:17:30.910" endtime="20210712 07:17:38.711"/>
</kw>
<msg timestamp="20210712 07:17:38.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:30.910" endtime="20210712 07:17:38.711"/>
</kw>
<msg timestamp="20210712 07:17:38.712" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210712 07:17:30.908" endtime="20210712 07:17:38.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:17:38.713" endtime="20210712 07:17:38.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:38.721" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/95230-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:46.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:46.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:17:38.718" endtime="20210712 07:17:46.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:46.795" level="INFO"/>
<status status="PASS" starttime="20210712 07:17:46.794" endtime="20210712 07:17:46.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:46.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:46.795" endtime="20210712 07:17:46.796"/>
</kw>
<status status="PASS" starttime="20210712 07:17:38.716" endtime="20210712 07:17:46.797"/>
</kw>
<msg timestamp="20210712 07:17:46.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:38.716" endtime="20210712 07:17:46.797"/>
</kw>
<status status="PASS" starttime="20210712 07:17:38.714" endtime="20210712 07:17:46.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:46.806" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95230-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:17:53.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:17:53.452" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:17:46.803" endtime="20210712 07:17:53.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:17:53.455" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210712 07:17:53.453" endtime="20210712 07:17:53.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:17:53.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:17:53.455" endtime="20210712 07:17:53.456"/>
</kw>
<status status="PASS" starttime="20210712 07:17:46.802" endtime="20210712 07:17:53.456"/>
</kw>
<msg timestamp="20210712 07:17:53.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:46.801" endtime="20210712 07:17:53.457"/>
</kw>
<msg timestamp="20210712 07:17:53.457" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:17:46.798" endtime="20210712 07:17:53.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:17:53.457" endtime="20210712 07:17:53.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:17:53.464" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95230-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:18:00.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:18:00.012" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210712 07:17:53.461" endtime="20210712 07:18:00.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:18:00.015" level="INFO">1000</msg>
<status status="PASS" starttime="20210712 07:18:00.014" endtime="20210712 07:18:00.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:18:00.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:18:00.016" endtime="20210712 07:18:00.017"/>
</kw>
<status status="PASS" starttime="20210712 07:17:53.460" endtime="20210712 07:18:00.018"/>
</kw>
<msg timestamp="20210712 07:18:00.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:17:53.460" endtime="20210712 07:18:00.018"/>
</kw>
<msg timestamp="20210712 07:18:00.019" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210712 07:17:53.458" endtime="20210712 07:18:00.019"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:18:00.020" endtime="20210712 07:18:00.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:18:00.029" level="INFO">Running command 'ozone sh bucket list o3://om:9862/95230-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:18:07.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:18:07.400" level="INFO">${output} = 95230-rpcwoport</msg>
<status status="PASS" starttime="20210712 07:18:00.026" endtime="20210712 07:18:07.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:18:07.403" level="INFO">95230-rpcwoport</msg>
<status status="PASS" starttime="20210712 07:18:07.402" endtime="20210712 07:18:07.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:18:07.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:18:07.404" endtime="20210712 07:18:07.405"/>
</kw>
<status status="PASS" starttime="20210712 07:18:00.024" endtime="20210712 07:18:07.406"/>
</kw>
<msg timestamp="20210712 07:18:07.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:18:00.024" endtime="20210712 07:18:07.406"/>
</kw>
<msg timestamp="20210712 07:18:07.407" level="INFO">${result} = 95230-rpcwoport</msg>
<status status="PASS" starttime="20210712 07:18:00.021" endtime="20210712 07:18:07.407"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:18:07.408" endtime="20210712 07:18:07.409"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:18:07.436" level="INFO">Running command 'ozone sh key put o3://om:9862/95230-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:14.638" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:18:07.433" endtime="20210712 07:21:14.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.638" endtime="20210712 07:21:14.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.639" endtime="20210712 07:21:14.639"/>
</kw>
<status status="FAIL" starttime="20210712 07:18:07.414" endtime="20210712 07:21:14.639"/>
</kw>
<msg timestamp="20210712 07:21:14.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:18:07.413" endtime="20210712 07:21:14.639"/>
</kw>
<status status="FAIL" starttime="20210712 07:18:07.411" endtime="20210712 07:21:14.640"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.640" endtime="20210712 07:21:14.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.640" endtime="20210712 07:21:14.640"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.640" endtime="20210712 07:21:14.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.640" endtime="20210712 07:21:14.640"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.641" endtime="20210712 07:21:14.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.641" endtime="20210712 07:21:14.641"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.642" endtime="20210712 07:21:14.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.642" endtime="20210712 07:21:14.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.642" endtime="20210712 07:21:14.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.642" endtime="20210712 07:21:14.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.642" endtime="20210712 07:21:14.642"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.643" endtime="20210712 07:21:14.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.643" endtime="20210712 07:21:14.643"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.643" endtime="20210712 07:21:14.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.643" endtime="20210712 07:21:14.643"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.643" endtime="20210712 07:21:14.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.644" endtime="20210712 07:21:14.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.644" endtime="20210712 07:21:14.644"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.644" endtime="20210712 07:21:14.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.644" endtime="20210712 07:21:14.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.645" endtime="20210712 07:21:14.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.645" endtime="20210712 07:21:14.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.645" endtime="20210712 07:21:14.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.646" endtime="20210712 07:21:14.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.646" endtime="20210712 07:21:14.646"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.646" endtime="20210712 07:21:14.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.646" endtime="20210712 07:21:14.646"/>
</kw>
<status status="FAIL" starttime="20210712 07:18:07.410" endtime="20210712 07:21:14.646"/>
</kw>
<status status="FAIL" starttime="20210712 07:18:07.409" endtime="20210712 07:21:14.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.647" endtime="20210712 07:21:14.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.647" endtime="20210712 07:21:14.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.647" endtime="20210712 07:21:14.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.647" endtime="20210712 07:21:14.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.647" endtime="20210712 07:21:14.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.648" endtime="20210712 07:21:14.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.648" endtime="20210712 07:21:14.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.648" endtime="20210712 07:21:14.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.648" endtime="20210712 07:21:14.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.648" endtime="20210712 07:21:14.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.649" endtime="20210712 07:21:14.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.649" endtime="20210712 07:21:14.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.649" endtime="20210712 07:21:14.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.649" endtime="20210712 07:21:14.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.650" endtime="20210712 07:21:14.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.650" endtime="20210712 07:21:14.650"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.651" endtime="20210712 07:21:14.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.651" endtime="20210712 07:21:14.651"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.651" endtime="20210712 07:21:14.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.652" endtime="20210712 07:21:14.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.652" endtime="20210712 07:21:14.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.652" endtime="20210712 07:21:14.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.652" endtime="20210712 07:21:14.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:21:14.653" endtime="20210712 07:21:14.653"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.653" endtime="20210712 07:21:14.653"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:21:14.653" endtime="20210712 07:21:14.653"/>
</kw>
<status status="FAIL" starttime="20210712 07:16:14.920" endtime="20210712 07:21:14.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210712 07:16:14.635" endtime="20210712 07:21:14.654">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:14.661" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:14.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:14.665" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:21:14.659" endtime="20210712 07:21:14.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:14.666" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:21:14.665" endtime="20210712 07:21:14.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:14.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:14.666" endtime="20210712 07:21:14.667"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.658" endtime="20210712 07:21:14.667"/>
</kw>
<msg timestamp="20210712 07:21:14.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:14.658" endtime="20210712 07:21:14.668"/>
</kw>
<msg timestamp="20210712 07:21:14.668" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:21:14.657" endtime="20210712 07:21:14.668"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:21:14.669" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:21:14.668" endtime="20210712 07:21:14.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:14.674" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:14.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:14.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:21:14.672" endtime="20210712 07:21:14.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:14.683" level="INFO"/>
<status status="PASS" starttime="20210712 07:21:14.683" endtime="20210712 07:21:14.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:14.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:14.684" endtime="20210712 07:21:14.684"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.671" endtime="20210712 07:21:14.685"/>
</kw>
<msg timestamp="20210712 07:21:14.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:14.671" endtime="20210712 07:21:14.685"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.670" endtime="20210712 07:21:14.685"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.669" endtime="20210712 07:21:14.685"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.657" endtime="20210712 07:21:14.686"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.656" endtime="20210712 07:21:14.686"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:14.691" level="INFO">Running command 'ozone sh volume create o3://om:9862/95230-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:22.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:22.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:21:14.688" endtime="20210712 07:21:22.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:22.175" level="INFO"/>
<status status="PASS" starttime="20210712 07:21:22.174" endtime="20210712 07:21:22.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:22.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:22.175" endtime="20210712 07:21:22.176"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.688" endtime="20210712 07:21:22.176"/>
</kw>
<msg timestamp="20210712 07:21:22.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:14.687" endtime="20210712 07:21:22.176"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.687" endtime="20210712 07:21:22.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:22.182" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95230-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:29.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:29.289" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:21:22.179" endtime="20210712 07:21:29.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:29.292" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:21:29.290" endtime="20210712 07:21:29.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:29.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:29.293" endtime="20210712 07:21:29.294"/>
</kw>
<status status="PASS" starttime="20210712 07:21:22.178" endtime="20210712 07:21:29.295"/>
</kw>
<msg timestamp="20210712 07:21:29.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:22.178" endtime="20210712 07:21:29.295"/>
</kw>
<msg timestamp="20210712 07:21:29.296" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:21:22.177" endtime="20210712 07:21:29.296"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:21:29.297" endtime="20210712 07:21:29.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:29.307" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/95230-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:36.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:36.152" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210712 07:21:29.304" endtime="20210712 07:21:36.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:36.155" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210712 07:21:36.153" endtime="20210712 07:21:36.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:36.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:36.155" endtime="20210712 07:21:36.157"/>
</kw>
<status status="PASS" starttime="20210712 07:21:29.302" endtime="20210712 07:21:36.158"/>
</kw>
<msg timestamp="20210712 07:21:36.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:29.301" endtime="20210712 07:21:36.158"/>
</kw>
<msg timestamp="20210712 07:21:36.159" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210712 07:21:29.300" endtime="20210712 07:21:36.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:36.166" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95230-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:44.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:44.311" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:21:36.163" endtime="20210712 07:21:44.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:44.312" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:21:44.312" endtime="20210712 07:21:44.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:44.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:44.313" endtime="20210712 07:21:44.314"/>
</kw>
<status status="PASS" starttime="20210712 07:21:36.161" endtime="20210712 07:21:44.314"/>
</kw>
<msg timestamp="20210712 07:21:44.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:36.161" endtime="20210712 07:21:44.314"/>
</kw>
<msg timestamp="20210712 07:21:44.315" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:21:36.159" endtime="20210712 07:21:44.315"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:21:44.315" endtime="20210712 07:21:44.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:44.322" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/95230-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:51.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:51.660" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:21:44.318" endtime="20210712 07:21:51.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:51.662" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:21:51.661" endtime="20210712 07:21:51.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:51.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:51.662" endtime="20210712 07:21:51.662"/>
</kw>
<status status="PASS" starttime="20210712 07:21:44.318" endtime="20210712 07:21:51.663"/>
</kw>
<msg timestamp="20210712 07:21:51.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:44.317" endtime="20210712 07:21:51.663"/>
</kw>
<msg timestamp="20210712 07:21:51.663" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:21:44.316" endtime="20210712 07:21:51.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:51.669" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95230-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:21:59.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:21:59.221" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:21:51.666" endtime="20210712 07:21:59.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:21:59.222" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:21:59.221" endtime="20210712 07:21:59.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:21:59.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:21:59.222" endtime="20210712 07:21:59.223"/>
</kw>
<status status="PASS" starttime="20210712 07:21:51.665" endtime="20210712 07:21:59.223"/>
</kw>
<msg timestamp="20210712 07:21:59.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:51.664" endtime="20210712 07:21:59.223"/>
</kw>
<msg timestamp="20210712 07:21:59.224" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:21:51.663" endtime="20210712 07:21:59.224"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:21:59.224" endtime="20210712 07:21:59.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:21:59.231" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/95230-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:05.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:05.870" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:21:59.228" endtime="20210712 07:22:05.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:05.872" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:22:05.871" endtime="20210712 07:22:05.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:05.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:05.873" endtime="20210712 07:22:05.875"/>
</kw>
<status status="PASS" starttime="20210712 07:21:59.227" endtime="20210712 07:22:05.875"/>
</kw>
<msg timestamp="20210712 07:22:05.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:21:59.227" endtime="20210712 07:22:05.876"/>
</kw>
<msg timestamp="20210712 07:22:05.876" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:21:59.226" endtime="20210712 07:22:05.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:05.887" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95230-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:13.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:13.629" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210712 07:22:05.880" endtime="20210712 07:22:13.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:13.633" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:22:13.631" endtime="20210712 07:22:13.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:13.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:13.634" endtime="20210712 07:22:13.635"/>
</kw>
<status status="PASS" starttime="20210712 07:22:05.879" endtime="20210712 07:22:13.635"/>
</kw>
<msg timestamp="20210712 07:22:13.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:05.879" endtime="20210712 07:22:13.635"/>
</kw>
<msg timestamp="20210712 07:22:13.636" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210712 07:22:05.877" endtime="20210712 07:22:13.636"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:22:13.636" endtime="20210712 07:22:13.636"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:22:13.637" endtime="20210712 07:22:13.638"/>
</kw>
<status status="PASS" starttime="20210712 07:21:14.686" endtime="20210712 07:22:13.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 07:21:14.655" endtime="20210712 07:22:13.638"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:13.647" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:13.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:13.653" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:22:13.644" endtime="20210712 07:22:13.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:13.655" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:22:13.654" endtime="20210712 07:22:13.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:13.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:13.655" endtime="20210712 07:22:13.656"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.643" endtime="20210712 07:22:13.656"/>
</kw>
<msg timestamp="20210712 07:22:13.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:13.643" endtime="20210712 07:22:13.657"/>
</kw>
<msg timestamp="20210712 07:22:13.657" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:22:13.642" endtime="20210712 07:22:13.657"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:22:13.661" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:22:13.659" endtime="20210712 07:22:13.662"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:13.668" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:13.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:13.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:22:13.665" endtime="20210712 07:22:13.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:13.850" level="INFO"/>
<status status="PASS" starttime="20210712 07:22:13.850" endtime="20210712 07:22:13.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:13.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:13.851" endtime="20210712 07:22:13.851"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.664" endtime="20210712 07:22:13.852"/>
</kw>
<msg timestamp="20210712 07:22:13.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:13.664" endtime="20210712 07:22:13.852"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.663" endtime="20210712 07:22:13.852"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.662" endtime="20210712 07:22:13.852"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.641" endtime="20210712 07:22:13.853"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.641" endtime="20210712 07:22:13.853"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:13.859" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95230-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:21.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:21.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:22:13.856" endtime="20210712 07:22:21.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:21.213" level="INFO"/>
<status status="PASS" starttime="20210712 07:22:21.212" endtime="20210712 07:22:21.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:21.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:21.213" endtime="20210712 07:22:21.214"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.855" endtime="20210712 07:22:21.214"/>
</kw>
<msg timestamp="20210712 07:22:21.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:13.855" endtime="20210712 07:22:21.214"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.854" endtime="20210712 07:22:21.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:21.219" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95230-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:28.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:28.617" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:22:21.216" endtime="20210712 07:22:28.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:28.619" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:22:28.618" endtime="20210712 07:22:28.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:28.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:28.620" endtime="20210712 07:22:28.621"/>
</kw>
<status status="PASS" starttime="20210712 07:22:21.216" endtime="20210712 07:22:28.621"/>
</kw>
<msg timestamp="20210712 07:22:28.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:21.215" endtime="20210712 07:22:28.622"/>
</kw>
<msg timestamp="20210712 07:22:28.623" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:22:21.215" endtime="20210712 07:22:28.623"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:22:28.624" endtime="20210712 07:22:28.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:28.631" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/95230-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:35.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:35.565" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210712 07:22:28.628" endtime="20210712 07:22:35.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:35.567" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210712 07:22:35.565" endtime="20210712 07:22:35.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:35.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:35.567" endtime="20210712 07:22:35.569"/>
</kw>
<status status="PASS" starttime="20210712 07:22:28.626" endtime="20210712 07:22:35.570"/>
</kw>
<msg timestamp="20210712 07:22:35.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:28.626" endtime="20210712 07:22:35.570"/>
</kw>
<msg timestamp="20210712 07:22:35.571" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210712 07:22:28.625" endtime="20210712 07:22:35.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:35.578" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95230-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:43.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:43.424" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:22:35.575" endtime="20210712 07:22:43.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:43.425" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:22:43.424" endtime="20210712 07:22:43.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:43.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:43.425" endtime="20210712 07:22:43.426"/>
</kw>
<status status="PASS" starttime="20210712 07:22:35.574" endtime="20210712 07:22:43.426"/>
</kw>
<msg timestamp="20210712 07:22:43.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:35.573" endtime="20210712 07:22:43.426"/>
</kw>
<msg timestamp="20210712 07:22:43.427" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:22:35.571" endtime="20210712 07:22:43.427"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:22:43.427" endtime="20210712 07:22:43.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:43.432" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/95230-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:48.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:48.774" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:22:43.430" endtime="20210712 07:22:48.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:48.776" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:22:48.775" endtime="20210712 07:22:48.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:48.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:48.777" endtime="20210712 07:22:48.778"/>
</kw>
<status status="PASS" starttime="20210712 07:22:43.429" endtime="20210712 07:22:48.778"/>
</kw>
<msg timestamp="20210712 07:22:48.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:43.429" endtime="20210712 07:22:48.778"/>
</kw>
<msg timestamp="20210712 07:22:48.779" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:22:43.428" endtime="20210712 07:22:48.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:48.784" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95230-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:22:56.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:22:56.436" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:22:48.782" endtime="20210712 07:22:56.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:22:56.439" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:22:56.438" endtime="20210712 07:22:56.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:22:56.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:22:56.439" endtime="20210712 07:22:56.441"/>
</kw>
<status status="PASS" starttime="20210712 07:22:48.781" endtime="20210712 07:22:56.441"/>
</kw>
<msg timestamp="20210712 07:22:56.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:48.780" endtime="20210712 07:22:56.442"/>
</kw>
<msg timestamp="20210712 07:22:56.443" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:22:48.779" endtime="20210712 07:22:56.443"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:22:56.444" endtime="20210712 07:22:56.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:22:56.453" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/95230-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:23:03.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:23:03.669" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:22:56.449" endtime="20210712 07:23:03.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:23:03.671" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:23:03.670" endtime="20210712 07:23:03.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:23:03.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:23:03.671" endtime="20210712 07:23:03.672"/>
</kw>
<status status="PASS" starttime="20210712 07:22:56.448" endtime="20210712 07:23:03.672"/>
</kw>
<msg timestamp="20210712 07:23:03.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:22:56.447" endtime="20210712 07:23:03.672"/>
</kw>
<msg timestamp="20210712 07:23:03.672" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:22:56.446" endtime="20210712 07:23:03.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:23:03.678" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95230-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:23:10.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:23:10.879" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210712 07:23:03.675" endtime="20210712 07:23:10.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:23:10.882" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:23:10.881" endtime="20210712 07:23:10.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:23:10.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:23:10.882" endtime="20210712 07:23:10.883"/>
</kw>
<status status="PASS" starttime="20210712 07:23:03.674" endtime="20210712 07:23:10.884"/>
</kw>
<msg timestamp="20210712 07:23:10.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:23:03.674" endtime="20210712 07:23:10.884"/>
</kw>
<msg timestamp="20210712 07:23:10.884" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210712 07:23:03.673" endtime="20210712 07:23:10.884"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:23:10.884" endtime="20210712 07:23:10.885"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:23:10.885" endtime="20210712 07:23:10.886"/>
</kw>
<status status="PASS" starttime="20210712 07:22:13.853" endtime="20210712 07:23:10.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 07:22:13.639" endtime="20210712 07:23:10.888"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:23:10.902" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:23:10.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:23:10.908" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:23:10.898" endtime="20210712 07:23:10.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:23:10.911" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:23:10.909" endtime="20210712 07:23:10.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:23:10.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:23:10.912" endtime="20210712 07:23:10.914"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.897" endtime="20210712 07:23:10.914"/>
</kw>
<msg timestamp="20210712 07:23:10.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:23:10.896" endtime="20210712 07:23:10.915"/>
</kw>
<msg timestamp="20210712 07:23:10.915" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:23:10.895" endtime="20210712 07:23:10.915"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:23:10.917" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:23:10.916" endtime="20210712 07:23:10.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:23:10.922" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:23:10.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:23:10.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:23:10.920" endtime="20210712 07:23:10.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:23:10.968" level="INFO"/>
<status status="PASS" starttime="20210712 07:23:10.966" endtime="20210712 07:23:10.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:23:10.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:23:10.968" endtime="20210712 07:23:10.969"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.919" endtime="20210712 07:23:10.969"/>
</kw>
<msg timestamp="20210712 07:23:10.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:23:10.919" endtime="20210712 07:23:10.969"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.918" endtime="20210712 07:23:10.970"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.917" endtime="20210712 07:23:10.970"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.894" endtime="20210712 07:23:10.970"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.893" endtime="20210712 07:23:10.970"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:23:10.976" level="INFO">Running command 'ozone sh key put o3://om:9862/95230-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:26:22.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:26:22.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:23:10.973" endtime="20210712 07:26:22.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:26:22.454" level="INFO"/>
<status status="PASS" starttime="20210712 07:26:22.454" endtime="20210712 07:26:22.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:26:22.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:26:22.455" endtime="20210712 07:26:22.455"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.972" endtime="20210712 07:26:22.456"/>
</kw>
<msg timestamp="20210712 07:26:22.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:23:10.972" endtime="20210712 07:26:22.456"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.971" endtime="20210712 07:26:22.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:26:22.462" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95230-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:26:29.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:26:29.906" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:26:22.459" endtime="20210712 07:26:29.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:26:29.909" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:26:29.908" endtime="20210712 07:26:29.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:26:29.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:26:29.910" endtime="20210712 07:26:29.911"/>
</kw>
<status status="PASS" starttime="20210712 07:26:22.458" endtime="20210712 07:26:29.912"/>
</kw>
<msg timestamp="20210712 07:26:29.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:26:22.458" endtime="20210712 07:26:29.912"/>
</kw>
<msg timestamp="20210712 07:26:29.913" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:26:22.457" endtime="20210712 07:26:29.913"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:26:29.913" endtime="20210712 07:26:29.914"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:26:29.922" level="INFO">Running command 'ozone sh key addacl o3://om:9862/95230-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:26:37.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:26:37.606" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:26:29.918" endtime="20210712 07:26:37.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:26:37.607" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:26:37.606" endtime="20210712 07:26:37.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:26:37.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:26:37.608" endtime="20210712 07:26:37.610"/>
</kw>
<status status="PASS" starttime="20210712 07:26:29.917" endtime="20210712 07:26:37.610"/>
</kw>
<msg timestamp="20210712 07:26:37.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:26:29.916" endtime="20210712 07:26:37.611"/>
</kw>
<msg timestamp="20210712 07:26:37.611" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210712 07:26:29.914" endtime="20210712 07:26:37.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:26:37.618" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95230-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:26:45.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:26:45.389" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:26:37.615" endtime="20210712 07:26:45.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:26:45.392" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:26:45.390" endtime="20210712 07:26:45.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:26:45.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:26:45.392" endtime="20210712 07:26:45.393"/>
</kw>
<status status="PASS" starttime="20210712 07:26:37.614" endtime="20210712 07:26:45.394"/>
</kw>
<msg timestamp="20210712 07:26:45.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:26:37.613" endtime="20210712 07:26:45.395"/>
</kw>
<msg timestamp="20210712 07:26:45.395" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:26:37.611" endtime="20210712 07:26:45.396"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:26:45.396" endtime="20210712 07:26:45.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:26:45.406" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/95230-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:26:53.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:26:53.472" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:26:45.403" endtime="20210712 07:26:53.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:26:53.475" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:26:53.473" endtime="20210712 07:26:53.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:26:53.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:26:53.475" endtime="20210712 07:26:53.477"/>
</kw>
<status status="PASS" starttime="20210712 07:26:45.401" endtime="20210712 07:26:53.478"/>
</kw>
<msg timestamp="20210712 07:26:53.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:26:45.400" endtime="20210712 07:26:53.478"/>
</kw>
<msg timestamp="20210712 07:26:53.479" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210712 07:26:45.399" endtime="20210712 07:26:53.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:26:53.488" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95230-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:02.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:02.354" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:26:53.484" endtime="20210712 07:27:02.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:02.355" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:27:02.355" endtime="20210712 07:27:02.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:02.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:02.356" endtime="20210712 07:27:02.356"/>
</kw>
<status status="PASS" starttime="20210712 07:26:53.482" endtime="20210712 07:27:02.357"/>
</kw>
<msg timestamp="20210712 07:27:02.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:26:53.482" endtime="20210712 07:27:02.357"/>
</kw>
<msg timestamp="20210712 07:27:02.358" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:26:53.480" endtime="20210712 07:27:02.358"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:02.359" endtime="20210712 07:27:02.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:02.367" level="INFO">Running command 'ozone sh key setacl o3://om:9862/95230-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:09.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:09.110" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:27:02.363" endtime="20210712 07:27:09.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:09.111" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:27:09.110" endtime="20210712 07:27:09.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:09.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:09.111" endtime="20210712 07:27:09.112"/>
</kw>
<status status="PASS" starttime="20210712 07:27:02.362" endtime="20210712 07:27:09.112"/>
</kw>
<msg timestamp="20210712 07:27:09.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:02.361" endtime="20210712 07:27:09.113"/>
</kw>
<msg timestamp="20210712 07:27:09.113" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:27:02.360" endtime="20210712 07:27:09.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:09.117" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95230-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:15.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:15.607" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210712 07:27:09.115" endtime="20210712 07:27:15.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:15.610" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:27:15.608" endtime="20210712 07:27:15.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:15.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:15.611" endtime="20210712 07:27:15.612"/>
</kw>
<status status="PASS" starttime="20210712 07:27:09.114" endtime="20210712 07:27:15.613"/>
</kw>
<msg timestamp="20210712 07:27:15.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:09.114" endtime="20210712 07:27:15.613"/>
</kw>
<msg timestamp="20210712 07:27:15.614" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210712 07:27:09.113" endtime="20210712 07:27:15.614"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:15.614" endtime="20210712 07:27:15.615"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:15.616" endtime="20210712 07:27:15.617"/>
</kw>
<status status="PASS" starttime="20210712 07:23:10.970" endtime="20210712 07:27:15.617"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 07:23:10.891" endtime="20210712 07:27:15.618"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:15.629" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:15.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:15.634" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:27:15.627" endtime="20210712 07:27:15.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:15.635" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:27:15.634" endtime="20210712 07:27:15.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:15.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:15.635" endtime="20210712 07:27:15.636"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.626" endtime="20210712 07:27:15.637"/>
</kw>
<msg timestamp="20210712 07:27:15.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:15.625" endtime="20210712 07:27:15.637"/>
</kw>
<msg timestamp="20210712 07:27:15.637" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:27:15.624" endtime="20210712 07:27:15.637"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:27:15.638" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:27:15.638" endtime="20210712 07:27:15.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:15.647" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:15.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:15.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:27:15.643" endtime="20210712 07:27:15.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:15.763" level="INFO"/>
<status status="PASS" starttime="20210712 07:27:15.762" endtime="20210712 07:27:15.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:15.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:15.763" endtime="20210712 07:27:15.764"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.643" endtime="20210712 07:27:15.764"/>
</kw>
<msg timestamp="20210712 07:27:15.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:15.642" endtime="20210712 07:27:15.765"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.641" endtime="20210712 07:27:15.765"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.639" endtime="20210712 07:27:15.765"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.624" endtime="20210712 07:27:15.765"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.623" endtime="20210712 07:27:15.765"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:15.774" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:22.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:22.962" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210712 07:27:15.769" endtime="20210712 07:27:22.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:22.965" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210712 07:27:22.964" endtime="20210712 07:27:22.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:22.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:22.965" endtime="20210712 07:27:22.967"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.768" endtime="20210712 07:27:22.967"/>
</kw>
<msg timestamp="20210712 07:27:22.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:15.768" endtime="20210712 07:27:22.968"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.767" endtime="20210712 07:27:22.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:22.974" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:30.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:30.664" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210712 07:27:22.971" endtime="20210712 07:27:30.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:30.667" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:27:30.665" endtime="20210712 07:27:30.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:30.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:30.668" endtime="20210712 07:27:30.670"/>
</kw>
<status status="PASS" starttime="20210712 07:27:22.970" endtime="20210712 07:27:30.670"/>
</kw>
<msg timestamp="20210712 07:27:30.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:22.970" endtime="20210712 07:27:30.674"/>
</kw>
<msg timestamp="20210712 07:27:30.674" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210712 07:27:22.968" endtime="20210712 07:27:30.674"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:30.674" endtime="20210712 07:27:30.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:30.680" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:35.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:35.983" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210712 07:27:30.677" endtime="20210712 07:27:35.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:35.987" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210712 07:27:35.985" endtime="20210712 07:27:35.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:35.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:35.988" endtime="20210712 07:27:35.989"/>
</kw>
<status status="PASS" starttime="20210712 07:27:30.677" endtime="20210712 07:27:35.990"/>
</kw>
<msg timestamp="20210712 07:27:35.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:30.676" endtime="20210712 07:27:35.991"/>
</kw>
<msg timestamp="20210712 07:27:35.991" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210712 07:27:30.676" endtime="20210712 07:27:35.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:35.998" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:42.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:42.069" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210712 07:27:35.995" endtime="20210712 07:27:42.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:42.071" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:27:42.070" endtime="20210712 07:27:42.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:42.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:42.071" endtime="20210712 07:27:42.072"/>
</kw>
<status status="PASS" starttime="20210712 07:27:35.994" endtime="20210712 07:27:42.072"/>
</kw>
<msg timestamp="20210712 07:27:42.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:35.993" endtime="20210712 07:27:42.072"/>
</kw>
<msg timestamp="20210712 07:27:42.073" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210712 07:27:35.992" endtime="20210712 07:27:42.073"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:42.073" endtime="20210712 07:27:42.074"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:42.081" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:47.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:47.749" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:27:42.076" endtime="20210712 07:27:47.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:47.751" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:27:47.750" endtime="20210712 07:27:47.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:47.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:47.752" endtime="20210712 07:27:47.752"/>
</kw>
<status status="PASS" starttime="20210712 07:27:42.076" endtime="20210712 07:27:47.753"/>
</kw>
<msg timestamp="20210712 07:27:47.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:42.075" endtime="20210712 07:27:47.753"/>
</kw>
<msg timestamp="20210712 07:27:47.753" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210712 07:27:42.074" endtime="20210712 07:27:47.753"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:47.757" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:27:54.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:27:54.148" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210712 07:27:47.755" endtime="20210712 07:27:54.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:27:54.149" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:27:54.148" endtime="20210712 07:27:54.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:27:54.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:27:54.150" endtime="20210712 07:27:54.150"/>
</kw>
<status status="PASS" starttime="20210712 07:27:47.755" endtime="20210712 07:27:54.151"/>
</kw>
<msg timestamp="20210712 07:27:54.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:47.754" endtime="20210712 07:27:54.151"/>
</kw>
<msg timestamp="20210712 07:27:54.151" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210712 07:27:47.754" endtime="20210712 07:27:54.152"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:54.152" endtime="20210712 07:27:54.152"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:27:54.152" endtime="20210712 07:27:54.153"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:27:54.157" level="INFO">Running command 'ozone sh key put o3://om:9862/95230-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:03.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:03.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:27:54.155" endtime="20210712 07:31:03.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:03.675" level="INFO"/>
<status status="PASS" starttime="20210712 07:31:03.674" endtime="20210712 07:31:03.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:03.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:03.676" endtime="20210712 07:31:03.676"/>
</kw>
<status status="PASS" starttime="20210712 07:27:54.154" endtime="20210712 07:31:03.677"/>
</kw>
<msg timestamp="20210712 07:31:03.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:27:54.154" endtime="20210712 07:31:03.677"/>
</kw>
<status status="PASS" starttime="20210712 07:27:54.153" endtime="20210712 07:31:03.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:03.685" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95230-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:10.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:10.965" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:31:03.681" endtime="20210712 07:31:10.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:10.967" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210712 07:31:10.966" endtime="20210712 07:31:10.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:10.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:10.967" endtime="20210712 07:31:10.968"/>
</kw>
<status status="PASS" starttime="20210712 07:31:03.680" endtime="20210712 07:31:10.968"/>
</kw>
<msg timestamp="20210712 07:31:10.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:03.679" endtime="20210712 07:31:10.968"/>
</kw>
<msg timestamp="20210712 07:31:10.969" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210712 07:31:03.678" endtime="20210712 07:31:10.969"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:31:10.969" endtime="20210712 07:31:10.970"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210712 07:31:10.970" endtime="20210712 07:31:10.970"/>
</kw>
<status status="PASS" starttime="20210712 07:27:15.766" endtime="20210712 07:31:10.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210712 07:27:15.622" endtime="20210712 07:31:10.971"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:10.980" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:10.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:10.984" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:31:10.978" endtime="20210712 07:31:10.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:10.985" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:31:10.985" endtime="20210712 07:31:10.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:10.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:10.986" endtime="20210712 07:31:10.986"/>
</kw>
<status status="PASS" starttime="20210712 07:31:10.977" endtime="20210712 07:31:10.987"/>
</kw>
<msg timestamp="20210712 07:31:10.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:10.975" endtime="20210712 07:31:10.987"/>
</kw>
<msg timestamp="20210712 07:31:10.987" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:31:10.974" endtime="20210712 07:31:10.987"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:31:10.988" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:31:10.988" endtime="20210712 07:31:10.988"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:10.993" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:11.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:11.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:31:10.990" endtime="20210712 07:31:11.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:11.115" level="INFO"/>
<status status="PASS" starttime="20210712 07:31:11.114" endtime="20210712 07:31:11.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:11.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:11.115" endtime="20210712 07:31:11.116"/>
</kw>
<status status="PASS" starttime="20210712 07:31:10.990" endtime="20210712 07:31:11.116"/>
</kw>
<msg timestamp="20210712 07:31:11.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:10.990" endtime="20210712 07:31:11.117"/>
</kw>
<status status="PASS" starttime="20210712 07:31:10.989" endtime="20210712 07:31:11.117"/>
</kw>
<status status="PASS" starttime="20210712 07:31:10.988" endtime="20210712 07:31:11.117"/>
</kw>
<status status="PASS" starttime="20210712 07:31:10.974" endtime="20210712 07:31:11.117"/>
</kw>
<status status="PASS" starttime="20210712 07:31:10.973" endtime="20210712 07:31:11.117"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:11.122" level="INFO">Running command 'ozone sh volume info o3:///95230-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:17.112" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:31:17.112" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95230-rpcwport is not found</msg>
<status status="PASS" starttime="20210712 07:31:11.120" endtime="20210712 07:31:17.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:17.114" level="INFO">VOLUME_NOT_FOUND Volume 95230-rpcwport is not found</msg>
<status status="PASS" starttime="20210712 07:31:17.113" endtime="20210712 07:31:17.114"/>
</kw>
<msg timestamp="20210712 07:31:17.114" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95230-rpcwport is not found</msg>
<status status="PASS" starttime="20210712 07:31:11.119" endtime="20210712 07:31:17.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:31:17.115" endtime="20210712 07:31:17.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:17.122" level="INFO">Running command 'ozone sh volume create o3:///95230-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:24.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:24.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:31:17.118" endtime="20210712 07:31:24.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:24.114" level="INFO"/>
<status status="PASS" starttime="20210712 07:31:24.113" endtime="20210712 07:31:24.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:24.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:24.115" endtime="20210712 07:31:24.116"/>
</kw>
<status status="PASS" starttime="20210712 07:31:17.117" endtime="20210712 07:31:24.116"/>
</kw>
<msg timestamp="20210712 07:31:24.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:17.117" endtime="20210712 07:31:24.116"/>
</kw>
<msg timestamp="20210712 07:31:24.117" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 07:31:17.115" endtime="20210712 07:31:24.117"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:31:24.117" endtime="20210712 07:31:24.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:24.123" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="95230-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:31.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:31.853" level="INFO">${output} = {
  "metadata": {},
  "name": "95230-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:31:24.120" endtime="20210712 07:31:31.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:31.855" level="INFO">{
  "metadata": {},
  "name": "95230-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:31:23.994Z",
  "modificationTime": "2021-07-12T07:31:23.994Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:31:31.854" endtime="20210712 07:31:31.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:31.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:31.856" endtime="20210712 07:31:31.857"/>
</kw>
<status status="PASS" starttime="20210712 07:31:24.119" endtime="20210712 07:31:31.858"/>
</kw>
<msg timestamp="20210712 07:31:31.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:24.119" endtime="20210712 07:31:31.858"/>
</kw>
<msg timestamp="20210712 07:31:31.858" level="INFO">${result} = {
  "metadata": {},
  "name": "95230-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:31:24.117" endtime="20210712 07:31:31.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:31:31.859" endtime="20210712 07:31:31.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:31.864" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="95230-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:39.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:39.491" level="INFO">${output} = {
  "metadata": {},
  "name": "95230-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:31:31.861" endtime="20210712 07:31:39.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:39.492" level="INFO">{
  "metadata": {},
  "name": "95230-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:31:23.994Z",
  "modificationTime": "2021-07-12T07:31:23.994Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:31:39.492" endtime="20210712 07:31:39.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:39.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:39.493" endtime="20210712 07:31:39.494"/>
</kw>
<status status="PASS" starttime="20210712 07:31:31.861" endtime="20210712 07:31:39.495"/>
</kw>
<msg timestamp="20210712 07:31:39.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:31.860" endtime="20210712 07:31:39.495"/>
</kw>
<msg timestamp="20210712 07:31:39.495" level="INFO">${result} = {
  "metadata": {},
  "name": "95230-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210712 07:31:31.859" endtime="20210712 07:31:39.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:31:39.496" endtime="20210712 07:31:39.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:39.504" level="INFO">Running command 'ozone sh volume setquota o3:///95230-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:48.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:48.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:31:39.501" endtime="20210712 07:31:48.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:48.448" level="INFO"/>
<status status="PASS" starttime="20210712 07:31:48.447" endtime="20210712 07:31:48.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:48.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:48.449" endtime="20210712 07:31:48.449"/>
</kw>
<status status="PASS" starttime="20210712 07:31:39.500" endtime="20210712 07:31:48.450"/>
</kw>
<msg timestamp="20210712 07:31:48.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:39.499" endtime="20210712 07:31:48.450"/>
</kw>
<status status="PASS" starttime="20210712 07:31:39.497" endtime="20210712 07:31:48.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:48.477" level="INFO">Running command 'ozone sh volume info o3:///95230-rpcwport | jq -r '. | select(.name=="95230-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:31:56.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:31:56.229" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:31:48.453" endtime="20210712 07:31:56.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:31:56.230" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:31:56.230" endtime="20210712 07:31:56.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:31:56.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:31:56.231" endtime="20210712 07:31:56.231"/>
</kw>
<status status="PASS" starttime="20210712 07:31:48.453" endtime="20210712 07:31:56.232"/>
</kw>
<msg timestamp="20210712 07:31:56.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:48.452" endtime="20210712 07:31:56.232"/>
</kw>
<msg timestamp="20210712 07:31:56.232" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:31:48.451" endtime="20210712 07:31:56.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:31:56.232" endtime="20210712 07:31:56.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:31:56.240" level="INFO">Running command 'ozone sh bucket create o3:///95230-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:03.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:03.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:31:56.237" endtime="20210712 07:32:03.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:03.791" level="INFO"/>
<status status="PASS" starttime="20210712 07:32:03.788" endtime="20210712 07:32:03.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:03.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:03.792" endtime="20210712 07:32:03.794"/>
</kw>
<status status="PASS" starttime="20210712 07:31:56.235" endtime="20210712 07:32:03.795"/>
</kw>
<msg timestamp="20210712 07:32:03.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:31:56.234" endtime="20210712 07:32:03.795"/>
</kw>
<status status="PASS" starttime="20210712 07:31:56.233" endtime="20210712 07:32:03.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:03.801" level="INFO">Running command 'ozone sh bucket info o3:///95230-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:11.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:11.623" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210712 07:32:03.798" endtime="20210712 07:32:11.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:11.624" level="INFO">DISK</msg>
<status status="PASS" starttime="20210712 07:32:11.623" endtime="20210712 07:32:11.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:11.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:11.624" endtime="20210712 07:32:11.625"/>
</kw>
<status status="PASS" starttime="20210712 07:32:03.797" endtime="20210712 07:32:11.625"/>
</kw>
<msg timestamp="20210712 07:32:11.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:03.796" endtime="20210712 07:32:11.626"/>
</kw>
<msg timestamp="20210712 07:32:11.626" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210712 07:32:03.795" endtime="20210712 07:32:11.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:32:11.626" endtime="20210712 07:32:11.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:11.631" level="INFO">Running command 'ozone sh bucket info o3:///95230-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:18.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:18.301" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:32:11.629" endtime="20210712 07:32:18.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:18.303" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:32:18.302" endtime="20210712 07:32:18.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:18.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:18.303" endtime="20210712 07:32:18.304"/>
</kw>
<status status="PASS" starttime="20210712 07:32:11.628" endtime="20210712 07:32:18.304"/>
</kw>
<msg timestamp="20210712 07:32:18.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:11.628" endtime="20210712 07:32:18.304"/>
</kw>
<msg timestamp="20210712 07:32:18.305" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:32:11.627" endtime="20210712 07:32:18.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:32:18.305" endtime="20210712 07:32:18.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:18.312" level="INFO">Running command 'ozone sh bucket info o3:///95230-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:25.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:25.950" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210712 07:32:18.308" endtime="20210712 07:32:25.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:25.952" level="INFO">100</msg>
<status status="PASS" starttime="20210712 07:32:25.951" endtime="20210712 07:32:25.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:25.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:25.953" endtime="20210712 07:32:25.954"/>
</kw>
<status status="PASS" starttime="20210712 07:32:18.307" endtime="20210712 07:32:25.955"/>
</kw>
<msg timestamp="20210712 07:32:25.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:18.307" endtime="20210712 07:32:25.955"/>
</kw>
<msg timestamp="20210712 07:32:25.956" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210712 07:32:18.305" endtime="20210712 07:32:25.956"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:32:25.956" endtime="20210712 07:32:25.957"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:25.963" level="INFO">Running command 'ozone sh bucket setquota o3:///95230-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:33.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:33.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:32:25.960" endtime="20210712 07:32:33.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:33.166" level="INFO"/>
<status status="PASS" starttime="20210712 07:32:33.165" endtime="20210712 07:32:33.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:33.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:33.166" endtime="20210712 07:32:33.167"/>
</kw>
<status status="PASS" starttime="20210712 07:32:25.960" endtime="20210712 07:32:33.167"/>
</kw>
<msg timestamp="20210712 07:32:33.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:25.959" endtime="20210712 07:32:33.167"/>
</kw>
<status status="PASS" starttime="20210712 07:32:25.958" endtime="20210712 07:32:33.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:33.176" level="INFO">Running command 'ozone sh bucket info o3:///95230-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:39.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:39.245" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:32:33.173" endtime="20210712 07:32:39.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:39.247" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210712 07:32:39.246" endtime="20210712 07:32:39.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:39.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:39.247" endtime="20210712 07:32:39.247"/>
</kw>
<status status="PASS" starttime="20210712 07:32:33.170" endtime="20210712 07:32:39.248"/>
</kw>
<msg timestamp="20210712 07:32:39.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:33.169" endtime="20210712 07:32:39.248"/>
</kw>
<msg timestamp="20210712 07:32:39.248" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:32:33.168" endtime="20210712 07:32:39.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:32:39.249" endtime="20210712 07:32:39.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:39.254" level="INFO">Running command 'ozone sh bucket info o3:///95230-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:47.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:47.077" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210712 07:32:39.251" endtime="20210712 07:32:47.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:47.079" level="INFO">1000</msg>
<status status="PASS" starttime="20210712 07:32:47.078" endtime="20210712 07:32:47.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:47.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:47.079" endtime="20210712 07:32:47.079"/>
</kw>
<status status="PASS" starttime="20210712 07:32:39.251" endtime="20210712 07:32:47.080"/>
</kw>
<msg timestamp="20210712 07:32:47.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:39.250" endtime="20210712 07:32:47.080"/>
</kw>
<msg timestamp="20210712 07:32:47.080" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210712 07:32:39.249" endtime="20210712 07:32:47.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:32:47.081" endtime="20210712 07:32:47.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:47.087" level="INFO">Running command 'ozone sh bucket list o3:///95230-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:32:55.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:32:55.267" level="INFO">${output} = 95230-rpcwport</msg>
<status status="PASS" starttime="20210712 07:32:47.083" endtime="20210712 07:32:55.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:32:55.268" level="INFO">95230-rpcwport</msg>
<status status="PASS" starttime="20210712 07:32:55.267" endtime="20210712 07:32:55.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:32:55.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:32:55.268" endtime="20210712 07:32:55.269"/>
</kw>
<status status="PASS" starttime="20210712 07:32:47.083" endtime="20210712 07:32:55.271"/>
</kw>
<msg timestamp="20210712 07:32:55.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:47.082" endtime="20210712 07:32:55.271"/>
</kw>
<msg timestamp="20210712 07:32:55.271" level="INFO">${result} = 95230-rpcwport</msg>
<status status="PASS" starttime="20210712 07:32:47.081" endtime="20210712 07:32:55.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:32:55.272" endtime="20210712 07:32:55.272"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:32:55.279" level="INFO">Running command 'ozone sh key put o3:///95230-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:07.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:07.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:32:55.276" endtime="20210712 07:36:07.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:07.621" level="INFO"/>
<status status="PASS" starttime="20210712 07:36:07.620" endtime="20210712 07:36:07.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:07.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:07.622" endtime="20210712 07:36:07.622"/>
</kw>
<status status="PASS" starttime="20210712 07:32:55.275" endtime="20210712 07:36:07.623"/>
</kw>
<msg timestamp="20210712 07:36:07.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:32:55.274" endtime="20210712 07:36:07.623"/>
</kw>
<status status="PASS" starttime="20210712 07:32:55.274" endtime="20210712 07:36:07.623"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:07.630" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:07.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:07.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:36:07.628" endtime="20210712 07:36:07.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:07.634" level="INFO"/>
<status status="PASS" starttime="20210712 07:36:07.633" endtime="20210712 07:36:07.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:07.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:07.634" endtime="20210712 07:36:07.635"/>
</kw>
<status status="PASS" starttime="20210712 07:36:07.624" endtime="20210712 07:36:07.635"/>
</kw>
<msg timestamp="20210712 07:36:07.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:07.624" endtime="20210712 07:36:07.635"/>
</kw>
<status status="PASS" starttime="20210712 07:36:07.623" endtime="20210712 07:36:07.636"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:07.640" level="INFO">Running command 'ozone sh key get o3:///95230-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:10.972" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:36:07.638" endtime="20210712 07:36:10.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.973" endtime="20210712 07:36:10.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.974" endtime="20210712 07:36:10.974"/>
</kw>
<status status="FAIL" starttime="20210712 07:36:07.637" endtime="20210712 07:36:10.974"/>
</kw>
<msg timestamp="20210712 07:36:10.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:36:07.637" endtime="20210712 07:36:10.974"/>
</kw>
<status status="FAIL" starttime="20210712 07:36:07.636" endtime="20210712 07:36:10.975"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.975" endtime="20210712 07:36:10.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.975" endtime="20210712 07:36:10.975"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.975" endtime="20210712 07:36:10.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.976" endtime="20210712 07:36:10.976"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.976" endtime="20210712 07:36:10.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.976" endtime="20210712 07:36:10.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.976" endtime="20210712 07:36:10.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.977" endtime="20210712 07:36:10.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.977" endtime="20210712 07:36:10.977"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.977" endtime="20210712 07:36:10.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.978" endtime="20210712 07:36:10.978"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.978" endtime="20210712 07:36:10.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.978" endtime="20210712 07:36:10.978"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.978" endtime="20210712 07:36:10.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.978" endtime="20210712 07:36:10.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.979" endtime="20210712 07:36:10.979"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.979" endtime="20210712 07:36:10.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.979" endtime="20210712 07:36:10.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.979" endtime="20210712 07:36:10.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.980" endtime="20210712 07:36:10.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.980" endtime="20210712 07:36:10.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.980" endtime="20210712 07:36:10.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.983" endtime="20210712 07:36:10.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.984" endtime="20210712 07:36:10.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.984" endtime="20210712 07:36:10.984"/>
</kw>
<status status="FAIL" starttime="20210712 07:32:55.273" endtime="20210712 07:36:10.985"/>
</kw>
<status status="FAIL" starttime="20210712 07:32:55.272" endtime="20210712 07:36:10.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.986" endtime="20210712 07:36:10.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.987" endtime="20210712 07:36:10.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.988" endtime="20210712 07:36:10.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.988" endtime="20210712 07:36:10.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.989" endtime="20210712 07:36:10.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.989" endtime="20210712 07:36:10.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.989" endtime="20210712 07:36:10.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.990" endtime="20210712 07:36:10.990"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.991" endtime="20210712 07:36:10.991"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.992" endtime="20210712 07:36:10.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.992" endtime="20210712 07:36:10.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.993" endtime="20210712 07:36:10.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.993" endtime="20210712 07:36:10.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.993" endtime="20210712 07:36:10.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.995" endtime="20210712 07:36:10.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.995" endtime="20210712 07:36:10.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.995" endtime="20210712 07:36:10.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.996" endtime="20210712 07:36:10.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.997" endtime="20210712 07:36:10.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.998" endtime="20210712 07:36:10.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:36:10.999" endtime="20210712 07:36:10.999"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:10.999" endtime="20210712 07:36:11.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:36:11.000" endtime="20210712 07:36:11.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:36:11.000" endtime="20210712 07:36:11.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:36:11.001" endtime="20210712 07:36:11.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:36:11.001" endtime="20210712 07:36:11.002"/>
</kw>
<status status="FAIL" starttime="20210712 07:31:11.117" endtime="20210712 07:36:11.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210712 07:31:10.972" endtime="20210712 07:36:11.003">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:11.025" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:11.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:11.045" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 07:36:11.015" endtime="20210712 07:36:11.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:11.047" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 07:36:11.046" endtime="20210712 07:36:11.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:11.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:11.047" endtime="20210712 07:36:11.048"/>
</kw>
<status status="PASS" starttime="20210712 07:36:11.014" endtime="20210712 07:36:11.048"/>
</kw>
<msg timestamp="20210712 07:36:11.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:11.013" endtime="20210712 07:36:11.048"/>
</kw>
<msg timestamp="20210712 07:36:11.049" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 07:36:11.012" endtime="20210712 07:36:11.049"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 07:36:11.050" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 07:36:11.049" endtime="20210712 07:36:11.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:11.061" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:11.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:11.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:36:11.052" endtime="20210712 07:36:11.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:11.184" level="INFO"/>
<status status="PASS" starttime="20210712 07:36:11.183" endtime="20210712 07:36:11.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:11.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:11.184" endtime="20210712 07:36:11.185"/>
</kw>
<status status="PASS" starttime="20210712 07:36:11.051" endtime="20210712 07:36:11.185"/>
</kw>
<msg timestamp="20210712 07:36:11.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:11.051" endtime="20210712 07:36:11.186"/>
</kw>
<status status="PASS" starttime="20210712 07:36:11.050" endtime="20210712 07:36:11.186"/>
</kw>
<status status="PASS" starttime="20210712 07:36:11.050" endtime="20210712 07:36:11.186"/>
</kw>
<status status="PASS" starttime="20210712 07:36:11.009" endtime="20210712 07:36:11.186"/>
</kw>
<status status="PASS" starttime="20210712 07:36:11.008" endtime="20210712 07:36:11.186"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:11.205" level="INFO">Running command 'ozone sh volume info /95230-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:23.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20210712 07:36:23.539" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95230-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210712 07:36:11.194" endtime="20210712 07:36:23.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:23.540" level="INFO">VOLUME_NOT_FOUND Volume 95230-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210712 07:36:23.539" endtime="20210712 07:36:23.540"/>
</kw>
<msg timestamp="20210712 07:36:23.541" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95230-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210712 07:36:11.192" endtime="20210712 07:36:23.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:36:23.541" endtime="20210712 07:36:23.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:23.547" level="INFO">Running command 'ozone sh volume create /95230-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:31.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:31.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:36:23.544" endtime="20210712 07:36:31.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:31.123" level="INFO"/>
<status status="PASS" starttime="20210712 07:36:31.122" endtime="20210712 07:36:31.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:31.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:31.123" endtime="20210712 07:36:31.124"/>
</kw>
<status status="PASS" starttime="20210712 07:36:23.543" endtime="20210712 07:36:31.125"/>
</kw>
<msg timestamp="20210712 07:36:31.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:23.543" endtime="20210712 07:36:31.126"/>
</kw>
<msg timestamp="20210712 07:36:31.126" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210712 07:36:23.542" endtime="20210712 07:36:31.126"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:36:31.127" endtime="20210712 07:36:31.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:31.133" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="95230-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:39.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:39.365" level="INFO">${output} = {
  "metadata": {},
  "name": "95230-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210712 07:36:31.130" endtime="20210712 07:36:39.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:39.367" level="INFO">{
  "metadata": {},
  "name": "95230-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:36:30.736Z",
  "modificationTime": "2021-07-12T07:36:30.736Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:36:39.366" endtime="20210712 07:36:39.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:39.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:39.367" endtime="20210712 07:36:39.368"/>
</kw>
<status status="PASS" starttime="20210712 07:36:31.129" endtime="20210712 07:36:39.368"/>
</kw>
<msg timestamp="20210712 07:36:39.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:31.129" endtime="20210712 07:36:39.368"/>
</kw>
<msg timestamp="20210712 07:36:39.369" level="INFO">${result} = {
  "metadata": {},
  "name": "95230-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210712 07:36:31.128" endtime="20210712 07:36:39.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:36:39.369" endtime="20210712 07:36:39.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:39.378" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="95230-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:47.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:47.705" level="INFO">${output} = {
  "metadata": {},
  "name": "95230-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210712 07:36:39.375" endtime="20210712 07:36:47.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:47.707" level="INFO">{
  "metadata": {},
  "name": "95230-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-12T07:36:30.736Z",
  "modificationTime": "2021-07-12T07:36:30.736Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210712 07:36:47.706" endtime="20210712 07:36:47.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:47.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:47.708" endtime="20210712 07:36:47.709"/>
</kw>
<status status="PASS" starttime="20210712 07:36:39.374" endtime="20210712 07:36:47.710"/>
</kw>
<msg timestamp="20210712 07:36:47.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:39.373" endtime="20210712 07:36:47.711"/>
</kw>
<msg timestamp="20210712 07:36:47.711" level="INFO">${result} = {
  "metadata": {},
  "name": "95230-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210712 07:36:39.371" endtime="20210712 07:36:47.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210712 07:36:47.712" endtime="20210712 07:36:47.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:47.720" level="INFO">Running command 'ozone sh volume setquota /95230-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:36:54.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:36:54.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:36:47.717" endtime="20210712 07:36:54.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:36:54.699" level="INFO"/>
<status status="PASS" starttime="20210712 07:36:54.697" endtime="20210712 07:36:54.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:36:54.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:36:54.699" endtime="20210712 07:36:54.701"/>
</kw>
<status status="PASS" starttime="20210712 07:36:47.715" endtime="20210712 07:36:54.702"/>
</kw>
<msg timestamp="20210712 07:36:54.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:47.714" endtime="20210712 07:36:54.703"/>
</kw>
<status status="PASS" starttime="20210712 07:36:47.713" endtime="20210712 07:36:54.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:36:54.710" level="INFO">Running command 'ozone sh volume info /95230-rpcwoscheme | jq -r '. | select(.name=="95230-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:02.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:02.910" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:36:54.707" endtime="20210712 07:37:02.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:02.912" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:37:02.911" endtime="20210712 07:37:02.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:02.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:02.912" endtime="20210712 07:37:02.914"/>
</kw>
<status status="PASS" starttime="20210712 07:36:54.706" endtime="20210712 07:37:02.915"/>
</kw>
<msg timestamp="20210712 07:37:02.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:36:54.705" endtime="20210712 07:37:02.915"/>
</kw>
<msg timestamp="20210712 07:37:02.915" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:36:54.704" endtime="20210712 07:37:02.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:37:02.916" endtime="20210712 07:37:02.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:02.922" level="INFO">Running command 'ozone sh bucket create /95230-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:09.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:09.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:37:02.919" endtime="20210712 07:37:09.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:09.740" level="INFO"/>
<status status="PASS" starttime="20210712 07:37:09.738" endtime="20210712 07:37:09.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:09.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:09.740" endtime="20210712 07:37:09.741"/>
</kw>
<status status="PASS" starttime="20210712 07:37:02.919" endtime="20210712 07:37:09.742"/>
</kw>
<msg timestamp="20210712 07:37:09.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:02.918" endtime="20210712 07:37:09.742"/>
</kw>
<status status="PASS" starttime="20210712 07:37:02.917" endtime="20210712 07:37:09.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:09.749" level="INFO">Running command 'ozone sh bucket info /95230-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:17.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:17.884" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210712 07:37:09.746" endtime="20210712 07:37:17.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:17.886" level="INFO">DISK</msg>
<status status="PASS" starttime="20210712 07:37:17.885" endtime="20210712 07:37:17.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:17.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:17.886" endtime="20210712 07:37:17.887"/>
</kw>
<status status="PASS" starttime="20210712 07:37:09.745" endtime="20210712 07:37:17.888"/>
</kw>
<msg timestamp="20210712 07:37:17.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:09.744" endtime="20210712 07:37:17.888"/>
</kw>
<msg timestamp="20210712 07:37:17.888" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210712 07:37:09.742" endtime="20210712 07:37:17.888"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:37:17.889" endtime="20210712 07:37:17.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:17.895" level="INFO">Running command 'ozone sh bucket info /95230-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:25.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:25.395" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:37:17.893" endtime="20210712 07:37:25.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:25.397" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210712 07:37:25.396" endtime="20210712 07:37:25.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:25.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:25.397" endtime="20210712 07:37:25.398"/>
</kw>
<status status="PASS" starttime="20210712 07:37:17.892" endtime="20210712 07:37:25.398"/>
</kw>
<msg timestamp="20210712 07:37:25.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:17.892" endtime="20210712 07:37:25.399"/>
</kw>
<msg timestamp="20210712 07:37:25.399" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210712 07:37:17.890" endtime="20210712 07:37:25.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:37:25.399" endtime="20210712 07:37:25.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:25.404" level="INFO">Running command 'ozone sh bucket info /95230-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:30.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:30.278" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210712 07:37:25.402" endtime="20210712 07:37:30.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:30.280" level="INFO">100</msg>
<status status="PASS" starttime="20210712 07:37:30.279" endtime="20210712 07:37:30.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:30.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:30.280" endtime="20210712 07:37:30.280"/>
</kw>
<status status="PASS" starttime="20210712 07:37:25.401" endtime="20210712 07:37:30.281"/>
</kw>
<msg timestamp="20210712 07:37:30.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:25.401" endtime="20210712 07:37:30.281"/>
</kw>
<msg timestamp="20210712 07:37:30.281" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210712 07:37:25.400" endtime="20210712 07:37:30.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:37:30.282" endtime="20210712 07:37:30.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:30.286" level="INFO">Running command 'ozone sh bucket setquota /95230-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:36.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:36.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 07:37:30.284" endtime="20210712 07:37:36.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:36.963" level="INFO"/>
<status status="PASS" starttime="20210712 07:37:36.961" endtime="20210712 07:37:36.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:36.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:36.964" endtime="20210712 07:37:36.965"/>
</kw>
<status status="PASS" starttime="20210712 07:37:30.284" endtime="20210712 07:37:36.966"/>
</kw>
<msg timestamp="20210712 07:37:36.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:30.283" endtime="20210712 07:37:36.967"/>
</kw>
<status status="PASS" starttime="20210712 07:37:30.282" endtime="20210712 07:37:36.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:36.975" level="INFO">Running command 'ozone sh bucket info /95230-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:45.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:45.136" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:37:36.972" endtime="20210712 07:37:45.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:45.138" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210712 07:37:45.137" endtime="20210712 07:37:45.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:45.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:45.139" endtime="20210712 07:37:45.140"/>
</kw>
<status status="PASS" starttime="20210712 07:37:36.971" endtime="20210712 07:37:45.140"/>
</kw>
<msg timestamp="20210712 07:37:45.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:36.970" endtime="20210712 07:37:45.140"/>
</kw>
<msg timestamp="20210712 07:37:45.141" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210712 07:37:36.968" endtime="20210712 07:37:45.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:37:45.141" endtime="20210712 07:37:45.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:45.147" level="INFO">Running command 'ozone sh bucket info /95230-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:37:52.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:37:52.887" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210712 07:37:45.144" endtime="20210712 07:37:52.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:37:52.888" level="INFO">1000</msg>
<status status="PASS" starttime="20210712 07:37:52.888" endtime="20210712 07:37:52.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:37:52.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:37:52.889" endtime="20210712 07:37:52.889"/>
</kw>
<status status="PASS" starttime="20210712 07:37:45.143" endtime="20210712 07:37:52.890"/>
</kw>
<msg timestamp="20210712 07:37:52.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:45.143" endtime="20210712 07:37:52.890"/>
</kw>
<msg timestamp="20210712 07:37:52.890" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210712 07:37:45.142" endtime="20210712 07:37:52.890"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:37:52.891" endtime="20210712 07:37:52.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:37:52.896" level="INFO">Running command 'ozone sh bucket list /95230-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:38:01.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 07:38:01.164" level="INFO">${output} = 95230-rpcwoscheme</msg>
<status status="PASS" starttime="20210712 07:37:52.894" endtime="20210712 07:38:01.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 07:38:01.167" level="INFO">95230-rpcwoscheme</msg>
<status status="PASS" starttime="20210712 07:38:01.166" endtime="20210712 07:38:01.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 07:38:01.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 07:38:01.168" endtime="20210712 07:38:01.169"/>
</kw>
<status status="PASS" starttime="20210712 07:37:52.893" endtime="20210712 07:38:01.170"/>
</kw>
<msg timestamp="20210712 07:38:01.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 07:37:52.893" endtime="20210712 07:38:01.170"/>
</kw>
<msg timestamp="20210712 07:38:01.171" level="INFO">${result} = 95230-rpcwoscheme</msg>
<status status="PASS" starttime="20210712 07:37:52.891" endtime="20210712 07:38:01.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210712 07:38:01.171" endtime="20210712 07:38:01.172"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 07:38:01.183" level="INFO">Running command 'ozone sh key put /95230-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 07:41:11.007" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210712 07:38:01.180" endtime="20210712 07:41:11.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.007" endtime="20210712 07:41:11.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.008" endtime="20210712 07:41:11.008"/>
</kw>
<status status="FAIL" starttime="20210712 07:38:01.178" endtime="20210712 07:41:11.008"/>
</kw>
<msg timestamp="20210712 07:41:11.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210712 07:38:01.178" endtime="20210712 07:41:11.009"/>
</kw>
<status status="FAIL" starttime="20210712 07:38:01.177" endtime="20210712 07:41:11.009"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.009" endtime="20210712 07:41:11.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.010" endtime="20210712 07:41:11.010"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.010" endtime="20210712 07:41:11.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.010" endtime="20210712 07:41:11.010"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.010" endtime="20210712 07:41:11.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.011" endtime="20210712 07:41:11.011"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.011" endtime="20210712 07:41:11.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.011" endtime="20210712 07:41:11.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.011" endtime="20210712 07:41:11.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.012" endtime="20210712 07:41:11.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.012" endtime="20210712 07:41:11.012"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.012" endtime="20210712 07:41:11.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.012" endtime="20210712 07:41:11.013"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.013" endtime="20210712 07:41:11.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.013" endtime="20210712 07:41:11.013"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.013" endtime="20210712 07:41:11.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.013" endtime="20210712 07:41:11.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.014" endtime="20210712 07:41:11.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.014" endtime="20210712 07:41:11.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.014" endtime="20210712 07:41:11.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.014" endtime="20210712 07:41:11.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.015" endtime="20210712 07:41:11.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.015" endtime="20210712 07:41:11.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.015" endtime="20210712 07:41:11.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.015" endtime="20210712 07:41:11.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.016" endtime="20210712 07:41:11.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.016" endtime="20210712 07:41:11.016"/>
</kw>
<status status="FAIL" starttime="20210712 07:38:01.175" endtime="20210712 07:41:11.016"/>
</kw>
<status status="FAIL" starttime="20210712 07:38:01.173" endtime="20210712 07:41:11.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.017" endtime="20210712 07:41:11.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.018" endtime="20210712 07:41:11.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.019" endtime="20210712 07:41:11.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.019" endtime="20210712 07:41:11.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.020" endtime="20210712 07:41:11.020"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.020" endtime="20210712 07:41:11.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.020" endtime="20210712 07:41:11.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.021" endtime="20210712 07:41:11.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.021" endtime="20210712 07:41:11.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.022" endtime="20210712 07:41:11.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.022" endtime="20210712 07:41:11.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.023" endtime="20210712 07:41:11.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.023" endtime="20210712 07:41:11.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.024" endtime="20210712 07:41:11.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.024" endtime="20210712 07:41:11.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.024" endtime="20210712 07:41:11.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.025" endtime="20210712 07:41:11.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.025" endtime="20210712 07:41:11.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.026" endtime="20210712 07:41:11.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.026" endtime="20210712 07:41:11.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.027" endtime="20210712 07:41:11.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.027" endtime="20210712 07:41:11.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.028" endtime="20210712 07:41:11.028"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210712 07:41:11.028" endtime="20210712 07:41:11.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.028" endtime="20210712 07:41:11.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210712 07:41:11.028" endtime="20210712 07:41:11.029"/>
</kw>
<status status="FAIL" starttime="20210712 07:36:11.187" endtime="20210712 07:41:11.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210712 07:36:11.006" endtime="20210712 07:41:11.030">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210712 07:16:14.609" endtime="20210712 07:41:11.032"/>
</suite>
<status status="FAIL" starttime="20210712 06:52:03.073" endtime="20210712 07:41:11.041"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:51:57.761" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:51:57.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:51:57.766" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210712 06:51:57.757" endtime="20210712 06:51:57.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:51:57.766" level="INFO">scm</msg>
<status status="PASS" starttime="20210712 06:51:57.766" endtime="20210712 06:51:57.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:51:57.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:51:57.767" endtime="20210712 06:51:57.768"/>
</kw>
<status status="PASS" starttime="20210712 06:51:57.757" endtime="20210712 06:51:57.768"/>
</kw>
<msg timestamp="20210712 06:51:57.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:51:57.756" endtime="20210712 06:51:57.768"/>
</kw>
<msg timestamp="20210712 06:51:57.768" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210712 06:51:57.756" endtime="20210712 06:51:57.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210712 06:51:57.769" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210712 06:51:57.769" endtime="20210712 06:51:57.769"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210712 06:51:57.773" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210712 06:51:57.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210712 06:51:57.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210712 06:51:57.771" endtime="20210712 06:51:57.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210712 06:51:57.784" level="INFO"/>
<status status="PASS" starttime="20210712 06:51:57.783" endtime="20210712 06:51:57.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210712 06:51:57.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210712 06:51:57.784" endtime="20210712 06:51:57.785"/>
</kw>
<status status="PASS" starttime="20210712 06:51:57.771" endtime="20210712 06:51:57.785"/>
</kw>
<msg timestamp="20210712 06:51:57.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210712 06:51:57.771" endtime="20210712 06:51:57.785"/>
</kw>
<status status="PASS" starttime="20210712 06:51:57.770" endtime="20210712 06:51:57.786"/>
</kw>
<status status="PASS" starttime="20210712 06:51:57.770" endtime="20210712 06:51:57.786"/>
</kw>
<status status="PASS" starttime="20210712 06:51:57.755" endtime="20210712 06:51:57.786"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210712 06:51:57.754" endtime="20210712 06:51:57.786"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210712 06:51:57.691" endtime="20210712 06:51:57.788"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2948065"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
