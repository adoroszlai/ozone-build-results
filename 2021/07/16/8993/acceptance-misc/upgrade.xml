<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210716 14:11:58.591" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:03:28.115" level="INFO">${random} = 12493</msg>
<status status="PASS" starttime="20210716 14:03:28.114" endtime="20210716 14:03:28.115"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:03:28.117" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-12493 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:03:31.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:03:31.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:28.116" endtime="20210716 14:03:31.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:03:31.480" level="INFO"/>
<status status="PASS" starttime="20210716 14:03:31.480" endtime="20210716 14:03:31.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:03:31.481" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:03:31.480" endtime="20210716 14:03:31.481"/>
</kw>
<status status="PASS" starttime="20210716 14:03:28.116" endtime="20210716 14:03:31.481"/>
</kw>
<msg timestamp="20210716 14:03:31.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:03:28.115" endtime="20210716 14:03:31.481"/>
</kw>
<msg timestamp="20210716 14:03:31.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:28.115" endtime="20210716 14:03:31.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:03:31.481" endtime="20210716 14:03:31.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:03:28.113" endtime="20210716 14:03:31.482"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:03:28.079" endtime="20210716 14:03:31.483"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:03:17.117" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:03:19.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:03:19.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:17.116" endtime="20210716 14:03:19.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:03:19.259" level="INFO"/>
<status status="PASS" starttime="20210716 14:03:19.259" endtime="20210716 14:03:19.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:03:19.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:03:19.260" endtime="20210716 14:03:19.260"/>
</kw>
<status status="PASS" starttime="20210716 14:03:17.115" endtime="20210716 14:03:19.260"/>
</kw>
<msg timestamp="20210716 14:03:19.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:03:17.115" endtime="20210716 14:03:19.260"/>
</kw>
<msg timestamp="20210716 14:03:19.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:17.114" endtime="20210716 14:03:19.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:03:19.261" endtime="20210716 14:03:19.261"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:03:19.264" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:03:20.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:03:20.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:19.263" endtime="20210716 14:03:20.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:03:20.932" level="INFO"/>
<status status="PASS" starttime="20210716 14:03:20.931" endtime="20210716 14:03:20.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:03:20.932" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:03:20.932" endtime="20210716 14:03:20.933"/>
</kw>
<status status="PASS" starttime="20210716 14:03:19.262" endtime="20210716 14:03:20.933"/>
</kw>
<msg timestamp="20210716 14:03:20.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:03:19.262" endtime="20210716 14:03:20.933"/>
</kw>
<msg timestamp="20210716 14:03:20.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:19.261" endtime="20210716 14:03:20.933"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:03:20.933" endtime="20210716 14:03:20.933"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:03:20.937" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:03:25.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:03:25.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:20.936" endtime="20210716 14:03:25.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:03:25.064" level="INFO"/>
<status status="PASS" starttime="20210716 14:03:25.063" endtime="20210716 14:03:25.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:03:25.064" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:03:25.064" endtime="20210716 14:03:25.064"/>
</kw>
<status status="PASS" starttime="20210716 14:03:20.934" endtime="20210716 14:03:25.064"/>
</kw>
<msg timestamp="20210716 14:03:25.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:03:20.934" endtime="20210716 14:03:25.065"/>
</kw>
<msg timestamp="20210716 14:03:25.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:03:20.933" endtime="20210716 14:03:25.065"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:03:25.065" endtime="20210716 14:03:25.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:03:17.114" endtime="20210716 14:03:25.065"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210716 14:03:17.079" endtime="20210716 14:03:25.066"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:04:34.577" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:04:36.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:04:36.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:34.574" endtime="20210716 14:04:36.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:04:36.802" level="INFO"/>
<status status="PASS" starttime="20210716 14:04:36.801" endtime="20210716 14:04:36.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:04:36.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:04:36.802" endtime="20210716 14:04:36.803"/>
</kw>
<status status="PASS" starttime="20210716 14:04:34.574" endtime="20210716 14:04:36.803"/>
</kw>
<msg timestamp="20210716 14:04:36.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:04:34.573" endtime="20210716 14:04:36.803"/>
</kw>
<msg timestamp="20210716 14:04:36.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:34.573" endtime="20210716 14:04:36.803"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:04:36.803" endtime="20210716 14:04:36.804"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:04:36.808" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:04:38.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:04:38.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:36.806" endtime="20210716 14:04:38.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:04:38.722" level="INFO"/>
<status status="PASS" starttime="20210716 14:04:38.722" endtime="20210716 14:04:38.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:04:38.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:04:38.723" endtime="20210716 14:04:38.723"/>
</kw>
<status status="PASS" starttime="20210716 14:04:36.805" endtime="20210716 14:04:38.723"/>
</kw>
<msg timestamp="20210716 14:04:38.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:04:36.805" endtime="20210716 14:04:38.724"/>
</kw>
<msg timestamp="20210716 14:04:38.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:36.804" endtime="20210716 14:04:38.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:04:38.724" endtime="20210716 14:04:38.724"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:04:38.729" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:04:43.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:04:43.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:38.726" endtime="20210716 14:04:43.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:04:43.430" level="INFO"/>
<status status="PASS" starttime="20210716 14:04:43.429" endtime="20210716 14:04:43.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:04:43.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:04:43.430" endtime="20210716 14:04:43.431"/>
</kw>
<status status="PASS" starttime="20210716 14:04:38.725" endtime="20210716 14:04:43.431"/>
</kw>
<msg timestamp="20210716 14:04:43.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:04:38.725" endtime="20210716 14:04:43.431"/>
</kw>
<msg timestamp="20210716 14:04:43.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:38.725" endtime="20210716 14:04:43.431"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:04:43.431" endtime="20210716 14:04:43.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:04:34.572" endtime="20210716 14:04:43.432"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210716 14:04:34.526" endtime="20210716 14:04:43.434"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:04:46.890" level="INFO">${random} = 83443</msg>
<status status="PASS" starttime="20210716 14:04:46.890" endtime="20210716 14:04:46.890"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:04:46.895" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-83443 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:04:50.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:04:50.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:46.892" endtime="20210716 14:04:50.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:04:50.364" level="INFO"/>
<status status="PASS" starttime="20210716 14:04:50.363" endtime="20210716 14:04:50.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:04:50.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:04:50.364" endtime="20210716 14:04:50.364"/>
</kw>
<status status="PASS" starttime="20210716 14:04:46.891" endtime="20210716 14:04:50.365"/>
</kw>
<msg timestamp="20210716 14:04:50.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:04:46.891" endtime="20210716 14:04:50.365"/>
</kw>
<msg timestamp="20210716 14:04:50.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:46.890" endtime="20210716 14:04:50.365"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:04:50.365" endtime="20210716 14:04:50.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:04:46.889" endtime="20210716 14:04:50.366"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:04:46.839" endtime="20210716 14:04:50.367"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:04:27.162" level="INFO">${random} = 53850</msg>
<status status="PASS" starttime="20210716 14:04:27.161" endtime="20210716 14:04:27.162"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:04:27.167" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-53850 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:04:31.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:04:31.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:27.163" endtime="20210716 14:04:31.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:04:31.348" level="INFO"/>
<status status="PASS" starttime="20210716 14:04:31.347" endtime="20210716 14:04:31.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:04:31.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:04:31.348" endtime="20210716 14:04:31.348"/>
</kw>
<status status="PASS" starttime="20210716 14:04:27.163" endtime="20210716 14:04:31.349"/>
</kw>
<msg timestamp="20210716 14:04:31.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:04:27.163" endtime="20210716 14:04:31.349"/>
</kw>
<msg timestamp="20210716 14:04:31.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:04:27.162" endtime="20210716 14:04:31.349"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:04:31.349" endtime="20210716 14:04:31.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:04:27.160" endtime="20210716 14:04:31.350"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:04:27.110" endtime="20210716 14:04:31.352"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="28069"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:06:20.400" level="INFO">${random} = 42838</msg>
<status status="PASS" starttime="20210716 14:06:20.399" endtime="20210716 14:06:20.400"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:06:20.402" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-42838 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:06:23.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:06:23.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:20.401" endtime="20210716 14:06:23.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:06:23.975" level="INFO"/>
<status status="PASS" starttime="20210716 14:06:23.974" endtime="20210716 14:06:23.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:06:23.976" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:06:23.975" endtime="20210716 14:06:23.976"/>
</kw>
<status status="PASS" starttime="20210716 14:06:20.401" endtime="20210716 14:06:23.976"/>
</kw>
<msg timestamp="20210716 14:06:23.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:06:20.400" endtime="20210716 14:06:23.976"/>
</kw>
<msg timestamp="20210716 14:06:23.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:20.400" endtime="20210716 14:06:23.976"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:06:23.976" endtime="20210716 14:06:23.977"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:06:20.398" endtime="20210716 14:06:23.977"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:06:20.351" endtime="20210716 14:06:23.978"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:06:07.307" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:06:09.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:06:09.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:07.306" endtime="20210716 14:06:09.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:06:09.317" level="INFO"/>
<status status="PASS" starttime="20210716 14:06:09.316" endtime="20210716 14:06:09.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:06:09.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:06:09.317" endtime="20210716 14:06:09.317"/>
</kw>
<status status="PASS" starttime="20210716 14:06:07.305" endtime="20210716 14:06:09.318"/>
</kw>
<msg timestamp="20210716 14:06:09.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:06:07.305" endtime="20210716 14:06:09.318"/>
</kw>
<msg timestamp="20210716 14:06:09.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:07.304" endtime="20210716 14:06:09.318"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:06:09.318" endtime="20210716 14:06:09.319"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:06:09.321" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:06:11.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:06:11.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:09.320" endtime="20210716 14:06:11.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:06:11.696" level="INFO"/>
<status status="PASS" starttime="20210716 14:06:11.695" endtime="20210716 14:06:11.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:06:11.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:06:11.696" endtime="20210716 14:06:11.696"/>
</kw>
<status status="PASS" starttime="20210716 14:06:09.319" endtime="20210716 14:06:11.697"/>
</kw>
<msg timestamp="20210716 14:06:11.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:06:09.319" endtime="20210716 14:06:11.697"/>
</kw>
<msg timestamp="20210716 14:06:11.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:09.319" endtime="20210716 14:06:11.697"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:06:11.697" endtime="20210716 14:06:11.697"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:06:11.702" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:06:16.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:06:16.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:11.700" endtime="20210716 14:06:16.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:06:16.725" level="INFO"/>
<status status="PASS" starttime="20210716 14:06:16.724" endtime="20210716 14:06:16.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:06:16.725" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:06:16.725" endtime="20210716 14:06:16.725"/>
</kw>
<status status="PASS" starttime="20210716 14:06:11.698" endtime="20210716 14:06:16.726"/>
</kw>
<msg timestamp="20210716 14:06:16.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:06:11.698" endtime="20210716 14:06:16.726"/>
</kw>
<msg timestamp="20210716 14:06:16.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210716 14:06:11.698" endtime="20210716 14:06:16.726"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:06:16.726" endtime="20210716 14:06:16.726"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:06:07.304" endtime="20210716 14:06:16.727"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210716 14:06:07.264" endtime="20210716 14:06:16.729"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:49.391" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210716 14:07:49.390" endtime="20210716 14:07:49.391"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:49.391" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:07:49.391" endtime="20210716 14:07:49.391"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:07:49.392" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:07:49.391" endtime="20210716 14:07:49.392"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:07:49.392" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210716 14:07:49.392" endtime="20210716 14:07:49.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:07:49.393" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:07:49.394" level="INFO">${version_file_contents} = #Fri Jul 16 14:07:09 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626444407861
clusterID=d18bbe15-4227-441a-b48c-f21dbbef888e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210716 14:07:49.393" endtime="20210716 14:07:49.394"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:07:49.394" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:07:49.394" endtime="20210716 14:07:49.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:07:49.395" endtime="20210716 14:07:49.395"/>
</kw>
<status status="PASS" starttime="20210716 14:07:49.393" endtime="20210716 14:07:49.395"/>
</kw>
<status status="PASS" starttime="20210716 14:07:49.392" endtime="20210716 14:07:49.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:07:49.389" endtime="20210716 14:07:49.395"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:07:49.336" endtime="20210716 14:07:49.397"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210716 14:08:41.324" endtime="20210716 14:08:41.325"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:08:41.330" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:10:44.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:10:44.251" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210716 14:08:41.326" endtime="20210716 14:10:44.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:10:44.252" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210716 14:10:44.251" endtime="20210716 14:10:44.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:10:44.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:10:44.252" endtime="20210716 14:10:44.253"/>
</kw>
<status status="PASS" starttime="20210716 14:08:41.326" endtime="20210716 14:10:44.253"/>
</kw>
<msg timestamp="20210716 14:10:44.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:08:41.326" endtime="20210716 14:10:44.254"/>
</kw>
<msg timestamp="20210716 14:10:44.254" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210716 14:08:41.325" endtime="20210716 14:10:44.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:10:44.254" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210716 14:10:44.254" endtime="20210716 14:10:44.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:41.324" endtime="20210716 14:10:44.255"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210716 14:10:44.256" endtime="20210716 14:10:44.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:10:44.261" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:10:46.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:10:46.703" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210716 14:10:44.259" endtime="20210716 14:10:46.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:10:46.704" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210716 14:10:46.703" endtime="20210716 14:10:46.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:10:46.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:10:46.704" endtime="20210716 14:10:46.705"/>
</kw>
<status status="PASS" starttime="20210716 14:10:44.258" endtime="20210716 14:10:46.705"/>
</kw>
<msg timestamp="20210716 14:10:46.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:10:44.258" endtime="20210716 14:10:46.705"/>
</kw>
<msg timestamp="20210716 14:10:46.706" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210716 14:10:44.257" endtime="20210716 14:10:46.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:10:46.706" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210716 14:10:46.706" endtime="20210716 14:10:46.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:10:44.255" endtime="20210716 14:10:46.707"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210716 14:08:41.273" endtime="20210716 14:10:46.708"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:10:50.460" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210716 14:10:50.460" endtime="20210716 14:10:50.461"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:10:50.461" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:10:50.461" endtime="20210716 14:10:50.461"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:10:50.462" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:10:50.461" endtime="20210716 14:10:50.462"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:10:50.462" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210716 14:10:50.462" endtime="20210716 14:10:50.462"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:10:50.464" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:10:50.464" level="INFO">${version_file_contents} = #Fri Jul 16 14:08:48 UTC 2021
cTime=1626444324389
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
nodeType=SCM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac59
layoutVersion=2
</msg>
<status status="PASS" starttime="20210716 14:10:50.463" endtime="20210716 14:10:50.464"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:10:50.465" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210716 14:10:50.464" endtime="20210716 14:10:50.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:10:50.465" endtime="20210716 14:10:50.465"/>
</kw>
<status status="PASS" starttime="20210716 14:10:50.463" endtime="20210716 14:10:50.465"/>
</kw>
<status status="PASS" starttime="20210716 14:10:50.463" endtime="20210716 14:10:50.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:10:50.459" endtime="20210716 14:10:50.466"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:10:50.406" endtime="20210716 14:10:50.467"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:10:54.136" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210716 14:10:54.135" endtime="20210716 14:10:54.136"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:10:54.137" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:10:54.136" endtime="20210716 14:10:54.137"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:10:54.137" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:10:54.137" endtime="20210716 14:10:54.137"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:10:54.138" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210716 14:10:54.138" endtime="20210716 14:10:54.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:10:54.139" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:10:54.140" level="INFO">${version_file_contents} = #Fri Jul 16 14:09:00 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626444407861
clusterID=d18bbe15-4227-441a-b48c-f21dbbef888e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210716 14:10:54.139" endtime="20210716 14:10:54.140"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:10:54.140" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210716 14:10:54.140" endtime="20210716 14:10:54.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:10:54.141" endtime="20210716 14:10:54.141"/>
</kw>
<status status="PASS" starttime="20210716 14:10:54.139" endtime="20210716 14:10:54.141"/>
</kw>
<status status="PASS" starttime="20210716 14:10:54.138" endtime="20210716 14:10:54.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:10:54.134" endtime="20210716 14:10:54.141"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:10:54.079" endtime="20210716 14:10:54.142"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:10:57.757" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210716 14:10:57.756" endtime="20210716 14:10:57.757"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:10:57.757" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:10:57.757" endtime="20210716 14:10:57.757"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:10:57.758" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:10:57.758" endtime="20210716 14:10:57.758"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:10:57.758" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210716 14:10:57.758" endtime="20210716 14:10:57.759"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:10:57.760" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:10:57.760" level="INFO">${version_file_contents} = #Fri Jul 16 14:09:31 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626444408525
clusterID=3cbbb342-d9e5-4ae5-b290-810b009ca113
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210716 14:10:57.759" endtime="20210716 14:10:57.760"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:10:57.761" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210716 14:10:57.760" endtime="20210716 14:10:57.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:10:57.761" endtime="20210716 14:10:57.761"/>
</kw>
<status status="PASS" starttime="20210716 14:10:57.759" endtime="20210716 14:10:57.761"/>
</kw>
<status status="PASS" starttime="20210716 14:10:57.759" endtime="20210716 14:10:57.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:10:57.755" endtime="20210716 14:10:57.761"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:10:57.706" endtime="20210716 14:10:57.762"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:01.393" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210716 14:11:01.392" endtime="20210716 14:11:01.393"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:01.393" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:11:01.393" endtime="20210716 14:11:01.394"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:11:01.394" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:11:01.394" endtime="20210716 14:11:01.394"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:11:01.395" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210716 14:11:01.394" endtime="20210716 14:11:01.395"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:11:01.396" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:11:01.396" level="INFO">${version_file_contents} = #Fri Jul 16 14:09:00 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626444402109
clusterID=e2da376d-847a-4b4f-b125-58f03248546c
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210716 14:11:01.396" endtime="20210716 14:11:01.396"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:11:01.397" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210716 14:11:01.396" endtime="20210716 14:11:01.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:01.397" endtime="20210716 14:11:01.397"/>
</kw>
<status status="PASS" starttime="20210716 14:11:01.395" endtime="20210716 14:11:01.397"/>
</kw>
<status status="PASS" starttime="20210716 14:11:01.395" endtime="20210716 14:11:01.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:01.392" endtime="20210716 14:11:01.398"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:11:01.341" endtime="20210716 14:11:01.398"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:05.145" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210716 14:11:05.144" endtime="20210716 14:11:05.145"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:05.145" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:11:05.145" endtime="20210716 14:11:05.146"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:11:05.146" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:11:05.146" endtime="20210716 14:11:05.146"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:11:05.147" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210716 14:11:05.146" endtime="20210716 14:11:05.147"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:11:05.148" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:11:05.148" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:43 UTC 2021
cTime=1626444326447
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
omUuid=6d6ebbfe-6753-4987-907b-7701d6535dbd
nodeType=OM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac5...</msg>
<status status="PASS" starttime="20210716 14:11:05.148" endtime="20210716 14:11:05.148"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:11:05.149" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:11:05.148" endtime="20210716 14:11:05.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:05.149" endtime="20210716 14:11:05.149"/>
</kw>
<status status="PASS" starttime="20210716 14:11:05.147" endtime="20210716 14:11:05.150"/>
</kw>
<status status="PASS" starttime="20210716 14:11:05.147" endtime="20210716 14:11:05.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:05.143" endtime="20210716 14:11:05.150"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:11:05.093" endtime="20210716 14:11:05.151"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:08.802" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210716 14:11:08.801" endtime="20210716 14:11:08.802"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:08.803" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:11:08.802" endtime="20210716 14:11:08.803"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:11:08.803" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:11:08.803" endtime="20210716 14:11:08.803"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:11:08.804" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210716 14:11:08.804" endtime="20210716 14:11:08.804"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:11:08.805" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:11:08.805" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:43 UTC 2021
cTime=1626444327056
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
omUuid=872cc5e5-14a8-419e-9dda-7379bb72d3aa
nodeType=OM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac5...</msg>
<status status="PASS" starttime="20210716 14:11:08.805" endtime="20210716 14:11:08.805"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:11:08.806" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:11:08.806" endtime="20210716 14:11:08.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:08.806" endtime="20210716 14:11:08.807"/>
</kw>
<status status="PASS" starttime="20210716 14:11:08.804" endtime="20210716 14:11:08.807"/>
</kw>
<status status="PASS" starttime="20210716 14:11:08.804" endtime="20210716 14:11:08.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:08.801" endtime="20210716 14:11:08.807"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:11:08.751" endtime="20210716 14:11:08.808"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:12.448" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210716 14:11:12.447" endtime="20210716 14:11:12.448"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:11:12.448" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:11:12.448" endtime="20210716 14:11:12.448"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:11:12.449" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:11:12.448" endtime="20210716 14:11:12.449"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:11:12.449" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210716 14:11:12.449" endtime="20210716 14:11:12.449"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:11:12.451" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:11:12.451" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:41 UTC 2021
cTime=1626444328227
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
omUuid=4b0fa719-5316-4761-982b-4a5841f9ba3f
nodeType=OM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac5...</msg>
<status status="PASS" starttime="20210716 14:11:12.450" endtime="20210716 14:11:12.451"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:11:12.451" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:11:12.451" endtime="20210716 14:11:12.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:12.452" endtime="20210716 14:11:12.452"/>
</kw>
<status status="PASS" starttime="20210716 14:11:12.450" endtime="20210716 14:11:12.452"/>
</kw>
<status status="PASS" starttime="20210716 14:11:12.449" endtime="20210716 14:11:12.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:12.446" endtime="20210716 14:11:12.453"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:11:12.395" endtime="20210716 14:11:12.453"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:11:16.077" level="INFO">${random} = 46037</msg>
<status status="PASS" starttime="20210716 14:11:16.077" endtime="20210716 14:11:16.077"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:11:16.082" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-46037 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:11:20.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:11:20.227" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:16.079" endtime="20210716 14:11:20.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:11:20.228" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:20.227" endtime="20210716 14:11:20.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:11:20.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:11:20.228" endtime="20210716 14:11:20.229"/>
</kw>
<status status="PASS" starttime="20210716 14:11:16.078" endtime="20210716 14:11:20.229"/>
</kw>
<msg timestamp="20210716 14:11:20.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:11:16.078" endtime="20210716 14:11:20.229"/>
</kw>
<msg timestamp="20210716 14:11:20.230" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:16.077" endtime="20210716 14:11:20.230"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:20.230" endtime="20210716 14:11:20.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:16.076" endtime="20210716 14:11:20.230"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:11:16.025" endtime="20210716 14:11:20.232"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:11:23.862" level="INFO">${random} = 23242</msg>
<status status="PASS" starttime="20210716 14:11:23.861" endtime="20210716 14:11:23.862"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:11:23.867" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-23242 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:11:27.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:11:27.810" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:23.863" endtime="20210716 14:11:27.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:11:27.811" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:27.810" endtime="20210716 14:11:27.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:11:27.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:11:27.811" endtime="20210716 14:11:27.812"/>
</kw>
<status status="PASS" starttime="20210716 14:11:23.863" endtime="20210716 14:11:27.812"/>
</kw>
<msg timestamp="20210716 14:11:27.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:11:23.863" endtime="20210716 14:11:27.812"/>
</kw>
<msg timestamp="20210716 14:11:27.813" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:23.862" endtime="20210716 14:11:27.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:27.813" endtime="20210716 14:11:27.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:23.860" endtime="20210716 14:11:27.814"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:11:23.810" endtime="20210716 14:11:27.815"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:53.069" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210716 14:07:53.068" endtime="20210716 14:07:53.069"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:53.069" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:07:53.069" endtime="20210716 14:07:53.069"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:07:53.070" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:07:53.070" endtime="20210716 14:07:53.070"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:07:53.071" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210716 14:07:53.070" endtime="20210716 14:07:53.071"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:07:53.072" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:07:53.072" level="INFO">${version_file_contents} = #Fri Jul 16 14:07:09 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626444408525
clusterID=3cbbb342-d9e5-4ae5-b290-810b009ca113
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210716 14:07:53.071" endtime="20210716 14:07:53.072"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:07:53.073" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:07:53.072" endtime="20210716 14:07:53.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:07:53.073" endtime="20210716 14:07:53.073"/>
</kw>
<status status="PASS" starttime="20210716 14:07:53.071" endtime="20210716 14:07:53.073"/>
</kw>
<status status="PASS" starttime="20210716 14:07:53.071" endtime="20210716 14:07:53.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:07:53.067" endtime="20210716 14:07:53.074"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:07:53.017" endtime="20210716 14:07:53.074"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:11:31.493" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:11:33.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:11:33.834" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:31.490" endtime="20210716 14:11:33.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:11:33.835" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:33.834" endtime="20210716 14:11:33.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:11:33.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:11:33.835" endtime="20210716 14:11:33.836"/>
</kw>
<status status="PASS" starttime="20210716 14:11:31.489" endtime="20210716 14:11:33.836"/>
</kw>
<msg timestamp="20210716 14:11:33.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:11:31.489" endtime="20210716 14:11:33.836"/>
</kw>
<msg timestamp="20210716 14:11:33.836" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:31.488" endtime="20210716 14:11:33.836"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:33.837" endtime="20210716 14:11:33.837"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:11:33.841" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:11:35.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:11:35.918" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:33.839" endtime="20210716 14:11:35.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:11:35.919" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:35.919" endtime="20210716 14:11:35.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:11:35.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:11:35.919" endtime="20210716 14:11:35.920"/>
</kw>
<status status="PASS" starttime="20210716 14:11:33.838" endtime="20210716 14:11:35.920"/>
</kw>
<msg timestamp="20210716 14:11:35.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:11:33.838" endtime="20210716 14:11:35.920"/>
</kw>
<msg timestamp="20210716 14:11:35.921" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:33.837" endtime="20210716 14:11:35.921"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:35.921" endtime="20210716 14:11:35.921"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:11:35.925" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:11:40.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:11:40.333" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:35.923" endtime="20210716 14:11:40.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:11:40.335" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:40.334" endtime="20210716 14:11:40.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:11:40.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:11:40.335" endtime="20210716 14:11:40.335"/>
</kw>
<status status="PASS" starttime="20210716 14:11:35.922" endtime="20210716 14:11:40.336"/>
</kw>
<msg timestamp="20210716 14:11:40.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:11:35.922" endtime="20210716 14:11:40.336"/>
</kw>
<msg timestamp="20210716 14:11:40.336" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:35.921" endtime="20210716 14:11:40.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:40.337" endtime="20210716 14:11:40.337"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:31.487" endtime="20210716 14:11:40.337"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210716 14:11:31.424" endtime="20210716 14:11:40.338"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:11:44.015" level="INFO">${random} = 48779</msg>
<status status="PASS" starttime="20210716 14:11:44.015" endtime="20210716 14:11:44.015"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:11:44.021" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-48779 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:11:47.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:11:47.678" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:44.017" endtime="20210716 14:11:47.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:11:47.679" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:47.678" endtime="20210716 14:11:47.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:11:47.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:11:47.679" endtime="20210716 14:11:47.679"/>
</kw>
<status status="PASS" starttime="20210716 14:11:44.017" endtime="20210716 14:11:47.679"/>
</kw>
<msg timestamp="20210716 14:11:47.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:11:44.016" endtime="20210716 14:11:47.680"/>
</kw>
<msg timestamp="20210716 14:11:47.680" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:11:44.015" endtime="20210716 14:11:47.680"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:11:47.680" endtime="20210716 14:11:47.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:11:44.013" endtime="20210716 14:11:47.680"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:11:43.961" endtime="20210716 14:11:47.681"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:56.735" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210716 14:07:56.734" endtime="20210716 14:07:56.735"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:56.735" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:07:56.735" endtime="20210716 14:07:56.735"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:07:56.736" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:07:56.735" endtime="20210716 14:07:56.736"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:07:56.736" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210716 14:07:56.736" endtime="20210716 14:07:56.736"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:07:56.738" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:07:56.738" level="INFO">${version_file_contents} = #Fri Jul 16 14:07:07 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626444402109
clusterID=e2da376d-847a-4b4f-b125-58f03248546c
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210716 14:07:56.737" endtime="20210716 14:07:56.738"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:07:56.738" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:07:56.738" endtime="20210716 14:07:56.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:07:56.739" endtime="20210716 14:07:56.739"/>
</kw>
<status status="PASS" starttime="20210716 14:07:56.737" endtime="20210716 14:07:56.739"/>
</kw>
<status status="PASS" starttime="20210716 14:07:56.737" endtime="20210716 14:07:56.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:07:56.733" endtime="20210716 14:07:56.739"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:07:56.683" endtime="20210716 14:07:56.740"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:08:00.346" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210716 14:08:00.345" endtime="20210716 14:08:00.346"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:08:00.347" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:08:00.346" endtime="20210716 14:08:00.347"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:08:00.347" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:08:00.347" endtime="20210716 14:08:00.347"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:08:00.348" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210716 14:08:00.347" endtime="20210716 14:08:00.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:08:00.349" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:08:00.349" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:43 UTC 2021
cTime=1626444326447
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
omUuid=6d6ebbfe-6753-4987-907b-7701d6535dbd
nodeType=OM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac5...</msg>
<status status="PASS" starttime="20210716 14:08:00.349" endtime="20210716 14:08:00.349"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:08:00.350" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:08:00.350" endtime="20210716 14:08:00.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:00.350" endtime="20210716 14:08:00.351"/>
</kw>
<status status="PASS" starttime="20210716 14:08:00.348" endtime="20210716 14:08:00.351"/>
</kw>
<status status="PASS" starttime="20210716 14:08:00.348" endtime="20210716 14:08:00.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:00.345" endtime="20210716 14:08:00.351"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:08:00.296" endtime="20210716 14:08:00.352"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:08:04.057" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210716 14:08:04.056" endtime="20210716 14:08:04.057"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:08:04.058" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:08:04.057" endtime="20210716 14:08:04.058"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:08:04.058" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:08:04.058" endtime="20210716 14:08:04.058"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:08:04.059" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210716 14:08:04.059" endtime="20210716 14:08:04.059"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:08:04.060" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:08:04.061" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:43 UTC 2021
cTime=1626444327056
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
omUuid=872cc5e5-14a8-419e-9dda-7379bb72d3aa
nodeType=OM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac5...</msg>
<status status="PASS" starttime="20210716 14:08:04.060" endtime="20210716 14:08:04.061"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:08:04.061" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:08:04.061" endtime="20210716 14:08:04.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:04.061" endtime="20210716 14:08:04.062"/>
</kw>
<status status="PASS" starttime="20210716 14:08:04.060" endtime="20210716 14:08:04.062"/>
</kw>
<status status="PASS" starttime="20210716 14:08:04.059" endtime="20210716 14:08:04.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:04.056" endtime="20210716 14:08:04.062"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:08:04.002" endtime="20210716 14:08:04.063"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:08:07.756" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210716 14:08:07.755" endtime="20210716 14:08:07.756"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:08:07.756" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:08:07.756" endtime="20210716 14:08:07.756"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:08:07.757" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:08:07.756" endtime="20210716 14:08:07.757"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:08:07.758" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210716 14:08:07.757" endtime="20210716 14:08:07.758"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:08:07.759" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:08:07.759" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:41 UTC 2021
cTime=1626444328227
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
omUuid=4b0fa719-5316-4761-982b-4a5841f9ba3f
nodeType=OM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac5...</msg>
<status status="PASS" starttime="20210716 14:08:07.759" endtime="20210716 14:08:07.759"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:08:07.760" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:08:07.759" endtime="20210716 14:08:07.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:07.760" endtime="20210716 14:08:07.760"/>
</kw>
<status status="PASS" starttime="20210716 14:08:07.758" endtime="20210716 14:08:07.760"/>
</kw>
<status status="PASS" starttime="20210716 14:08:07.758" endtime="20210716 14:08:07.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:07.754" endtime="20210716 14:08:07.761"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:08:07.702" endtime="20210716 14:08:07.761"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:08:11.341" level="INFO">${random} = 20556</msg>
<status status="PASS" starttime="20210716 14:08:11.340" endtime="20210716 14:08:11.341"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:08:11.347" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-20556 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:08:15.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:08:15.664" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:11.342" endtime="20210716 14:08:15.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:08:15.665" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:15.664" endtime="20210716 14:08:15.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:08:15.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:08:15.665" endtime="20210716 14:08:15.666"/>
</kw>
<status status="PASS" starttime="20210716 14:08:11.342" endtime="20210716 14:08:15.666"/>
</kw>
<msg timestamp="20210716 14:08:15.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:08:11.342" endtime="20210716 14:08:15.666"/>
</kw>
<msg timestamp="20210716 14:08:15.667" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:11.341" endtime="20210716 14:08:15.667"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:15.667" endtime="20210716 14:08:15.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:11.339" endtime="20210716 14:08:15.668"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:08:11.291" endtime="20210716 14:08:15.669"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:08:19.484" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:08:22.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:08:22.138" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:19.481" endtime="20210716 14:08:22.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:08:22.142" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:22.138" endtime="20210716 14:08:22.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:08:22.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:08:22.142" endtime="20210716 14:08:22.143"/>
</kw>
<status status="PASS" starttime="20210716 14:08:19.480" endtime="20210716 14:08:22.143"/>
</kw>
<msg timestamp="20210716 14:08:22.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:08:19.480" endtime="20210716 14:08:22.147"/>
</kw>
<msg timestamp="20210716 14:08:22.147" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:19.479" endtime="20210716 14:08:22.147"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:22.147" endtime="20210716 14:08:22.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:08:22.158" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:08:24.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:08:24.693" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:22.150" endtime="20210716 14:08:24.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:08:24.694" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:24.693" endtime="20210716 14:08:24.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:08:24.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:08:24.694" endtime="20210716 14:08:24.695"/>
</kw>
<status status="PASS" starttime="20210716 14:08:22.149" endtime="20210716 14:08:24.695"/>
</kw>
<msg timestamp="20210716 14:08:24.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:08:22.149" endtime="20210716 14:08:24.695"/>
</kw>
<msg timestamp="20210716 14:08:24.696" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:22.148" endtime="20210716 14:08:24.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:24.696" endtime="20210716 14:08:24.696"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:08:24.700" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:08:29.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:08:29.979" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:24.698" endtime="20210716 14:08:29.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:08:29.980" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:29.980" endtime="20210716 14:08:29.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:08:29.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:08:29.981" endtime="20210716 14:08:29.981"/>
</kw>
<status status="PASS" starttime="20210716 14:08:24.697" endtime="20210716 14:08:29.981"/>
</kw>
<msg timestamp="20210716 14:08:29.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:08:24.697" endtime="20210716 14:08:29.982"/>
</kw>
<msg timestamp="20210716 14:08:29.982" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:24.696" endtime="20210716 14:08:29.982"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:29.982" endtime="20210716 14:08:29.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:19.479" endtime="20210716 14:08:29.983"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210716 14:08:19.430" endtime="20210716 14:08:29.985"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210716 14:08:33.637" level="INFO">${random} = 21317</msg>
<status status="PASS" starttime="20210716 14:08:33.636" endtime="20210716 14:08:33.637"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:08:33.642" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-21317 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:08:37.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:08:37.666" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:33.639" endtime="20210716 14:08:37.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:08:37.667" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:37.666" endtime="20210716 14:08:37.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:08:37.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:08:37.667" endtime="20210716 14:08:37.668"/>
</kw>
<status status="PASS" starttime="20210716 14:08:33.638" endtime="20210716 14:08:37.668"/>
</kw>
<msg timestamp="20210716 14:08:37.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:08:33.638" endtime="20210716 14:08:37.668"/>
</kw>
<msg timestamp="20210716 14:08:37.668" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210716 14:08:33.637" endtime="20210716 14:08:37.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:08:37.669" endtime="20210716 14:08:37.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:08:33.635" endtime="20210716 14:08:37.669"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210716 14:08:33.580" endtime="20210716 14:08:37.671"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:45.615" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210716 14:07:45.614" endtime="20210716 14:07:45.615"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210716 14:07:45.615" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210716 14:07:45.615" endtime="20210716 14:07:45.616"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210716 14:07:45.616" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210716 14:07:45.616" endtime="20210716 14:07:45.616"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210716 14:07:45.617" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210716 14:07:45.616" endtime="20210716 14:07:45.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210716 14:07:45.618" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210716 14:07:45.618" level="INFO">${version_file_contents} = #Fri Jul 16 14:05:24 UTC 2021
cTime=1626444324389
clusterID=CID-fcffaf56-6214-4607-8660-621a98c72830
nodeType=SCM
scmUuid=fff41260-3222-41d3-a842-cdac51c3ac59
layoutVersion=0
</msg>
<status status="PASS" starttime="20210716 14:07:45.617" endtime="20210716 14:07:45.618"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210716 14:07:45.619" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210716 14:07:45.618" endtime="20210716 14:07:45.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:07:45.619" endtime="20210716 14:07:45.619"/>
</kw>
<status status="PASS" starttime="20210716 14:07:45.617" endtime="20210716 14:07:45.619"/>
</kw>
<status status="PASS" starttime="20210716 14:07:45.617" endtime="20210716 14:07:45.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:07:45.614" endtime="20210716 14:07:45.620"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210716 14:07:45.565" endtime="20210716 14:07:45.620"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="179213"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="207282"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
