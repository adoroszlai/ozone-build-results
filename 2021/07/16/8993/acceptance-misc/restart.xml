<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210716 14:02:16.857" rpa="false" schemaversion="2">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:00:36.366" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:00:41.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:00:41.071" level="INFO">${output} = 2021-07-16 14:00:37,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:37,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:36.362" endtime="20210716 14:00:41.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:00:41.072" level="INFO">2021-07-16 14:00:37,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:37,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:00:37,697 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:00:37,890 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-07-16 14:00:37,959 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:38,961 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:39,043 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-16 14:00:39,962 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:00:40,703 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=29.387101, max=29.387101, mean=29.387101, stddev=0.0, median=29.387101, p75=29.387101, p95=29.387101, p98=29.387101, p99=29.387101, p999=29.387101, mean_rate=0.9497594543755024, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:00:40,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-16 14:00:40,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:00:40,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:00:41.071" endtime="20210716 14:00:41.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:00:41.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:00:41.072" endtime="20210716 14:00:41.073"/>
</kw>
<status status="PASS" starttime="20210716 14:00:36.361" endtime="20210716 14:00:41.073"/>
</kw>
<msg timestamp="20210716 14:00:41.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:00:36.361" endtime="20210716 14:00:41.073"/>
</kw>
<msg timestamp="20210716 14:00:41.073" level="INFO">${result} = 2021-07-16 14:00:37,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:37,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:36.360" endtime="20210716 14:00:41.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:00:41.074" endtime="20210716 14:00:41.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:00:36.359" endtime="20210716 14:00:41.074"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210716 14:00:36.319" endtime="20210716 14:00:41.075"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:01:34.340" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:01:39.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:01:39.389" level="INFO">${output} = 2021-07-16 14:01:35,426 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:35,520 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:34.337" endtime="20210716 14:01:39.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:01:39.390" level="INFO">2021-07-16 14:01:35,426 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:35,520 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:01:35,520 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:01:35,694 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-07-16 14:01:35,749 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:36,756 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:37,295 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-16 14:01:37,756 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:38,756 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:01:38,997 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=28.836289, max=28.836289, mean=28.836289, stddev=0.0, median=28.836289, p75=28.836289, p95=28.836289, p98=28.836289, p99=28.836289, p999=28.836289, mean_rate=0.9754086991467833, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:01:38,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-16 14:01:38,998 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:01:38,998 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:01:39.389" endtime="20210716 14:01:39.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:01:39.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:01:39.390" endtime="20210716 14:01:39.391"/>
</kw>
<status status="PASS" starttime="20210716 14:01:34.337" endtime="20210716 14:01:39.391"/>
</kw>
<msg timestamp="20210716 14:01:39.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:01:34.336" endtime="20210716 14:01:39.391"/>
</kw>
<msg timestamp="20210716 14:01:39.391" level="INFO">${result} = 2021-07-16 14:01:35,426 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:35,520 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:34.336" endtime="20210716 14:01:39.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:01:39.392" endtime="20210716 14:01:39.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:01:34.335" endtime="20210716 14:01:39.392"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210716 14:01:34.301" endtime="20210716 14:01:39.394"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:01:43.312" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:01:51.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:01:51.055" level="INFO">${output} = 2021-07-16 14:01:44,282 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:44,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:43.308" endtime="20210716 14:01:51.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:01:51.056" level="INFO">2021-07-16 14:01:44,282 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:44,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:01:44,414 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:01:44,592 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-07-16 14:01:44,669 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:45,677 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:45,962 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-16 14:01:46,146 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-16 14:01:46,147 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3FFE18842E5A-&gt;152ec5af-4b49-4817-8434-0ffbfca45875
2021-07-16 14:01:46,149 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-16 14:01:46,677 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:47,678 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:48,678 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:49,185 [java.util.concurrent.ThreadPoolExecutor$Worker@43067639[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3FFE18842E5A-&gt;50c79d5f-dce4-4483-b840-442f73c84ea5
2021-07-16 14:01:49,185 [java.util.concurrent.ThreadPoolExecutor$Worker@43067639[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-16 14:01:49,679 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:50,679 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:01:50,703 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4550.430902, max=4550.430902, mean=4550.430902, stddev=0.0, median=4550.430902, p75=4550.430902, p95=4550.430902, p98=4550.430902, p99=4550.430902, p999=4550.430902, mean_rate=0.18398919060708546, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:01:50,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2021-07-16 14:01:50,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:01:50,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:01:51.056" endtime="20210716 14:01:51.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:01:51.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:01:51.057" endtime="20210716 14:01:51.057"/>
</kw>
<status status="PASS" starttime="20210716 14:01:43.308" endtime="20210716 14:01:51.058"/>
</kw>
<msg timestamp="20210716 14:01:51.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:01:43.308" endtime="20210716 14:01:51.058"/>
</kw>
<msg timestamp="20210716 14:01:51.058" level="INFO">${result} = 2021-07-16 14:01:44,282 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:44,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:43.307" endtime="20210716 14:01:51.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:01:51.058" endtime="20210716 14:01:51.059"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:01:43.307" endtime="20210716 14:01:51.059"/>
</test>
<test id="s1-s3-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:01:51.064" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:01:54.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:01:54.464" level="INFO">${output} = 2021-07-16 14:01:52,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:52,375 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:51.062" endtime="20210716 14:01:54.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:01:54.465" level="INFO">2021-07-16 14:01:52,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:52,375 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:01:52,375 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:01:52,631 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-07-16 14:01:52,702 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:53,715 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:01:54,396 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=49.84339, max=49.84339, mean=49.84339, stddev=0.0, median=49.84339, p75=49.84339, p95=49.84339, p98=49.84339, p99=49.84339, p999=49.84339, mean_rate=0.9833483168902533, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:01:54,399 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-16 14:01:54,399 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:01:54,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:01:54.464" endtime="20210716 14:01:54.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:01:54.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:01:54.465" endtime="20210716 14:01:54.466"/>
</kw>
<status status="PASS" starttime="20210716 14:01:51.061" endtime="20210716 14:01:54.466"/>
</kw>
<msg timestamp="20210716 14:01:54.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:01:51.061" endtime="20210716 14:01:54.466"/>
</kw>
<msg timestamp="20210716 14:01:54.467" level="INFO">${result} = 2021-07-16 14:01:52,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:52,375 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:51.060" endtime="20210716 14:01:54.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:01:54.467" endtime="20210716 14:01:54.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:01:51.060" endtime="20210716 14:01:54.468"/>
</test>
<test id="s1-s3-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:01:54.473" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:01:57.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:01:57.635" level="INFO">${output} = 2021-07-16 14:01:55,610 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:55,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:54.471" endtime="20210716 14:01:57.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:01:57.636" level="INFO">2021-07-16 14:01:55,610 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:55,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:01:55,738 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:01:55,916 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-07-16 14:01:55,984 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:01:56,985 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:01:57,582 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.650273, max=17.650273, mean=17.650273, stddev=0.0, median=17.650273, p75=17.650273, p95=17.650273, p98=17.650273, p99=17.650273, p999=17.650273, mean_rate=0.984248708664464, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:01:57,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-16 14:01:57,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:01:57,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:01:57.636" endtime="20210716 14:01:57.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:01:57.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:01:57.637" endtime="20210716 14:01:57.637"/>
</kw>
<status status="PASS" starttime="20210716 14:01:54.470" endtime="20210716 14:01:57.637"/>
</kw>
<msg timestamp="20210716 14:01:57.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:01:54.470" endtime="20210716 14:01:57.637"/>
</kw>
<msg timestamp="20210716 14:01:57.638" level="INFO">${result} = 2021-07-16 14:01:55,610 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:01:55,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:01:54.469" endtime="20210716 14:01:57.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:01:57.638" endtime="20210716 14:01:57.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:01:54.468" endtime="20210716 14:01:57.638"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210716 14:01:43.275" endtime="20210716 14:01:57.640"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:02:01.657" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:02:06.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:02:06.310" level="INFO">${output} = 2021-07-16 14:02:02,820 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:02:02,908 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:02:01.653" endtime="20210716 14:02:06.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:02:06.311" level="INFO">2021-07-16 14:02:02,820 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:02:02,908 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:02:02,908 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:02:03,078 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-07-16 14:02:03,160 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:02:04,161 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:02:04,236 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-16 14:02:05,162 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:02:05,953 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=44.049212, max=44.049212, mean=44.049212, stddev=0.0, median=44.049212, p75=44.049212, p95=44.049212, p98=44.049212, p99=44.049212, p999=44.049212, mean_rate=0.9550042854862307, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:02:05,954 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-16 14:02:05,954 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:02:05,954 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:02:06.310" endtime="20210716 14:02:06.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:02:06.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:02:06.311" endtime="20210716 14:02:06.312"/>
</kw>
<status status="PASS" starttime="20210716 14:02:01.652" endtime="20210716 14:02:06.312"/>
</kw>
<msg timestamp="20210716 14:02:06.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:02:01.652" endtime="20210716 14:02:06.312"/>
</kw>
<msg timestamp="20210716 14:02:06.312" level="INFO">${result} = 2021-07-16 14:02:02,820 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:02:02,908 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:02:01.651" endtime="20210716 14:02:06.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:02:06.313" endtime="20210716 14:02:06.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:02:01.650" endtime="20210716 14:02:06.313"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210716 14:02:01.614" endtime="20210716 14:02:06.315"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:00:19.057" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:00:25.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:00:25.415" level="INFO">${output} = 2021-07-16 14:00:20,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:20,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:19.053" endtime="20210716 14:00:25.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:00:25.417" level="INFO">2021-07-16 14:00:20,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:20,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:00:20,419 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:00:20,596 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-07-16 14:00:20,678 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:21,685 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:21,745 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-16 14:00:21,951 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-16 14:00:22,678 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-16 14:00:22,686 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:22,853 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-16 14:00:22,853 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-58B4949D72AF-&gt;4040a3d8-494e-4955-94cd-6bad37b3be4d
2021-07-16 14:00:22,854 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-16 14:00:23,686 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:24,687 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:00:25,031 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2230.074585, max=2230.074585, mean=2230.074585, stddev=0.0, median=2230.074585, p75=2230.074585, p95=2230.074585, p98=2230.074585, p99=2230.074585, p999=2230.074585, mean_rate=0.3294839235612625, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:00:25,032 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-07-16 14:00:25,038 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:00:25,038 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:00:25.416" endtime="20210716 14:00:25.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:00:25.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:00:25.417" endtime="20210716 14:00:25.417"/>
</kw>
<status status="PASS" starttime="20210716 14:00:19.052" endtime="20210716 14:00:25.418"/>
</kw>
<msg timestamp="20210716 14:00:25.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:00:19.052" endtime="20210716 14:00:25.418"/>
</kw>
<msg timestamp="20210716 14:00:25.418" level="INFO">${result} = 2021-07-16 14:00:20,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:20,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:19.051" endtime="20210716 14:00:25.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:00:25.418" endtime="20210716 14:00:25.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:00:19.050" endtime="20210716 14:00:25.419"/>
</test>
<test id="s1-s5-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:00:25.424" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:00:28.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:00:28.762" level="INFO">${output} = 2021-07-16 14:00:26,614 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:26,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:25.422" endtime="20210716 14:00:28.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:00:28.764" level="INFO">2021-07-16 14:00:26,614 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:26,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:00:26,794 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:00:26,999 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-07-16 14:00:27,051 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:28,055 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:00:28,708 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=56.819448, max=56.819448, mean=56.819448, stddev=0.0, median=56.819448, p75=56.819448, p95=56.819448, p98=56.819448, p99=56.819448, p999=56.819448, mean_rate=0.9819846037481733, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:00:28,715 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-16 14:00:28,715 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:00:28,715 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:00:28.763" endtime="20210716 14:00:28.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:00:28.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:00:28.764" endtime="20210716 14:00:28.765"/>
</kw>
<status status="PASS" starttime="20210716 14:00:25.422" endtime="20210716 14:00:28.765"/>
</kw>
<msg timestamp="20210716 14:00:28.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:00:25.422" endtime="20210716 14:00:28.766"/>
</kw>
<msg timestamp="20210716 14:00:28.766" level="INFO">${result} = 2021-07-16 14:00:26,614 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:26,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:25.421" endtime="20210716 14:00:28.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:00:28.766" endtime="20210716 14:00:28.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:00:25.420" endtime="20210716 14:00:28.767"/>
</test>
<test id="s1-s5-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210716 14:00:28.773" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210716 14:00:32.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210716 14:00:32.187" level="INFO">${output} = 2021-07-16 14:00:30,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:30,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:28.771" endtime="20210716 14:00:32.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210716 14:00:32.188" level="INFO">2021-07-16 14:00:30,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:30,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-16 14:00:30,211 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-16 14:00:30,433 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-07-16 14:00:30,526 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-16 14:00:31,537 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-16 14:00:32,144 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=12.034579, max=12.034579, mean=12.034579, stddev=0.0, median=12.034579, p75=12.034579, p95=12.034579, p98=12.034579, p99=12.034579, p999=12.034579, mean_rate=0.9852661846407531, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-16 14:00:32,144 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-16 14:00:32,145 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-16 14:00:32,145 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210716 14:00:32.188" endtime="20210716 14:00:32.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210716 14:00:32.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210716 14:00:32.189" endtime="20210716 14:00:32.189"/>
</kw>
<status status="PASS" starttime="20210716 14:00:28.770" endtime="20210716 14:00:32.190"/>
</kw>
<msg timestamp="20210716 14:00:32.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210716 14:00:28.770" endtime="20210716 14:00:32.190"/>
</kw>
<msg timestamp="20210716 14:00:32.190" level="INFO">${result} = 2021-07-16 14:00:30,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-16 14:00:30,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210716 14:00:28.769" endtime="20210716 14:00:32.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210716 14:00:32.191" endtime="20210716 14:00:32.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210716 14:00:28.769" endtime="20210716 14:00:32.191"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210716 14:00:19.015" endtime="20210716 14:00:32.192"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="42092"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
