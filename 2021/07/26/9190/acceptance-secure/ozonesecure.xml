<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210726 11:23:51.011" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:21.808" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:21.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:21.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:33:21.804" endtime="20210726 10:33:21.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:21.812" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:33:21.812" endtime="20210726 10:33:21.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:21.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:21.813" endtime="20210726 10:33:21.813"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.803" endtime="20210726 10:33:21.814"/>
</kw>
<msg timestamp="20210726 10:33:21.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:21.803" endtime="20210726 10:33:21.814"/>
</kw>
<msg timestamp="20210726 10:33:21.814" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210726 10:33:21.802" endtime="20210726 10:33:21.814"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:21.819" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:21.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:21.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:33:21.817" endtime="20210726 10:33:21.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:21.828" level="INFO"/>
<status status="PASS" starttime="20210726 10:33:21.828" endtime="20210726 10:33:21.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:21.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:21.829" endtime="20210726 10:33:21.829"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.816" endtime="20210726 10:33:21.830"/>
</kw>
<msg timestamp="20210726 10:33:21.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:21.816" endtime="20210726 10:33:21.830"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.815" endtime="20210726 10:33:21.830"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.814" endtime="20210726 10:33:21.830"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.802" endtime="20210726 10:33:21.830"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.801" endtime="20210726 10:33:21.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:21.834" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:21.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:21.971" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210726 10:33:21.832" endtime="20210726 10:33:21.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:21.973" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 483

HTTP/1.1 200 OK
Date: Mon, 26 Jul 2021 10:33:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCXvpmgjkAf7kAQIZK4MB9ffdBPFKlPplfW37uyt8/HBX/kSlSbrZbcq76bFSfxgMXdeYsq1zZ/8aYgyUNgJwJ9+fl
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1627331601958&amp;s=exnEWmdHZB7JxmmseERii8LuM9rPW9Vse45FKjf1eVA="; Path=/; HttpOnly
Last-Modified: Mon, 26 Jul 2021 10:18:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210726 10:33:21.972" endtime="20210726 10:33:21.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:21.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:21.973" endtime="20210726 10:33:21.974"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.832" endtime="20210726 10:33:21.975"/>
</kw>
<msg timestamp="20210726 10:33:21.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:21.831" endtime="20210726 10:33:21.975"/>
</kw>
<msg timestamp="20210726 10:33:21.975" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210726 10:33:21.831" endtime="20210726 10:33:21.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:33:21.976" endtime="20210726 10:33:21.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 10:33:21.800" endtime="20210726 10:33:21.976"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:21.984" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:21.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:21.989" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:33:21.982" endtime="20210726 10:33:21.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:21.990" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:33:21.989" endtime="20210726 10:33:21.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:21.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:21.990" endtime="20210726 10:33:21.991"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.981" endtime="20210726 10:33:21.991"/>
</kw>
<msg timestamp="20210726 10:33:21.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:21.981" endtime="20210726 10:33:21.992"/>
</kw>
<msg timestamp="20210726 10:33:21.992" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:33:21.980" endtime="20210726 10:33:21.992"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:33:21.994" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:33:21.992" endtime="20210726 10:33:21.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:22.001" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:22.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:22.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:33:21.997" endtime="20210726 10:33:22.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:22.014" level="INFO"/>
<status status="PASS" starttime="20210726 10:33:22.013" endtime="20210726 10:33:22.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:22.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:22.014" endtime="20210726 10:33:22.015"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.996" endtime="20210726 10:33:22.015"/>
</kw>
<msg timestamp="20210726 10:33:22.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:21.996" endtime="20210726 10:33:22.015"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.995" endtime="20210726 10:33:22.016"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.995" endtime="20210726 10:33:22.016"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.980" endtime="20210726 10:33:22.016"/>
</kw>
<status status="PASS" starttime="20210726 10:33:21.979" endtime="20210726 10:33:22.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:22.020" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:21.979" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 10:33:22.018" endtime="20210726 10:38:21.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 10:38:21.980" endtime="20210726 10:38:21.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 10:38:21.980" endtime="20210726 10:38:21.980"/>
</kw>
<status status="FAIL" starttime="20210726 10:33:22.017" endtime="20210726 10:38:21.981"/>
</kw>
<msg timestamp="20210726 10:38:21.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:33:22.017" endtime="20210726 10:38:21.981"/>
</kw>
<status status="FAIL" starttime="20210726 10:33:22.016" endtime="20210726 10:38:21.981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210726 10:38:21.982" endtime="20210726 10:38:21.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 10:38:21.982" endtime="20210726 10:38:21.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210726 10:33:21.978" endtime="20210726 10:38:21.983">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210726 10:33:21.765" endtime="20210726 10:38:21.985"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:22.006" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:23.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:23.735" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210726 10:38:22.003" endtime="20210726 10:38:23.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:23.737" level="INFO">om</msg>
<status status="PASS" starttime="20210726 10:38:23.736" endtime="20210726 10:38:23.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:23.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:23.737" endtime="20210726 10:38:23.738"/>
</kw>
<status status="PASS" starttime="20210726 10:38:21.994" endtime="20210726 10:38:23.738"/>
</kw>
<msg timestamp="20210726 10:38:23.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:21.993" endtime="20210726 10:38:23.739"/>
</kw>
<msg timestamp="20210726 10:38:23.739" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210726 10:38:21.992" endtime="20210726 10:38:23.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:23.739" endtime="20210726 10:38:23.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:23.745" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:26.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:26.227" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210726 10:38:23.742" endtime="20210726 10:38:26.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:26.228" level="INFO">om</msg>
<status status="PASS" starttime="20210726 10:38:26.227" endtime="20210726 10:38:26.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:26.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:26.229" endtime="20210726 10:38:26.230"/>
</kw>
<status status="PASS" starttime="20210726 10:38:23.741" endtime="20210726 10:38:26.231"/>
</kw>
<msg timestamp="20210726 10:38:26.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:23.741" endtime="20210726 10:38:26.231"/>
</kw>
<msg timestamp="20210726 10:38:26.232" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210726 10:38:23.740" endtime="20210726 10:38:26.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:26.232" endtime="20210726 10:38:26.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 10:38:21.991" endtime="20210726 10:38:26.234"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:26.241" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:29.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:29.430" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:38:26.239" endtime="20210726 10:38:29.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:29.431" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:38:29.430" endtime="20210726 10:38:29.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:29.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:29.432" endtime="20210726 10:38:29.433"/>
</kw>
<status status="PASS" starttime="20210726 10:38:26.238" endtime="20210726 10:38:29.433"/>
</kw>
<msg timestamp="20210726 10:38:29.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:26.238" endtime="20210726 10:38:29.433"/>
</kw>
<msg timestamp="20210726 10:38:29.433" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210726 10:38:26.237" endtime="20210726 10:38:29.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:29.434" endtime="20210726 10:38:29.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:29.442" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:32.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:32.765" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:38:29.438" endtime="20210726 10:38:32.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:32.766" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:38:32.765" endtime="20210726 10:38:32.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:32.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:32.766" endtime="20210726 10:38:32.767"/>
</kw>
<status status="PASS" starttime="20210726 10:38:29.437" endtime="20210726 10:38:32.767"/>
</kw>
<msg timestamp="20210726 10:38:32.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:29.437" endtime="20210726 10:38:32.768"/>
</kw>
<msg timestamp="20210726 10:38:32.768" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210726 10:38:29.434" endtime="20210726 10:38:32.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:32.768" endtime="20210726 10:38:32.769"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 10:38:26.235" endtime="20210726 10:38:32.769"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:32.776" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:35.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:35.473" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210726 10:38:32.774" endtime="20210726 10:38:35.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:35.475" level="INFO">om</msg>
<status status="PASS" starttime="20210726 10:38:35.474" endtime="20210726 10:38:35.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:35.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:35.476" endtime="20210726 10:38:35.477"/>
</kw>
<status status="PASS" starttime="20210726 10:38:32.773" endtime="20210726 10:38:35.478"/>
</kw>
<msg timestamp="20210726 10:38:35.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:32.772" endtime="20210726 10:38:35.478"/>
</kw>
<msg timestamp="20210726 10:38:35.480" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210726 10:38:32.771" endtime="20210726 10:38:35.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:35.483" endtime="20210726 10:38:35.484"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:35.484" endtime="20210726 10:38:35.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:35.490" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:38.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:38.329" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210726 10:38:35.487" endtime="20210726 10:38:38.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:38.333" level="INFO">om</msg>
<status status="PASS" starttime="20210726 10:38:38.331" endtime="20210726 10:38:38.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:38.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:38.333" endtime="20210726 10:38:38.334"/>
</kw>
<status status="PASS" starttime="20210726 10:38:35.486" endtime="20210726 10:38:38.334"/>
</kw>
<msg timestamp="20210726 10:38:38.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:35.486" endtime="20210726 10:38:38.335"/>
</kw>
<msg timestamp="20210726 10:38:38.335" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210726 10:38:35.485" endtime="20210726 10:38:38.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:38.335" endtime="20210726 10:38:38.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:38.336" endtime="20210726 10:38:38.337"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 10:38:32.770" endtime="20210726 10:38:38.337"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:38.346" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:41.099" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:38:41.099" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210726 10:38:38.343" endtime="20210726 10:38:41.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:41.100" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210726 10:38:41.100" endtime="20210726 10:38:41.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:41.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:41.101" endtime="20210726 10:38:41.102"/>
</kw>
<msg timestamp="20210726 10:38:41.102" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210726 10:38:38.341" endtime="20210726 10:38:41.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:41.102" endtime="20210726 10:38:41.103"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:41.107" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:43.948" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:38:43.948" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210726 10:38:41.104" endtime="20210726 10:38:43.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:43.949" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210726 10:38:43.948" endtime="20210726 10:38:43.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:43.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:43.949" endtime="20210726 10:38:43.950"/>
</kw>
<msg timestamp="20210726 10:38:43.951" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210726 10:38:41.103" endtime="20210726 10:38:43.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:38:43.951" endtime="20210726 10:38:43.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 10:38:38.339" endtime="20210726 10:38:43.952"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210726 10:38:21.987" endtime="20210726 10:38:43.954"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210726 10:38:43.975" level="INFO">${random} = 84461</msg>
<status status="PASS" starttime="20210726 10:38:43.975" endtime="20210726 10:38:43.976"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:38:43.978" level="INFO">${source} = 84461-source</msg>
<status status="PASS" starttime="20210726 10:38:43.976" endtime="20210726 10:38:43.978"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:38:43.980" level="INFO">${target} = 84461-target</msg>
<status status="PASS" starttime="20210726 10:38:43.978" endtime="20210726 10:38:43.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:43.985" level="INFO">Running command 'ozone sh volume create 84461-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:38:52.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:38:52.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:38:43.982" endtime="20210726 10:38:52.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:38:52.101" level="INFO"/>
<status status="PASS" starttime="20210726 10:38:52.100" endtime="20210726 10:38:52.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:38:52.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:38:52.101" endtime="20210726 10:38:52.101"/>
</kw>
<status status="PASS" starttime="20210726 10:38:43.981" endtime="20210726 10:38:52.102"/>
</kw>
<msg timestamp="20210726 10:38:52.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:43.981" endtime="20210726 10:38:52.102"/>
</kw>
<status status="PASS" starttime="20210726 10:38:43.980" endtime="20210726 10:38:52.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:38:52.108" level="INFO">Running command 'ozone sh volume create 84461-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:39:00.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:39:00.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:38:52.104" endtime="20210726 10:39:00.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:39:00.507" level="INFO"/>
<status status="PASS" starttime="20210726 10:39:00.507" endtime="20210726 10:39:00.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:39:00.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:39:00.508" endtime="20210726 10:39:00.508"/>
</kw>
<status status="PASS" starttime="20210726 10:38:52.104" endtime="20210726 10:39:00.509"/>
</kw>
<msg timestamp="20210726 10:39:00.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:38:52.103" endtime="20210726 10:39:00.509"/>
</kw>
<status status="PASS" starttime="20210726 10:38:52.103" endtime="20210726 10:39:00.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:39:00.523" level="INFO">Running command 'ozone sh bucket create 84461-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:39:06.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:39:06.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:39:00.513" endtime="20210726 10:39:06.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:39:06.304" level="INFO"/>
<status status="PASS" starttime="20210726 10:39:06.303" endtime="20210726 10:39:06.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:39:06.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:39:06.304" endtime="20210726 10:39:06.305"/>
</kw>
<status status="PASS" starttime="20210726 10:39:00.512" endtime="20210726 10:39:06.306"/>
</kw>
<msg timestamp="20210726 10:39:06.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:39:00.511" endtime="20210726 10:39:06.306"/>
</kw>
<status status="PASS" starttime="20210726 10:39:00.510" endtime="20210726 10:39:06.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:39:06.312" level="INFO">Running command 'ozone sh key put 84461-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:42:19.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:42:19.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:39:06.308" endtime="20210726 10:42:19.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:42:19.381" level="INFO"/>
<status status="PASS" starttime="20210726 10:42:19.380" endtime="20210726 10:42:19.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:42:19.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:42:19.381" endtime="20210726 10:42:19.381"/>
</kw>
<status status="PASS" starttime="20210726 10:39:06.307" endtime="20210726 10:42:19.382"/>
</kw>
<msg timestamp="20210726 10:42:19.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:39:06.307" endtime="20210726 10:42:19.382"/>
</kw>
<status status="PASS" starttime="20210726 10:39:06.306" endtime="20210726 10:42:19.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:42:19.387" level="INFO">Running command 'ozone sh bucket create 84461-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:42:28.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:42:28.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:42:19.384" endtime="20210726 10:42:28.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:42:28.013" level="INFO"/>
<status status="PASS" starttime="20210726 10:42:28.012" endtime="20210726 10:42:28.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:42:28.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:42:28.013" endtime="20210726 10:42:28.014"/>
</kw>
<status status="PASS" starttime="20210726 10:42:19.384" endtime="20210726 10:42:28.014"/>
</kw>
<msg timestamp="20210726 10:42:28.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:42:19.383" endtime="20210726 10:42:28.014"/>
</kw>
<status status="PASS" starttime="20210726 10:42:19.383" endtime="20210726 10:42:28.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:42:28.022" level="INFO">Running command 'ozone sh bucket link 84461-source/readable-bucket 84461-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:42:33.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:42:33.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:42:28.017" endtime="20210726 10:42:33.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:42:33.675" level="INFO"/>
<status status="PASS" starttime="20210726 10:42:33.675" endtime="20210726 10:42:33.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:42:33.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:42:33.676" endtime="20210726 10:42:33.676"/>
</kw>
<status status="PASS" starttime="20210726 10:42:28.016" endtime="20210726 10:42:33.677"/>
</kw>
<msg timestamp="20210726 10:42:33.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:42:28.016" endtime="20210726 10:42:33.677"/>
</kw>
<status status="PASS" starttime="20210726 10:42:28.015" endtime="20210726 10:42:33.677"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:42:33.681" level="INFO">Running command 'ozone sh bucket link 84461-source/readable-bucket 84461-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:42:41.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:42:41.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:42:33.679" endtime="20210726 10:42:41.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:42:41.007" level="INFO"/>
<status status="PASS" starttime="20210726 10:42:41.006" endtime="20210726 10:42:41.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:42:41.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:42:41.007" endtime="20210726 10:42:41.008"/>
</kw>
<status status="PASS" starttime="20210726 10:42:33.678" endtime="20210726 10:42:41.009"/>
</kw>
<msg timestamp="20210726 10:42:41.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:42:33.678" endtime="20210726 10:42:41.010"/>
</kw>
<status status="PASS" starttime="20210726 10:42:33.677" endtime="20210726 10:42:41.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:42:41.015" level="INFO">Running command 'ozone sh bucket link 84461-source/unreadable-bucket 84461-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:42:48.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:42:48.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:42:41.012" endtime="20210726 10:42:48.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:42:48.759" level="INFO"/>
<status status="PASS" starttime="20210726 10:42:48.758" endtime="20210726 10:42:48.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:42:48.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:42:48.759" endtime="20210726 10:42:48.760"/>
</kw>
<status status="PASS" starttime="20210726 10:42:41.011" endtime="20210726 10:42:48.760"/>
</kw>
<msg timestamp="20210726 10:42:48.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:42:41.011" endtime="20210726 10:42:48.760"/>
</kw>
<status status="PASS" starttime="20210726 10:42:41.010" endtime="20210726 10:42:48.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:42:48.765" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 84461-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:42:55.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:42:55.726" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:42:48.763" endtime="20210726 10:42:55.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:42:55.728" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:42:55.727" endtime="20210726 10:42:55.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:42:55.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:42:55.728" endtime="20210726 10:42:55.729"/>
</kw>
<status status="PASS" starttime="20210726 10:42:48.762" endtime="20210726 10:42:55.729"/>
</kw>
<msg timestamp="20210726 10:42:55.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:42:48.762" endtime="20210726 10:42:55.730"/>
</kw>
<status status="PASS" starttime="20210726 10:42:48.761" endtime="20210726 10:42:55.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:42:55.736" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 84461-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:04.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:04.299" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:42:55.732" endtime="20210726 10:43:04.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:04.301" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:04.300" endtime="20210726 10:43:04.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:04.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:04.301" endtime="20210726 10:43:04.302"/>
</kw>
<status status="PASS" starttime="20210726 10:42:55.731" endtime="20210726 10:43:04.302"/>
</kw>
<msg timestamp="20210726 10:43:04.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:42:55.731" endtime="20210726 10:43:04.302"/>
</kw>
<status status="PASS" starttime="20210726 10:42:55.730" endtime="20210726 10:43:04.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:04.309" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 84461-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:12.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:12.860" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:04.305" endtime="20210726 10:43:12.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:12.862" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:12.861" endtime="20210726 10:43:12.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:12.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:12.863" endtime="20210726 10:43:12.864"/>
</kw>
<status status="PASS" starttime="20210726 10:43:04.304" endtime="20210726 10:43:12.865"/>
</kw>
<msg timestamp="20210726 10:43:12.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:04.304" endtime="20210726 10:43:12.866"/>
</kw>
<status status="PASS" starttime="20210726 10:43:04.303" endtime="20210726 10:43:12.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:12.875" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 84461-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:21.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:21.255" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:12.871" endtime="20210726 10:43:21.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:21.256" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:21.255" endtime="20210726 10:43:21.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:21.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:21.256" endtime="20210726 10:43:21.257"/>
</kw>
<status status="PASS" starttime="20210726 10:43:12.869" endtime="20210726 10:43:21.257"/>
</kw>
<msg timestamp="20210726 10:43:21.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:12.868" endtime="20210726 10:43:21.258"/>
</kw>
<status status="PASS" starttime="20210726 10:43:12.867" endtime="20210726 10:43:21.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:21.264" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 84461-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:29.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:29.222" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:21.261" endtime="20210726 10:43:29.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:29.230" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:43:29.229" endtime="20210726 10:43:29.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:29.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:29.231" endtime="20210726 10:43:29.232"/>
</kw>
<status status="PASS" starttime="20210726 10:43:21.259" endtime="20210726 10:43:29.233"/>
</kw>
<msg timestamp="20210726 10:43:29.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:21.259" endtime="20210726 10:43:29.233"/>
</kw>
<status status="PASS" starttime="20210726 10:43:21.258" endtime="20210726 10:43:29.234"/>
</kw>
<status status="PASS" starttime="20210726 10:39:00.510" endtime="20210726 10:43:29.235"/>
</kw>
<status status="PASS" starttime="20210726 10:39:00.509" endtime="20210726 10:43:29.235"/>
</kw>
<status status="PASS" starttime="20210726 10:38:43.975" endtime="20210726 10:43:29.235"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:29.245" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:29.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:29.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:43:29.241" endtime="20210726 10:43:29.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:29.256" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:43:29.255" endtime="20210726 10:43:29.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:29.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:29.256" endtime="20210726 10:43:29.259"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.240" endtime="20210726 10:43:29.259"/>
</kw>
<msg timestamp="20210726 10:43:29.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:29.240" endtime="20210726 10:43:29.261"/>
</kw>
<msg timestamp="20210726 10:43:29.261" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:43:29.239" endtime="20210726 10:43:29.261"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:43:29.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:43:29.261" endtime="20210726 10:43:29.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:29.274" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:29.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:29.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:43:29.269" endtime="20210726 10:43:29.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:29.311" level="INFO"/>
<status status="PASS" starttime="20210726 10:43:29.310" endtime="20210726 10:43:29.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:29.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:29.311" endtime="20210726 10:43:29.312"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.268" endtime="20210726 10:43:29.313"/>
</kw>
<msg timestamp="20210726 10:43:29.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:29.266" endtime="20210726 10:43:29.313"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.265" endtime="20210726 10:43:29.313"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.264" endtime="20210726 10:43:29.313"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.238" endtime="20210726 10:43:29.313"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.237" endtime="20210726 10:43:29.313"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:29.319" level="INFO">Running command 'ozone sh bucket link 84461-source/no-such-bucket 84461-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:37.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:37.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:43:29.315" endtime="20210726 10:43:37.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:37.209" level="INFO"/>
<status status="PASS" starttime="20210726 10:43:37.207" endtime="20210726 10:43:37.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:37.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:37.210" endtime="20210726 10:43:37.212"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.315" endtime="20210726 10:43:37.213"/>
</kw>
<msg timestamp="20210726 10:43:37.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:29.314" endtime="20210726 10:43:37.213"/>
</kw>
<status status="PASS" starttime="20210726 10:43:29.314" endtime="20210726 10:43:37.214"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:37.220" level="INFO">Running command 'ozone sh key list 84461-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:44.954" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:43:44.955" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210726 10:43:37.216" endtime="20210726 10:43:44.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:44.956" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210726 10:43:44.955" endtime="20210726 10:43:44.956"/>
</kw>
<msg timestamp="20210726 10:43:44.957" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210726 10:43:37.215" endtime="20210726 10:43:44.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:43:44.957" endtime="20210726 10:43:44.957"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:43:29.236" endtime="20210726 10:43:44.958"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:44.972" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:44.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:44.977" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:43:44.966" endtime="20210726 10:43:44.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:44.980" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:43:44.978" endtime="20210726 10:43:44.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:44.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:44.980" endtime="20210726 10:43:44.982"/>
</kw>
<status status="PASS" starttime="20210726 10:43:44.964" endtime="20210726 10:43:44.982"/>
</kw>
<msg timestamp="20210726 10:43:44.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:44.963" endtime="20210726 10:43:44.983"/>
</kw>
<msg timestamp="20210726 10:43:44.984" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:43:44.963" endtime="20210726 10:43:44.984"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:43:44.987" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:43:44.984" endtime="20210726 10:43:44.987"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:44.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:45.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:45.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:43:44.992" endtime="20210726 10:43:45.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:45.005" level="INFO"/>
<status status="PASS" starttime="20210726 10:43:45.004" endtime="20210726 10:43:45.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:45.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:45.005" endtime="20210726 10:43:45.006"/>
</kw>
<status status="PASS" starttime="20210726 10:43:44.991" endtime="20210726 10:43:45.006"/>
</kw>
<msg timestamp="20210726 10:43:45.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:44.990" endtime="20210726 10:43:45.006"/>
</kw>
<status status="PASS" starttime="20210726 10:43:44.989" endtime="20210726 10:43:45.007"/>
</kw>
<status status="PASS" starttime="20210726 10:43:44.988" endtime="20210726 10:43:45.007"/>
</kw>
<status status="PASS" starttime="20210726 10:43:44.962" endtime="20210726 10:43:45.007"/>
</kw>
<status status="PASS" starttime="20210726 10:43:44.962" endtime="20210726 10:43:45.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:45.012" level="INFO">Running command 'ozone sh bucket link 84461-source/bucket1 84461-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:51.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:51.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:43:45.009" endtime="20210726 10:43:51.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:51.406" level="INFO"/>
<status status="PASS" starttime="20210726 10:43:51.404" endtime="20210726 10:43:51.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:51.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:51.406" endtime="20210726 10:43:51.408"/>
</kw>
<status status="PASS" starttime="20210726 10:43:45.009" endtime="20210726 10:43:51.408"/>
</kw>
<msg timestamp="20210726 10:43:51.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:45.008" endtime="20210726 10:43:51.409"/>
</kw>
<status status="PASS" starttime="20210726 10:43:45.007" endtime="20210726 10:43:51.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:51.416" level="INFO">Running command 'ozone sh bucket create 84461-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:43:59.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:43:59.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:43:51.411" endtime="20210726 10:43:59.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:43:59.457" level="INFO"/>
<status status="PASS" starttime="20210726 10:43:59.455" endtime="20210726 10:43:59.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:43:59.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:43:59.457" endtime="20210726 10:43:59.458"/>
</kw>
<status status="PASS" starttime="20210726 10:43:51.410" endtime="20210726 10:43:59.458"/>
</kw>
<msg timestamp="20210726 10:43:59.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:43:51.410" endtime="20210726 10:43:59.458"/>
</kw>
<status status="PASS" starttime="20210726 10:43:51.409" endtime="20210726 10:43:59.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:43:59.464" level="INFO">Running command 'ozone sh key put 84461-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:45:44.962" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 10:43:59.461" endtime="20210726 10:45:44.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 10:45:44.963" endtime="20210726 10:45:44.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 10:45:44.963" endtime="20210726 10:45:44.963"/>
</kw>
<status status="FAIL" starttime="20210726 10:43:59.460" endtime="20210726 10:45:44.964"/>
</kw>
<msg timestamp="20210726 10:45:44.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:43:59.460" endtime="20210726 10:45:44.964"/>
</kw>
<status status="FAIL" starttime="20210726 10:43:59.459" endtime="20210726 10:45:44.964"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210726 10:45:44.965" endtime="20210726 10:45:44.965"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210726 10:43:44.960" endtime="20210726 10:45:44.965">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:45:44.975" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:45:44.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:45:44.980" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:45:44.972" endtime="20210726 10:45:44.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:45:44.982" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:45:44.981" endtime="20210726 10:45:44.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:45:44.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:45:44.983" endtime="20210726 10:45:44.984"/>
</kw>
<status status="PASS" starttime="20210726 10:45:44.972" endtime="20210726 10:45:44.985"/>
</kw>
<msg timestamp="20210726 10:45:44.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:45:44.971" endtime="20210726 10:45:44.985"/>
</kw>
<msg timestamp="20210726 10:45:44.986" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:45:44.971" endtime="20210726 10:45:44.986"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:45:44.987" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:45:44.986" endtime="20210726 10:45:44.987"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:45:44.995" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:45:45.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:45:45.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:45:44.992" endtime="20210726 10:45:45.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:45:45.009" level="INFO"/>
<status status="PASS" starttime="20210726 10:45:45.007" endtime="20210726 10:45:45.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:45:45.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:45:45.009" endtime="20210726 10:45:45.010"/>
</kw>
<status status="PASS" starttime="20210726 10:45:44.990" endtime="20210726 10:45:45.011"/>
</kw>
<msg timestamp="20210726 10:45:45.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:45:44.989" endtime="20210726 10:45:45.011"/>
</kw>
<status status="PASS" starttime="20210726 10:45:44.988" endtime="20210726 10:45:45.012"/>
</kw>
<status status="PASS" starttime="20210726 10:45:44.987" endtime="20210726 10:45:45.012"/>
</kw>
<status status="PASS" starttime="20210726 10:45:44.970" endtime="20210726 10:45:45.012"/>
</kw>
<status status="PASS" starttime="20210726 10:45:44.969" endtime="20210726 10:45:45.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:45:45.019" level="INFO">Running command 'ozone sh key put 84461-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:47:44.971" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 10:45:45.016" endtime="20210726 10:47:44.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 10:47:44.973" endtime="20210726 10:47:44.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 10:47:44.974" endtime="20210726 10:47:44.974"/>
</kw>
<status status="FAIL" starttime="20210726 10:45:45.015" endtime="20210726 10:47:44.984"/>
</kw>
<msg timestamp="20210726 10:47:44.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:45:45.014" endtime="20210726 10:47:44.984"/>
</kw>
<status status="FAIL" starttime="20210726 10:45:45.013" endtime="20210726 10:47:44.985"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210726 10:47:44.985" endtime="20210726 10:47:44.985"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210726 10:45:44.968" endtime="20210726 10:47:44.986">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:47:44.997" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:47:45.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:47:45.002" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:47:44.994" endtime="20210726 10:47:45.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:47:45.005" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:47:45.004" endtime="20210726 10:47:45.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:47:45.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:47:45.006" endtime="20210726 10:47:45.007"/>
</kw>
<status status="PASS" starttime="20210726 10:47:44.993" endtime="20210726 10:47:45.007"/>
</kw>
<msg timestamp="20210726 10:47:45.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:47:44.993" endtime="20210726 10:47:45.008"/>
</kw>
<msg timestamp="20210726 10:47:45.009" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:47:44.992" endtime="20210726 10:47:45.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:47:45.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:47:45.009" endtime="20210726 10:47:45.011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:47:45.017" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:47:45.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:47:45.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:47:45.014" endtime="20210726 10:47:45.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:47:45.028" level="INFO"/>
<status status="PASS" starttime="20210726 10:47:45.027" endtime="20210726 10:47:45.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:47:45.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:47:45.028" endtime="20210726 10:47:45.029"/>
</kw>
<status status="PASS" starttime="20210726 10:47:45.013" endtime="20210726 10:47:45.030"/>
</kw>
<msg timestamp="20210726 10:47:45.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:47:45.012" endtime="20210726 10:47:45.030"/>
</kw>
<status status="PASS" starttime="20210726 10:47:45.011" endtime="20210726 10:47:45.030"/>
</kw>
<status status="PASS" starttime="20210726 10:47:45.011" endtime="20210726 10:47:45.031"/>
</kw>
<status status="PASS" starttime="20210726 10:47:44.991" endtime="20210726 10:47:45.031"/>
</kw>
<status status="PASS" starttime="20210726 10:47:44.990" endtime="20210726 10:47:45.031"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:47:45.046" level="INFO">Running command 'ozone sh key list 84461-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:47:51.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:47:51.576" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210726 10:47:45.040" endtime="20210726 10:47:51.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:47:51.578" level="INFO">key1</msg>
<status status="PASS" starttime="20210726 10:47:51.577" endtime="20210726 10:47:51.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:47:51.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:47:51.579" endtime="20210726 10:47:51.583"/>
</kw>
<status status="PASS" starttime="20210726 10:47:45.038" endtime="20210726 10:47:51.583"/>
</kw>
<msg timestamp="20210726 10:47:51.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:47:45.037" endtime="20210726 10:47:51.584"/>
</kw>
<msg timestamp="20210726 10:47:51.585" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210726 10:47:45.031" endtime="20210726 10:47:51.585"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:47:51.592" level="INFO">Running command 'ozone sh key list 84461-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:00.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:00.095" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210726 10:47:51.589" endtime="20210726 10:48:00.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:00.101" level="INFO">key1</msg>
<status status="PASS" starttime="20210726 10:48:00.097" endtime="20210726 10:48:00.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:00.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:00.102" endtime="20210726 10:48:00.103"/>
</kw>
<status status="PASS" starttime="20210726 10:47:51.587" endtime="20210726 10:48:00.104"/>
</kw>
<msg timestamp="20210726 10:48:00.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:47:51.587" endtime="20210726 10:48:00.104"/>
</kw>
<msg timestamp="20210726 10:48:00.105" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210726 10:47:51.585" endtime="20210726 10:48:00.105"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:48:00.106" endtime="20210726 10:48:00.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:48:00.107" endtime="20210726 10:48:00.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210726 10:48:00.110" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210726 10:48:00.109" endtime="20210726 10:48:00.110"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210726 10:47:44.988" endtime="20210726 10:48:00.111">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:00.123" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:00.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:00.129" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:48:00.119" endtime="20210726 10:48:00.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:00.131" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:48:00.130" endtime="20210726 10:48:00.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:00.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:00.132" endtime="20210726 10:48:00.133"/>
</kw>
<status status="PASS" starttime="20210726 10:48:00.118" endtime="20210726 10:48:00.134"/>
</kw>
<msg timestamp="20210726 10:48:00.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:00.118" endtime="20210726 10:48:00.134"/>
</kw>
<msg timestamp="20210726 10:48:00.135" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:48:00.117" endtime="20210726 10:48:00.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:48:00.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:48:00.135" endtime="20210726 10:48:00.137"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:00.144" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:00.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:00.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:48:00.141" endtime="20210726 10:48:00.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:00.158" level="INFO"/>
<status status="PASS" starttime="20210726 10:48:00.157" endtime="20210726 10:48:00.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:00.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:00.159" endtime="20210726 10:48:00.160"/>
</kw>
<status status="PASS" starttime="20210726 10:48:00.139" endtime="20210726 10:48:00.161"/>
</kw>
<msg timestamp="20210726 10:48:00.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:00.139" endtime="20210726 10:48:00.162"/>
</kw>
<status status="PASS" starttime="20210726 10:48:00.138" endtime="20210726 10:48:00.162"/>
</kw>
<status status="PASS" starttime="20210726 10:48:00.137" endtime="20210726 10:48:00.162"/>
</kw>
<status status="PASS" starttime="20210726 10:48:00.115" endtime="20210726 10:48:00.162"/>
</kw>
<status status="PASS" starttime="20210726 10:48:00.114" endtime="20210726 10:48:00.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:00.170" level="INFO">Running command 'ozone sh key delete 84461-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:07.302" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:48:07.302" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210726 10:48:00.167" endtime="20210726 10:48:07.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:07.303" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210726 10:48:07.302" endtime="20210726 10:48:07.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:07.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210726 10:48:07.304" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210726 10:48:07.304" endtime="20210726 10:48:07.305"/>
</kw>
<status status="FAIL" starttime="20210726 10:48:00.166" endtime="20210726 10:48:07.305"/>
</kw>
<msg timestamp="20210726 10:48:07.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:48:00.165" endtime="20210726 10:48:07.305"/>
</kw>
<status status="FAIL" starttime="20210726 10:48:00.163" endtime="20210726 10:48:07.305"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210726 10:48:07.306" endtime="20210726 10:48:07.306"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 10:48:07.306" endtime="20210726 10:48:07.306"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210726 10:48:00.113" endtime="20210726 10:48:07.306">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:07.313" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:07.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:07.317" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:48:07.311" endtime="20210726 10:48:07.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:07.318" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:48:07.317" endtime="20210726 10:48:07.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:07.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:07.319" endtime="20210726 10:48:07.319"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.310" endtime="20210726 10:48:07.320"/>
</kw>
<msg timestamp="20210726 10:48:07.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:07.310" endtime="20210726 10:48:07.320"/>
</kw>
<msg timestamp="20210726 10:48:07.320" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:48:07.309" endtime="20210726 10:48:07.320"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:48:07.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:48:07.320" endtime="20210726 10:48:07.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:07.328" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:07.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:07.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:48:07.324" endtime="20210726 10:48:07.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:07.337" level="INFO"/>
<status status="PASS" starttime="20210726 10:48:07.336" endtime="20210726 10:48:07.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:07.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:07.337" endtime="20210726 10:48:07.338"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.324" endtime="20210726 10:48:07.338"/>
</kw>
<msg timestamp="20210726 10:48:07.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:07.323" endtime="20210726 10:48:07.338"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.322" endtime="20210726 10:48:07.339"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.321" endtime="20210726 10:48:07.339"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.308" endtime="20210726 10:48:07.339"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.308" endtime="20210726 10:48:07.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:07.344" level="INFO">Running command 'ozone sh bucket list 84461-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:15.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:15.414" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210726 10:48:07.341" endtime="20210726 10:48:15.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:15.416" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:43:36.845Z",
  "modificationTime" : "2021-07-26T10:43:36.845Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:48.657Z",
  "modificationTime" : "2021-07-26T10:43:29.129Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:43:51.056Z",
  "modificationTime" : "2021-07-26T10:43:51.056Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:33.594Z",
  "modificationTime" : "2021-07-26T10:43:21.151Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:40.894Z",
  "modificationTime" : "2021-07-26T10:42:40.894Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210726 10:48:15.415" endtime="20210726 10:48:15.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:15.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:15.417" endtime="20210726 10:48:15.418"/>
</kw>
<status status="PASS" starttime="20210726 10:48:07.341" endtime="20210726 10:48:15.418"/>
</kw>
<msg timestamp="20210726 10:48:15.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:07.340" endtime="20210726 10:48:15.418"/>
</kw>
<msg timestamp="20210726 10:48:15.419" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210726 10:48:07.339" endtime="20210726 10:48:15.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:48:15.419" endtime="20210726 10:48:15.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:48:15.420" endtime="20210726 10:48:15.421"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:48:07.307" endtime="20210726 10:48:15.421"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:15.429" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:15.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:15.436" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:48:15.426" endtime="20210726 10:48:15.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:15.438" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:48:15.436" endtime="20210726 10:48:15.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:15.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:15.438" endtime="20210726 10:48:15.439"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.426" endtime="20210726 10:48:15.440"/>
</kw>
<msg timestamp="20210726 10:48:15.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:15.425" endtime="20210726 10:48:15.440"/>
</kw>
<msg timestamp="20210726 10:48:15.441" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:48:15.425" endtime="20210726 10:48:15.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:48:15.442" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:48:15.441" endtime="20210726 10:48:15.442"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:15.450" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:15.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:15.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:48:15.447" endtime="20210726 10:48:15.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:15.463" level="INFO"/>
<status status="PASS" starttime="20210726 10:48:15.462" endtime="20210726 10:48:15.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:15.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:15.464" endtime="20210726 10:48:15.465"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.445" endtime="20210726 10:48:15.465"/>
</kw>
<msg timestamp="20210726 10:48:15.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:15.445" endtime="20210726 10:48:15.465"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.443" endtime="20210726 10:48:15.466"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.443" endtime="20210726 10:48:15.466"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.423" endtime="20210726 10:48:15.466"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.423" endtime="20210726 10:48:15.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:15.472" level="INFO">Running command 'ozone sh bucket info 84461-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:23.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:23.730" level="INFO">${output} = 84461-source bucket1</msg>
<status status="PASS" starttime="20210726 10:48:15.469" endtime="20210726 10:48:23.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:23.733" level="INFO">84461-source bucket1</msg>
<status status="PASS" starttime="20210726 10:48:23.731" endtime="20210726 10:48:23.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:23.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:23.734" endtime="20210726 10:48:23.735"/>
</kw>
<status status="PASS" starttime="20210726 10:48:15.468" endtime="20210726 10:48:23.736"/>
</kw>
<msg timestamp="20210726 10:48:23.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:15.468" endtime="20210726 10:48:23.737"/>
</kw>
<msg timestamp="20210726 10:48:23.737" level="INFO">${result} = 84461-source bucket1</msg>
<status status="PASS" starttime="20210726 10:48:15.466" endtime="20210726 10:48:23.738"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:48:23.738" endtime="20210726 10:48:23.739"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:48:15.421" endtime="20210726 10:48:23.739"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:23.749" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:23.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:23.754" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:48:23.747" endtime="20210726 10:48:23.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:23.756" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:48:23.755" endtime="20210726 10:48:23.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:23.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:23.757" endtime="20210726 10:48:23.758"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.746" endtime="20210726 10:48:23.759"/>
</kw>
<msg timestamp="20210726 10:48:23.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:23.746" endtime="20210726 10:48:23.759"/>
</kw>
<msg timestamp="20210726 10:48:23.759" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:48:23.745" endtime="20210726 10:48:23.760"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:48:23.761" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:48:23.760" endtime="20210726 10:48:23.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:23.767" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:23.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:23.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:48:23.763" endtime="20210726 10:48:23.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:23.779" level="INFO"/>
<status status="PASS" starttime="20210726 10:48:23.778" endtime="20210726 10:48:23.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:23.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:23.779" endtime="20210726 10:48:23.780"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.763" endtime="20210726 10:48:23.781"/>
</kw>
<msg timestamp="20210726 10:48:23.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:23.762" endtime="20210726 10:48:23.781"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.762" endtime="20210726 10:48:23.781"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.761" endtime="20210726 10:48:23.781"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.744" endtime="20210726 10:48:23.782"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.742" endtime="20210726 10:48:23.782"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:23.787" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 84461-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:32.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:32.688" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:48:23.784" endtime="20210726 10:48:32.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:32.690" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:48:32.689" endtime="20210726 10:48:32.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:32.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:32.690" endtime="20210726 10:48:32.691"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.783" endtime="20210726 10:48:32.692"/>
</kw>
<msg timestamp="20210726 10:48:32.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:23.783" endtime="20210726 10:48:32.693"/>
</kw>
<status status="PASS" starttime="20210726 10:48:23.782" endtime="20210726 10:48:32.695"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:32.702" level="INFO">Running command 'ozone sh bucket getacl 84461-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:39.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:39.557" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210726 10:48:32.699" endtime="20210726 10:48:39.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:39.559" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210726 10:48:39.558" endtime="20210726 10:48:39.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:39.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:39.559" endtime="20210726 10:48:39.560"/>
</kw>
<status status="PASS" starttime="20210726 10:48:32.698" endtime="20210726 10:48:39.561"/>
</kw>
<msg timestamp="20210726 10:48:39.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:32.698" endtime="20210726 10:48:39.561"/>
</kw>
<msg timestamp="20210726 10:48:39.562" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210726 10:48:32.696" endtime="20210726 10:48:39.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:48:39.562" endtime="20210726 10:48:39.563"/>
</kw>
<status status="PASS" starttime="20210726 10:48:32.695" endtime="20210726 10:48:39.563"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:39.572" level="INFO">Running command 'ozone sh bucket getacl 84461-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:47.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:47.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:48:39.569" endtime="20210726 10:48:47.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:47.888" level="INFO"/>
<status status="PASS" starttime="20210726 10:48:47.887" endtime="20210726 10:48:47.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:47.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:47.888" endtime="20210726 10:48:47.889"/>
</kw>
<status status="PASS" starttime="20210726 10:48:39.568" endtime="20210726 10:48:47.889"/>
</kw>
<msg timestamp="20210726 10:48:47.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:39.567" endtime="20210726 10:48:47.890"/>
</kw>
<msg timestamp="20210726 10:48:47.890" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210726 10:48:39.566" endtime="20210726 10:48:47.890"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:48:47.890" endtime="20210726 10:48:47.891"/>
</kw>
<status status="PASS" starttime="20210726 10:48:39.564" endtime="20210726 10:48:47.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:47.898" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 84461-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:48:53.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:48:53.482" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:48:47.895" endtime="20210726 10:48:53.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:48:53.483" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 10:48:53.482" endtime="20210726 10:48:53.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:48:53.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:48:53.484" endtime="20210726 10:48:53.484"/>
</kw>
<status status="PASS" starttime="20210726 10:48:47.892" endtime="20210726 10:48:53.485"/>
</kw>
<msg timestamp="20210726 10:48:53.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:47.892" endtime="20210726 10:48:53.485"/>
</kw>
<status status="PASS" starttime="20210726 10:48:47.891" endtime="20210726 10:48:53.486"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:48:53.497" level="INFO">Running command 'ozone sh bucket getacl 84461-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:02.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:02.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:48:53.493" endtime="20210726 10:49:02.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:02.468" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:02.467" endtime="20210726 10:49:02.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:02.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:02.468" endtime="20210726 10:49:02.469"/>
</kw>
<status status="PASS" starttime="20210726 10:48:53.491" endtime="20210726 10:49:02.469"/>
</kw>
<msg timestamp="20210726 10:49:02.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:48:53.491" endtime="20210726 10:49:02.469"/>
</kw>
<msg timestamp="20210726 10:49:02.470" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210726 10:48:53.489" endtime="20210726 10:49:02.470"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:49:02.470" endtime="20210726 10:49:02.471"/>
</kw>
<status status="PASS" starttime="20210726 10:48:53.486" endtime="20210726 10:49:02.471"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:02.481" level="INFO">Running command 'ozone sh bucket getacl 84461-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:09.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:09.483" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210726 10:49:02.477" endtime="20210726 10:49:09.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:09.486" level="INFO">READ</msg>
<status status="PASS" starttime="20210726 10:49:09.485" endtime="20210726 10:49:09.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:09.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:09.486" endtime="20210726 10:49:09.488"/>
</kw>
<status status="PASS" starttime="20210726 10:49:02.476" endtime="20210726 10:49:09.489"/>
</kw>
<msg timestamp="20210726 10:49:09.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:02.475" endtime="20210726 10:49:09.489"/>
</kw>
<msg timestamp="20210726 10:49:09.490" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210726 10:49:02.473" endtime="20210726 10:49:09.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:49:09.491" endtime="20210726 10:49:09.492"/>
</kw>
<status status="PASS" starttime="20210726 10:49:02.471" endtime="20210726 10:49:09.492"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:48:23.741" endtime="20210726 10:49:09.493"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:09.508" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:09.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:09.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:09.504" endtime="20210726 10:49:09.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:09.521" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:09.516" endtime="20210726 10:49:09.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:09.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:09.521" endtime="20210726 10:49:09.522"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.502" endtime="20210726 10:49:09.522"/>
</kw>
<msg timestamp="20210726 10:49:09.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:09.501" endtime="20210726 10:49:09.523"/>
</kw>
<msg timestamp="20210726 10:49:09.523" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:09.500" endtime="20210726 10:49:09.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:09.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:09.523" endtime="20210726 10:49:09.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:09.530" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:09.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:09.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:09.527" endtime="20210726 10:49:09.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:09.565" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:09.564" endtime="20210726 10:49:09.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:09.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:09.565" endtime="20210726 10:49:09.566"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.526" endtime="20210726 10:49:09.566"/>
</kw>
<msg timestamp="20210726 10:49:09.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:09.526" endtime="20210726 10:49:09.566"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.525" endtime="20210726 10:49:09.567"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.525" endtime="20210726 10:49:09.567"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.499" endtime="20210726 10:49:09.567"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.497" endtime="20210726 10:49:09.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:09.571" level="INFO">Running command 'ozone sh bucket link 84461-source/bucket2 84461-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:17.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:17.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:09.569" endtime="20210726 10:49:17.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:17.410" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:17.409" endtime="20210726 10:49:17.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:17.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:17.410" endtime="20210726 10:49:17.411"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.568" endtime="20210726 10:49:17.411"/>
</kw>
<msg timestamp="20210726 10:49:17.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:09.568" endtime="20210726 10:49:17.412"/>
</kw>
<status status="PASS" starttime="20210726 10:49:09.567" endtime="20210726 10:49:17.412"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:17.415" level="INFO">Running command 'ozone sh bucket create 84461-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:24.278" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:49:24.278" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210726 10:49:17.413" endtime="20210726 10:49:24.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:24.280" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210726 10:49:24.279" endtime="20210726 10:49:24.280"/>
</kw>
<msg timestamp="20210726 10:49:24.280" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210726 10:49:17.412" endtime="20210726 10:49:24.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:49:24.281" endtime="20210726 10:49:24.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:24.285" level="INFO">Running command 'ozone sh bucket create 84461-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:29.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:29.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:24.283" endtime="20210726 10:49:29.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:29.741" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:29.740" endtime="20210726 10:49:29.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:29.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:29.742" endtime="20210726 10:49:29.743"/>
</kw>
<status status="PASS" starttime="20210726 10:49:24.283" endtime="20210726 10:49:29.743"/>
</kw>
<msg timestamp="20210726 10:49:29.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:24.282" endtime="20210726 10:49:29.743"/>
</kw>
<status status="PASS" starttime="20210726 10:49:24.281" endtime="20210726 10:49:29.744"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:29.748" level="INFO">Running command 'ozone sh bucket link 84461-source/bucket1 84461-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:37.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:49:37.377" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210726 10:49:29.745" endtime="20210726 10:49:37.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:37.380" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210726 10:49:37.378" endtime="20210726 10:49:37.380"/>
</kw>
<msg timestamp="20210726 10:49:37.381" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210726 10:49:29.744" endtime="20210726 10:49:37.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:49:37.381" endtime="20210726 10:49:37.382"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:49:09.495" endtime="20210726 10:49:37.383"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:37.392" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:37.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:37.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:37.389" endtime="20210726 10:49:37.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:37.400" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:37.399" endtime="20210726 10:49:37.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:37.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:37.400" endtime="20210726 10:49:37.402"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.389" endtime="20210726 10:49:37.402"/>
</kw>
<msg timestamp="20210726 10:49:37.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:37.388" endtime="20210726 10:49:37.403"/>
</kw>
<msg timestamp="20210726 10:49:37.403" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:37.387" endtime="20210726 10:49:37.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:37.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:37.403" endtime="20210726 10:49:37.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:37.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:37.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:37.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:37.409" endtime="20210726 10:49:37.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:37.427" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:37.426" endtime="20210726 10:49:37.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:37.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:37.428" endtime="20210726 10:49:37.428"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.407" endtime="20210726 10:49:37.429"/>
</kw>
<msg timestamp="20210726 10:49:37.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:37.407" endtime="20210726 10:49:37.429"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.406" endtime="20210726 10:49:37.430"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.405" endtime="20210726 10:49:37.430"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.387" endtime="20210726 10:49:37.430"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.386" endtime="20210726 10:49:37.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:37.438" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:37.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:37.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:37.436" endtime="20210726 10:49:37.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:37.446" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:37.445" endtime="20210726 10:49:37.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:37.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:37.446" endtime="20210726 10:49:37.447"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.435" endtime="20210726 10:49:37.448"/>
</kw>
<msg timestamp="20210726 10:49:37.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:37.434" endtime="20210726 10:49:37.448"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.432" endtime="20210726 10:49:37.448"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:37.455" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:37.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:37.461" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:37.452" endtime="20210726 10:49:37.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:37.462" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:37.461" endtime="20210726 10:49:37.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:37.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:37.463" endtime="20210726 10:49:37.464"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.451" endtime="20210726 10:49:37.464"/>
</kw>
<msg timestamp="20210726 10:49:37.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:37.451" endtime="20210726 10:49:37.465"/>
</kw>
<msg timestamp="20210726 10:49:37.465" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:37.450" endtime="20210726 10:49:37.465"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:37.467" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:37.466" endtime="20210726 10:49:37.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:37.473" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:37.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:37.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:37.470" endtime="20210726 10:49:37.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:37.486" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:37.485" endtime="20210726 10:49:37.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:37.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:37.487" endtime="20210726 10:49:37.488"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.469" endtime="20210726 10:49:37.488"/>
</kw>
<msg timestamp="20210726 10:49:37.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:37.469" endtime="20210726 10:49:37.488"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.468" endtime="20210726 10:49:37.489"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.467" endtime="20210726 10:49:37.489"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.449" endtime="20210726 10:49:37.489"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.449" endtime="20210726 10:49:37.489"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:37.494" level="INFO">Running command 'ozone sh key list 84461-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:45.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:45.926" level="INFO">${output} = {
  "volumeName" : "84461-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-26T10:39:14.690Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210726 10:49:37.490" endtime="20210726 10:49:45.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:45.928" level="INFO">{
  "volumeName" : "84461-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-26T10:39:14.690Z",
  "modificationTime" : "2021-07-26T10:42:18.537Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210726 10:49:45.927" endtime="20210726 10:49:45.929"/>
</kw>
<msg timestamp="20210726 10:49:45.929" level="INFO">${result} = {
  "volumeName" : "84461-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-26T10:39:14.690Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210726 10:49:37.489" endtime="20210726 10:49:45.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:49:45.930" endtime="20210726 10:49:45.931"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.432" endtime="20210726 10:49:45.931"/>
</kw>
<status status="PASS" starttime="20210726 10:49:37.431" endtime="20210726 10:49:45.931"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:49:37.384" endtime="20210726 10:49:45.932"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:45.943" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:45.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:45.948" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:45.941" endtime="20210726 10:49:45.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:45.950" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:45.949" endtime="20210726 10:49:45.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:45.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:45.951" endtime="20210726 10:49:45.952"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.940" endtime="20210726 10:49:45.952"/>
</kw>
<msg timestamp="20210726 10:49:45.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:45.940" endtime="20210726 10:49:45.953"/>
</kw>
<msg timestamp="20210726 10:49:45.953" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:45.939" endtime="20210726 10:49:45.953"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:45.954" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:45.953" endtime="20210726 10:49:45.954"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:45.961" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:45.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:45.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:45.957" endtime="20210726 10:49:45.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:45.986" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:45.985" endtime="20210726 10:49:45.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:45.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:45.987" endtime="20210726 10:49:45.988"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.956" endtime="20210726 10:49:45.989"/>
</kw>
<msg timestamp="20210726 10:49:45.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:45.956" endtime="20210726 10:49:45.989"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.955" endtime="20210726 10:49:45.990"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.954" endtime="20210726 10:49:45.990"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.938" endtime="20210726 10:49:45.990"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.937" endtime="20210726 10:49:45.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:46.003" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:46.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:46.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:46.000" endtime="20210726 10:49:46.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:46.012" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:46.010" endtime="20210726 10:49:46.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:46.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:46.013" endtime="20210726 10:49:46.015"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.994" endtime="20210726 10:49:46.016"/>
</kw>
<msg timestamp="20210726 10:49:46.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:45.994" endtime="20210726 10:49:46.017"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.993" endtime="20210726 10:49:46.018"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:46.026" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:46.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:46.032" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:46.023" endtime="20210726 10:49:46.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:46.034" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:46.032" endtime="20210726 10:49:46.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:46.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:46.034" endtime="20210726 10:49:46.036"/>
</kw>
<status status="PASS" starttime="20210726 10:49:46.022" endtime="20210726 10:49:46.037"/>
</kw>
<msg timestamp="20210726 10:49:46.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:46.021" endtime="20210726 10:49:46.037"/>
</kw>
<msg timestamp="20210726 10:49:46.038" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:46.020" endtime="20210726 10:49:46.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:46.039" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:46.038" endtime="20210726 10:49:46.039"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:46.045" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:46.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:46.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:46.042" endtime="20210726 10:49:46.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:46.061" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:46.059" endtime="20210726 10:49:46.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:46.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:46.062" endtime="20210726 10:49:46.063"/>
</kw>
<status status="PASS" starttime="20210726 10:49:46.042" endtime="20210726 10:49:46.063"/>
</kw>
<msg timestamp="20210726 10:49:46.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:46.041" endtime="20210726 10:49:46.063"/>
</kw>
<status status="PASS" starttime="20210726 10:49:46.040" endtime="20210726 10:49:46.063"/>
</kw>
<status status="PASS" starttime="20210726 10:49:46.039" endtime="20210726 10:49:46.064"/>
</kw>
<status status="PASS" starttime="20210726 10:49:46.019" endtime="20210726 10:49:46.064"/>
</kw>
<status status="PASS" starttime="20210726 10:49:46.018" endtime="20210726 10:49:46.064"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:46.068" level="INFO">Running command 'ozone sh key list 84461-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:53.229" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:49:53.229" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 84461-target unreadable-link null</msg>
<status status="PASS" starttime="20210726 10:49:46.065" endtime="20210726 10:49:53.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:53.230" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 84461-target unreadable-link null</msg>
<status status="PASS" starttime="20210726 10:49:53.230" endtime="20210726 10:49:53.230"/>
</kw>
<msg timestamp="20210726 10:49:53.231" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 84461-target unreadable-link null</msg>
<status status="PASS" starttime="20210726 10:49:46.064" endtime="20210726 10:49:53.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:49:53.231" endtime="20210726 10:49:53.232"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.992" endtime="20210726 10:49:53.232"/>
</kw>
<status status="PASS" starttime="20210726 10:49:45.991" endtime="20210726 10:49:53.232"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:49:45.936" endtime="20210726 10:49:53.232"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:53.239" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:53.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:53.244" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:53.237" endtime="20210726 10:49:53.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:53.245" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:53.244" endtime="20210726 10:49:53.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:53.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:53.246" endtime="20210726 10:49:53.246"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.236" endtime="20210726 10:49:53.247"/>
</kw>
<msg timestamp="20210726 10:49:53.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:53.236" endtime="20210726 10:49:53.247"/>
</kw>
<msg timestamp="20210726 10:49:53.247" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:53.235" endtime="20210726 10:49:53.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:53.248" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:53.248" endtime="20210726 10:49:53.248"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:53.254" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:53.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:53.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:53.251" endtime="20210726 10:49:53.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:53.264" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:53.263" endtime="20210726 10:49:53.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:53.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:53.264" endtime="20210726 10:49:53.265"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.251" endtime="20210726 10:49:53.265"/>
</kw>
<msg timestamp="20210726 10:49:53.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:53.250" endtime="20210726 10:49:53.265"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.249" endtime="20210726 10:49:53.266"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.248" endtime="20210726 10:49:53.266"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.235" endtime="20210726 10:49:53.266"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.234" endtime="20210726 10:49:53.266"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:53.271" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:53.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:53.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:53.269" endtime="20210726 10:49:53.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:53.278" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:53.276" endtime="20210726 10:49:53.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:53.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:53.278" endtime="20210726 10:49:53.279"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.268" endtime="20210726 10:49:53.279"/>
</kw>
<msg timestamp="20210726 10:49:53.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:53.268" endtime="20210726 10:49:53.280"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.268" endtime="20210726 10:49:53.280"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:53.286" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:53.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:53.290" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:49:53.283" endtime="20210726 10:49:53.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:53.291" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:49:53.290" endtime="20210726 10:49:53.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:53.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:53.292" endtime="20210726 10:49:53.292"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.282" endtime="20210726 10:49:53.293"/>
</kw>
<msg timestamp="20210726 10:49:53.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:53.282" endtime="20210726 10:49:53.293"/>
</kw>
<msg timestamp="20210726 10:49:53.293" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:49:53.281" endtime="20210726 10:49:53.294"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:49:53.294" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:49:53.294" endtime="20210726 10:49:53.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:53.301" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:49:53.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:49:53.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:49:53.298" endtime="20210726 10:49:53.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:49:53.311" level="INFO"/>
<status status="PASS" starttime="20210726 10:49:53.310" endtime="20210726 10:49:53.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:49:53.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:49:53.311" endtime="20210726 10:49:53.312"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.297" endtime="20210726 10:49:53.312"/>
</kw>
<msg timestamp="20210726 10:49:53.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:53.296" endtime="20210726 10:49:53.313"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.295" endtime="20210726 10:49:53.313"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.295" endtime="20210726 10:49:53.313"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.281" endtime="20210726 10:49:53.313"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.280" endtime="20210726 10:49:53.313"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:49:53.321" level="INFO">Running command 'ozone sh bucket info 84461-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:00.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:00.770" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210726 10:49:53.315" endtime="20210726 10:50:00.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:00.772" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:48.657Z",
  "modificationTime" : "2021-07-26T10:43:29.129Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210726 10:50:00.771" endtime="20210726 10:50:00.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:00.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:00.773" endtime="20210726 10:50:00.774"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.315" endtime="20210726 10:50:00.775"/>
</kw>
<msg timestamp="20210726 10:50:00.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:49:53.314" endtime="20210726 10:50:00.776"/>
</kw>
<msg timestamp="20210726 10:50:00.777" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210726 10:49:53.314" endtime="20210726 10:50:00.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:50:00.777" endtime="20210726 10:50:00.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:50:00.779" endtime="20210726 10:50:00.779"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:00.785" level="INFO">Running command 'ozone sh key list 84461-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:09.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:50:09.351" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 84461-source unreadable-bucket </msg>
<status status="PASS" starttime="20210726 10:50:00.781" endtime="20210726 10:50:09.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:09.354" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 84461-source unreadable-bucket </msg>
<status status="PASS" starttime="20210726 10:50:09.352" endtime="20210726 10:50:09.354"/>
</kw>
<msg timestamp="20210726 10:50:09.355" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 84461-source unreadable-bucket </msg>
<status status="PASS" starttime="20210726 10:50:00.780" endtime="20210726 10:50:09.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:50:09.356" endtime="20210726 10:50:09.357"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.267" endtime="20210726 10:50:09.357"/>
</kw>
<status status="PASS" starttime="20210726 10:49:53.266" endtime="20210726 10:50:09.357"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:49:53.233" endtime="20210726 10:50:09.358"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:09.366" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:09.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:09.376" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:50:09.362" endtime="20210726 10:50:09.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:09.378" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:50:09.377" endtime="20210726 10:50:09.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:09.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:09.378" endtime="20210726 10:50:09.379"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.361" endtime="20210726 10:50:09.380"/>
</kw>
<msg timestamp="20210726 10:50:09.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:09.361" endtime="20210726 10:50:09.380"/>
</kw>
<msg timestamp="20210726 10:50:09.381" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:50:09.360" endtime="20210726 10:50:09.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:50:09.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:50:09.381" endtime="20210726 10:50:09.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:09.389" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:09.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:09.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:50:09.386" endtime="20210726 10:50:09.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:09.400" level="INFO"/>
<status status="PASS" starttime="20210726 10:50:09.399" endtime="20210726 10:50:09.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:09.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:09.400" endtime="20210726 10:50:09.401"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.385" endtime="20210726 10:50:09.402"/>
</kw>
<msg timestamp="20210726 10:50:09.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:09.384" endtime="20210726 10:50:09.402"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.383" endtime="20210726 10:50:09.402"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.382" endtime="20210726 10:50:09.402"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.360" endtime="20210726 10:50:09.403"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.359" endtime="20210726 10:50:09.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:09.409" level="INFO">Running command 'ozone sh bucket link 84461-target/loop1 84461-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:17.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:17.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:50:09.406" endtime="20210726 10:50:17.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:17.321" level="INFO"/>
<status status="PASS" starttime="20210726 10:50:17.320" endtime="20210726 10:50:17.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:17.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:17.321" endtime="20210726 10:50:17.323"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.405" endtime="20210726 10:50:17.323"/>
</kw>
<msg timestamp="20210726 10:50:17.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:09.404" endtime="20210726 10:50:17.324"/>
</kw>
<status status="PASS" starttime="20210726 10:50:09.403" endtime="20210726 10:50:17.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:17.330" level="INFO">Running command 'ozone sh bucket link 84461-target/loop2 84461-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:25.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:25.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:50:17.327" endtime="20210726 10:50:25.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:25.432" level="INFO"/>
<status status="PASS" starttime="20210726 10:50:25.432" endtime="20210726 10:50:25.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:25.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:25.433" endtime="20210726 10:50:25.433"/>
</kw>
<status status="PASS" starttime="20210726 10:50:17.326" endtime="20210726 10:50:25.434"/>
</kw>
<msg timestamp="20210726 10:50:25.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:17.326" endtime="20210726 10:50:25.434"/>
</kw>
<status status="PASS" starttime="20210726 10:50:17.324" endtime="20210726 10:50:25.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:25.440" level="INFO">Running command 'ozone sh bucket link 84461-target/loop3 84461-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:33.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:33.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:50:25.437" endtime="20210726 10:50:33.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:33.259" level="INFO"/>
<status status="PASS" starttime="20210726 10:50:33.257" endtime="20210726 10:50:33.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:33.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:33.260" endtime="20210726 10:50:33.261"/>
</kw>
<status status="PASS" starttime="20210726 10:50:25.436" endtime="20210726 10:50:33.262"/>
</kw>
<msg timestamp="20210726 10:50:33.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:25.435" endtime="20210726 10:50:33.263"/>
</kw>
<status status="PASS" starttime="20210726 10:50:25.434" endtime="20210726 10:50:33.263"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:33.268" level="INFO">Running command 'ozone sh key list 84461-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:41.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:50:41.508" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210726 10:50:33.265" endtime="20210726 10:50:41.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:41.510" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210726 10:50:41.509" endtime="20210726 10:50:41.510"/>
</kw>
<msg timestamp="20210726 10:50:41.511" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210726 10:50:33.264" endtime="20210726 10:50:41.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:50:41.511" endtime="20210726 10:50:41.512"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:50:09.358" endtime="20210726 10:50:41.512"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:41.523" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:41.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:41.528" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:50:41.520" endtime="20210726 10:50:41.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:41.530" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:50:41.529" endtime="20210726 10:50:41.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:41.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:41.530" endtime="20210726 10:50:41.531"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.519" endtime="20210726 10:50:41.531"/>
</kw>
<msg timestamp="20210726 10:50:41.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:41.518" endtime="20210726 10:50:41.532"/>
</kw>
<msg timestamp="20210726 10:50:41.532" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:50:41.517" endtime="20210726 10:50:41.532"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:50:41.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:50:41.532" endtime="20210726 10:50:41.533"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:41.539" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:41.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:41.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:50:41.537" endtime="20210726 10:50:41.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:41.556" level="INFO"/>
<status status="PASS" starttime="20210726 10:50:41.555" endtime="20210726 10:50:41.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:41.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:41.557" endtime="20210726 10:50:41.557"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.536" endtime="20210726 10:50:41.558"/>
</kw>
<msg timestamp="20210726 10:50:41.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:41.535" endtime="20210726 10:50:41.558"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.534" endtime="20210726 10:50:41.558"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.533" endtime="20210726 10:50:41.558"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.516" endtime="20210726 10:50:41.558"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.515" endtime="20210726 10:50:41.559"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:41.564" level="INFO">Running command 'ozone sh bucket link 84461-source/bucket1 84461-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:50:50.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:50:50.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:50:41.560" endtime="20210726 10:50:50.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:50:50.187" level="INFO"/>
<status status="PASS" starttime="20210726 10:50:50.186" endtime="20210726 10:50:50.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:50:50.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:50:50.187" endtime="20210726 10:50:50.188"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.560" endtime="20210726 10:50:50.189"/>
</kw>
<msg timestamp="20210726 10:50:50.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:50:41.560" endtime="20210726 10:50:50.189"/>
</kw>
<status status="PASS" starttime="20210726 10:50:41.559" endtime="20210726 10:50:50.190"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:50:50.199" level="INFO">Running command 'ozone sh key put 84461-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:52:41.515" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 10:50:50.193" endtime="20210726 10:52:41.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 10:52:41.515" endtime="20210726 10:52:41.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 10:52:41.516" endtime="20210726 10:52:41.516"/>
</kw>
<status status="FAIL" starttime="20210726 10:50:50.192" endtime="20210726 10:52:41.516"/>
</kw>
<msg timestamp="20210726 10:52:41.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:50:50.191" endtime="20210726 10:52:41.517"/>
</kw>
<status status="FAIL" starttime="20210726 10:50:50.190" endtime="20210726 10:52:41.517"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210726 10:52:41.517" endtime="20210726 10:52:41.517"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210726 10:50:41.513" endtime="20210726 10:52:41.518">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:52:41.526" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:52:41.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:52:41.530" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:52:41.523" endtime="20210726 10:52:41.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:52:41.533" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:52:41.531" endtime="20210726 10:52:41.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:52:41.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:52:41.533" endtime="20210726 10:52:41.534"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.523" endtime="20210726 10:52:41.535"/>
</kw>
<msg timestamp="20210726 10:52:41.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:52:41.522" endtime="20210726 10:52:41.535"/>
</kw>
<msg timestamp="20210726 10:52:41.536" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:52:41.522" endtime="20210726 10:52:41.536"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:52:41.537" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:52:41.536" endtime="20210726 10:52:41.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:52:41.543" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:52:41.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:52:41.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:52:41.541" endtime="20210726 10:52:41.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:52:41.555" level="INFO"/>
<status status="PASS" starttime="20210726 10:52:41.553" endtime="20210726 10:52:41.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:52:41.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:52:41.555" endtime="20210726 10:52:41.556"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.540" endtime="20210726 10:52:41.557"/>
</kw>
<msg timestamp="20210726 10:52:41.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:52:41.540" endtime="20210726 10:52:41.557"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.538" endtime="20210726 10:52:41.557"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.538" endtime="20210726 10:52:41.557"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.521" endtime="20210726 10:52:41.557"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.520" endtime="20210726 10:52:41.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:52:41.562" level="INFO">Running command 'ozone sh bucket delete 84461-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:52:47.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:52:47.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:52:41.560" endtime="20210726 10:52:47.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:52:47.049" level="INFO"/>
<status status="PASS" starttime="20210726 10:52:47.048" endtime="20210726 10:52:47.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:52:47.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:52:47.050" endtime="20210726 10:52:47.051"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.559" endtime="20210726 10:52:47.051"/>
</kw>
<msg timestamp="20210726 10:52:47.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:52:41.559" endtime="20210726 10:52:47.051"/>
</kw>
<status status="PASS" starttime="20210726 10:52:41.558" endtime="20210726 10:52:47.052"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:52:47.057" level="INFO">Running command 'ozone sh bucket list 84461-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:52:54.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:52:54.626" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210726 10:52:47.054" endtime="20210726 10:52:54.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:52:54.628" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:49:29.606Z",
  "modificationTime" : "2021-07-26T10:49:29.606Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:43:36.845Z",
  "modificationTime" : "2021-07-26T10:43:36.845Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:48.657Z",
  "modificationTime" : "2021-07-26T10:43:29.129Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:49:17.295Z",
  "modificationTime" : "2021-07-26T10:49:17.295Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:50:50.027Z",
  "modificationTime" : "2021-07-26T10:50:50.027Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:50:33.014Z",
  "modificationTime" : "2021-07-26T10:50:33.014Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:50:17.225Z",
  "modificationTime" : "2021-07-26T10:50:17.225Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:50:25.039Z",
  "modificationTime" : "2021-07-26T10:50:25.039Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:33.594Z",
  "modificationTime" : "2021-07-26T10:43:21.151Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-26T10:42:40.894Z",
  "modificationTime" : "2021-07-26T10:42:40.894Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84461-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210726 10:52:54.627" endtime="20210726 10:52:54.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:52:54.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:52:54.628" endtime="20210726 10:52:54.630"/>
</kw>
<status status="PASS" starttime="20210726 10:52:47.053" endtime="20210726 10:52:54.630"/>
</kw>
<msg timestamp="20210726 10:52:54.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:52:47.053" endtime="20210726 10:52:54.631"/>
</kw>
<msg timestamp="20210726 10:52:54.631" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "84461-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210726 10:52:47.052" endtime="20210726 10:52:54.631"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:52:54.631" endtime="20210726 10:52:54.632"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:52:54.637" level="INFO">Running command 'ozone sh key list 84461-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:03.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:53:03.165" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210726 10:52:54.634" endtime="20210726 10:53:03.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:03.167" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210726 10:53:03.165" endtime="20210726 10:53:03.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:53:03.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:53:03.167" endtime="20210726 10:53:03.168"/>
</kw>
<status status="PASS" starttime="20210726 10:52:54.633" endtime="20210726 10:53:03.170"/>
</kw>
<msg timestamp="20210726 10:53:03.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:52:54.633" endtime="20210726 10:53:03.170"/>
</kw>
<msg timestamp="20210726 10:53:03.172" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210726 10:52:54.632" endtime="20210726 10:53:03.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:53:03.173" endtime="20210726 10:53:03.175"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:52:41.519" endtime="20210726 10:53:03.178"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210726 10:38:43.958" endtime="20210726 10:53:03.187"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210726 10:53:03.337" level="INFO">${random} = 39073</msg>
<status status="PASS" starttime="20210726 10:53:03.335" endtime="20210726 10:53:03.337"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:53:03.342" level="INFO">${prefix} = 39073</msg>
<status status="PASS" starttime="20210726 10:53:03.340" endtime="20210726 10:53:03.343"/>
</kw>
<status status="PASS" starttime="20210726 10:53:03.330" endtime="20210726 10:53:03.343"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:03.383" level="INFO">Running command 'ozone sh volume info /39073-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:11.717" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:53:11.717" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39073-rpcbasic is not found</msg>
<status status="PASS" starttime="20210726 10:53:03.365" endtime="20210726 10:53:11.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:11.718" level="INFO">VOLUME_NOT_FOUND Volume 39073-rpcbasic is not found</msg>
<status status="PASS" starttime="20210726 10:53:11.717" endtime="20210726 10:53:11.718"/>
</kw>
<msg timestamp="20210726 10:53:11.719" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39073-rpcbasic is not found</msg>
<status status="PASS" starttime="20210726 10:53:03.359" endtime="20210726 10:53:11.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:53:11.719" endtime="20210726 10:53:11.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:11.724" level="INFO">Running command 'ozone sh volume create /39073-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:19.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:53:19.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:53:11.722" endtime="20210726 10:53:19.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:19.926" level="INFO"/>
<status status="PASS" starttime="20210726 10:53:19.924" endtime="20210726 10:53:19.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:53:19.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:53:19.926" endtime="20210726 10:53:19.927"/>
</kw>
<status status="PASS" starttime="20210726 10:53:11.721" endtime="20210726 10:53:19.928"/>
</kw>
<msg timestamp="20210726 10:53:19.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:53:11.721" endtime="20210726 10:53:19.929"/>
</kw>
<msg timestamp="20210726 10:53:19.929" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210726 10:53:11.720" endtime="20210726 10:53:19.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:53:19.931" endtime="20210726 10:53:19.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:19.941" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="39073-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:28.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:53:28.915" level="INFO">${output} = {
  "metadata": {},
  "name": "39073-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 10:53:19.937" endtime="20210726 10:53:28.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:28.917" level="INFO">{
  "metadata": {},
  "name": "39073-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T10:53:19.830Z",
  "modificationTime": "2021-07-26T10:53:19.830Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 10:53:28.916" endtime="20210726 10:53:28.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:53:28.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:53:28.917" endtime="20210726 10:53:28.918"/>
</kw>
<status status="PASS" starttime="20210726 10:53:19.935" endtime="20210726 10:53:28.918"/>
</kw>
<msg timestamp="20210726 10:53:28.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:53:19.934" endtime="20210726 10:53:28.919"/>
</kw>
<msg timestamp="20210726 10:53:28.919" level="INFO">${result} = {
  "metadata": {},
  "name": "39073-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 10:53:19.932" endtime="20210726 10:53:28.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:53:28.919" endtime="20210726 10:53:28.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:28.925" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39073-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:37.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:53:37.307" level="INFO">${output} = {
  "metadata": {},
  "name": "39073-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 10:53:28.922" endtime="20210726 10:53:37.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:37.309" level="INFO">{
  "metadata": {},
  "name": "39073-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T10:53:19.830Z",
  "modificationTime": "2021-07-26T10:53:19.830Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 10:53:37.308" endtime="20210726 10:53:37.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:53:37.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:53:37.309" endtime="20210726 10:53:37.310"/>
</kw>
<status status="PASS" starttime="20210726 10:53:28.921" endtime="20210726 10:53:37.310"/>
</kw>
<msg timestamp="20210726 10:53:37.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:53:28.921" endtime="20210726 10:53:37.311"/>
</kw>
<msg timestamp="20210726 10:53:37.311" level="INFO">${result} = {
  "metadata": {},
  "name": "39073-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 10:53:28.920" endtime="20210726 10:53:37.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:53:37.311" endtime="20210726 10:53:37.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:37.316" level="INFO">Running command 'ozone sh volume setquota /39073-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:45.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:53:45.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:53:37.314" endtime="20210726 10:53:45.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:45.267" level="INFO"/>
<status status="PASS" starttime="20210726 10:53:45.265" endtime="20210726 10:53:45.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:53:45.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:53:45.267" endtime="20210726 10:53:45.269"/>
</kw>
<status status="PASS" starttime="20210726 10:53:37.313" endtime="20210726 10:53:45.269"/>
</kw>
<msg timestamp="20210726 10:53:45.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:53:37.313" endtime="20210726 10:53:45.271"/>
</kw>
<status status="PASS" starttime="20210726 10:53:37.312" endtime="20210726 10:53:45.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:45.280" level="INFO">Running command 'ozone sh volume info /39073-rpcbasic | jq -r '. | select(.name=="39073-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:53:53.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:53:53.654" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:53:45.277" endtime="20210726 10:53:53.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:53:53.656" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 10:53:53.655" endtime="20210726 10:53:53.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:53:53.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:53:53.657" endtime="20210726 10:53:53.658"/>
</kw>
<status status="PASS" starttime="20210726 10:53:45.276" endtime="20210726 10:53:53.659"/>
</kw>
<msg timestamp="20210726 10:53:53.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:53:45.275" endtime="20210726 10:53:53.660"/>
</kw>
<msg timestamp="20210726 10:53:53.660" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:53:45.272" endtime="20210726 10:53:53.660"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:53:53.660" endtime="20210726 10:53:53.661"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:53:53.668" level="INFO">Running command 'ozone sh bucket create /39073-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:00.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:00.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:53:53.664" endtime="20210726 10:54:00.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:00.372" level="INFO"/>
<status status="PASS" starttime="20210726 10:54:00.371" endtime="20210726 10:54:00.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:00.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:00.372" endtime="20210726 10:54:00.373"/>
</kw>
<status status="PASS" starttime="20210726 10:53:53.664" endtime="20210726 10:54:00.374"/>
</kw>
<msg timestamp="20210726 10:54:00.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:53:53.663" endtime="20210726 10:54:00.374"/>
</kw>
<status status="PASS" starttime="20210726 10:53:53.662" endtime="20210726 10:54:00.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:00.391" level="INFO">Running command 'ozone sh bucket info /39073-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:07.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:07.971" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210726 10:54:00.388" endtime="20210726 10:54:07.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:07.973" level="INFO">DISK</msg>
<status status="PASS" starttime="20210726 10:54:07.972" endtime="20210726 10:54:07.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:07.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:07.973" endtime="20210726 10:54:07.974"/>
</kw>
<status status="PASS" starttime="20210726 10:54:00.387" endtime="20210726 10:54:07.974"/>
</kw>
<msg timestamp="20210726 10:54:07.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:00.375" endtime="20210726 10:54:07.974"/>
</kw>
<msg timestamp="20210726 10:54:07.975" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210726 10:54:00.374" endtime="20210726 10:54:07.975"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:54:07.975" endtime="20210726 10:54:07.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:07.981" level="INFO">Running command 'ozone sh bucket info /39073-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:13.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:13.854" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:54:07.979" endtime="20210726 10:54:13.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:13.856" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 10:54:13.855" endtime="20210726 10:54:13.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:13.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:13.857" endtime="20210726 10:54:13.857"/>
</kw>
<status status="PASS" starttime="20210726 10:54:07.978" endtime="20210726 10:54:13.858"/>
</kw>
<msg timestamp="20210726 10:54:13.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:07.977" endtime="20210726 10:54:13.858"/>
</kw>
<msg timestamp="20210726 10:54:13.859" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:54:07.976" endtime="20210726 10:54:13.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:54:13.859" endtime="20210726 10:54:13.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:13.867" level="INFO">Running command 'ozone sh bucket info /39073-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:22.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:22.579" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210726 10:54:13.864" endtime="20210726 10:54:22.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:22.581" level="INFO">100</msg>
<status status="PASS" starttime="20210726 10:54:22.580" endtime="20210726 10:54:22.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:22.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:22.582" endtime="20210726 10:54:22.582"/>
</kw>
<status status="PASS" starttime="20210726 10:54:13.863" endtime="20210726 10:54:22.583"/>
</kw>
<msg timestamp="20210726 10:54:22.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:13.862" endtime="20210726 10:54:22.583"/>
</kw>
<msg timestamp="20210726 10:54:22.583" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210726 10:54:13.860" endtime="20210726 10:54:22.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:54:22.584" endtime="20210726 10:54:22.584"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:22.590" level="INFO">Running command 'ozone sh bucket setquota /39073-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:30.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:30.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:54:22.586" endtime="20210726 10:54:30.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:30.906" level="INFO"/>
<status status="PASS" starttime="20210726 10:54:30.905" endtime="20210726 10:54:30.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:30.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:30.907" endtime="20210726 10:54:30.908"/>
</kw>
<status status="PASS" starttime="20210726 10:54:22.586" endtime="20210726 10:54:30.908"/>
</kw>
<msg timestamp="20210726 10:54:30.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:22.585" endtime="20210726 10:54:30.908"/>
</kw>
<status status="PASS" starttime="20210726 10:54:22.584" endtime="20210726 10:54:30.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:30.916" level="INFO">Running command 'ozone sh bucket info /39073-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:37.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:37.826" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210726 10:54:30.911" endtime="20210726 10:54:37.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:37.829" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210726 10:54:37.827" endtime="20210726 10:54:37.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:37.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:37.830" endtime="20210726 10:54:37.831"/>
</kw>
<status status="PASS" starttime="20210726 10:54:30.910" endtime="20210726 10:54:37.832"/>
</kw>
<msg timestamp="20210726 10:54:37.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:30.910" endtime="20210726 10:54:37.833"/>
</kw>
<msg timestamp="20210726 10:54:37.833" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210726 10:54:30.909" endtime="20210726 10:54:37.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:54:37.834" endtime="20210726 10:54:37.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:37.844" level="INFO">Running command 'ozone sh bucket info /39073-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:46.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:46.017" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210726 10:54:37.840" endtime="20210726 10:54:46.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:46.019" level="INFO">1000</msg>
<status status="PASS" starttime="20210726 10:54:46.018" endtime="20210726 10:54:46.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:46.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:46.020" endtime="20210726 10:54:46.022"/>
</kw>
<status status="PASS" starttime="20210726 10:54:37.839" endtime="20210726 10:54:46.022"/>
</kw>
<msg timestamp="20210726 10:54:46.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:37.838" endtime="20210726 10:54:46.023"/>
</kw>
<msg timestamp="20210726 10:54:46.024" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210726 10:54:37.836" endtime="20210726 10:54:46.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:54:46.024" endtime="20210726 10:54:46.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:46.034" level="INFO">Running command 'ozone sh bucket list /39073-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:54:54.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:54:54.073" level="INFO">${output} = 39073-rpcbasic</msg>
<status status="PASS" starttime="20210726 10:54:46.031" endtime="20210726 10:54:54.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:54:54.076" level="INFO">39073-rpcbasic</msg>
<status status="PASS" starttime="20210726 10:54:54.075" endtime="20210726 10:54:54.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:54:54.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:54:54.077" endtime="20210726 10:54:54.078"/>
</kw>
<status status="PASS" starttime="20210726 10:54:46.030" endtime="20210726 10:54:54.078"/>
</kw>
<msg timestamp="20210726 10:54:54.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:54:46.029" endtime="20210726 10:54:54.079"/>
</kw>
<msg timestamp="20210726 10:54:54.079" level="INFO">${result} = 39073-rpcbasic</msg>
<status status="PASS" starttime="20210726 10:54:46.027" endtime="20210726 10:54:54.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:54:54.080" endtime="20210726 10:54:54.081"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:54:54.093" level="INFO">Running command 'ozone sh key put /39073-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:03.345" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 10:54:54.088" endtime="20210726 10:58:03.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.345" endtime="20210726 10:58:03.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.346" endtime="20210726 10:58:03.346"/>
</kw>
<status status="FAIL" starttime="20210726 10:54:54.086" endtime="20210726 10:58:03.346"/>
</kw>
<msg timestamp="20210726 10:58:03.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:54:54.086" endtime="20210726 10:58:03.346"/>
</kw>
<status status="FAIL" starttime="20210726 10:54:54.084" endtime="20210726 10:58:03.347"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.347" endtime="20210726 10:58:03.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.347" endtime="20210726 10:58:03.347"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.348" endtime="20210726 10:58:03.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.348" endtime="20210726 10:58:03.348"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.349" endtime="20210726 10:58:03.349"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.349" endtime="20210726 10:58:03.350"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.350" endtime="20210726 10:58:03.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.350" endtime="20210726 10:58:03.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.350" endtime="20210726 10:58:03.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.351" endtime="20210726 10:58:03.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.351" endtime="20210726 10:58:03.351"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.351" endtime="20210726 10:58:03.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.351" endtime="20210726 10:58:03.351"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.352" endtime="20210726 10:58:03.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.352" endtime="20210726 10:58:03.352"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.352" endtime="20210726 10:58:03.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.352" endtime="20210726 10:58:03.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.352" endtime="20210726 10:58:03.353"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.353" endtime="20210726 10:58:03.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.353" endtime="20210726 10:58:03.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.353" endtime="20210726 10:58:03.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.353" endtime="20210726 10:58:03.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.354" endtime="20210726 10:58:03.354"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.354" endtime="20210726 10:58:03.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.354" endtime="20210726 10:58:03.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.354" endtime="20210726 10:58:03.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.355" endtime="20210726 10:58:03.355"/>
</kw>
<status status="FAIL" starttime="20210726 10:54:54.083" endtime="20210726 10:58:03.355"/>
</kw>
<status status="FAIL" starttime="20210726 10:54:54.082" endtime="20210726 10:58:03.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.355" endtime="20210726 10:58:03.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.356" endtime="20210726 10:58:03.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.356" endtime="20210726 10:58:03.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.356" endtime="20210726 10:58:03.357"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.357" endtime="20210726 10:58:03.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.357" endtime="20210726 10:58:03.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.357" endtime="20210726 10:58:03.357"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.358" endtime="20210726 10:58:03.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.358" endtime="20210726 10:58:03.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.358" endtime="20210726 10:58:03.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.358" endtime="20210726 10:58:03.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.358" endtime="20210726 10:58:03.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.359" endtime="20210726 10:58:03.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.359" endtime="20210726 10:58:03.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.359" endtime="20210726 10:58:03.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.359" endtime="20210726 10:58:03.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.360" endtime="20210726 10:58:03.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.360" endtime="20210726 10:58:03.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.360" endtime="20210726 10:58:03.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.361" endtime="20210726 10:58:03.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.361" endtime="20210726 10:58:03.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.361" endtime="20210726 10:58:03.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.361" endtime="20210726 10:58:03.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 10:58:03.362" endtime="20210726 10:58:03.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.362" endtime="20210726 10:58:03.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 10:58:03.362" endtime="20210726 10:58:03.362"/>
</kw>
<status status="FAIL" starttime="20210726 10:53:03.350" endtime="20210726 10:58:03.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210726 10:53:03.343" endtime="20210726 10:58:03.363">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210726 10:53:03.210" endtime="20210726 10:58:03.365"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210726 10:58:03.378" level="INFO">${random} = 63522</msg>
<status status="PASS" starttime="20210726 10:58:03.377" endtime="20210726 10:58:03.378"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:58:03.378" level="INFO">${prefix} = 63522</msg>
<status status="PASS" starttime="20210726 10:58:03.378" endtime="20210726 10:58:03.378"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.377" endtime="20210726 10:58:03.379"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:03.385" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:03.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:03.389" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:58:03.382" endtime="20210726 10:58:03.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:03.390" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:58:03.390" endtime="20210726 10:58:03.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:03.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:03.391" endtime="20210726 10:58:03.391"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.381" endtime="20210726 10:58:03.392"/>
</kw>
<msg timestamp="20210726 10:58:03.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:03.381" endtime="20210726 10:58:03.392"/>
</kw>
<msg timestamp="20210726 10:58:03.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:58:03.381" endtime="20210726 10:58:03.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:58:03.394" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:58:03.392" endtime="20210726 10:58:03.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:03.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:03.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:03.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:58:03.398" endtime="20210726 10:58:03.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:03.438" level="INFO"/>
<status status="PASS" starttime="20210726 10:58:03.437" endtime="20210726 10:58:03.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:03.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:03.439" endtime="20210726 10:58:03.440"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.397" endtime="20210726 10:58:03.440"/>
</kw>
<msg timestamp="20210726 10:58:03.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:03.396" endtime="20210726 10:58:03.441"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.395" endtime="20210726 10:58:03.441"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.395" endtime="20210726 10:58:03.441"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.380" endtime="20210726 10:58:03.441"/>
</kw>
<status status="PASS" starttime="20210726 10:58:03.380" endtime="20210726 10:58:03.441"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:03.447" level="INFO">Running command 'ozone sh volume info o3://om:9862/63522-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:11.639" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 10:58:11.639" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63522-rpcwoport is not found</msg>
<status status="PASS" starttime="20210726 10:58:03.444" endtime="20210726 10:58:11.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:11.641" level="INFO">VOLUME_NOT_FOUND Volume 63522-rpcwoport is not found</msg>
<status status="PASS" starttime="20210726 10:58:11.640" endtime="20210726 10:58:11.641"/>
</kw>
<msg timestamp="20210726 10:58:11.641" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63522-rpcwoport is not found</msg>
<status status="PASS" starttime="20210726 10:58:03.443" endtime="20210726 10:58:11.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:58:11.642" endtime="20210726 10:58:11.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:11.648" level="INFO">Running command 'ozone sh volume create o3://om:9862/63522-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:20.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:20.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:58:11.644" endtime="20210726 10:58:20.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:20.479" level="INFO"/>
<status status="PASS" starttime="20210726 10:58:20.478" endtime="20210726 10:58:20.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:20.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:20.480" endtime="20210726 10:58:20.481"/>
</kw>
<status status="PASS" starttime="20210726 10:58:11.643" endtime="20210726 10:58:20.481"/>
</kw>
<msg timestamp="20210726 10:58:20.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:11.643" endtime="20210726 10:58:20.482"/>
</kw>
<msg timestamp="20210726 10:58:20.482" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210726 10:58:11.642" endtime="20210726 10:58:20.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:58:20.482" endtime="20210726 10:58:20.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:20.489" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="63522-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:29.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:29.836" level="INFO">${output} = {
  "metadata": {},
  "name": "63522-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210726 10:58:20.486" endtime="20210726 10:58:29.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:29.839" level="INFO">{
  "metadata": {},
  "name": "63522-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T10:58:20.308Z",
  "modificationTime": "2021-07-26T10:58:20.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 10:58:29.839" endtime="20210726 10:58:29.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:29.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:29.840" endtime="20210726 10:58:29.841"/>
</kw>
<status status="PASS" starttime="20210726 10:58:20.485" endtime="20210726 10:58:29.841"/>
</kw>
<msg timestamp="20210726 10:58:29.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:20.485" endtime="20210726 10:58:29.841"/>
</kw>
<msg timestamp="20210726 10:58:29.842" level="INFO">${result} = {
  "metadata": {},
  "name": "63522-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210726 10:58:20.483" endtime="20210726 10:58:29.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:58:29.842" endtime="20210726 10:58:29.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:29.850" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63522-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:38.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:38.682" level="INFO">${output} = {
  "metadata": {},
  "name": "63522-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210726 10:58:29.846" endtime="20210726 10:58:38.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:38.683" level="INFO">{
  "metadata": {},
  "name": "63522-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T10:58:20.308Z",
  "modificationTime": "2021-07-26T10:58:20.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 10:58:38.682" endtime="20210726 10:58:38.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:38.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:38.683" endtime="20210726 10:58:38.684"/>
</kw>
<status status="PASS" starttime="20210726 10:58:29.844" endtime="20210726 10:58:38.685"/>
</kw>
<msg timestamp="20210726 10:58:38.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:29.843" endtime="20210726 10:58:38.685"/>
</kw>
<msg timestamp="20210726 10:58:38.685" level="INFO">${result} = {
  "metadata": {},
  "name": "63522-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210726 10:58:29.843" endtime="20210726 10:58:38.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 10:58:38.686" endtime="20210726 10:58:38.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:38.691" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/63522-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:47.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:47.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:58:38.688" endtime="20210726 10:58:47.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:47.064" level="INFO"/>
<status status="PASS" starttime="20210726 10:58:47.063" endtime="20210726 10:58:47.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:47.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:47.064" endtime="20210726 10:58:47.065"/>
</kw>
<status status="PASS" starttime="20210726 10:58:38.688" endtime="20210726 10:58:47.066"/>
</kw>
<msg timestamp="20210726 10:58:47.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:38.687" endtime="20210726 10:58:47.066"/>
</kw>
<status status="PASS" starttime="20210726 10:58:38.686" endtime="20210726 10:58:47.066"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:47.076" level="INFO">Running command 'ozone sh volume info o3://om:9862/63522-rpcwoport | jq -r '. | select(.name=="63522-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:58:55.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:58:55.127" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:58:47.071" endtime="20210726 10:58:55.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:58:55.129" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 10:58:55.128" endtime="20210726 10:58:55.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:58:55.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:58:55.130" endtime="20210726 10:58:55.132"/>
</kw>
<status status="PASS" starttime="20210726 10:58:47.069" endtime="20210726 10:58:55.132"/>
</kw>
<msg timestamp="20210726 10:58:55.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:47.068" endtime="20210726 10:58:55.133"/>
</kw>
<msg timestamp="20210726 10:58:55.134" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:58:47.066" endtime="20210726 10:58:55.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:58:55.134" endtime="20210726 10:58:55.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:58:55.142" level="INFO">Running command 'ozone sh bucket create o3://om:9862/63522-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:03.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:03.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:58:55.139" endtime="20210726 10:59:03.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:03.231" level="INFO"/>
<status status="PASS" starttime="20210726 10:59:03.229" endtime="20210726 10:59:03.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:03.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:03.232" endtime="20210726 10:59:03.234"/>
</kw>
<status status="PASS" starttime="20210726 10:58:55.138" endtime="20210726 10:59:03.234"/>
</kw>
<msg timestamp="20210726 10:59:03.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:58:55.137" endtime="20210726 10:59:03.235"/>
</kw>
<status status="PASS" starttime="20210726 10:58:55.135" endtime="20210726 10:59:03.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:03.246" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63522-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:11.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:11.973" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210726 10:59:03.241" endtime="20210726 10:59:11.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:11.975" level="INFO">DISK</msg>
<status status="PASS" starttime="20210726 10:59:11.974" endtime="20210726 10:59:11.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:11.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:11.975" endtime="20210726 10:59:11.976"/>
</kw>
<status status="PASS" starttime="20210726 10:59:03.240" endtime="20210726 10:59:11.977"/>
</kw>
<msg timestamp="20210726 10:59:11.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:03.239" endtime="20210726 10:59:11.977"/>
</kw>
<msg timestamp="20210726 10:59:11.980" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210726 10:59:03.236" endtime="20210726 10:59:11.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:59:11.980" endtime="20210726 10:59:11.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:11.995" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63522-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:20.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:20.713" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:59:11.987" endtime="20210726 10:59:20.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:20.715" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 10:59:20.714" endtime="20210726 10:59:20.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:20.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:20.716" endtime="20210726 10:59:20.718"/>
</kw>
<status status="PASS" starttime="20210726 10:59:11.982" endtime="20210726 10:59:20.718"/>
</kw>
<msg timestamp="20210726 10:59:20.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:11.982" endtime="20210726 10:59:20.720"/>
</kw>
<msg timestamp="20210726 10:59:20.720" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 10:59:11.981" endtime="20210726 10:59:20.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:59:20.721" endtime="20210726 10:59:20.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:20.727" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63522-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:27.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:27.338" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210726 10:59:20.724" endtime="20210726 10:59:27.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:27.340" level="INFO">100</msg>
<status status="PASS" starttime="20210726 10:59:27.339" endtime="20210726 10:59:27.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:27.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:27.340" endtime="20210726 10:59:27.342"/>
</kw>
<status status="PASS" starttime="20210726 10:59:20.723" endtime="20210726 10:59:27.342"/>
</kw>
<msg timestamp="20210726 10:59:27.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:20.722" endtime="20210726 10:59:27.343"/>
</kw>
<msg timestamp="20210726 10:59:27.344" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210726 10:59:20.721" endtime="20210726 10:59:27.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:59:27.344" endtime="20210726 10:59:27.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:27.354" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/63522-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:33.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:33.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:59:27.351" endtime="20210726 10:59:33.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:33.791" level="INFO"/>
<status status="PASS" starttime="20210726 10:59:33.790" endtime="20210726 10:59:33.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:33.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:33.791" endtime="20210726 10:59:33.792"/>
</kw>
<status status="PASS" starttime="20210726 10:59:27.349" endtime="20210726 10:59:33.792"/>
</kw>
<msg timestamp="20210726 10:59:33.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:27.349" endtime="20210726 10:59:33.793"/>
</kw>
<status status="PASS" starttime="20210726 10:59:27.347" endtime="20210726 10:59:33.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:33.799" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63522-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:41.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:41.821" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210726 10:59:33.795" endtime="20210726 10:59:41.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:41.823" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210726 10:59:41.821" endtime="20210726 10:59:41.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:41.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:41.823" endtime="20210726 10:59:41.824"/>
</kw>
<status status="PASS" starttime="20210726 10:59:33.795" endtime="20210726 10:59:41.824"/>
</kw>
<msg timestamp="20210726 10:59:41.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:33.794" endtime="20210726 10:59:41.824"/>
</kw>
<msg timestamp="20210726 10:59:41.824" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210726 10:59:33.793" endtime="20210726 10:59:41.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:59:41.825" endtime="20210726 10:59:41.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:41.831" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63522-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:50.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:50.012" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210726 10:59:41.827" endtime="20210726 10:59:50.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:50.013" level="INFO">1000</msg>
<status status="PASS" starttime="20210726 10:59:50.013" endtime="20210726 10:59:50.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:50.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:50.014" endtime="20210726 10:59:50.015"/>
</kw>
<status status="PASS" starttime="20210726 10:59:41.827" endtime="20210726 10:59:50.015"/>
</kw>
<msg timestamp="20210726 10:59:50.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:41.826" endtime="20210726 10:59:50.015"/>
</kw>
<msg timestamp="20210726 10:59:50.016" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210726 10:59:41.825" endtime="20210726 10:59:50.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:59:50.016" endtime="20210726 10:59:50.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:50.021" level="INFO">Running command 'ozone sh bucket list o3://om:9862/63522-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:59:56.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:59:56.369" level="INFO">${output} = 63522-rpcwoport</msg>
<status status="PASS" starttime="20210726 10:59:50.019" endtime="20210726 10:59:56.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:59:56.371" level="INFO">63522-rpcwoport</msg>
<status status="PASS" starttime="20210726 10:59:56.370" endtime="20210726 10:59:56.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:59:56.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:59:56.371" endtime="20210726 10:59:56.372"/>
</kw>
<status status="PASS" starttime="20210726 10:59:50.018" endtime="20210726 10:59:56.372"/>
</kw>
<msg timestamp="20210726 10:59:56.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:59:50.018" endtime="20210726 10:59:56.373"/>
</kw>
<msg timestamp="20210726 10:59:56.373" level="INFO">${result} = 63522-rpcwoport</msg>
<status status="PASS" starttime="20210726 10:59:50.017" endtime="20210726 10:59:56.373"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 10:59:56.373" endtime="20210726 10:59:56.374"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:59:56.382" level="INFO">Running command 'ozone sh key put o3://om:9862/63522-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:03.380" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 10:59:56.378" endtime="20210726 11:03:03.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.381" endtime="20210726 11:03:03.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.381" endtime="20210726 11:03:03.381"/>
</kw>
<status status="FAIL" starttime="20210726 10:59:56.377" endtime="20210726 11:03:03.382"/>
</kw>
<msg timestamp="20210726 11:03:03.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 10:59:56.377" endtime="20210726 11:03:03.382"/>
</kw>
<status status="FAIL" starttime="20210726 10:59:56.376" endtime="20210726 11:03:03.382"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.382" endtime="20210726 11:03:03.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.383" endtime="20210726 11:03:03.383"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.383" endtime="20210726 11:03:03.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.383" endtime="20210726 11:03:03.383"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.383" endtime="20210726 11:03:03.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.384" endtime="20210726 11:03:03.384"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.384" endtime="20210726 11:03:03.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.384" endtime="20210726 11:03:03.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.386" endtime="20210726 11:03:03.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.386" endtime="20210726 11:03:03.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.386" endtime="20210726 11:03:03.386"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.387" endtime="20210726 11:03:03.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.387" endtime="20210726 11:03:03.387"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.387" endtime="20210726 11:03:03.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.388" endtime="20210726 11:03:03.388"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.388" endtime="20210726 11:03:03.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.389" endtime="20210726 11:03:03.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.389" endtime="20210726 11:03:03.389"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.389" endtime="20210726 11:03:03.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.390" endtime="20210726 11:03:03.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.390" endtime="20210726 11:03:03.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.390" endtime="20210726 11:03:03.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.390" endtime="20210726 11:03:03.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.391" endtime="20210726 11:03:03.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.391" endtime="20210726 11:03:03.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.391" endtime="20210726 11:03:03.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.391" endtime="20210726 11:03:03.391"/>
</kw>
<status status="FAIL" starttime="20210726 10:59:56.375" endtime="20210726 11:03:03.392"/>
</kw>
<status status="FAIL" starttime="20210726 10:59:56.374" endtime="20210726 11:03:03.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.392" endtime="20210726 11:03:03.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.392" endtime="20210726 11:03:03.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.392" endtime="20210726 11:03:03.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.393" endtime="20210726 11:03:03.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.393" endtime="20210726 11:03:03.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.393" endtime="20210726 11:03:03.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.395" endtime="20210726 11:03:03.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.395" endtime="20210726 11:03:03.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.395" endtime="20210726 11:03:03.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.396" endtime="20210726 11:03:03.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.396" endtime="20210726 11:03:03.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.396" endtime="20210726 11:03:03.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.396" endtime="20210726 11:03:03.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.396" endtime="20210726 11:03:03.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.397" endtime="20210726 11:03:03.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.397" endtime="20210726 11:03:03.397"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.397" endtime="20210726 11:03:03.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.397" endtime="20210726 11:03:03.397"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.398" endtime="20210726 11:03:03.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.398" endtime="20210726 11:03:03.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.398" endtime="20210726 11:03:03.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.398" endtime="20210726 11:03:03.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.399" endtime="20210726 11:03:03.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:03:03.400" endtime="20210726 11:03:03.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.400" endtime="20210726 11:03:03.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:03:03.400" endtime="20210726 11:03:03.400"/>
</kw>
<status status="FAIL" starttime="20210726 10:58:03.442" endtime="20210726 11:03:03.400"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210726 10:58:03.379" endtime="20210726 11:03:03.401">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:03.412" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:03.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:03.418" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 11:03:03.409" endtime="20210726 11:03:03.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:03.420" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 11:03:03.418" endtime="20210726 11:03:03.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:03.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:03.420" endtime="20210726 11:03:03.421"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.408" endtime="20210726 11:03:03.425"/>
</kw>
<msg timestamp="20210726 11:03:03.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:03.408" endtime="20210726 11:03:03.425"/>
</kw>
<msg timestamp="20210726 11:03:03.426" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 11:03:03.407" endtime="20210726 11:03:03.426"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 11:03:03.427" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 11:03:03.426" endtime="20210726 11:03:03.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:03.449" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:03.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:03.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:03:03.430" endtime="20210726 11:03:03.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:03.481" level="INFO"/>
<status status="PASS" starttime="20210726 11:03:03.480" endtime="20210726 11:03:03.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:03.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:03.481" endtime="20210726 11:03:03.482"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.429" endtime="20210726 11:03:03.482"/>
</kw>
<msg timestamp="20210726 11:03:03.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:03.429" endtime="20210726 11:03:03.483"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.428" endtime="20210726 11:03:03.483"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.427" endtime="20210726 11:03:03.483"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.405" endtime="20210726 11:03:03.483"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.404" endtime="20210726 11:03:03.483"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:03.489" level="INFO">Running command 'ozone sh volume create o3://om:9862/63522-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:12.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:12.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:03:03.486" endtime="20210726 11:03:12.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:12.883" level="INFO"/>
<status status="PASS" starttime="20210726 11:03:12.881" endtime="20210726 11:03:12.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:12.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:12.884" endtime="20210726 11:03:12.885"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.485" endtime="20210726 11:03:12.886"/>
</kw>
<msg timestamp="20210726 11:03:12.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:03.485" endtime="20210726 11:03:12.886"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.484" endtime="20210726 11:03:12.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:12.894" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63522-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:19.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:19.201" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:03:12.890" endtime="20210726 11:03:19.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:19.204" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:03:19.203" endtime="20210726 11:03:19.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:19.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:19.205" endtime="20210726 11:03:19.206"/>
</kw>
<status status="PASS" starttime="20210726 11:03:12.888" endtime="20210726 11:03:19.206"/>
</kw>
<msg timestamp="20210726 11:03:19.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:12.888" endtime="20210726 11:03:19.207"/>
</kw>
<msg timestamp="20210726 11:03:19.208" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:03:12.887" endtime="20210726 11:03:19.208"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:03:19.208" endtime="20210726 11:03:19.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:19.218" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/63522-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:27.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:27.168" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210726 11:03:19.214" endtime="20210726 11:03:27.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:27.170" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210726 11:03:27.169" endtime="20210726 11:03:27.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:27.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:27.170" endtime="20210726 11:03:27.171"/>
</kw>
<status status="PASS" starttime="20210726 11:03:19.213" endtime="20210726 11:03:27.171"/>
</kw>
<msg timestamp="20210726 11:03:27.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:19.212" endtime="20210726 11:03:27.172"/>
</kw>
<msg timestamp="20210726 11:03:27.172" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210726 11:03:19.210" endtime="20210726 11:03:27.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:27.182" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63522-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:35.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:35.903" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:03:27.178" endtime="20210726 11:03:35.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:35.904" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:03:35.903" endtime="20210726 11:03:35.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:35.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:35.905" endtime="20210726 11:03:35.905"/>
</kw>
<status status="PASS" starttime="20210726 11:03:27.177" endtime="20210726 11:03:35.906"/>
</kw>
<msg timestamp="20210726 11:03:35.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:27.177" endtime="20210726 11:03:35.906"/>
</kw>
<msg timestamp="20210726 11:03:35.906" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:03:27.172" endtime="20210726 11:03:35.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:03:35.907" endtime="20210726 11:03:35.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:35.915" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/63522-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:43.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:43.796" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:03:35.910" endtime="20210726 11:03:43.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:43.799" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:03:43.797" endtime="20210726 11:03:43.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:43.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:43.799" endtime="20210726 11:03:43.801"/>
</kw>
<status status="PASS" starttime="20210726 11:03:35.910" endtime="20210726 11:03:43.801"/>
</kw>
<msg timestamp="20210726 11:03:43.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:35.909" endtime="20210726 11:03:43.802"/>
</kw>
<msg timestamp="20210726 11:03:43.802" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:03:35.908" endtime="20210726 11:03:43.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:43.812" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63522-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:03:53.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:03:53.587" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:03:43.807" endtime="20210726 11:03:53.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:03:53.591" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:03:53.589" endtime="20210726 11:03:53.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:03:53.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:03:53.592" endtime="20210726 11:03:53.595"/>
</kw>
<status status="PASS" starttime="20210726 11:03:43.806" endtime="20210726 11:03:53.597"/>
</kw>
<msg timestamp="20210726 11:03:53.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:43.805" endtime="20210726 11:03:53.599"/>
</kw>
<msg timestamp="20210726 11:03:53.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:03:43.803" endtime="20210726 11:03:53.600"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:03:53.601" endtime="20210726 11:03:53.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:03:53.616" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/63522-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:00.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:00.345" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:03:53.607" endtime="20210726 11:04:00.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:00.348" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:04:00.347" endtime="20210726 11:04:00.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:00.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:00.349" endtime="20210726 11:04:00.350"/>
</kw>
<status status="PASS" starttime="20210726 11:03:53.606" endtime="20210726 11:04:00.350"/>
</kw>
<msg timestamp="20210726 11:04:00.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:03:53.605" endtime="20210726 11:04:00.351"/>
</kw>
<msg timestamp="20210726 11:04:00.352" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:03:53.604" endtime="20210726 11:04:00.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:00.359" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63522-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:09.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:09.572" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210726 11:04:00.355" endtime="20210726 11:04:09.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:09.573" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:04:09.573" endtime="20210726 11:04:09.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:09.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:09.574" endtime="20210726 11:04:09.574"/>
</kw>
<status status="PASS" starttime="20210726 11:04:00.354" endtime="20210726 11:04:09.575"/>
</kw>
<msg timestamp="20210726 11:04:09.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:00.354" endtime="20210726 11:04:09.575"/>
</kw>
<msg timestamp="20210726 11:04:09.576" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210726 11:04:00.352" endtime="20210726 11:04:09.576"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:04:09.576" endtime="20210726 11:04:09.577"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:04:09.577" endtime="20210726 11:04:09.578"/>
</kw>
<status status="PASS" starttime="20210726 11:03:03.484" endtime="20210726 11:04:09.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 11:03:03.403" endtime="20210726 11:04:09.579"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:09.586" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:09.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:09.592" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 11:04:09.583" endtime="20210726 11:04:09.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:09.593" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 11:04:09.592" endtime="20210726 11:04:09.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:09.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:09.593" endtime="20210726 11:04:09.595"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.583" endtime="20210726 11:04:09.595"/>
</kw>
<msg timestamp="20210726 11:04:09.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:09.582" endtime="20210726 11:04:09.595"/>
</kw>
<msg timestamp="20210726 11:04:09.596" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 11:04:09.582" endtime="20210726 11:04:09.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 11:04:09.597" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 11:04:09.596" endtime="20210726 11:04:09.597"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:09.604" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:09.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:09.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:04:09.601" endtime="20210726 11:04:09.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:09.615" level="INFO"/>
<status status="PASS" starttime="20210726 11:04:09.614" endtime="20210726 11:04:09.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:09.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:09.615" endtime="20210726 11:04:09.616"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.600" endtime="20210726 11:04:09.617"/>
</kw>
<msg timestamp="20210726 11:04:09.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:09.599" endtime="20210726 11:04:09.617"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.598" endtime="20210726 11:04:09.617"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.598" endtime="20210726 11:04:09.617"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.581" endtime="20210726 11:04:09.618"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.581" endtime="20210726 11:04:09.618"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:09.623" level="INFO">Running command 'ozone sh bucket create o3://om:9862/63522-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:17.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:17.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:04:09.621" endtime="20210726 11:04:17.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:17.363" level="INFO"/>
<status status="PASS" starttime="20210726 11:04:17.362" endtime="20210726 11:04:17.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:17.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:17.363" endtime="20210726 11:04:17.365"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.620" endtime="20210726 11:04:17.367"/>
</kw>
<msg timestamp="20210726 11:04:17.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:09.619" endtime="20210726 11:04:17.367"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.619" endtime="20210726 11:04:17.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:17.377" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63522-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:25.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:25.507" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:04:17.373" endtime="20210726 11:04:25.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:25.508" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:04:25.507" endtime="20210726 11:04:25.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:25.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:25.509" endtime="20210726 11:04:25.509"/>
</kw>
<status status="PASS" starttime="20210726 11:04:17.371" endtime="20210726 11:04:25.510"/>
</kw>
<msg timestamp="20210726 11:04:25.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:17.371" endtime="20210726 11:04:25.510"/>
</kw>
<msg timestamp="20210726 11:04:25.510" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:04:17.368" endtime="20210726 11:04:25.510"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:04:25.511" endtime="20210726 11:04:25.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:25.517" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/63522-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:34.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:34.100" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210726 11:04:25.514" endtime="20210726 11:04:34.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:34.101" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210726 11:04:34.101" endtime="20210726 11:04:34.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:34.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:34.102" endtime="20210726 11:04:34.103"/>
</kw>
<status status="PASS" starttime="20210726 11:04:25.513" endtime="20210726 11:04:34.104"/>
</kw>
<msg timestamp="20210726 11:04:34.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:25.513" endtime="20210726 11:04:34.104"/>
</kw>
<msg timestamp="20210726 11:04:34.105" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210726 11:04:25.512" endtime="20210726 11:04:34.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:34.113" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63522-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:42.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:42.286" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:04:34.109" endtime="20210726 11:04:42.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:42.289" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:04:42.287" endtime="20210726 11:04:42.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:42.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:42.289" endtime="20210726 11:04:42.291"/>
</kw>
<status status="PASS" starttime="20210726 11:04:34.107" endtime="20210726 11:04:42.292"/>
</kw>
<msg timestamp="20210726 11:04:42.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:34.106" endtime="20210726 11:04:42.293"/>
</kw>
<msg timestamp="20210726 11:04:42.293" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:04:34.105" endtime="20210726 11:04:42.293"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:04:42.293" endtime="20210726 11:04:42.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:42.304" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/63522-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:50.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:50.185" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:04:42.300" endtime="20210726 11:04:50.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:50.187" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:04:50.185" endtime="20210726 11:04:50.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:50.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:50.187" endtime="20210726 11:04:50.188"/>
</kw>
<status status="PASS" starttime="20210726 11:04:42.299" endtime="20210726 11:04:50.188"/>
</kw>
<msg timestamp="20210726 11:04:50.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:42.298" endtime="20210726 11:04:50.188"/>
</kw>
<msg timestamp="20210726 11:04:50.189" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:04:42.296" endtime="20210726 11:04:50.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:50.194" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63522-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:04:58.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:04:58.110" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:04:50.191" endtime="20210726 11:04:58.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:04:58.112" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:04:58.111" endtime="20210726 11:04:58.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:04:58.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:04:58.113" endtime="20210726 11:04:58.115"/>
</kw>
<status status="PASS" starttime="20210726 11:04:50.190" endtime="20210726 11:04:58.115"/>
</kw>
<msg timestamp="20210726 11:04:58.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:50.190" endtime="20210726 11:04:58.116"/>
</kw>
<msg timestamp="20210726 11:04:58.117" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:04:50.189" endtime="20210726 11:04:58.117"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:04:58.118" endtime="20210726 11:04:58.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:04:58.126" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/63522-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:05:05.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:05:05.635" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:04:58.123" endtime="20210726 11:05:05.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:05:05.638" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:05:05.636" endtime="20210726 11:05:05.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:05:05.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:05:05.638" endtime="20210726 11:05:05.640"/>
</kw>
<status status="PASS" starttime="20210726 11:04:58.122" endtime="20210726 11:05:05.641"/>
</kw>
<msg timestamp="20210726 11:05:05.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:04:58.122" endtime="20210726 11:05:05.641"/>
</kw>
<msg timestamp="20210726 11:05:05.642" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:04:58.120" endtime="20210726 11:05:05.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:05:05.650" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63522-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:05:15.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:05:15.352" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210726 11:05:05.646" endtime="20210726 11:05:15.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:05:15.355" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:05:15.353" endtime="20210726 11:05:15.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:05:15.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:05:15.356" endtime="20210726 11:05:15.357"/>
</kw>
<status status="PASS" starttime="20210726 11:05:05.645" endtime="20210726 11:05:15.357"/>
</kw>
<msg timestamp="20210726 11:05:15.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:05:05.644" endtime="20210726 11:05:15.358"/>
</kw>
<msg timestamp="20210726 11:05:15.359" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210726 11:05:05.642" endtime="20210726 11:05:15.359"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:05:15.359" endtime="20210726 11:05:15.361"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:05:15.361" endtime="20210726 11:05:15.362"/>
</kw>
<status status="PASS" starttime="20210726 11:04:09.618" endtime="20210726 11:05:15.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 11:04:09.580" endtime="20210726 11:05:15.363"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:05:15.376" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:05:15.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:05:15.383" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 11:05:15.373" endtime="20210726 11:05:15.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:05:15.388" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 11:05:15.387" endtime="20210726 11:05:15.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:05:15.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:05:15.388" endtime="20210726 11:05:15.389"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.371" endtime="20210726 11:05:15.390"/>
</kw>
<msg timestamp="20210726 11:05:15.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:05:15.370" endtime="20210726 11:05:15.390"/>
</kw>
<msg timestamp="20210726 11:05:15.390" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 11:05:15.369" endtime="20210726 11:05:15.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 11:05:15.392" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 11:05:15.391" endtime="20210726 11:05:15.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:05:15.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:05:15.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:05:15.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:05:15.395" endtime="20210726 11:05:15.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:05:15.409" level="INFO"/>
<status status="PASS" starttime="20210726 11:05:15.409" endtime="20210726 11:05:15.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:05:15.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:05:15.410" endtime="20210726 11:05:15.410"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.394" endtime="20210726 11:05:15.411"/>
</kw>
<msg timestamp="20210726 11:05:15.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:05:15.394" endtime="20210726 11:05:15.411"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.393" endtime="20210726 11:05:15.411"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.392" endtime="20210726 11:05:15.411"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.367" endtime="20210726 11:05:15.412"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.366" endtime="20210726 11:05:15.412"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:05:15.419" level="INFO">Running command 'ozone sh key put o3://om:9862/63522-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:08:27.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:08:27.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:05:15.415" endtime="20210726 11:08:27.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:08:27.457" level="INFO"/>
<status status="PASS" starttime="20210726 11:08:27.456" endtime="20210726 11:08:27.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:08:27.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:08:27.457" endtime="20210726 11:08:27.459"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.414" endtime="20210726 11:08:27.460"/>
</kw>
<msg timestamp="20210726 11:08:27.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:05:15.414" endtime="20210726 11:08:27.460"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.413" endtime="20210726 11:08:27.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:08:27.467" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63522-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:08:36.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:08:36.018" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:08:27.464" endtime="20210726 11:08:36.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:08:36.019" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:08:36.019" endtime="20210726 11:08:36.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:08:36.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:08:36.020" endtime="20210726 11:08:36.021"/>
</kw>
<status status="PASS" starttime="20210726 11:08:27.463" endtime="20210726 11:08:36.022"/>
</kw>
<msg timestamp="20210726 11:08:36.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:08:27.462" endtime="20210726 11:08:36.023"/>
</kw>
<msg timestamp="20210726 11:08:36.023" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:08:27.461" endtime="20210726 11:08:36.023"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:08:36.023" endtime="20210726 11:08:36.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:08:36.032" level="INFO">Running command 'ozone sh key addacl o3://om:9862/63522-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:08:42.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:08:42.978" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 11:08:36.028" endtime="20210726 11:08:42.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:08:42.981" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 11:08:42.980" endtime="20210726 11:08:42.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:08:42.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:08:42.982" endtime="20210726 11:08:42.983"/>
</kw>
<status status="PASS" starttime="20210726 11:08:36.027" endtime="20210726 11:08:42.984"/>
</kw>
<msg timestamp="20210726 11:08:42.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:08:36.027" endtime="20210726 11:08:42.985"/>
</kw>
<msg timestamp="20210726 11:08:42.986" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210726 11:08:36.025" endtime="20210726 11:08:42.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:08:42.995" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63522-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:08:51.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:08:51.665" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:08:42.991" endtime="20210726 11:08:51.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:08:51.666" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:08:51.666" endtime="20210726 11:08:51.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:08:51.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:08:51.667" endtime="20210726 11:08:51.668"/>
</kw>
<status status="PASS" starttime="20210726 11:08:42.989" endtime="20210726 11:08:51.669"/>
</kw>
<msg timestamp="20210726 11:08:51.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:08:42.989" endtime="20210726 11:08:51.670"/>
</kw>
<msg timestamp="20210726 11:08:51.670" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:08:42.987" endtime="20210726 11:08:51.671"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:08:51.671" endtime="20210726 11:08:51.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:08:51.677" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/63522-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:08:59.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:08:59.483" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:08:51.675" endtime="20210726 11:08:59.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:08:59.485" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:08:59.484" endtime="20210726 11:08:59.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:08:59.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:08:59.486" endtime="20210726 11:08:59.486"/>
</kw>
<status status="PASS" starttime="20210726 11:08:51.674" endtime="20210726 11:08:59.487"/>
</kw>
<msg timestamp="20210726 11:08:59.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:08:51.674" endtime="20210726 11:08:59.487"/>
</kw>
<msg timestamp="20210726 11:08:59.487" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210726 11:08:51.673" endtime="20210726 11:08:59.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:08:59.493" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63522-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:07.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:07.062" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:08:59.489" endtime="20210726 11:09:07.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:07.064" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:09:07.063" endtime="20210726 11:09:07.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:07.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:07.065" endtime="20210726 11:09:07.065"/>
</kw>
<status status="PASS" starttime="20210726 11:08:59.489" endtime="20210726 11:09:07.066"/>
</kw>
<msg timestamp="20210726 11:09:07.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:08:59.489" endtime="20210726 11:09:07.066"/>
</kw>
<msg timestamp="20210726 11:09:07.066" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:08:59.488" endtime="20210726 11:09:07.066"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:09:07.067" endtime="20210726 11:09:07.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:07.075" level="INFO">Running command 'ozone sh key setacl o3://om:9862/63522-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:12.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:12.688" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:09:07.070" endtime="20210726 11:09:12.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:12.690" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:09:12.689" endtime="20210726 11:09:12.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:12.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:12.691" endtime="20210726 11:09:12.693"/>
</kw>
<status status="PASS" starttime="20210726 11:09:07.069" endtime="20210726 11:09:12.693"/>
</kw>
<msg timestamp="20210726 11:09:12.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:07.069" endtime="20210726 11:09:12.694"/>
</kw>
<msg timestamp="20210726 11:09:12.694" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:09:07.067" endtime="20210726 11:09:12.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:12.704" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63522-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:21.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:21.234" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210726 11:09:12.699" endtime="20210726 11:09:21.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:21.236" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:09:21.235" endtime="20210726 11:09:21.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:21.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:21.237" endtime="20210726 11:09:21.238"/>
</kw>
<status status="PASS" starttime="20210726 11:09:12.698" endtime="20210726 11:09:21.238"/>
</kw>
<msg timestamp="20210726 11:09:21.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:12.697" endtime="20210726 11:09:21.239"/>
</kw>
<msg timestamp="20210726 11:09:21.239" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210726 11:09:12.695" endtime="20210726 11:09:21.239"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:09:21.240" endtime="20210726 11:09:21.241"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:09:21.241" endtime="20210726 11:09:21.242"/>
</kw>
<status status="PASS" starttime="20210726 11:05:15.412" endtime="20210726 11:09:21.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 11:05:15.365" endtime="20210726 11:09:21.243"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:21.251" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:21.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:21.256" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 11:09:21.249" endtime="20210726 11:09:21.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:21.258" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 11:09:21.257" endtime="20210726 11:09:21.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:21.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:21.258" endtime="20210726 11:09:21.259"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.248" endtime="20210726 11:09:21.260"/>
</kw>
<msg timestamp="20210726 11:09:21.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:21.247" endtime="20210726 11:09:21.260"/>
</kw>
<msg timestamp="20210726 11:09:21.261" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 11:09:21.247" endtime="20210726 11:09:21.261"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 11:09:21.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 11:09:21.261" endtime="20210726 11:09:21.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:21.269" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:21.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:21.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:09:21.266" endtime="20210726 11:09:21.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:21.331" level="INFO"/>
<status status="PASS" starttime="20210726 11:09:21.330" endtime="20210726 11:09:21.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:21.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:21.332" endtime="20210726 11:09:21.332"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.265" endtime="20210726 11:09:21.333"/>
</kw>
<msg timestamp="20210726 11:09:21.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:21.264" endtime="20210726 11:09:21.333"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.263" endtime="20210726 11:09:21.333"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.262" endtime="20210726 11:09:21.333"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.246" endtime="20210726 11:09:21.334"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.245" endtime="20210726 11:09:21.334"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:21.339" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:29.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:29.560" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210726 11:09:21.337" endtime="20210726 11:09:29.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:29.563" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210726 11:09:29.561" endtime="20210726 11:09:29.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:29.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:29.563" endtime="20210726 11:09:29.565"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.336" endtime="20210726 11:09:29.566"/>
</kw>
<msg timestamp="20210726 11:09:29.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:21.336" endtime="20210726 11:09:29.566"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.335" endtime="20210726 11:09:29.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:29.574" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:38.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:38.453" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210726 11:09:29.571" endtime="20210726 11:09:38.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:38.454" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:09:38.453" endtime="20210726 11:09:38.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:38.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:38.454" endtime="20210726 11:09:38.457"/>
</kw>
<status status="PASS" starttime="20210726 11:09:29.570" endtime="20210726 11:09:38.458"/>
</kw>
<msg timestamp="20210726 11:09:38.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:29.569" endtime="20210726 11:09:38.458"/>
</kw>
<msg timestamp="20210726 11:09:38.459" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210726 11:09:29.567" endtime="20210726 11:09:38.459"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:09:38.459" endtime="20210726 11:09:38.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:38.469" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:47.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:47.171" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210726 11:09:38.466" endtime="20210726 11:09:47.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:47.173" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210726 11:09:47.171" endtime="20210726 11:09:47.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:47.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:47.173" endtime="20210726 11:09:47.174"/>
</kw>
<status status="PASS" starttime="20210726 11:09:38.465" endtime="20210726 11:09:47.178"/>
</kw>
<msg timestamp="20210726 11:09:47.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:38.463" endtime="20210726 11:09:47.178"/>
</kw>
<msg timestamp="20210726 11:09:47.178" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210726 11:09:38.461" endtime="20210726 11:09:47.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:47.188" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:09:55.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:09:55.841" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210726 11:09:47.183" endtime="20210726 11:09:55.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:09:55.845" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:09:55.843" endtime="20210726 11:09:55.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:09:55.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:09:55.846" endtime="20210726 11:09:55.848"/>
</kw>
<status status="PASS" starttime="20210726 11:09:47.182" endtime="20210726 11:09:55.849"/>
</kw>
<msg timestamp="20210726 11:09:55.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:47.181" endtime="20210726 11:09:55.850"/>
</kw>
<msg timestamp="20210726 11:09:55.851" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210726 11:09:47.178" endtime="20210726 11:09:55.851"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:09:55.851" endtime="20210726 11:09:55.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:09:55.863" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:10:03.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:10:03.344" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:09:55.858" endtime="20210726 11:10:03.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:10:03.346" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:10:03.345" endtime="20210726 11:10:03.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:10:03.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:10:03.346" endtime="20210726 11:10:03.347"/>
</kw>
<status status="PASS" starttime="20210726 11:09:55.857" endtime="20210726 11:10:03.347"/>
</kw>
<msg timestamp="20210726 11:10:03.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:09:55.856" endtime="20210726 11:10:03.347"/>
</kw>
<msg timestamp="20210726 11:10:03.348" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210726 11:09:55.853" endtime="20210726 11:10:03.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:10:03.354" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:10:12.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:10:12.107" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210726 11:10:03.351" endtime="20210726 11:10:12.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:10:12.108" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:10:12.108" endtime="20210726 11:10:12.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:10:12.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:10:12.109" endtime="20210726 11:10:12.109"/>
</kw>
<status status="PASS" starttime="20210726 11:10:03.350" endtime="20210726 11:10:12.110"/>
</kw>
<msg timestamp="20210726 11:10:12.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:10:03.349" endtime="20210726 11:10:12.110"/>
</kw>
<msg timestamp="20210726 11:10:12.110" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210726 11:10:03.348" endtime="20210726 11:10:12.110"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:10:12.111" endtime="20210726 11:10:12.111"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:10:12.111" endtime="20210726 11:10:12.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:10:12.118" level="INFO">Running command 'ozone sh key put o3://om:9862/63522-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:25.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:13:25.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:10:12.115" endtime="20210726 11:13:25.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:25.436" level="INFO"/>
<status status="PASS" starttime="20210726 11:13:25.436" endtime="20210726 11:13:25.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:13:25.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:13:25.437" endtime="20210726 11:13:25.437"/>
</kw>
<status status="PASS" starttime="20210726 11:10:12.114" endtime="20210726 11:13:25.438"/>
</kw>
<msg timestamp="20210726 11:13:25.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:10:12.113" endtime="20210726 11:13:25.438"/>
</kw>
<status status="PASS" starttime="20210726 11:10:12.112" endtime="20210726 11:13:25.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:25.444" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63522-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:34.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:13:34.377" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:13:25.441" endtime="20210726 11:13:34.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:34.379" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210726 11:13:34.378" endtime="20210726 11:13:34.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:13:34.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:13:34.379" endtime="20210726 11:13:34.380"/>
</kw>
<status status="PASS" starttime="20210726 11:13:25.440" endtime="20210726 11:13:34.380"/>
</kw>
<msg timestamp="20210726 11:13:34.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:13:25.439" endtime="20210726 11:13:34.380"/>
</kw>
<msg timestamp="20210726 11:13:34.381" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210726 11:13:25.438" endtime="20210726 11:13:34.381"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:13:34.384" endtime="20210726 11:13:34.385"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210726 11:13:34.385" endtime="20210726 11:13:34.385"/>
</kw>
<status status="PASS" starttime="20210726 11:09:21.334" endtime="20210726 11:13:34.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210726 11:09:21.244" endtime="20210726 11:13:34.386"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:34.395" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:34.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:13:34.401" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 11:13:34.392" endtime="20210726 11:13:34.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:34.402" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 11:13:34.401" endtime="20210726 11:13:34.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:13:34.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:13:34.402" endtime="20210726 11:13:34.403"/>
</kw>
<status status="PASS" starttime="20210726 11:13:34.392" endtime="20210726 11:13:34.404"/>
</kw>
<msg timestamp="20210726 11:13:34.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:13:34.391" endtime="20210726 11:13:34.404"/>
</kw>
<msg timestamp="20210726 11:13:34.405" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 11:13:34.390" endtime="20210726 11:13:34.405"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 11:13:34.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 11:13:34.405" endtime="20210726 11:13:34.406"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:34.412" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:34.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:13:34.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:13:34.409" endtime="20210726 11:13:34.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:34.423" level="INFO"/>
<status status="PASS" starttime="20210726 11:13:34.422" endtime="20210726 11:13:34.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:13:34.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:13:34.424" endtime="20210726 11:13:34.425"/>
</kw>
<status status="PASS" starttime="20210726 11:13:34.408" endtime="20210726 11:13:34.425"/>
</kw>
<msg timestamp="20210726 11:13:34.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:13:34.408" endtime="20210726 11:13:34.426"/>
</kw>
<status status="PASS" starttime="20210726 11:13:34.407" endtime="20210726 11:13:34.426"/>
</kw>
<status status="PASS" starttime="20210726 11:13:34.406" endtime="20210726 11:13:34.426"/>
</kw>
<status status="PASS" starttime="20210726 11:13:34.390" endtime="20210726 11:13:34.427"/>
</kw>
<status status="PASS" starttime="20210726 11:13:34.388" endtime="20210726 11:13:34.427"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:34.433" level="INFO">Running command 'ozone sh volume info o3:///63522-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:40.643" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 11:13:40.644" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63522-rpcwport is not found</msg>
<status status="PASS" starttime="20210726 11:13:34.430" endtime="20210726 11:13:40.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:40.645" level="INFO">VOLUME_NOT_FOUND Volume 63522-rpcwport is not found</msg>
<status status="PASS" starttime="20210726 11:13:40.644" endtime="20210726 11:13:40.645"/>
</kw>
<msg timestamp="20210726 11:13:40.645" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63522-rpcwport is not found</msg>
<status status="PASS" starttime="20210726 11:13:34.429" endtime="20210726 11:13:40.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:13:40.646" endtime="20210726 11:13:40.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:40.651" level="INFO">Running command 'ozone sh volume create o3:///63522-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:48.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:13:48.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:13:40.649" endtime="20210726 11:13:48.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:48.608" level="INFO"/>
<status status="PASS" starttime="20210726 11:13:48.607" endtime="20210726 11:13:48.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:13:48.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:13:48.608" endtime="20210726 11:13:48.609"/>
</kw>
<status status="PASS" starttime="20210726 11:13:40.648" endtime="20210726 11:13:48.609"/>
</kw>
<msg timestamp="20210726 11:13:48.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:13:40.648" endtime="20210726 11:13:48.610"/>
</kw>
<msg timestamp="20210726 11:13:48.610" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210726 11:13:40.647" endtime="20210726 11:13:48.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:13:48.610" endtime="20210726 11:13:48.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:48.615" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="63522-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:13:56.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:13:56.104" level="INFO">${output} = {
  "metadata": {},
  "name": "63522-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 11:13:48.613" endtime="20210726 11:13:56.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:13:56.107" level="INFO">{
  "metadata": {},
  "name": "63522-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T11:13:48.426Z",
  "modificationTime": "2021-07-26T11:13:48.426Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 11:13:56.106" endtime="20210726 11:13:56.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:13:56.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:13:56.107" endtime="20210726 11:13:56.108"/>
</kw>
<status status="PASS" starttime="20210726 11:13:48.612" endtime="20210726 11:13:56.109"/>
</kw>
<msg timestamp="20210726 11:13:56.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:13:48.612" endtime="20210726 11:13:56.109"/>
</kw>
<msg timestamp="20210726 11:13:56.110" level="INFO">${result} = {
  "metadata": {},
  "name": "63522-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 11:13:48.611" endtime="20210726 11:13:56.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:13:56.110" endtime="20210726 11:13:56.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:13:56.118" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63522-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:03.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:03.008" level="INFO">${output} = {
  "metadata": {},
  "name": "63522-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 11:13:56.114" endtime="20210726 11:14:03.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:03.011" level="INFO">{
  "metadata": {},
  "name": "63522-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T11:13:48.426Z",
  "modificationTime": "2021-07-26T11:13:48.426Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 11:14:03.009" endtime="20210726 11:14:03.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:03.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:03.011" endtime="20210726 11:14:03.017"/>
</kw>
<status status="PASS" starttime="20210726 11:13:56.113" endtime="20210726 11:14:03.017"/>
</kw>
<msg timestamp="20210726 11:14:03.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:13:56.113" endtime="20210726 11:14:03.017"/>
</kw>
<msg timestamp="20210726 11:14:03.018" level="INFO">${result} = {
  "metadata": {},
  "name": "63522-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210726 11:13:56.111" endtime="20210726 11:14:03.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:14:03.018" endtime="20210726 11:14:03.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:03.030" level="INFO">Running command 'ozone sh volume setquota o3:///63522-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:11.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:11.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:14:03.022" endtime="20210726 11:14:11.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:11.633" level="INFO"/>
<status status="PASS" starttime="20210726 11:14:11.631" endtime="20210726 11:14:11.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:11.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:11.633" endtime="20210726 11:14:11.634"/>
</kw>
<status status="PASS" starttime="20210726 11:14:03.021" endtime="20210726 11:14:11.634"/>
</kw>
<msg timestamp="20210726 11:14:11.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:03.020" endtime="20210726 11:14:11.634"/>
</kw>
<status status="PASS" starttime="20210726 11:14:03.019" endtime="20210726 11:14:11.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:11.641" level="INFO">Running command 'ozone sh volume info o3:///63522-rpcwport | jq -r '. | select(.name=="63522-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:18.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:18.872" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:14:11.638" endtime="20210726 11:14:18.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:18.875" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 11:14:18.873" endtime="20210726 11:14:18.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:18.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:18.875" endtime="20210726 11:14:18.877"/>
</kw>
<status status="PASS" starttime="20210726 11:14:11.637" endtime="20210726 11:14:18.878"/>
</kw>
<msg timestamp="20210726 11:14:18.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:11.636" endtime="20210726 11:14:18.878"/>
</kw>
<msg timestamp="20210726 11:14:18.879" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:14:11.635" endtime="20210726 11:14:18.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:14:18.879" endtime="20210726 11:14:18.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:18.889" level="INFO">Running command 'ozone sh bucket create o3:///63522-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:27.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:27.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:14:18.886" endtime="20210726 11:14:27.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:27.298" level="INFO"/>
<status status="PASS" starttime="20210726 11:14:27.297" endtime="20210726 11:14:27.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:27.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:27.298" endtime="20210726 11:14:27.299"/>
</kw>
<status status="PASS" starttime="20210726 11:14:18.885" endtime="20210726 11:14:27.300"/>
</kw>
<msg timestamp="20210726 11:14:27.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:18.883" endtime="20210726 11:14:27.300"/>
</kw>
<status status="PASS" starttime="20210726 11:14:18.881" endtime="20210726 11:14:27.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:27.307" level="INFO">Running command 'ozone sh bucket info o3:///63522-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:36.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:36.397" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210726 11:14:27.304" endtime="20210726 11:14:36.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:36.398" level="INFO">DISK</msg>
<status status="PASS" starttime="20210726 11:14:36.397" endtime="20210726 11:14:36.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:36.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:36.398" endtime="20210726 11:14:36.399"/>
</kw>
<status status="PASS" starttime="20210726 11:14:27.303" endtime="20210726 11:14:36.400"/>
</kw>
<msg timestamp="20210726 11:14:36.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:27.302" endtime="20210726 11:14:36.400"/>
</kw>
<msg timestamp="20210726 11:14:36.400" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210726 11:14:27.301" endtime="20210726 11:14:36.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:14:36.401" endtime="20210726 11:14:36.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:36.406" level="INFO">Running command 'ozone sh bucket info o3:///63522-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:44.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:44.778" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:14:36.404" endtime="20210726 11:14:44.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:44.779" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 11:14:44.778" endtime="20210726 11:14:44.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:44.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:44.779" endtime="20210726 11:14:44.780"/>
</kw>
<status status="PASS" starttime="20210726 11:14:36.403" endtime="20210726 11:14:44.781"/>
</kw>
<msg timestamp="20210726 11:14:44.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:36.403" endtime="20210726 11:14:44.781"/>
</kw>
<msg timestamp="20210726 11:14:44.781" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:14:36.401" endtime="20210726 11:14:44.781"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:14:44.782" endtime="20210726 11:14:44.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:44.787" level="INFO">Running command 'ozone sh bucket info o3:///63522-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:14:53.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:14:53.969" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210726 11:14:44.785" endtime="20210726 11:14:53.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:14:53.971" level="INFO">100</msg>
<status status="PASS" starttime="20210726 11:14:53.970" endtime="20210726 11:14:53.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:14:53.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:14:53.971" endtime="20210726 11:14:53.973"/>
</kw>
<status status="PASS" starttime="20210726 11:14:44.784" endtime="20210726 11:14:53.974"/>
</kw>
<msg timestamp="20210726 11:14:53.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:44.784" endtime="20210726 11:14:53.974"/>
</kw>
<msg timestamp="20210726 11:14:53.975" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210726 11:14:44.782" endtime="20210726 11:14:53.975"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:14:53.976" endtime="20210726 11:14:53.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:14:53.984" level="INFO">Running command 'ozone sh bucket setquota o3:///63522-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:15:02.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:15:02.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:14:53.981" endtime="20210726 11:15:02.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:15:02.043" level="INFO"/>
<status status="PASS" starttime="20210726 11:15:02.042" endtime="20210726 11:15:02.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:15:02.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:15:02.043" endtime="20210726 11:15:02.045"/>
</kw>
<status status="PASS" starttime="20210726 11:14:53.979" endtime="20210726 11:15:02.045"/>
</kw>
<msg timestamp="20210726 11:15:02.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:14:53.979" endtime="20210726 11:15:02.046"/>
</kw>
<status status="PASS" starttime="20210726 11:14:53.977" endtime="20210726 11:15:02.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:15:02.052" level="INFO">Running command 'ozone sh bucket info o3:///63522-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:15:11.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:15:11.123" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210726 11:15:02.049" endtime="20210726 11:15:11.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:15:11.125" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210726 11:15:11.124" endtime="20210726 11:15:11.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:15:11.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:15:11.125" endtime="20210726 11:15:11.126"/>
</kw>
<status status="PASS" starttime="20210726 11:15:02.048" endtime="20210726 11:15:11.127"/>
</kw>
<msg timestamp="20210726 11:15:11.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:15:02.047" endtime="20210726 11:15:11.127"/>
</kw>
<msg timestamp="20210726 11:15:11.127" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210726 11:15:02.046" endtime="20210726 11:15:11.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:15:11.128" endtime="20210726 11:15:11.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:15:11.135" level="INFO">Running command 'ozone sh bucket info o3:///63522-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:15:17.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:15:17.408" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210726 11:15:11.131" endtime="20210726 11:15:17.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:15:17.410" level="INFO">1000</msg>
<status status="PASS" starttime="20210726 11:15:17.409" endtime="20210726 11:15:17.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:15:17.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:15:17.410" endtime="20210726 11:15:17.411"/>
</kw>
<status status="PASS" starttime="20210726 11:15:11.130" endtime="20210726 11:15:17.411"/>
</kw>
<msg timestamp="20210726 11:15:17.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:15:11.130" endtime="20210726 11:15:17.412"/>
</kw>
<msg timestamp="20210726 11:15:17.415" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210726 11:15:11.128" endtime="20210726 11:15:17.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:15:17.416" endtime="20210726 11:15:17.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:15:17.422" level="INFO">Running command 'ozone sh bucket list o3:///63522-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:15:26.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:15:26.077" level="INFO">${output} = 63522-rpcwport</msg>
<status status="PASS" starttime="20210726 11:15:17.419" endtime="20210726 11:15:26.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:15:26.078" level="INFO">63522-rpcwport</msg>
<status status="PASS" starttime="20210726 11:15:26.077" endtime="20210726 11:15:26.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:15:26.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:15:26.078" endtime="20210726 11:15:26.079"/>
</kw>
<status status="PASS" starttime="20210726 11:15:17.419" endtime="20210726 11:15:26.079"/>
</kw>
<msg timestamp="20210726 11:15:26.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:15:17.418" endtime="20210726 11:15:26.080"/>
</kw>
<msg timestamp="20210726 11:15:26.080" level="INFO">${result} = 63522-rpcwport</msg>
<status status="PASS" starttime="20210726 11:15:17.417" endtime="20210726 11:15:26.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:15:26.080" endtime="20210726 11:15:26.081"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:15:26.087" level="INFO">Running command 'ozone sh key put o3:///63522-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:18:34.388" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 11:15:26.084" endtime="20210726 11:18:34.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.389" endtime="20210726 11:18:34.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.390" endtime="20210726 11:18:34.390"/>
</kw>
<status status="FAIL" starttime="20210726 11:15:26.083" endtime="20210726 11:18:34.390"/>
</kw>
<msg timestamp="20210726 11:18:34.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 11:15:26.083" endtime="20210726 11:18:34.390"/>
</kw>
<status status="FAIL" starttime="20210726 11:15:26.082" endtime="20210726 11:18:34.391"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.391" endtime="20210726 11:18:34.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.391" endtime="20210726 11:18:34.391"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.391" endtime="20210726 11:18:34.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.392" endtime="20210726 11:18:34.392"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.392" endtime="20210726 11:18:34.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.392" endtime="20210726 11:18:34.392"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.392" endtime="20210726 11:18:34.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.393" endtime="20210726 11:18:34.393"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.393" endtime="20210726 11:18:34.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.393" endtime="20210726 11:18:34.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.393" endtime="20210726 11:18:34.393"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.394" endtime="20210726 11:18:34.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.394" endtime="20210726 11:18:34.394"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.394" endtime="20210726 11:18:34.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.394" endtime="20210726 11:18:34.394"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.394" endtime="20210726 11:18:34.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.395" endtime="20210726 11:18:34.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.395" endtime="20210726 11:18:34.395"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.395" endtime="20210726 11:18:34.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.396" endtime="20210726 11:18:34.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.396" endtime="20210726 11:18:34.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.396" endtime="20210726 11:18:34.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.397" endtime="20210726 11:18:34.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.397" endtime="20210726 11:18:34.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.397" endtime="20210726 11:18:34.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.398" endtime="20210726 11:18:34.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.398" endtime="20210726 11:18:34.398"/>
</kw>
<status status="FAIL" starttime="20210726 11:15:26.081" endtime="20210726 11:18:34.399"/>
</kw>
<status status="FAIL" starttime="20210726 11:15:26.081" endtime="20210726 11:18:34.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.399" endtime="20210726 11:18:34.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.399" endtime="20210726 11:18:34.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.400" endtime="20210726 11:18:34.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.400" endtime="20210726 11:18:34.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.400" endtime="20210726 11:18:34.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.400" endtime="20210726 11:18:34.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.401" endtime="20210726 11:18:34.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.401" endtime="20210726 11:18:34.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.401" endtime="20210726 11:18:34.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.401" endtime="20210726 11:18:34.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.402" endtime="20210726 11:18:34.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.402" endtime="20210726 11:18:34.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.403" endtime="20210726 11:18:34.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.403" endtime="20210726 11:18:34.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.404" endtime="20210726 11:18:34.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.404" endtime="20210726 11:18:34.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.404" endtime="20210726 11:18:34.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.405" endtime="20210726 11:18:34.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.405" endtime="20210726 11:18:34.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.405" endtime="20210726 11:18:34.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.405" endtime="20210726 11:18:34.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.406" endtime="20210726 11:18:34.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.407" endtime="20210726 11:18:34.407"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:18:34.408" endtime="20210726 11:18:34.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.408" endtime="20210726 11:18:34.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:18:34.408" endtime="20210726 11:18:34.409"/>
</kw>
<status status="FAIL" starttime="20210726 11:13:34.427" endtime="20210726 11:18:34.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210726 11:13:34.387" endtime="20210726 11:18:34.410">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:18:34.422" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:18:34.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:18:34.428" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 11:18:34.419" endtime="20210726 11:18:34.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:18:34.430" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 11:18:34.429" endtime="20210726 11:18:34.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:18:34.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:18:34.430" endtime="20210726 11:18:34.431"/>
</kw>
<status status="PASS" starttime="20210726 11:18:34.418" endtime="20210726 11:18:34.432"/>
</kw>
<msg timestamp="20210726 11:18:34.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:18:34.417" endtime="20210726 11:18:34.432"/>
</kw>
<msg timestamp="20210726 11:18:34.432" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 11:18:34.416" endtime="20210726 11:18:34.433"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 11:18:34.433" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 11:18:34.433" endtime="20210726 11:18:34.433"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:18:34.439" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:18:34.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:18:34.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:18:34.436" endtime="20210726 11:18:34.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:18:34.476" level="INFO"/>
<status status="PASS" starttime="20210726 11:18:34.475" endtime="20210726 11:18:34.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:18:34.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:18:34.476" endtime="20210726 11:18:34.477"/>
</kw>
<status status="PASS" starttime="20210726 11:18:34.435" endtime="20210726 11:18:34.478"/>
</kw>
<msg timestamp="20210726 11:18:34.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:18:34.435" endtime="20210726 11:18:34.478"/>
</kw>
<status status="PASS" starttime="20210726 11:18:34.434" endtime="20210726 11:18:34.478"/>
</kw>
<status status="PASS" starttime="20210726 11:18:34.434" endtime="20210726 11:18:34.478"/>
</kw>
<status status="PASS" starttime="20210726 11:18:34.415" endtime="20210726 11:18:34.479"/>
</kw>
<status status="PASS" starttime="20210726 11:18:34.414" endtime="20210726 11:18:34.479"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:18:34.487" level="INFO">Running command 'ozone sh volume info /63522-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:18:42.828" level="INFO">${rc} = 255</msg>
<msg timestamp="20210726 11:18:42.828" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63522-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210726 11:18:34.483" endtime="20210726 11:18:42.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:18:42.830" level="INFO">VOLUME_NOT_FOUND Volume 63522-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210726 11:18:42.829" endtime="20210726 11:18:42.831"/>
</kw>
<msg timestamp="20210726 11:18:42.831" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63522-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210726 11:18:34.482" endtime="20210726 11:18:42.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:18:42.832" endtime="20210726 11:18:42.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:18:42.841" level="INFO">Running command 'ozone sh volume create /63522-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:18:50.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:18:50.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:18:42.837" endtime="20210726 11:18:50.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:18:50.640" level="INFO"/>
<status status="PASS" starttime="20210726 11:18:50.639" endtime="20210726 11:18:50.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:18:50.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:18:50.641" endtime="20210726 11:18:50.641"/>
</kw>
<status status="PASS" starttime="20210726 11:18:42.836" endtime="20210726 11:18:50.642"/>
</kw>
<msg timestamp="20210726 11:18:50.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:18:42.835" endtime="20210726 11:18:50.642"/>
</kw>
<msg timestamp="20210726 11:18:50.643" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210726 11:18:42.833" endtime="20210726 11:18:50.643"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:18:50.643" endtime="20210726 11:18:50.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:18:50.653" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="63522-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:18:58.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:18:58.866" level="INFO">${output} = {
  "metadata": {},
  "name": "63522-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210726 11:18:50.649" endtime="20210726 11:18:58.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:18:58.868" level="INFO">{
  "metadata": {},
  "name": "63522-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T11:18:50.527Z",
  "modificationTime": "2021-07-26T11:18:50.527Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 11:18:58.867" endtime="20210726 11:18:58.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:18:58.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:18:58.868" endtime="20210726 11:18:58.869"/>
</kw>
<status status="PASS" starttime="20210726 11:18:50.647" endtime="20210726 11:18:58.870"/>
</kw>
<msg timestamp="20210726 11:18:58.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:18:50.646" endtime="20210726 11:18:58.870"/>
</kw>
<msg timestamp="20210726 11:18:58.870" level="INFO">${result} = {
  "metadata": {},
  "name": "63522-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210726 11:18:50.644" endtime="20210726 11:18:58.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:18:58.871" endtime="20210726 11:18:58.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:18:58.876" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63522-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:06.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:06.537" level="INFO">${output} = {
  "metadata": {},
  "name": "63522-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210726 11:18:58.873" endtime="20210726 11:19:06.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:06.540" level="INFO">{
  "metadata": {},
  "name": "63522-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-07-26T11:18:50.527Z",
  "modificationTime": "2021-07-26T11:18:50.527Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210726 11:19:06.538" endtime="20210726 11:19:06.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:06.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:06.540" endtime="20210726 11:19:06.542"/>
</kw>
<status status="PASS" starttime="20210726 11:18:58.873" endtime="20210726 11:19:06.542"/>
</kw>
<msg timestamp="20210726 11:19:06.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:18:58.872" endtime="20210726 11:19:06.542"/>
</kw>
<msg timestamp="20210726 11:19:06.543" level="INFO">${result} = {
  "metadata": {},
  "name": "63522-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210726 11:18:58.871" endtime="20210726 11:19:06.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210726 11:19:06.543" endtime="20210726 11:19:06.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:06.549" level="INFO">Running command 'ozone sh volume setquota /63522-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:14.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:14.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:19:06.546" endtime="20210726 11:19:14.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:14.738" level="INFO"/>
<status status="PASS" starttime="20210726 11:19:14.737" endtime="20210726 11:19:14.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:14.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:14.739" endtime="20210726 11:19:14.744"/>
</kw>
<status status="PASS" starttime="20210726 11:19:06.545" endtime="20210726 11:19:14.745"/>
</kw>
<msg timestamp="20210726 11:19:14.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:06.545" endtime="20210726 11:19:14.745"/>
</kw>
<status status="PASS" starttime="20210726 11:19:06.544" endtime="20210726 11:19:14.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:14.755" level="INFO">Running command 'ozone sh volume info /63522-rpcwoscheme | jq -r '. | select(.name=="63522-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:22.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:22.892" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:19:14.752" endtime="20210726 11:19:22.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:22.894" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 11:19:22.893" endtime="20210726 11:19:22.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:22.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:22.894" endtime="20210726 11:19:22.895"/>
</kw>
<status status="PASS" starttime="20210726 11:19:14.750" endtime="20210726 11:19:22.896"/>
</kw>
<msg timestamp="20210726 11:19:22.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:14.750" endtime="20210726 11:19:22.896"/>
</kw>
<msg timestamp="20210726 11:19:22.897" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:19:14.747" endtime="20210726 11:19:22.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:19:22.897" endtime="20210726 11:19:22.898"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:22.904" level="INFO">Running command 'ozone sh bucket create /63522-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:30.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:30.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:19:22.901" endtime="20210726 11:19:30.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:30.496" level="INFO"/>
<status status="PASS" starttime="20210726 11:19:30.495" endtime="20210726 11:19:30.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:30.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:30.497" endtime="20210726 11:19:30.497"/>
</kw>
<status status="PASS" starttime="20210726 11:19:22.900" endtime="20210726 11:19:30.498"/>
</kw>
<msg timestamp="20210726 11:19:30.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:22.899" endtime="20210726 11:19:30.498"/>
</kw>
<status status="PASS" starttime="20210726 11:19:22.898" endtime="20210726 11:19:30.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:30.503" level="INFO">Running command 'ozone sh bucket info /63522-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:36.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:37.000" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210726 11:19:30.501" endtime="20210726 11:19:37.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:37.001" level="INFO">DISK</msg>
<status status="PASS" starttime="20210726 11:19:37.000" endtime="20210726 11:19:37.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:37.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:37.001" endtime="20210726 11:19:37.002"/>
</kw>
<status status="PASS" starttime="20210726 11:19:30.500" endtime="20210726 11:19:37.002"/>
</kw>
<msg timestamp="20210726 11:19:37.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:30.499" endtime="20210726 11:19:37.003"/>
</kw>
<msg timestamp="20210726 11:19:37.003" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210726 11:19:30.498" endtime="20210726 11:19:37.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:19:37.003" endtime="20210726 11:19:37.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:37.009" level="INFO">Running command 'ozone sh bucket info /63522-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:45.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:45.846" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:19:37.007" endtime="20210726 11:19:45.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:45.847" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210726 11:19:45.847" endtime="20210726 11:19:45.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:45.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:45.848" endtime="20210726 11:19:45.848"/>
</kw>
<status status="PASS" starttime="20210726 11:19:37.006" endtime="20210726 11:19:45.849"/>
</kw>
<msg timestamp="20210726 11:19:45.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:37.006" endtime="20210726 11:19:45.849"/>
</kw>
<msg timestamp="20210726 11:19:45.850" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210726 11:19:37.004" endtime="20210726 11:19:45.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:19:45.850" endtime="20210726 11:19:45.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:45.856" level="INFO">Running command 'ozone sh bucket info /63522-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:19:54.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:19:54.519" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210726 11:19:45.853" endtime="20210726 11:19:54.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:19:54.524" level="INFO">100</msg>
<status status="PASS" starttime="20210726 11:19:54.521" endtime="20210726 11:19:54.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:19:54.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:19:54.524" endtime="20210726 11:19:54.525"/>
</kw>
<status status="PASS" starttime="20210726 11:19:45.852" endtime="20210726 11:19:54.526"/>
</kw>
<msg timestamp="20210726 11:19:54.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:45.852" endtime="20210726 11:19:54.527"/>
</kw>
<msg timestamp="20210726 11:19:54.527" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210726 11:19:45.851" endtime="20210726 11:19:54.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:19:54.527" endtime="20210726 11:19:54.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:19:54.535" level="INFO">Running command 'ozone sh bucket setquota /63522-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:20:02.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:20:02.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 11:19:54.531" endtime="20210726 11:20:02.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:20:02.493" level="INFO"/>
<status status="PASS" starttime="20210726 11:20:02.492" endtime="20210726 11:20:02.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:20:02.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:20:02.493" endtime="20210726 11:20:02.494"/>
</kw>
<status status="PASS" starttime="20210726 11:19:54.531" endtime="20210726 11:20:02.494"/>
</kw>
<msg timestamp="20210726 11:20:02.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:19:54.530" endtime="20210726 11:20:02.495"/>
</kw>
<status status="PASS" starttime="20210726 11:19:54.529" endtime="20210726 11:20:02.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:20:02.501" level="INFO">Running command 'ozone sh bucket info /63522-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:20:11.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:20:11.135" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210726 11:20:02.498" endtime="20210726 11:20:11.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:20:11.136" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210726 11:20:11.135" endtime="20210726 11:20:11.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:20:11.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:20:11.136" endtime="20210726 11:20:11.137"/>
</kw>
<status status="PASS" starttime="20210726 11:20:02.497" endtime="20210726 11:20:11.137"/>
</kw>
<msg timestamp="20210726 11:20:11.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:20:02.497" endtime="20210726 11:20:11.140"/>
</kw>
<msg timestamp="20210726 11:20:11.140" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210726 11:20:02.495" endtime="20210726 11:20:11.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:20:11.141" endtime="20210726 11:20:11.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:20:11.148" level="INFO">Running command 'ozone sh bucket info /63522-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:20:20.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:20:20.409" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210726 11:20:11.144" endtime="20210726 11:20:20.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:20:20.411" level="INFO">1000</msg>
<status status="PASS" starttime="20210726 11:20:20.410" endtime="20210726 11:20:20.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:20:20.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:20:20.411" endtime="20210726 11:20:20.413"/>
</kw>
<status status="PASS" starttime="20210726 11:20:11.143" endtime="20210726 11:20:20.413"/>
</kw>
<msg timestamp="20210726 11:20:20.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:20:11.143" endtime="20210726 11:20:20.414"/>
</kw>
<msg timestamp="20210726 11:20:20.415" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210726 11:20:11.141" endtime="20210726 11:20:20.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:20:20.415" endtime="20210726 11:20:20.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:20:20.422" level="INFO">Running command 'ozone sh bucket list /63522-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:20:28.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 11:20:28.511" level="INFO">${output} = 63522-rpcwoscheme</msg>
<status status="PASS" starttime="20210726 11:20:20.419" endtime="20210726 11:20:28.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 11:20:28.512" level="INFO">63522-rpcwoscheme</msg>
<status status="PASS" starttime="20210726 11:20:28.511" endtime="20210726 11:20:28.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 11:20:28.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 11:20:28.513" endtime="20210726 11:20:28.513"/>
</kw>
<status status="PASS" starttime="20210726 11:20:20.419" endtime="20210726 11:20:28.514"/>
</kw>
<msg timestamp="20210726 11:20:28.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 11:20:20.418" endtime="20210726 11:20:28.515"/>
</kw>
<msg timestamp="20210726 11:20:28.517" level="INFO">${result} = 63522-rpcwoscheme</msg>
<status status="PASS" starttime="20210726 11:20:20.417" endtime="20210726 11:20:28.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210726 11:20:28.517" endtime="20210726 11:20:28.519"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 11:20:28.530" level="INFO">Running command 'ozone sh key put /63522-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 11:23:34.413" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210726 11:20:28.526" endtime="20210726 11:23:34.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.414" endtime="20210726 11:23:34.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.415" endtime="20210726 11:23:34.415"/>
</kw>
<status status="FAIL" starttime="20210726 11:20:28.525" endtime="20210726 11:23:34.415"/>
</kw>
<msg timestamp="20210726 11:23:34.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210726 11:20:28.525" endtime="20210726 11:23:34.416"/>
</kw>
<status status="FAIL" starttime="20210726 11:20:28.523" endtime="20210726 11:23:34.416"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.416" endtime="20210726 11:23:34.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.421" endtime="20210726 11:23:34.421"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.421" endtime="20210726 11:23:34.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.422" endtime="20210726 11:23:34.422"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.422" endtime="20210726 11:23:34.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.422" endtime="20210726 11:23:34.422"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.423" endtime="20210726 11:23:34.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.423" endtime="20210726 11:23:34.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.423" endtime="20210726 11:23:34.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.424" endtime="20210726 11:23:34.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.424" endtime="20210726 11:23:34.424"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.424" endtime="20210726 11:23:34.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.425" endtime="20210726 11:23:34.425"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.425" endtime="20210726 11:23:34.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.426" endtime="20210726 11:23:34.426"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.426" endtime="20210726 11:23:34.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.427" endtime="20210726 11:23:34.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.427" endtime="20210726 11:23:34.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.428" endtime="20210726 11:23:34.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.428" endtime="20210726 11:23:34.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.429" endtime="20210726 11:23:34.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.429" endtime="20210726 11:23:34.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.429" endtime="20210726 11:23:34.430"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.430" endtime="20210726 11:23:34.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.430" endtime="20210726 11:23:34.430"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.431" endtime="20210726 11:23:34.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.431" endtime="20210726 11:23:34.431"/>
</kw>
<status status="FAIL" starttime="20210726 11:20:28.520" endtime="20210726 11:23:34.431"/>
</kw>
<status status="FAIL" starttime="20210726 11:20:28.520" endtime="20210726 11:23:34.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.431" endtime="20210726 11:23:34.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.432" endtime="20210726 11:23:34.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.432" endtime="20210726 11:23:34.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.433" endtime="20210726 11:23:34.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.433" endtime="20210726 11:23:34.433"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.434" endtime="20210726 11:23:34.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.434" endtime="20210726 11:23:34.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.434" endtime="20210726 11:23:34.434"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.435" endtime="20210726 11:23:34.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.435" endtime="20210726 11:23:34.435"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.435" endtime="20210726 11:23:34.435"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.436" endtime="20210726 11:23:34.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.436" endtime="20210726 11:23:34.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.436" endtime="20210726 11:23:34.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.437" endtime="20210726 11:23:34.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.437" endtime="20210726 11:23:34.437"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.437" endtime="20210726 11:23:34.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.438" endtime="20210726 11:23:34.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.438" endtime="20210726 11:23:34.438"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.438" endtime="20210726 11:23:34.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.439" endtime="20210726 11:23:34.439"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.439" endtime="20210726 11:23:34.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.439" endtime="20210726 11:23:34.439"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210726 11:23:34.439" endtime="20210726 11:23:34.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.440" endtime="20210726 11:23:34.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210726 11:23:34.440" endtime="20210726 11:23:34.440"/>
</kw>
<status status="FAIL" starttime="20210726 11:18:34.479" endtime="20210726 11:23:34.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210726 11:18:34.412" endtime="20210726 11:23:34.441">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210726 10:58:03.367" endtime="20210726 11:23:34.443"/>
</suite>
<status status="FAIL" starttime="20210726 10:33:21.726" endtime="20210726 11:23:34.450"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:15.810" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:15.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:15.815" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210726 10:33:15.806" endtime="20210726 10:33:15.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:15.816" level="INFO">scm</msg>
<status status="PASS" starttime="20210726 10:33:15.815" endtime="20210726 10:33:15.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:15.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:15.817" endtime="20210726 10:33:15.817"/>
</kw>
<status status="PASS" starttime="20210726 10:33:15.806" endtime="20210726 10:33:15.818"/>
</kw>
<msg timestamp="20210726 10:33:15.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:15.805" endtime="20210726 10:33:15.818"/>
</kw>
<msg timestamp="20210726 10:33:15.818" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210726 10:33:15.805" endtime="20210726 10:33:15.818"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210726 10:33:15.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210726 10:33:15.819" endtime="20210726 10:33:15.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210726 10:33:15.824" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210726 10:33:15.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210726 10:33:15.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210726 10:33:15.822" endtime="20210726 10:33:15.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210726 10:33:15.836" level="INFO"/>
<status status="PASS" starttime="20210726 10:33:15.836" endtime="20210726 10:33:15.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210726 10:33:15.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210726 10:33:15.837" endtime="20210726 10:33:15.837"/>
</kw>
<status status="PASS" starttime="20210726 10:33:15.821" endtime="20210726 10:33:15.838"/>
</kw>
<msg timestamp="20210726 10:33:15.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210726 10:33:15.821" endtime="20210726 10:33:15.838"/>
</kw>
<status status="PASS" starttime="20210726 10:33:15.820" endtime="20210726 10:33:15.838"/>
</kw>
<status status="PASS" starttime="20210726 10:33:15.820" endtime="20210726 10:33:15.839"/>
</kw>
<status status="PASS" starttime="20210726 10:33:15.804" endtime="20210726 10:33:15.839"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210726 10:33:15.803" endtime="20210726 10:33:15.839"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210726 10:33:15.734" endtime="20210726 10:33:15.841"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3012831"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
