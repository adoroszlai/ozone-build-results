<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211125 08:27:56.455" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:37.759" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:37.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:37.763" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:37:37.755" endtime="20211125 07:37:37.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:37.764" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:37:37.763" endtime="20211125 07:37:37.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:37.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:37.764" endtime="20211125 07:37:37.765"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.755" endtime="20211125 07:37:37.765"/>
</kw>
<msg timestamp="20211125 07:37:37.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:37.755" endtime="20211125 07:37:37.766"/>
</kw>
<msg timestamp="20211125 07:37:37.766" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211125 07:37:37.754" endtime="20211125 07:37:37.766"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:37.771" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:37.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:37.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:37:37.769" endtime="20211125 07:37:37.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:37.779" level="INFO"/>
<status status="PASS" starttime="20211125 07:37:37.779" endtime="20211125 07:37:37.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:37.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:37.779" endtime="20211125 07:37:37.780"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.768" endtime="20211125 07:37:37.781"/>
</kw>
<msg timestamp="20211125 07:37:37.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:37.768" endtime="20211125 07:37:37.781"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.767" endtime="20211125 07:37:37.781"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.766" endtime="20211125 07:37:37.781"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.754" endtime="20211125 07:37:37.781"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.753" endtime="20211125 07:37:37.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:37.785" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:37.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:37.948" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211125 07:37:37.783" endtime="20211125 07:37:37.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:37.949" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 25 Nov 2021 07:37:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCB+CqSd8RAYKl6viroO5edgPxJo0ThHppi5jb/dMsDsFmRduQ6VbNIMzeduOFRch/58l0X7aVM5P7x2R0SOazx56K
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1637861857936&amp;s=2MvduS8AL5nPdwZbn5xnYwvqa0tevbiaBIo3YWFqBKo="; Path=/; HttpOnly
Last-Modified: Thu, 25 Nov 2021 07:23:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211125 07:37:37.949" endtime="20211125 07:37:37.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:37.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:37.950" endtime="20211125 07:37:37.951"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.782" endtime="20211125 07:37:37.951"/>
</kw>
<msg timestamp="20211125 07:37:37.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:37.782" endtime="20211125 07:37:37.951"/>
</kw>
<msg timestamp="20211125 07:37:37.952" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211125 07:37:37.781" endtime="20211125 07:37:37.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:37:37.952" endtime="20211125 07:37:37.952"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 07:37:37.752" endtime="20211125 07:37:37.953"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:37.961" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:37.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:37.965" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:37:37.959" endtime="20211125 07:37:37.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:37.966" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:37:37.966" endtime="20211125 07:37:37.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:37.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:37.967" endtime="20211125 07:37:37.967"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.958" endtime="20211125 07:37:37.968"/>
</kw>
<msg timestamp="20211125 07:37:37.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:37.958" endtime="20211125 07:37:37.968"/>
</kw>
<msg timestamp="20211125 07:37:37.968" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:37:37.957" endtime="20211125 07:37:37.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:37:37.970" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:37:37.968" endtime="20211125 07:37:37.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:37.976" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:37.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:37.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:37:37.974" endtime="20211125 07:37:37.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:37.986" level="INFO"/>
<status status="PASS" starttime="20211125 07:37:37.985" endtime="20211125 07:37:37.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:37.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:37.986" endtime="20211125 07:37:37.987"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.973" endtime="20211125 07:37:37.987"/>
</kw>
<msg timestamp="20211125 07:37:37.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:37.972" endtime="20211125 07:37:37.987"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.971" endtime="20211125 07:37:37.987"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.971" endtime="20211125 07:37:37.988"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.957" endtime="20211125 07:37:37.988"/>
</kw>
<status status="PASS" starttime="20211125 07:37:37.956" endtime="20211125 07:37:37.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:37.992" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:37.956" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 07:37:37.990" endtime="20211125 07:42:37.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 07:42:37.956" endtime="20211125 07:42:37.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 07:42:37.957" endtime="20211125 07:42:37.957"/>
</kw>
<status status="FAIL" starttime="20211125 07:37:37.989" endtime="20211125 07:42:37.958"/>
</kw>
<msg timestamp="20211125 07:42:37.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 07:37:37.988" endtime="20211125 07:42:37.958"/>
</kw>
<status status="FAIL" starttime="20211125 07:37:37.988" endtime="20211125 07:42:37.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211125 07:42:37.959" endtime="20211125 07:42:37.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 07:42:37.959" endtime="20211125 07:42:37.959"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211125 07:37:37.955" endtime="20211125 07:42:37.959">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211125 07:37:37.723" endtime="20211125 07:42:37.962"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:37.973" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:39.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:42:39.799" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211125 07:42:37.971" endtime="20211125 07:42:39.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:39.800" level="INFO">om</msg>
<status status="PASS" starttime="20211125 07:42:39.800" endtime="20211125 07:42:39.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:39.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:39.801" endtime="20211125 07:42:39.802"/>
</kw>
<status status="PASS" starttime="20211125 07:42:37.970" endtime="20211125 07:42:39.802"/>
</kw>
<msg timestamp="20211125 07:42:39.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:37.970" endtime="20211125 07:42:39.802"/>
</kw>
<msg timestamp="20211125 07:42:39.803" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211125 07:42:37.969" endtime="20211125 07:42:39.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:39.803" endtime="20211125 07:42:39.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:39.807" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:41.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:42:41.878" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211125 07:42:39.805" endtime="20211125 07:42:41.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:41.881" level="INFO">om</msg>
<status status="PASS" starttime="20211125 07:42:41.879" endtime="20211125 07:42:41.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:41.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:41.881" endtime="20211125 07:42:41.882"/>
</kw>
<status status="PASS" starttime="20211125 07:42:39.805" endtime="20211125 07:42:41.883"/>
</kw>
<msg timestamp="20211125 07:42:41.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:39.804" endtime="20211125 07:42:41.884"/>
</kw>
<msg timestamp="20211125 07:42:41.886" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211125 07:42:39.804" endtime="20211125 07:42:41.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:41.888" endtime="20211125 07:42:41.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 07:42:37.968" endtime="20211125 07:42:41.890"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:41.903" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:44.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:42:44.892" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:42:41.899" endtime="20211125 07:42:44.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:44.894" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:42:44.893" endtime="20211125 07:42:44.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:44.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:44.894" endtime="20211125 07:42:44.895"/>
</kw>
<status status="PASS" starttime="20211125 07:42:41.897" endtime="20211125 07:42:44.895"/>
</kw>
<msg timestamp="20211125 07:42:44.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:41.897" endtime="20211125 07:42:44.895"/>
</kw>
<msg timestamp="20211125 07:42:44.896" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211125 07:42:41.895" endtime="20211125 07:42:44.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:44.896" endtime="20211125 07:42:44.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:44.903" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:48.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:42:48.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:42:44.899" endtime="20211125 07:42:48.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:48.613" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:42:48.612" endtime="20211125 07:42:48.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:48.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:48.613" endtime="20211125 07:42:48.615"/>
</kw>
<status status="PASS" starttime="20211125 07:42:44.898" endtime="20211125 07:42:48.615"/>
</kw>
<msg timestamp="20211125 07:42:48.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:44.898" endtime="20211125 07:42:48.616"/>
</kw>
<msg timestamp="20211125 07:42:48.616" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211125 07:42:44.897" endtime="20211125 07:42:48.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:48.617" endtime="20211125 07:42:48.617"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 07:42:41.893" endtime="20211125 07:42:48.618"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:48.626" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:51.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:42:51.265" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211125 07:42:48.624" endtime="20211125 07:42:51.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:51.267" level="INFO">om</msg>
<status status="PASS" starttime="20211125 07:42:51.266" endtime="20211125 07:42:51.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:51.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:51.267" endtime="20211125 07:42:51.268"/>
</kw>
<status status="PASS" starttime="20211125 07:42:48.623" endtime="20211125 07:42:51.268"/>
</kw>
<msg timestamp="20211125 07:42:51.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:48.622" endtime="20211125 07:42:51.268"/>
</kw>
<msg timestamp="20211125 07:42:51.269" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211125 07:42:48.621" endtime="20211125 07:42:51.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:51.269" endtime="20211125 07:42:51.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:51.269" endtime="20211125 07:42:51.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:51.273" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:53.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:42:53.909" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211125 07:42:51.271" endtime="20211125 07:42:53.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:53.911" level="INFO">om</msg>
<status status="PASS" starttime="20211125 07:42:53.910" endtime="20211125 07:42:53.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:53.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:53.911" endtime="20211125 07:42:53.912"/>
</kw>
<status status="PASS" starttime="20211125 07:42:51.271" endtime="20211125 07:42:53.912"/>
</kw>
<msg timestamp="20211125 07:42:53.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:51.270" endtime="20211125 07:42:53.913"/>
</kw>
<msg timestamp="20211125 07:42:53.913" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211125 07:42:51.270" endtime="20211125 07:42:53.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:53.913" endtime="20211125 07:42:53.914"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:53.914" endtime="20211125 07:42:53.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 07:42:48.619" endtime="20211125 07:42:53.915"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:53.922" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:56.811" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:42:56.811" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211125 07:42:53.919" endtime="20211125 07:42:56.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:56.813" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211125 07:42:56.812" endtime="20211125 07:42:56.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:56.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:56.814" endtime="20211125 07:42:56.814"/>
</kw>
<msg timestamp="20211125 07:42:56.815" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211125 07:42:53.918" endtime="20211125 07:42:56.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:56.815" endtime="20211125 07:42:56.816"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:56.819" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:42:59.659" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:42:59.659" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211125 07:42:56.817" endtime="20211125 07:42:59.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:42:59.661" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211125 07:42:59.660" endtime="20211125 07:42:59.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:42:59.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:42:59.661" endtime="20211125 07:42:59.662"/>
</kw>
<msg timestamp="20211125 07:42:59.663" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211125 07:42:56.816" endtime="20211125 07:42:59.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:42:59.663" endtime="20211125 07:42:59.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 07:42:53.916" endtime="20211125 07:42:59.664"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211125 07:42:37.963" endtime="20211125 07:42:59.665"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211125 07:42:59.685" level="INFO">${random} = 68998</msg>
<status status="PASS" starttime="20211125 07:42:59.684" endtime="20211125 07:42:59.685"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:42:59.688" level="INFO">${source} = 68998-source</msg>
<status status="PASS" starttime="20211125 07:42:59.685" endtime="20211125 07:42:59.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:42:59.689" level="INFO">${target} = 68998-target</msg>
<status status="PASS" starttime="20211125 07:42:59.688" endtime="20211125 07:42:59.690"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:42:59.694" level="INFO">Running command 'ozone sh volume create 68998-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:43:07.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:43:07.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:42:59.691" endtime="20211125 07:43:07.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:43:07.526" level="INFO"/>
<status status="PASS" starttime="20211125 07:43:07.524" endtime="20211125 07:43:07.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:43:07.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:43:07.526" endtime="20211125 07:43:07.527"/>
</kw>
<status status="PASS" starttime="20211125 07:42:59.691" endtime="20211125 07:43:07.528"/>
</kw>
<msg timestamp="20211125 07:43:07.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:42:59.690" endtime="20211125 07:43:07.528"/>
</kw>
<status status="PASS" starttime="20211125 07:42:59.690" endtime="20211125 07:43:07.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:43:07.533" level="INFO">Running command 'ozone sh volume create 68998-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:43:15.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:43:15.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:43:07.531" endtime="20211125 07:43:15.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:43:15.201" level="INFO"/>
<status status="PASS" starttime="20211125 07:43:15.201" endtime="20211125 07:43:15.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:43:15.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:43:15.201" endtime="20211125 07:43:15.202"/>
</kw>
<status status="PASS" starttime="20211125 07:43:07.530" endtime="20211125 07:43:15.202"/>
</kw>
<msg timestamp="20211125 07:43:15.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:43:07.529" endtime="20211125 07:43:15.203"/>
</kw>
<status status="PASS" starttime="20211125 07:43:07.529" endtime="20211125 07:43:15.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:43:15.210" level="INFO">Running command 'ozone sh bucket create 68998-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:43:22.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:43:22.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:43:15.207" endtime="20211125 07:43:22.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:43:22.704" level="INFO"/>
<status status="PASS" starttime="20211125 07:43:22.703" endtime="20211125 07:43:22.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:43:22.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:43:22.704" endtime="20211125 07:43:22.705"/>
</kw>
<status status="PASS" starttime="20211125 07:43:15.207" endtime="20211125 07:43:22.706"/>
</kw>
<msg timestamp="20211125 07:43:22.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:43:15.205" endtime="20211125 07:43:22.706"/>
</kw>
<status status="PASS" starttime="20211125 07:43:15.204" endtime="20211125 07:43:22.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:43:22.715" level="INFO">Running command 'ozone sh key put 68998-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:46:32.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:46:32.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:43:22.712" endtime="20211125 07:46:32.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:46:32.978" level="INFO"/>
<status status="PASS" starttime="20211125 07:46:32.978" endtime="20211125 07:46:32.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:46:32.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:46:32.979" endtime="20211125 07:46:32.979"/>
</kw>
<status status="PASS" starttime="20211125 07:43:22.711" endtime="20211125 07:46:32.980"/>
</kw>
<msg timestamp="20211125 07:46:32.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:43:22.708" endtime="20211125 07:46:32.980"/>
</kw>
<status status="PASS" starttime="20211125 07:43:22.707" endtime="20211125 07:46:32.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:46:32.984" level="INFO">Running command 'ozone sh bucket create 68998-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:46:40.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:46:40.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:46:32.982" endtime="20211125 07:46:40.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:46:40.359" level="INFO"/>
<status status="PASS" starttime="20211125 07:46:40.358" endtime="20211125 07:46:40.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:46:40.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:46:40.359" endtime="20211125 07:46:40.360"/>
</kw>
<status status="PASS" starttime="20211125 07:46:32.981" endtime="20211125 07:46:40.360"/>
</kw>
<msg timestamp="20211125 07:46:40.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:46:32.981" endtime="20211125 07:46:40.360"/>
</kw>
<status status="PASS" starttime="20211125 07:46:32.980" endtime="20211125 07:46:40.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:46:40.365" level="INFO">Running command 'ozone sh bucket link 68998-source/readable-bucket 68998-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:46:47.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:46:47.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:46:40.362" endtime="20211125 07:46:47.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:46:47.171" level="INFO"/>
<status status="PASS" starttime="20211125 07:46:47.171" endtime="20211125 07:46:47.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:46:47.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:46:47.172" endtime="20211125 07:46:47.172"/>
</kw>
<status status="PASS" starttime="20211125 07:46:40.362" endtime="20211125 07:46:47.173"/>
</kw>
<msg timestamp="20211125 07:46:47.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:46:40.361" endtime="20211125 07:46:47.173"/>
</kw>
<status status="PASS" starttime="20211125 07:46:40.361" endtime="20211125 07:46:47.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:46:47.179" level="INFO">Running command 'ozone sh bucket link 68998-source/readable-bucket 68998-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:46:54.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:46:54.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:46:47.175" endtime="20211125 07:46:54.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:46:54.886" level="INFO"/>
<status status="PASS" starttime="20211125 07:46:54.885" endtime="20211125 07:46:54.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:46:54.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:46:54.886" endtime="20211125 07:46:54.887"/>
</kw>
<status status="PASS" starttime="20211125 07:46:47.175" endtime="20211125 07:46:54.887"/>
</kw>
<msg timestamp="20211125 07:46:54.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:46:47.174" endtime="20211125 07:46:54.887"/>
</kw>
<status status="PASS" starttime="20211125 07:46:47.174" endtime="20211125 07:46:54.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:46:54.891" level="INFO">Running command 'ozone sh bucket link 68998-source/unreadable-bucket 68998-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:02.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:02.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:46:54.889" endtime="20211125 07:47:02.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:02.575" level="INFO"/>
<status status="PASS" starttime="20211125 07:47:02.574" endtime="20211125 07:47:02.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:02.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:02.576" endtime="20211125 07:47:02.577"/>
</kw>
<status status="PASS" starttime="20211125 07:46:54.889" endtime="20211125 07:47:02.577"/>
</kw>
<msg timestamp="20211125 07:47:02.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:46:54.888" endtime="20211125 07:47:02.578"/>
</kw>
<status status="PASS" starttime="20211125 07:46:54.888" endtime="20211125 07:47:02.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:02.585" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68998-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:10.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:10.380" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:02.582" endtime="20211125 07:47:10.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:10.381" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:10.381" endtime="20211125 07:47:10.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:10.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:10.381" endtime="20211125 07:47:10.382"/>
</kw>
<status status="PASS" starttime="20211125 07:47:02.581" endtime="20211125 07:47:10.382"/>
</kw>
<msg timestamp="20211125 07:47:10.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:02.580" endtime="20211125 07:47:10.383"/>
</kw>
<status status="PASS" starttime="20211125 07:47:02.579" endtime="20211125 07:47:10.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:10.388" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 68998-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:18.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:18.643" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:10.384" endtime="20211125 07:47:18.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:18.644" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:18.644" endtime="20211125 07:47:18.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:18.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:18.645" endtime="20211125 07:47:18.646"/>
</kw>
<status status="PASS" starttime="20211125 07:47:10.384" endtime="20211125 07:47:18.647"/>
</kw>
<msg timestamp="20211125 07:47:18.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:10.384" endtime="20211125 07:47:18.647"/>
</kw>
<status status="PASS" starttime="20211125 07:47:10.383" endtime="20211125 07:47:18.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:18.654" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 68998-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:25.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:25.091" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:18.651" endtime="20211125 07:47:25.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:25.094" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:25.093" endtime="20211125 07:47:25.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:25.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:25.095" endtime="20211125 07:47:25.096"/>
</kw>
<status status="PASS" starttime="20211125 07:47:18.650" endtime="20211125 07:47:25.097"/>
</kw>
<msg timestamp="20211125 07:47:25.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:18.649" endtime="20211125 07:47:25.098"/>
</kw>
<status status="PASS" starttime="20211125 07:47:18.648" endtime="20211125 07:47:25.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:25.105" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68998-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:32.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:32.427" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:25.102" endtime="20211125 07:47:32.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:32.428" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:32.428" endtime="20211125 07:47:32.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:32.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:32.429" endtime="20211125 07:47:32.430"/>
</kw>
<status status="PASS" starttime="20211125 07:47:25.101" endtime="20211125 07:47:32.431"/>
</kw>
<msg timestamp="20211125 07:47:32.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:25.100" endtime="20211125 07:47:32.431"/>
</kw>
<status status="PASS" starttime="20211125 07:47:25.099" endtime="20211125 07:47:32.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:32.437" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68998-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:40.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:40.472" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:32.434" endtime="20211125 07:47:40.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:40.473" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:47:40.473" endtime="20211125 07:47:40.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:40.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:40.474" endtime="20211125 07:47:40.474"/>
</kw>
<status status="PASS" starttime="20211125 07:47:32.433" endtime="20211125 07:47:40.475"/>
</kw>
<msg timestamp="20211125 07:47:40.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:32.433" endtime="20211125 07:47:40.475"/>
</kw>
<status status="PASS" starttime="20211125 07:47:32.432" endtime="20211125 07:47:40.475"/>
</kw>
<status status="PASS" starttime="20211125 07:43:15.204" endtime="20211125 07:47:40.476"/>
</kw>
<status status="PASS" starttime="20211125 07:43:15.203" endtime="20211125 07:47:40.476"/>
</kw>
<status status="PASS" starttime="20211125 07:42:59.684" endtime="20211125 07:47:40.476"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:40.486" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:40.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:40.491" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:47:40.482" endtime="20211125 07:47:40.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:40.494" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:47:40.492" endtime="20211125 07:47:40.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:40.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:40.494" endtime="20211125 07:47:40.495"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.481" endtime="20211125 07:47:40.496"/>
</kw>
<msg timestamp="20211125 07:47:40.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:40.481" endtime="20211125 07:47:40.496"/>
</kw>
<msg timestamp="20211125 07:47:40.497" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:47:40.480" endtime="20211125 07:47:40.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:47:40.500" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:47:40.497" endtime="20211125 07:47:40.500"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:40.506" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:40.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:40.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:47:40.503" endtime="20211125 07:47:40.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:40.543" level="INFO"/>
<status status="PASS" starttime="20211125 07:47:40.542" endtime="20211125 07:47:40.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:40.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:40.543" endtime="20211125 07:47:40.544"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.502" endtime="20211125 07:47:40.544"/>
</kw>
<msg timestamp="20211125 07:47:40.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:40.502" endtime="20211125 07:47:40.544"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.501" endtime="20211125 07:47:40.545"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.500" endtime="20211125 07:47:40.545"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.479" endtime="20211125 07:47:40.545"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.478" endtime="20211125 07:47:40.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:40.549" level="INFO">Running command 'ozone sh bucket link 68998-source/no-such-bucket 68998-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:47.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:47.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:47:40.547" endtime="20211125 07:47:47.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:47.742" level="INFO"/>
<status status="PASS" starttime="20211125 07:47:47.741" endtime="20211125 07:47:47.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:47.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:47.742" endtime="20211125 07:47:47.743"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.546" endtime="20211125 07:47:47.745"/>
</kw>
<msg timestamp="20211125 07:47:47.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:40.546" endtime="20211125 07:47:47.745"/>
</kw>
<status status="PASS" starttime="20211125 07:47:40.545" endtime="20211125 07:47:47.746"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:47.752" level="INFO">Running command 'ozone sh key list 68998-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:55.525" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:47:55.526" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211125 07:47:47.748" endtime="20211125 07:47:55.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:55.527" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211125 07:47:55.526" endtime="20211125 07:47:55.527"/>
</kw>
<msg timestamp="20211125 07:47:55.528" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211125 07:47:47.746" endtime="20211125 07:47:55.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:47:55.528" endtime="20211125 07:47:55.529"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:47:40.476" endtime="20211125 07:47:55.529"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:55.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:55.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:55.546" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:47:55.538" endtime="20211125 07:47:55.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:55.547" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:47:55.546" endtime="20211125 07:47:55.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:55.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:55.547" endtime="20211125 07:47:55.548"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.536" endtime="20211125 07:47:55.548"/>
</kw>
<msg timestamp="20211125 07:47:55.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:55.536" endtime="20211125 07:47:55.548"/>
</kw>
<msg timestamp="20211125 07:47:55.549" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:47:55.534" endtime="20211125 07:47:55.549"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:47:55.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:47:55.549" endtime="20211125 07:47:55.550"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:55.556" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:47:55.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:47:55.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:47:55.553" endtime="20211125 07:47:55.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:47:55.571" level="INFO"/>
<status status="PASS" starttime="20211125 07:47:55.570" endtime="20211125 07:47:55.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:47:55.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:47:55.572" endtime="20211125 07:47:55.573"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.552" endtime="20211125 07:47:55.574"/>
</kw>
<msg timestamp="20211125 07:47:55.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:55.552" endtime="20211125 07:47:55.575"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.551" endtime="20211125 07:47:55.575"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.550" endtime="20211125 07:47:55.576"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.533" endtime="20211125 07:47:55.576"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.532" endtime="20211125 07:47:55.576"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:47:55.582" level="INFO">Running command 'ozone sh bucket link 68998-source/bucket1 68998-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:48:03.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:48:03.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:47:55.579" endtime="20211125 07:48:03.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:48:03.022" level="INFO"/>
<status status="PASS" starttime="20211125 07:48:03.021" endtime="20211125 07:48:03.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:48:03.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:48:03.022" endtime="20211125 07:48:03.024"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.578" endtime="20211125 07:48:03.024"/>
</kw>
<msg timestamp="20211125 07:48:03.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:47:55.578" endtime="20211125 07:48:03.025"/>
</kw>
<status status="PASS" starttime="20211125 07:47:55.576" endtime="20211125 07:48:03.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:48:03.032" level="INFO">Running command 'ozone sh bucket create 68998-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:48:11.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:48:11.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:48:03.028" endtime="20211125 07:48:11.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:48:11.473" level="INFO"/>
<status status="PASS" starttime="20211125 07:48:11.472" endtime="20211125 07:48:11.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:48:11.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:48:11.473" endtime="20211125 07:48:11.474"/>
</kw>
<status status="PASS" starttime="20211125 07:48:03.027" endtime="20211125 07:48:11.474"/>
</kw>
<msg timestamp="20211125 07:48:11.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:48:03.027" endtime="20211125 07:48:11.475"/>
</kw>
<status status="PASS" starttime="20211125 07:48:03.026" endtime="20211125 07:48:11.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:48:11.478" level="INFO">Running command 'ozone sh key put 68998-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:49:55.532" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 07:48:11.476" endtime="20211125 07:49:55.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 07:49:55.533" endtime="20211125 07:49:55.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 07:49:55.533" endtime="20211125 07:49:55.535"/>
</kw>
<status status="FAIL" starttime="20211125 07:48:11.476" endtime="20211125 07:49:55.535"/>
</kw>
<msg timestamp="20211125 07:49:55.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 07:48:11.476" endtime="20211125 07:49:55.535"/>
</kw>
<status status="FAIL" starttime="20211125 07:48:11.475" endtime="20211125 07:49:55.536"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211125 07:49:55.536" endtime="20211125 07:49:55.536"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211125 07:47:55.530" endtime="20211125 07:49:55.536">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:49:55.547" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:49:55.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:49:55.552" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:49:55.544" endtime="20211125 07:49:55.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:49:55.554" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:49:55.553" endtime="20211125 07:49:55.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:49:55.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:49:55.554" endtime="20211125 07:49:55.556"/>
</kw>
<status status="PASS" starttime="20211125 07:49:55.543" endtime="20211125 07:49:55.556"/>
</kw>
<msg timestamp="20211125 07:49:55.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:49:55.543" endtime="20211125 07:49:55.556"/>
</kw>
<msg timestamp="20211125 07:49:55.557" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:49:55.542" endtime="20211125 07:49:55.557"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:49:55.558" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:49:55.557" endtime="20211125 07:49:55.558"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:49:55.564" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:49:55.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:49:55.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:49:55.562" endtime="20211125 07:49:55.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:49:55.573" level="INFO"/>
<status status="PASS" starttime="20211125 07:49:55.572" endtime="20211125 07:49:55.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:49:55.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:49:55.574" endtime="20211125 07:49:55.575"/>
</kw>
<status status="PASS" starttime="20211125 07:49:55.561" endtime="20211125 07:49:55.575"/>
</kw>
<msg timestamp="20211125 07:49:55.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:49:55.560" endtime="20211125 07:49:55.576"/>
</kw>
<status status="PASS" starttime="20211125 07:49:55.560" endtime="20211125 07:49:55.576"/>
</kw>
<status status="PASS" starttime="20211125 07:49:55.559" endtime="20211125 07:49:55.576"/>
</kw>
<status status="PASS" starttime="20211125 07:49:55.542" endtime="20211125 07:49:55.577"/>
</kw>
<status status="PASS" starttime="20211125 07:49:55.541" endtime="20211125 07:49:55.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:49:55.581" level="INFO">Running command 'ozone sh key put 68998-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:51:55.541" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 07:49:55.579" endtime="20211125 07:51:55.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 07:51:55.542" endtime="20211125 07:51:55.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 07:51:55.542" endtime="20211125 07:51:55.542"/>
</kw>
<status status="FAIL" starttime="20211125 07:49:55.579" endtime="20211125 07:51:55.543"/>
</kw>
<msg timestamp="20211125 07:51:55.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 07:49:55.578" endtime="20211125 07:51:55.543"/>
</kw>
<status status="FAIL" starttime="20211125 07:49:55.577" endtime="20211125 07:51:55.543"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211125 07:51:55.543" endtime="20211125 07:51:55.544"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211125 07:49:55.539" endtime="20211125 07:51:55.544">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:51:55.552" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:51:55.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:51:55.556" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:51:55.548" endtime="20211125 07:51:55.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:51:55.558" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:51:55.557" endtime="20211125 07:51:55.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:51:55.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:51:55.559" endtime="20211125 07:51:55.560"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.548" endtime="20211125 07:51:55.561"/>
</kw>
<msg timestamp="20211125 07:51:55.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:51:55.547" endtime="20211125 07:51:55.561"/>
</kw>
<msg timestamp="20211125 07:51:55.562" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:51:55.547" endtime="20211125 07:51:55.562"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:51:55.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:51:55.562" endtime="20211125 07:51:55.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:51:55.568" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:51:55.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:51:55.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:51:55.565" endtime="20211125 07:51:55.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:51:55.578" level="INFO"/>
<status status="PASS" starttime="20211125 07:51:55.577" endtime="20211125 07:51:55.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:51:55.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:51:55.578" endtime="20211125 07:51:55.580"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.565" endtime="20211125 07:51:55.580"/>
</kw>
<msg timestamp="20211125 07:51:55.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:51:55.564" endtime="20211125 07:51:55.580"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.564" endtime="20211125 07:51:55.581"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.563" endtime="20211125 07:51:55.581"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.546" endtime="20211125 07:51:55.581"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.545" endtime="20211125 07:51:55.581"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:51:55.587" level="INFO">Running command 'ozone sh key list 68998-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:03.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:03.717" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211125 07:51:55.584" endtime="20211125 07:52:03.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:03.718" level="INFO">key1</msg>
<status status="PASS" starttime="20211125 07:52:03.718" endtime="20211125 07:52:03.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:03.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:03.719" endtime="20211125 07:52:03.720"/>
</kw>
<status status="PASS" starttime="20211125 07:51:55.583" endtime="20211125 07:52:03.720"/>
</kw>
<msg timestamp="20211125 07:52:03.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:51:55.583" endtime="20211125 07:52:03.721"/>
</kw>
<msg timestamp="20211125 07:52:03.721" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211125 07:51:55.582" endtime="20211125 07:52:03.721"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:03.725" level="INFO">Running command 'ozone sh key list 68998-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:12.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:12.334" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211125 07:52:03.723" endtime="20211125 07:52:12.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:12.336" level="INFO">key1</msg>
<status status="PASS" starttime="20211125 07:52:12.335" endtime="20211125 07:52:12.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:12.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:12.336" endtime="20211125 07:52:12.337"/>
</kw>
<status status="PASS" starttime="20211125 07:52:03.722" endtime="20211125 07:52:12.337"/>
</kw>
<msg timestamp="20211125 07:52:12.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:03.722" endtime="20211125 07:52:12.338"/>
</kw>
<msg timestamp="20211125 07:52:12.338" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211125 07:52:03.721" endtime="20211125 07:52:12.338"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:52:12.338" endtime="20211125 07:52:12.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:12.339" endtime="20211125 07:52:12.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211125 07:52:12.340" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211125 07:52:12.340" endtime="20211125 07:52:12.340"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211125 07:51:55.545" endtime="20211125 07:52:12.341">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:12.349" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:12.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:12.353" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:52:12.346" endtime="20211125 07:52:12.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:12.354" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:52:12.353" endtime="20211125 07:52:12.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:12.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:12.355" endtime="20211125 07:52:12.355"/>
</kw>
<status status="PASS" starttime="20211125 07:52:12.345" endtime="20211125 07:52:12.356"/>
</kw>
<msg timestamp="20211125 07:52:12.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:12.345" endtime="20211125 07:52:12.356"/>
</kw>
<msg timestamp="20211125 07:52:12.356" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:52:12.344" endtime="20211125 07:52:12.356"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:52:12.357" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:52:12.357" endtime="20211125 07:52:12.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:12.364" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:12.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:12.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:52:12.360" endtime="20211125 07:52:12.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:12.374" level="INFO"/>
<status status="PASS" starttime="20211125 07:52:12.374" endtime="20211125 07:52:12.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:12.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:12.375" endtime="20211125 07:52:12.376"/>
</kw>
<status status="PASS" starttime="20211125 07:52:12.360" endtime="20211125 07:52:12.376"/>
</kw>
<msg timestamp="20211125 07:52:12.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:12.359" endtime="20211125 07:52:12.376"/>
</kw>
<status status="PASS" starttime="20211125 07:52:12.358" endtime="20211125 07:52:12.377"/>
</kw>
<status status="PASS" starttime="20211125 07:52:12.357" endtime="20211125 07:52:12.377"/>
</kw>
<status status="PASS" starttime="20211125 07:52:12.344" endtime="20211125 07:52:12.377"/>
</kw>
<status status="PASS" starttime="20211125 07:52:12.343" endtime="20211125 07:52:12.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:12.381" level="INFO">Running command 'ozone sh key delete 68998-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:18.693" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:52:18.693" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211125 07:52:12.379" endtime="20211125 07:52:18.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:18.695" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211125 07:52:18.694" endtime="20211125 07:52:18.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:18.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211125 07:52:18.698" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211125 07:52:18.696" endtime="20211125 07:52:18.698"/>
</kw>
<status status="FAIL" starttime="20211125 07:52:12.378" endtime="20211125 07:52:18.698"/>
</kw>
<msg timestamp="20211125 07:52:18.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 07:52:12.378" endtime="20211125 07:52:18.699"/>
</kw>
<status status="FAIL" starttime="20211125 07:52:12.377" endtime="20211125 07:52:18.699"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211125 07:52:18.701" endtime="20211125 07:52:18.701"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 07:52:18.701" endtime="20211125 07:52:18.701"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211125 07:52:12.342" endtime="20211125 07:52:18.702">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:18.713" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:18.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:18.721" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:52:18.710" endtime="20211125 07:52:18.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:18.723" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:52:18.722" endtime="20211125 07:52:18.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:18.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:18.724" endtime="20211125 07:52:18.725"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.709" endtime="20211125 07:52:18.725"/>
</kw>
<msg timestamp="20211125 07:52:18.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:18.708" endtime="20211125 07:52:18.726"/>
</kw>
<msg timestamp="20211125 07:52:18.726" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:52:18.707" endtime="20211125 07:52:18.726"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:52:18.728" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:52:18.727" endtime="20211125 07:52:18.728"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:18.736" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:18.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:18.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:52:18.733" endtime="20211125 07:52:18.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:18.749" level="INFO"/>
<status status="PASS" starttime="20211125 07:52:18.748" endtime="20211125 07:52:18.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:18.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:18.749" endtime="20211125 07:52:18.750"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.732" endtime="20211125 07:52:18.751"/>
</kw>
<msg timestamp="20211125 07:52:18.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:18.731" endtime="20211125 07:52:18.751"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.729" endtime="20211125 07:52:18.751"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.728" endtime="20211125 07:52:18.752"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.706" endtime="20211125 07:52:18.752"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.704" endtime="20211125 07:52:18.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:18.757" level="INFO">Running command 'ozone sh bucket list 68998-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:26.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:26.708" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211125 07:52:18.755" endtime="20211125 07:52:26.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:26.711" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:47:47.443Z",
  "modificationTime" : "2021-11-25T07:47:47.443Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:47:02.485Z",
  "modificationTime" : "2021-11-25T07:47:40.178Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:48:02.928Z",
  "modificationTime" : "2021-11-25T07:48:02.928Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:46:47.089Z",
  "modificationTime" : "2021-11-25T07:47:32.278Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:46:54.599Z",
  "modificationTime" : "2021-11-25T07:46:54.599Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
} ]</msg>
<status status="PASS" starttime="20211125 07:52:26.709" endtime="20211125 07:52:26.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:26.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:26.711" endtime="20211125 07:52:26.713"/>
</kw>
<status status="PASS" starttime="20211125 07:52:18.754" endtime="20211125 07:52:26.713"/>
</kw>
<msg timestamp="20211125 07:52:26.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:18.753" endtime="20211125 07:52:26.714"/>
</kw>
<msg timestamp="20211125 07:52:26.714" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211125 07:52:18.752" endtime="20211125 07:52:26.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:26.715" endtime="20211125 07:52:26.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:26.716" endtime="20211125 07:52:26.716"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:52:18.703" endtime="20211125 07:52:26.717"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:26.729" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:26.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:26.735" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:52:26.723" endtime="20211125 07:52:26.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:26.739" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:52:26.738" endtime="20211125 07:52:26.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:26.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:26.739" endtime="20211125 07:52:26.740"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.722" endtime="20211125 07:52:26.741"/>
</kw>
<msg timestamp="20211125 07:52:26.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:26.721" endtime="20211125 07:52:26.741"/>
</kw>
<msg timestamp="20211125 07:52:26.742" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:52:26.720" endtime="20211125 07:52:26.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:52:26.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:52:26.742" endtime="20211125 07:52:26.743"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:26.754" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:26.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:26.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:52:26.752" endtime="20211125 07:52:26.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:26.767" level="INFO"/>
<status status="PASS" starttime="20211125 07:52:26.765" endtime="20211125 07:52:26.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:26.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:26.767" endtime="20211125 07:52:26.769"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.750" endtime="20211125 07:52:26.769"/>
</kw>
<msg timestamp="20211125 07:52:26.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:26.749" endtime="20211125 07:52:26.770"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.744" endtime="20211125 07:52:26.770"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.743" endtime="20211125 07:52:26.770"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.720" endtime="20211125 07:52:26.770"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.718" endtime="20211125 07:52:26.771"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:26.775" level="INFO">Running command 'ozone sh bucket info 68998-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:33.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:33.720" level="INFO">${output} = {
  "volumeName" : "68998-target",
  "bucketName" : "link1",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-25T07:48:02.928Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211125 07:52:26.773" endtime="20211125 07:52:33.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:33.721" level="INFO">{
  "volumeName" : "68998-target",
  "bucketName" : "link1",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-25T07:48:02.928Z",
  "modificationTime" : "2021-11-25T07:48:02.928Z"
}</msg>
<status status="PASS" starttime="20211125 07:52:33.721" endtime="20211125 07:52:33.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:33.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:33.722" endtime="20211125 07:52:33.722"/>
</kw>
<status status="PASS" starttime="20211125 07:52:26.772" endtime="20211125 07:52:33.723"/>
</kw>
<msg timestamp="20211125 07:52:33.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:26.772" endtime="20211125 07:52:33.723"/>
</kw>
<msg timestamp="20211125 07:52:33.723" level="INFO">${result} = {
  "volumeName" : "68998-target",
  "bucketName" : "link1",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-25T07:48:02.928Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211125 07:52:26.771" endtime="20211125 07:52:33.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.724" endtime="20211125 07:52:33.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.724" endtime="20211125 07:52:33.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.725" endtime="20211125 07:52:33.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.726" endtime="20211125 07:52:33.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.726" endtime="20211125 07:52:33.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.727" endtime="20211125 07:52:33.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:52:33.728" endtime="20211125 07:52:33.728"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:52:26.718" endtime="20211125 07:52:33.728"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:33.736" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:33.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:33.740" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:52:33.734" endtime="20211125 07:52:33.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:33.741" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:52:33.740" endtime="20211125 07:52:33.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:33.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:33.741" endtime="20211125 07:52:33.742"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.733" endtime="20211125 07:52:33.742"/>
</kw>
<msg timestamp="20211125 07:52:33.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:33.733" endtime="20211125 07:52:33.742"/>
</kw>
<msg timestamp="20211125 07:52:33.743" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:52:33.732" endtime="20211125 07:52:33.743"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:52:33.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:52:33.743" endtime="20211125 07:52:33.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:33.748" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:33.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:33.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:52:33.746" endtime="20211125 07:52:33.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:33.757" level="INFO"/>
<status status="PASS" starttime="20211125 07:52:33.756" endtime="20211125 07:52:33.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:33.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:33.757" endtime="20211125 07:52:33.758"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.746" endtime="20211125 07:52:33.759"/>
</kw>
<msg timestamp="20211125 07:52:33.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:33.745" endtime="20211125 07:52:33.759"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.744" endtime="20211125 07:52:33.759"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.744" endtime="20211125 07:52:33.759"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.731" endtime="20211125 07:52:33.760"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.731" endtime="20211125 07:52:33.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:33.764" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 68998-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:40.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:40.552" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:52:33.762" endtime="20211125 07:52:40.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:40.554" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:52:40.553" endtime="20211125 07:52:40.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:40.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:40.555" endtime="20211125 07:52:40.557"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.761" endtime="20211125 07:52:40.557"/>
</kw>
<msg timestamp="20211125 07:52:40.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:33.761" endtime="20211125 07:52:40.558"/>
</kw>
<status status="PASS" starttime="20211125 07:52:33.760" endtime="20211125 07:52:40.558"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:40.566" level="INFO">Running command 'ozone sh bucket getacl 68998-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:49.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:49.964" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211125 07:52:40.563" endtime="20211125 07:52:49.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:49.966" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211125 07:52:49.964" endtime="20211125 07:52:49.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:49.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:49.966" endtime="20211125 07:52:49.967"/>
</kw>
<status status="PASS" starttime="20211125 07:52:40.562" endtime="20211125 07:52:49.967"/>
</kw>
<msg timestamp="20211125 07:52:49.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:40.561" endtime="20211125 07:52:49.968"/>
</kw>
<msg timestamp="20211125 07:52:49.968" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211125 07:52:40.559" endtime="20211125 07:52:49.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:52:49.968" endtime="20211125 07:52:49.969"/>
</kw>
<status status="PASS" starttime="20211125 07:52:40.559" endtime="20211125 07:52:49.970"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:49.981" level="INFO">Running command 'ozone sh bucket getacl 68998-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:52:57.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:52:57.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:52:49.978" endtime="20211125 07:52:57.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:52:57.697" level="INFO"/>
<status status="PASS" starttime="20211125 07:52:57.695" endtime="20211125 07:52:57.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:52:57.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:52:57.698" endtime="20211125 07:52:57.700"/>
</kw>
<status status="PASS" starttime="20211125 07:52:49.976" endtime="20211125 07:52:57.701"/>
</kw>
<msg timestamp="20211125 07:52:57.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:49.976" endtime="20211125 07:52:57.702"/>
</kw>
<msg timestamp="20211125 07:52:57.702" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211125 07:52:49.974" endtime="20211125 07:52:57.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:52:57.702" endtime="20211125 07:52:57.703"/>
</kw>
<status status="PASS" starttime="20211125 07:52:49.971" endtime="20211125 07:52:57.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:52:57.710" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 68998-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:03.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:03.425" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:52:57.706" endtime="20211125 07:53:03.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:03.427" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 07:53:03.426" endtime="20211125 07:53:03.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:03.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:03.428" endtime="20211125 07:53:03.429"/>
</kw>
<status status="PASS" starttime="20211125 07:52:57.705" endtime="20211125 07:53:03.430"/>
</kw>
<msg timestamp="20211125 07:53:03.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:52:57.705" endtime="20211125 07:53:03.431"/>
</kw>
<status status="PASS" starttime="20211125 07:52:57.704" endtime="20211125 07:53:03.431"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:03.439" level="INFO">Running command 'ozone sh bucket getacl 68998-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:12.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:12.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:03.436" endtime="20211125 07:53:12.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:12.167" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:12.165" endtime="20211125 07:53:12.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:12.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:12.167" endtime="20211125 07:53:12.169"/>
</kw>
<status status="PASS" starttime="20211125 07:53:03.435" endtime="20211125 07:53:12.170"/>
</kw>
<msg timestamp="20211125 07:53:12.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:03.435" endtime="20211125 07:53:12.170"/>
</kw>
<msg timestamp="20211125 07:53:12.171" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211125 07:53:03.434" endtime="20211125 07:53:12.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:53:12.172" endtime="20211125 07:53:12.173"/>
</kw>
<status status="PASS" starttime="20211125 07:53:03.431" endtime="20211125 07:53:12.173"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:12.185" level="INFO">Running command 'ozone sh bucket getacl 68998-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:20.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:20.728" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211125 07:53:12.180" endtime="20211125 07:53:20.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:20.732" level="INFO">READ</msg>
<status status="PASS" starttime="20211125 07:53:20.731" endtime="20211125 07:53:20.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:20.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:20.732" endtime="20211125 07:53:20.733"/>
</kw>
<status status="PASS" starttime="20211125 07:53:12.178" endtime="20211125 07:53:20.733"/>
</kw>
<msg timestamp="20211125 07:53:20.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:12.178" endtime="20211125 07:53:20.734"/>
</kw>
<msg timestamp="20211125 07:53:20.734" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211125 07:53:12.176" endtime="20211125 07:53:20.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:53:20.734" endtime="20211125 07:53:20.735"/>
</kw>
<status status="PASS" starttime="20211125 07:53:12.174" endtime="20211125 07:53:20.735"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:52:33.729" endtime="20211125 07:53:20.736"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:20.747" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:20.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:20.753" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:53:20.744" endtime="20211125 07:53:20.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:20.755" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:53:20.753" endtime="20211125 07:53:20.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:20.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:20.755" endtime="20211125 07:53:20.756"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.743" endtime="20211125 07:53:20.757"/>
</kw>
<msg timestamp="20211125 07:53:20.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:20.742" endtime="20211125 07:53:20.758"/>
</kw>
<msg timestamp="20211125 07:53:20.758" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:53:20.741" endtime="20211125 07:53:20.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:53:20.759" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:53:20.758" endtime="20211125 07:53:20.760"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:20.765" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:20.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:20.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:20.764" endtime="20211125 07:53:20.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:20.803" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:20.803" endtime="20211125 07:53:20.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:20.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:20.804" endtime="20211125 07:53:20.804"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.763" endtime="20211125 07:53:20.805"/>
</kw>
<msg timestamp="20211125 07:53:20.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:20.762" endtime="20211125 07:53:20.805"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.761" endtime="20211125 07:53:20.805"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.760" endtime="20211125 07:53:20.805"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.740" endtime="20211125 07:53:20.806"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.739" endtime="20211125 07:53:20.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:20.809" level="INFO">Running command 'ozone sh bucket link 68998-source/bucket2 68998-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:28.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:28.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:20.808" endtime="20211125 07:53:28.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:28.726" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:28.724" endtime="20211125 07:53:28.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:28.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:28.727" endtime="20211125 07:53:28.730"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.807" endtime="20211125 07:53:28.731"/>
</kw>
<msg timestamp="20211125 07:53:28.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:20.807" endtime="20211125 07:53:28.732"/>
</kw>
<status status="PASS" starttime="20211125 07:53:20.806" endtime="20211125 07:53:28.732"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:28.740" level="INFO">Running command 'ozone sh bucket create 68998-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:36.542" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:53:36.542" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211125 07:53:28.733" endtime="20211125 07:53:36.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:36.544" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211125 07:53:36.543" endtime="20211125 07:53:36.544"/>
</kw>
<msg timestamp="20211125 07:53:36.544" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211125 07:53:28.732" endtime="20211125 07:53:36.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:53:36.545" endtime="20211125 07:53:36.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:36.551" level="INFO">Running command 'ozone sh bucket create 68998-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:44.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:44.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:36.547" endtime="20211125 07:53:44.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:44.703" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:44.702" endtime="20211125 07:53:44.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:44.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:44.703" endtime="20211125 07:53:44.704"/>
</kw>
<status status="PASS" starttime="20211125 07:53:36.546" endtime="20211125 07:53:44.704"/>
</kw>
<msg timestamp="20211125 07:53:44.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:36.546" endtime="20211125 07:53:44.705"/>
</kw>
<status status="PASS" starttime="20211125 07:53:36.545" endtime="20211125 07:53:44.705"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:44.709" level="INFO">Running command 'ozone sh bucket link 68998-source/bucket1 68998-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:52.042" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:53:52.042" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211125 07:53:44.706" endtime="20211125 07:53:52.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:52.044" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211125 07:53:52.043" endtime="20211125 07:53:52.044"/>
</kw>
<msg timestamp="20211125 07:53:52.045" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211125 07:53:44.705" endtime="20211125 07:53:52.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:53:52.045" endtime="20211125 07:53:52.046"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:53:20.737" endtime="20211125 07:53:52.046"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:52.056" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:52.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:52.061" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:53:52.053" endtime="20211125 07:53:52.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:52.063" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:53:52.062" endtime="20211125 07:53:52.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:52.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:52.064" endtime="20211125 07:53:52.065"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.052" endtime="20211125 07:53:52.065"/>
</kw>
<msg timestamp="20211125 07:53:52.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:52.051" endtime="20211125 07:53:52.066"/>
</kw>
<msg timestamp="20211125 07:53:52.066" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:53:52.051" endtime="20211125 07:53:52.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:53:52.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:53:52.066" endtime="20211125 07:53:52.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:52.076" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:52.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:52.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:52.072" endtime="20211125 07:53:52.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:52.090" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:52.089" endtime="20211125 07:53:52.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:52.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:52.091" endtime="20211125 07:53:52.092"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.071" endtime="20211125 07:53:52.092"/>
</kw>
<msg timestamp="20211125 07:53:52.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:52.071" endtime="20211125 07:53:52.093"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.069" endtime="20211125 07:53:52.093"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.069" endtime="20211125 07:53:52.093"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.050" endtime="20211125 07:53:52.094"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.049" endtime="20211125 07:53:52.094"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:52.101" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:52.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:52.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:52.098" endtime="20211125 07:53:52.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:52.108" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:52.107" endtime="20211125 07:53:52.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:52.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:52.108" endtime="20211125 07:53:52.109"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.097" endtime="20211125 07:53:52.109"/>
</kw>
<msg timestamp="20211125 07:53:52.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:52.096" endtime="20211125 07:53:52.110"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.096" endtime="20211125 07:53:52.110"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:52.116" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:52.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:52.121" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:53:52.113" endtime="20211125 07:53:52.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:52.122" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:53:52.122" endtime="20211125 07:53:52.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:52.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:52.123" endtime="20211125 07:53:52.124"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.112" endtime="20211125 07:53:52.124"/>
</kw>
<msg timestamp="20211125 07:53:52.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:52.112" endtime="20211125 07:53:52.125"/>
</kw>
<msg timestamp="20211125 07:53:52.126" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:53:52.111" endtime="20211125 07:53:52.126"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:53:52.127" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:53:52.126" endtime="20211125 07:53:52.127"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:52.133" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:53:52.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:53:52.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:53:52.130" endtime="20211125 07:53:52.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:53:52.145" level="INFO"/>
<status status="PASS" starttime="20211125 07:53:52.144" endtime="20211125 07:53:52.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:53:52.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:53:52.146" endtime="20211125 07:53:52.147"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.129" endtime="20211125 07:53:52.147"/>
</kw>
<msg timestamp="20211125 07:53:52.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:53:52.129" endtime="20211125 07:53:52.148"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.128" endtime="20211125 07:53:52.148"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.127" endtime="20211125 07:53:52.148"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.111" endtime="20211125 07:53:52.149"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.110" endtime="20211125 07:53:52.149"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:53:52.152" level="INFO">Running command 'ozone sh key list 68998-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:00.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:00.334" level="INFO">${output} = [ {
  "volumeName" : "68998-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-25T07:43:28.087Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211125 07:53:52.150" endtime="20211125 07:54:00.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:00.335" level="INFO">[ {
  "volumeName" : "68998-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-25T07:43:28.087Z",
  "modificationTime" : "2021-11-25T07:46:32.006Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211125 07:54:00.334" endtime="20211125 07:54:00.335"/>
</kw>
<msg timestamp="20211125 07:54:00.335" level="INFO">${result} = [ {
  "volumeName" : "68998-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-25T07:43:28.087Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211125 07:53:52.149" endtime="20211125 07:54:00.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:54:00.336" endtime="20211125 07:54:00.336"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.095" endtime="20211125 07:54:00.336"/>
</kw>
<status status="PASS" starttime="20211125 07:53:52.094" endtime="20211125 07:54:00.337"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:53:52.048" endtime="20211125 07:54:00.337"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:00.345" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:00.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:00.351" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:54:00.342" endtime="20211125 07:54:00.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:00.352" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:54:00.352" endtime="20211125 07:54:00.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:00.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:00.353" endtime="20211125 07:54:00.354"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.342" endtime="20211125 07:54:00.354"/>
</kw>
<msg timestamp="20211125 07:54:00.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:00.341" endtime="20211125 07:54:00.355"/>
</kw>
<msg timestamp="20211125 07:54:00.355" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:54:00.341" endtime="20211125 07:54:00.355"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:54:00.356" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:54:00.355" endtime="20211125 07:54:00.356"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:00.361" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:00.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:00.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:00.358" endtime="20211125 07:54:00.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:00.370" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:00.369" endtime="20211125 07:54:00.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:00.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:00.371" endtime="20211125 07:54:00.371"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.358" endtime="20211125 07:54:00.372"/>
</kw>
<msg timestamp="20211125 07:54:00.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:00.357" endtime="20211125 07:54:00.372"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.356" endtime="20211125 07:54:00.372"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.356" endtime="20211125 07:54:00.373"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.340" endtime="20211125 07:54:00.373"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.339" endtime="20211125 07:54:00.373"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:00.379" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:00.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:00.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:00.377" endtime="20211125 07:54:00.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:00.386" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:00.386" endtime="20211125 07:54:00.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:00.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:00.387" endtime="20211125 07:54:00.387"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.376" endtime="20211125 07:54:00.388"/>
</kw>
<msg timestamp="20211125 07:54:00.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:00.376" endtime="20211125 07:54:00.388"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.374" endtime="20211125 07:54:00.388"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:00.394" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:00.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:00.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:54:00.391" endtime="20211125 07:54:00.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:00.399" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:54:00.398" endtime="20211125 07:54:00.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:00.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:00.399" endtime="20211125 07:54:00.400"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.390" endtime="20211125 07:54:00.401"/>
</kw>
<msg timestamp="20211125 07:54:00.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:00.390" endtime="20211125 07:54:00.401"/>
</kw>
<msg timestamp="20211125 07:54:00.401" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:54:00.390" endtime="20211125 07:54:00.401"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:54:00.402" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:54:00.402" endtime="20211125 07:54:00.402"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:00.408" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:00.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:00.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:00.405" endtime="20211125 07:54:00.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:00.416" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:00.415" endtime="20211125 07:54:00.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:00.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:00.416" endtime="20211125 07:54:00.417"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.404" endtime="20211125 07:54:00.417"/>
</kw>
<msg timestamp="20211125 07:54:00.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:00.404" endtime="20211125 07:54:00.418"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.403" endtime="20211125 07:54:00.418"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.402" endtime="20211125 07:54:00.418"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.389" endtime="20211125 07:54:00.418"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.388" endtime="20211125 07:54:00.418"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:00.421" level="INFO">Running command 'ozone sh key list 68998-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:08.459" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:54:08.459" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:68998-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211125 07:54:00.419" endtime="20211125 07:54:08.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:08.461" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:68998-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211125 07:54:08.460" endtime="20211125 07:54:08.461"/>
</kw>
<msg timestamp="20211125 07:54:08.462" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:68998-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211125 07:54:00.418" endtime="20211125 07:54:08.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:54:08.462" endtime="20211125 07:54:08.462"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.374" endtime="20211125 07:54:08.463"/>
</kw>
<status status="PASS" starttime="20211125 07:54:00.373" endtime="20211125 07:54:08.463"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:54:00.338" endtime="20211125 07:54:08.463"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:08.473" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:08.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:08.479" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:54:08.469" endtime="20211125 07:54:08.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:08.482" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:54:08.480" endtime="20211125 07:54:08.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:08.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:08.482" endtime="20211125 07:54:08.485"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.468" endtime="20211125 07:54:08.486"/>
</kw>
<msg timestamp="20211125 07:54:08.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:08.467" endtime="20211125 07:54:08.486"/>
</kw>
<msg timestamp="20211125 07:54:08.487" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:54:08.466" endtime="20211125 07:54:08.487"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:54:08.488" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:54:08.487" endtime="20211125 07:54:08.488"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:08.495" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:08.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:08.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:08.492" endtime="20211125 07:54:08.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:08.511" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:08.509" endtime="20211125 07:54:08.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:08.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:08.511" endtime="20211125 07:54:08.513"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.490" endtime="20211125 07:54:08.514"/>
</kw>
<msg timestamp="20211125 07:54:08.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:08.489" endtime="20211125 07:54:08.515"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.488" endtime="20211125 07:54:08.515"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.488" endtime="20211125 07:54:08.516"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.466" endtime="20211125 07:54:08.516"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.465" endtime="20211125 07:54:08.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:08.522" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:08.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:08.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:08.520" endtime="20211125 07:54:08.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:08.537" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:08.536" endtime="20211125 07:54:08.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:08.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:08.538" endtime="20211125 07:54:08.539"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.519" endtime="20211125 07:54:08.540"/>
</kw>
<msg timestamp="20211125 07:54:08.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:08.519" endtime="20211125 07:54:08.540"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.518" endtime="20211125 07:54:08.541"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:08.549" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:08.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:08.554" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:54:08.545" endtime="20211125 07:54:08.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:08.556" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:54:08.555" endtime="20211125 07:54:08.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:08.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:08.556" endtime="20211125 07:54:08.557"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.544" endtime="20211125 07:54:08.558"/>
</kw>
<msg timestamp="20211125 07:54:08.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:08.544" endtime="20211125 07:54:08.560"/>
</kw>
<msg timestamp="20211125 07:54:08.560" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:54:08.543" endtime="20211125 07:54:08.560"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:54:08.562" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:54:08.561" endtime="20211125 07:54:08.562"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:08.570" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:08.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:08.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:08.567" endtime="20211125 07:54:08.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:08.582" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:08.581" endtime="20211125 07:54:08.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:08.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:08.583" endtime="20211125 07:54:08.584"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.566" endtime="20211125 07:54:08.584"/>
</kw>
<msg timestamp="20211125 07:54:08.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:08.565" endtime="20211125 07:54:08.585"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.564" endtime="20211125 07:54:08.585"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.563" endtime="20211125 07:54:08.585"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.542" endtime="20211125 07:54:08.585"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.542" endtime="20211125 07:54:08.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:08.591" level="INFO">Running command 'ozone sh bucket info 68998-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:16.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:16.001" level="INFO">${output} = {
  "volumeName" : "68998-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-25T07:47:02.485Z...</msg>
<status status="PASS" starttime="20211125 07:54:08.588" endtime="20211125 07:54:16.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:16.003" level="INFO">{
  "volumeName" : "68998-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-25T07:47:02.485Z",
  "modificationTime" : "2021-11-25T07:47:40.178Z"
}</msg>
<status status="PASS" starttime="20211125 07:54:16.002" endtime="20211125 07:54:16.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:16.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:16.003" endtime="20211125 07:54:16.004"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.587" endtime="20211125 07:54:16.004"/>
</kw>
<msg timestamp="20211125 07:54:16.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:08.587" endtime="20211125 07:54:16.005"/>
</kw>
<msg timestamp="20211125 07:54:16.005" level="INFO">${result} = {
  "volumeName" : "68998-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-25T07:47:02.485Z...</msg>
<status status="PASS" starttime="20211125 07:54:08.586" endtime="20211125 07:54:16.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:54:16.005" endtime="20211125 07:54:16.006"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:54:16.006" endtime="20211125 07:54:16.006"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:16.010" level="INFO">Running command 'ozone sh key list 68998-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:23.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:54:23.519" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:68998-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211125 07:54:16.008" endtime="20211125 07:54:23.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:23.522" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:68998-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211125 07:54:23.520" endtime="20211125 07:54:23.522"/>
</kw>
<msg timestamp="20211125 07:54:23.523" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:68998-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211125 07:54:16.007" endtime="20211125 07:54:23.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:54:23.523" endtime="20211125 07:54:23.524"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.518" endtime="20211125 07:54:23.525"/>
</kw>
<status status="PASS" starttime="20211125 07:54:08.517" endtime="20211125 07:54:23.525"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:54:08.464" endtime="20211125 07:54:23.526"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:23.537" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:23.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:23.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:54:23.533" endtime="20211125 07:54:23.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:23.544" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:54:23.543" endtime="20211125 07:54:23.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:23.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:23.545" endtime="20211125 07:54:23.545"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.532" endtime="20211125 07:54:23.546"/>
</kw>
<msg timestamp="20211125 07:54:23.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:23.531" endtime="20211125 07:54:23.546"/>
</kw>
<msg timestamp="20211125 07:54:23.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:54:23.530" endtime="20211125 07:54:23.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:54:23.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:54:23.547" endtime="20211125 07:54:23.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:23.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:23.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:23.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:23.551" endtime="20211125 07:54:23.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:23.565" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:23.564" endtime="20211125 07:54:23.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:23.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:23.566" endtime="20211125 07:54:23.567"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.550" endtime="20211125 07:54:23.567"/>
</kw>
<msg timestamp="20211125 07:54:23.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:23.549" endtime="20211125 07:54:23.568"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.548" endtime="20211125 07:54:23.568"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.548" endtime="20211125 07:54:23.568"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.529" endtime="20211125 07:54:23.568"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.528" endtime="20211125 07:54:23.569"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:23.573" level="INFO">Running command 'ozone sh bucket link 68998-target/loop1 68998-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:31.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:31.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:23.570" endtime="20211125 07:54:31.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:31.370" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:31.369" endtime="20211125 07:54:31.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:31.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:31.371" endtime="20211125 07:54:31.372"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.570" endtime="20211125 07:54:31.372"/>
</kw>
<msg timestamp="20211125 07:54:31.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:23.570" endtime="20211125 07:54:31.373"/>
</kw>
<status status="PASS" starttime="20211125 07:54:23.569" endtime="20211125 07:54:31.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:31.377" level="INFO">Running command 'ozone sh bucket link 68998-target/loop2 68998-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:37.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:37.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:31.375" endtime="20211125 07:54:37.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:37.448" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:37.448" endtime="20211125 07:54:37.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:37.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:37.448" endtime="20211125 07:54:37.449"/>
</kw>
<status status="PASS" starttime="20211125 07:54:31.375" endtime="20211125 07:54:37.449"/>
</kw>
<msg timestamp="20211125 07:54:37.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:31.374" endtime="20211125 07:54:37.450"/>
</kw>
<status status="PASS" starttime="20211125 07:54:31.374" endtime="20211125 07:54:37.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:37.457" level="INFO">Running command 'ozone sh bucket link 68998-target/loop3 68998-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:45.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:45.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:37.452" endtime="20211125 07:54:45.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:45.126" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:45.126" endtime="20211125 07:54:45.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:45.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:45.127" endtime="20211125 07:54:45.127"/>
</kw>
<status status="PASS" starttime="20211125 07:54:37.452" endtime="20211125 07:54:45.128"/>
</kw>
<msg timestamp="20211125 07:54:45.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:37.451" endtime="20211125 07:54:45.128"/>
</kw>
<status status="PASS" starttime="20211125 07:54:37.450" endtime="20211125 07:54:45.128"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:45.134" level="INFO">Running command 'ozone sh key list 68998-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:53.086" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:54:53.086" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211125 07:54:45.131" endtime="20211125 07:54:53.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:53.087" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211125 07:54:53.087" endtime="20211125 07:54:53.088"/>
</kw>
<msg timestamp="20211125 07:54:53.088" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211125 07:54:45.128" endtime="20211125 07:54:53.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:54:53.089" endtime="20211125 07:54:53.090"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:54:23.526" endtime="20211125 07:54:53.090"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:53.101" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:53.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:53.106" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:54:53.098" endtime="20211125 07:54:53.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:53.108" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:54:53.107" endtime="20211125 07:54:53.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:53.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:53.108" endtime="20211125 07:54:53.109"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.097" endtime="20211125 07:54:53.109"/>
</kw>
<msg timestamp="20211125 07:54:53.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:53.096" endtime="20211125 07:54:53.110"/>
</kw>
<msg timestamp="20211125 07:54:53.110" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:54:53.095" endtime="20211125 07:54:53.110"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:54:53.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:54:53.110" endtime="20211125 07:54:53.111"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:53.118" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:54:53.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:54:53.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:53.115" endtime="20211125 07:54:53.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:54:53.130" level="INFO"/>
<status status="PASS" starttime="20211125 07:54:53.128" endtime="20211125 07:54:53.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:54:53.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:54:53.130" endtime="20211125 07:54:53.132"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.115" endtime="20211125 07:54:53.133"/>
</kw>
<msg timestamp="20211125 07:54:53.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:53.114" endtime="20211125 07:54:53.134"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.112" endtime="20211125 07:54:53.134"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.111" endtime="20211125 07:54:53.135"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.094" endtime="20211125 07:54:53.135"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.094" endtime="20211125 07:54:53.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:54:53.143" level="INFO">Running command 'ozone sh bucket link 68998-source/bucket1 68998-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:55:01.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:55:01.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:54:53.140" endtime="20211125 07:55:01.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:55:01.255" level="INFO"/>
<status status="PASS" starttime="20211125 07:55:01.254" endtime="20211125 07:55:01.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:55:01.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:55:01.255" endtime="20211125 07:55:01.256"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.139" endtime="20211125 07:55:01.256"/>
</kw>
<msg timestamp="20211125 07:55:01.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:54:53.138" endtime="20211125 07:55:01.256"/>
</kw>
<status status="PASS" starttime="20211125 07:54:53.136" endtime="20211125 07:55:01.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:55:01.263" level="INFO">Running command 'ozone sh key put 68998-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:56:53.092" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 07:55:01.260" endtime="20211125 07:56:53.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 07:56:53.093" endtime="20211125 07:56:53.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 07:56:53.093" endtime="20211125 07:56:53.094"/>
</kw>
<status status="FAIL" starttime="20211125 07:55:01.259" endtime="20211125 07:56:53.094"/>
</kw>
<msg timestamp="20211125 07:56:53.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 07:55:01.258" endtime="20211125 07:56:53.094"/>
</kw>
<status status="FAIL" starttime="20211125 07:55:01.257" endtime="20211125 07:56:53.094"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211125 07:56:53.095" endtime="20211125 07:56:53.095"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211125 07:54:53.092" endtime="20211125 07:56:53.095">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:56:53.102" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:56:53.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:56:53.107" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:56:53.100" endtime="20211125 07:56:53.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:56:53.108" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:56:53.107" endtime="20211125 07:56:53.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:56:53.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:56:53.109" endtime="20211125 07:56:53.110"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.099" endtime="20211125 07:56:53.110"/>
</kw>
<msg timestamp="20211125 07:56:53.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:56:53.099" endtime="20211125 07:56:53.110"/>
</kw>
<msg timestamp="20211125 07:56:53.111" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:56:53.099" endtime="20211125 07:56:53.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:56:53.112" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:56:53.111" endtime="20211125 07:56:53.112"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:56:53.119" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:56:53.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:56:53.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:56:53.116" endtime="20211125 07:56:53.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:56:53.133" level="INFO"/>
<status status="PASS" starttime="20211125 07:56:53.132" endtime="20211125 07:56:53.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:56:53.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:56:53.134" endtime="20211125 07:56:53.135"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.115" endtime="20211125 07:56:53.136"/>
</kw>
<msg timestamp="20211125 07:56:53.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:56:53.114" endtime="20211125 07:56:53.136"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.113" endtime="20211125 07:56:53.136"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.112" endtime="20211125 07:56:53.137"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.098" endtime="20211125 07:56:53.137"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.097" endtime="20211125 07:56:53.137"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:56:53.143" level="INFO">Running command 'ozone sh bucket delete 68998-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:01.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:57:01.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:56:53.140" endtime="20211125 07:57:01.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:01.837" level="INFO"/>
<status status="PASS" starttime="20211125 07:57:01.836" endtime="20211125 07:57:01.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:57:01.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:57:01.837" endtime="20211125 07:57:01.838"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.139" endtime="20211125 07:57:01.839"/>
</kw>
<msg timestamp="20211125 07:57:01.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:56:53.139" endtime="20211125 07:57:01.839"/>
</kw>
<status status="PASS" starttime="20211125 07:56:53.138" endtime="20211125 07:57:01.840"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:01.853" level="INFO">Running command 'ozone sh bucket list 68998-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:11.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:57:11.248" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-2...</msg>
<status status="PASS" starttime="20211125 07:57:01.846" endtime="20211125 07:57:11.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:11.249" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:53:44.602Z",
  "modificationTime" : "2021-11-25T07:53:44.602Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:47:47.443Z",
  "modificationTime" : "2021-11-25T07:47:47.443Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:47:02.485Z",
  "modificationTime" : "2021-11-25T07:47:40.178Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:53:28.389Z",
  "modificationTime" : "2021-11-25T07:53:28.389Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:55:01.011Z",
  "modificationTime" : "2021-11-25T07:55:01.011Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:54:44.792Z",
  "modificationTime" : "2021-11-25T07:54:44.792Z",
  "sourceVolume" : "68998-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:54:31.282Z",
  "modificationTime" : "2021-11-25T07:54:31.282Z",
  "sourceVolume" : "68998-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:54:37.315Z",
  "modificationTime" : "2021-11-25T07:54:37.315Z",
  "sourceVolume" : "68998-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:46:47.089Z",
  "modificationTime" : "2021-11-25T07:47:32.278Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-25T07:46:54.599Z",
  "modificationTime" : "2021-11-25T07:46:54.599Z",
  "sourceVolume" : "68998-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
} ]</msg>
<status status="PASS" starttime="20211125 07:57:11.249" endtime="20211125 07:57:11.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:57:11.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:57:11.250" endtime="20211125 07:57:11.251"/>
</kw>
<status status="PASS" starttime="20211125 07:57:01.844" endtime="20211125 07:57:11.251"/>
</kw>
<msg timestamp="20211125 07:57:11.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:57:01.842" endtime="20211125 07:57:11.251"/>
</kw>
<msg timestamp="20211125 07:57:11.252" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "68998-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-2...</msg>
<status status="PASS" starttime="20211125 07:57:01.840" endtime="20211125 07:57:11.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:57:11.252" endtime="20211125 07:57:11.255"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:11.261" level="INFO">Running command 'ozone sh key list 68998-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:20.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:57:20.393" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211125 07:57:11.257" endtime="20211125 07:57:20.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:20.395" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211125 07:57:20.394" endtime="20211125 07:57:20.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:57:20.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:57:20.396" endtime="20211125 07:57:20.397"/>
</kw>
<status status="PASS" starttime="20211125 07:57:11.256" endtime="20211125 07:57:20.398"/>
</kw>
<msg timestamp="20211125 07:57:20.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:57:11.256" endtime="20211125 07:57:20.399"/>
</kw>
<msg timestamp="20211125 07:57:20.399" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211125 07:57:11.255" endtime="20211125 07:57:20.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:57:20.400" endtime="20211125 07:57:20.401"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:56:53.096" endtime="20211125 07:57:20.401"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211125 07:42:59.667" endtime="20211125 07:57:20.404"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211125 07:57:20.442" level="INFO">${random} = 84378</msg>
<status status="PASS" starttime="20211125 07:57:20.442" endtime="20211125 07:57:20.443"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:57:20.443" level="INFO">${prefix} = 84378</msg>
<status status="PASS" starttime="20211125 07:57:20.443" endtime="20211125 07:57:20.443"/>
</kw>
<status status="PASS" starttime="20211125 07:57:20.442" endtime="20211125 07:57:20.443"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:20.450" level="INFO">Running command 'ozone sh volume info /84378-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:28.207" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 07:57:28.207" level="INFO">${output} = VOLUME_NOT_FOUND Volume 84378-rpcbasic is not found</msg>
<status status="PASS" starttime="20211125 07:57:20.448" endtime="20211125 07:57:28.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:28.209" level="INFO">VOLUME_NOT_FOUND Volume 84378-rpcbasic is not found</msg>
<status status="PASS" starttime="20211125 07:57:28.208" endtime="20211125 07:57:28.209"/>
</kw>
<msg timestamp="20211125 07:57:28.210" level="INFO">${result} = VOLUME_NOT_FOUND Volume 84378-rpcbasic is not found</msg>
<status status="PASS" starttime="20211125 07:57:20.447" endtime="20211125 07:57:28.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:57:28.210" endtime="20211125 07:57:28.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:28.216" level="INFO">Running command 'ozone sh volume create /84378-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:35.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:57:35.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:57:28.213" endtime="20211125 07:57:35.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:35.940" level="INFO"/>
<status status="PASS" starttime="20211125 07:57:35.939" endtime="20211125 07:57:35.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:57:35.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:57:35.940" endtime="20211125 07:57:35.941"/>
</kw>
<status status="PASS" starttime="20211125 07:57:28.212" endtime="20211125 07:57:35.942"/>
</kw>
<msg timestamp="20211125 07:57:35.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:57:28.212" endtime="20211125 07:57:35.942"/>
</kw>
<msg timestamp="20211125 07:57:35.942" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211125 07:57:28.211" endtime="20211125 07:57:35.942"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:57:35.942" endtime="20211125 07:57:35.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:35.950" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="84378-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:44.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:57:44.435" level="INFO">${output} = {
  "metadata": {},
  "name": "84378-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 07:57:35.946" endtime="20211125 07:57:44.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:44.436" level="INFO">{
  "metadata": {},
  "name": "84378-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T07:57:35.443Z",
  "modificationTime": "2021-11-25T07:57:35.443Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 07:57:44.435" endtime="20211125 07:57:44.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:57:44.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:57:44.437" endtime="20211125 07:57:44.437"/>
</kw>
<status status="PASS" starttime="20211125 07:57:35.945" endtime="20211125 07:57:44.438"/>
</kw>
<msg timestamp="20211125 07:57:44.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:57:35.945" endtime="20211125 07:57:44.438"/>
</kw>
<msg timestamp="20211125 07:57:44.439" level="INFO">${result} = {
  "metadata": {},
  "name": "84378-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 07:57:35.943" endtime="20211125 07:57:44.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:57:44.439" endtime="20211125 07:57:44.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:44.444" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="84378-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:57:52.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:57:52.827" level="INFO">${output} = {
  "metadata": {},
  "name": "84378-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 07:57:44.442" endtime="20211125 07:57:52.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:57:52.829" level="INFO">{
  "metadata": {},
  "name": "84378-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T07:57:35.443Z",
  "modificationTime": "2021-11-25T07:57:35.443Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 07:57:52.828" endtime="20211125 07:57:52.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:57:52.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:57:52.830" endtime="20211125 07:57:52.831"/>
</kw>
<status status="PASS" starttime="20211125 07:57:44.441" endtime="20211125 07:57:52.832"/>
</kw>
<msg timestamp="20211125 07:57:52.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:57:44.441" endtime="20211125 07:57:52.833"/>
</kw>
<msg timestamp="20211125 07:57:52.833" level="INFO">${result} = {
  "metadata": {},
  "name": "84378-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 07:57:44.440" endtime="20211125 07:57:52.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 07:57:52.834" endtime="20211125 07:57:52.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:57:52.841" level="INFO">Running command 'ozone sh volume setquota /84378-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:01.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:01.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:57:52.838" endtime="20211125 07:58:01.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:01.144" level="INFO"/>
<status status="PASS" starttime="20211125 07:58:01.143" endtime="20211125 07:58:01.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:01.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:01.144" endtime="20211125 07:58:01.144"/>
</kw>
<status status="PASS" starttime="20211125 07:57:52.837" endtime="20211125 07:58:01.148"/>
</kw>
<msg timestamp="20211125 07:58:01.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:57:52.836" endtime="20211125 07:58:01.148"/>
</kw>
<status status="PASS" starttime="20211125 07:57:52.835" endtime="20211125 07:58:01.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:01.155" level="INFO">Running command 'ozone sh volume info /84378-rpcbasic | jq -r '. | select(.name=="84378-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:09.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:09.726" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 07:58:01.151" endtime="20211125 07:58:09.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:09.728" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 07:58:09.727" endtime="20211125 07:58:09.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:09.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:09.728" endtime="20211125 07:58:09.729"/>
</kw>
<status status="PASS" starttime="20211125 07:58:01.150" endtime="20211125 07:58:09.730"/>
</kw>
<msg timestamp="20211125 07:58:09.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:01.150" endtime="20211125 07:58:09.730"/>
</kw>
<msg timestamp="20211125 07:58:09.730" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 07:58:01.149" endtime="20211125 07:58:09.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:58:09.731" endtime="20211125 07:58:09.732"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:09.737" level="INFO">Running command 'ozone sh bucket create /84378-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:18.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:18.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:58:09.734" endtime="20211125 07:58:18.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:18.618" level="INFO"/>
<status status="PASS" starttime="20211125 07:58:18.614" endtime="20211125 07:58:18.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:18.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:18.619" endtime="20211125 07:58:18.620"/>
</kw>
<status status="PASS" starttime="20211125 07:58:09.733" endtime="20211125 07:58:18.620"/>
</kw>
<msg timestamp="20211125 07:58:18.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:09.733" endtime="20211125 07:58:18.621"/>
</kw>
<status status="PASS" starttime="20211125 07:58:09.732" endtime="20211125 07:58:18.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:18.627" level="INFO">Running command 'ozone sh bucket info /84378-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:25.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:25.351" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211125 07:58:18.624" endtime="20211125 07:58:25.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:25.353" level="INFO">DISK</msg>
<status status="PASS" starttime="20211125 07:58:25.352" endtime="20211125 07:58:25.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:25.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:25.353" endtime="20211125 07:58:25.354"/>
</kw>
<status status="PASS" starttime="20211125 07:58:18.623" endtime="20211125 07:58:25.354"/>
</kw>
<msg timestamp="20211125 07:58:25.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:18.623" endtime="20211125 07:58:25.354"/>
</kw>
<msg timestamp="20211125 07:58:25.354" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211125 07:58:18.622" endtime="20211125 07:58:25.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:58:25.355" endtime="20211125 07:58:25.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:25.360" level="INFO">Running command 'ozone sh bucket info /84378-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:33.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:33.623" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 07:58:25.358" endtime="20211125 07:58:33.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:33.626" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 07:58:33.624" endtime="20211125 07:58:33.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:33.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:33.626" endtime="20211125 07:58:33.628"/>
</kw>
<status status="PASS" starttime="20211125 07:58:25.357" endtime="20211125 07:58:33.629"/>
</kw>
<msg timestamp="20211125 07:58:33.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:25.356" endtime="20211125 07:58:33.630"/>
</kw>
<msg timestamp="20211125 07:58:33.630" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 07:58:25.355" endtime="20211125 07:58:33.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:58:33.631" endtime="20211125 07:58:33.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:33.639" level="INFO">Running command 'ozone sh bucket info /84378-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:40.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:40.332" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211125 07:58:33.636" endtime="20211125 07:58:40.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:40.338" level="INFO">100</msg>
<status status="PASS" starttime="20211125 07:58:40.332" endtime="20211125 07:58:40.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:40.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:40.338" endtime="20211125 07:58:40.339"/>
</kw>
<status status="PASS" starttime="20211125 07:58:33.636" endtime="20211125 07:58:40.339"/>
</kw>
<msg timestamp="20211125 07:58:40.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:33.635" endtime="20211125 07:58:40.340"/>
</kw>
<msg timestamp="20211125 07:58:40.340" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211125 07:58:33.632" endtime="20211125 07:58:40.340"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:58:40.340" endtime="20211125 07:58:40.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:40.345" level="INFO">Running command 'ozone sh bucket setquota /84378-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:45.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:45.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:58:40.343" endtime="20211125 07:58:45.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:45.675" level="INFO"/>
<status status="PASS" starttime="20211125 07:58:45.673" endtime="20211125 07:58:45.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:45.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:45.675" endtime="20211125 07:58:45.675"/>
</kw>
<status status="PASS" starttime="20211125 07:58:40.342" endtime="20211125 07:58:45.676"/>
</kw>
<msg timestamp="20211125 07:58:45.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:40.342" endtime="20211125 07:58:45.676"/>
</kw>
<status status="PASS" starttime="20211125 07:58:40.341" endtime="20211125 07:58:45.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:45.681" level="INFO">Running command 'ozone sh bucket info /84378-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:58:54.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:58:54.140" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211125 07:58:45.678" endtime="20211125 07:58:54.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:58:54.142" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211125 07:58:54.141" endtime="20211125 07:58:54.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:58:54.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:58:54.142" endtime="20211125 07:58:54.143"/>
</kw>
<status status="PASS" starttime="20211125 07:58:45.678" endtime="20211125 07:58:54.143"/>
</kw>
<msg timestamp="20211125 07:58:54.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:45.677" endtime="20211125 07:58:54.144"/>
</kw>
<msg timestamp="20211125 07:58:54.144" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211125 07:58:45.676" endtime="20211125 07:58:54.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:58:54.144" endtime="20211125 07:58:54.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:58:54.151" level="INFO">Running command 'ozone sh bucket info /84378-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:59:01.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:59:01.769" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211125 07:58:54.147" endtime="20211125 07:59:01.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:59:01.770" level="INFO">1000</msg>
<status status="PASS" starttime="20211125 07:59:01.770" endtime="20211125 07:59:01.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:59:01.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:59:01.771" endtime="20211125 07:59:01.772"/>
</kw>
<status status="PASS" starttime="20211125 07:58:54.146" endtime="20211125 07:59:01.772"/>
</kw>
<msg timestamp="20211125 07:59:01.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:58:54.146" endtime="20211125 07:59:01.772"/>
</kw>
<msg timestamp="20211125 07:59:01.772" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211125 07:58:54.145" endtime="20211125 07:59:01.772"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:59:01.773" endtime="20211125 07:59:01.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:59:01.778" level="INFO">Running command 'ozone sh bucket list /84378-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:59:10.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:59:10.506" level="INFO">${output} = 84378-rpcbasic</msg>
<status status="PASS" starttime="20211125 07:59:01.775" endtime="20211125 07:59:10.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:59:10.510" level="INFO">84378-rpcbasic</msg>
<status status="PASS" starttime="20211125 07:59:10.508" endtime="20211125 07:59:10.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:59:10.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:59:10.511" endtime="20211125 07:59:10.512"/>
</kw>
<status status="PASS" starttime="20211125 07:59:01.775" endtime="20211125 07:59:10.512"/>
</kw>
<msg timestamp="20211125 07:59:10.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:59:01.774" endtime="20211125 07:59:10.513"/>
</kw>
<msg timestamp="20211125 07:59:10.514" level="INFO">${result} = 84378-rpcbasic</msg>
<status status="PASS" starttime="20211125 07:59:01.773" endtime="20211125 07:59:10.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 07:59:10.514" endtime="20211125 07:59:10.514"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:59:10.520" level="INFO">Running command 'ozone sh key put /84378-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:20.445" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 07:59:10.517" endtime="20211125 08:02:20.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.445" endtime="20211125 08:02:20.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.446" endtime="20211125 08:02:20.446"/>
</kw>
<status status="FAIL" starttime="20211125 07:59:10.516" endtime="20211125 08:02:20.446"/>
</kw>
<msg timestamp="20211125 08:02:20.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 07:59:10.516" endtime="20211125 08:02:20.447"/>
</kw>
<status status="FAIL" starttime="20211125 07:59:10.515" endtime="20211125 08:02:20.447"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.447" endtime="20211125 08:02:20.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.448" endtime="20211125 08:02:20.448"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.448" endtime="20211125 08:02:20.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.448" endtime="20211125 08:02:20.448"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.448" endtime="20211125 08:02:20.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.449" endtime="20211125 08:02:20.449"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.449" endtime="20211125 08:02:20.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.449" endtime="20211125 08:02:20.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.450" endtime="20211125 08:02:20.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.450" endtime="20211125 08:02:20.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.450" endtime="20211125 08:02:20.450"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.450" endtime="20211125 08:02:20.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.450" endtime="20211125 08:02:20.451"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.451" endtime="20211125 08:02:20.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.451" endtime="20211125 08:02:20.451"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.451" endtime="20211125 08:02:20.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.451" endtime="20211125 08:02:20.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.452" endtime="20211125 08:02:20.452"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.452" endtime="20211125 08:02:20.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.452" endtime="20211125 08:02:20.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.452" endtime="20211125 08:02:20.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.452" endtime="20211125 08:02:20.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.453" endtime="20211125 08:02:20.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.453" endtime="20211125 08:02:20.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.453" endtime="20211125 08:02:20.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.453" endtime="20211125 08:02:20.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.454" endtime="20211125 08:02:20.454"/>
</kw>
<status status="FAIL" starttime="20211125 07:59:10.515" endtime="20211125 08:02:20.454"/>
</kw>
<status status="FAIL" starttime="20211125 07:59:10.514" endtime="20211125 08:02:20.454"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.454" endtime="20211125 08:02:20.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.454" endtime="20211125 08:02:20.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.455" endtime="20211125 08:02:20.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.455" endtime="20211125 08:02:20.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.455" endtime="20211125 08:02:20.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.455" endtime="20211125 08:02:20.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.455" endtime="20211125 08:02:20.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.455" endtime="20211125 08:02:20.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.456" endtime="20211125 08:02:20.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.456" endtime="20211125 08:02:20.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.456" endtime="20211125 08:02:20.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.456" endtime="20211125 08:02:20.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.456" endtime="20211125 08:02:20.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.457" endtime="20211125 08:02:20.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.457" endtime="20211125 08:02:20.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.457" endtime="20211125 08:02:20.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.457" endtime="20211125 08:02:20.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.457" endtime="20211125 08:02:20.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.458" endtime="20211125 08:02:20.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.458" endtime="20211125 08:02:20.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.458" endtime="20211125 08:02:20.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.458" endtime="20211125 08:02:20.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.458" endtime="20211125 08:02:20.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:02:20.459" endtime="20211125 08:02:20.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.459" endtime="20211125 08:02:20.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:02:20.459" endtime="20211125 08:02:20.459"/>
</kw>
<status status="FAIL" starttime="20211125 07:57:20.445" endtime="20211125 08:02:20.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211125 07:57:20.444" endtime="20211125 08:02:20.460">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211125 07:57:20.415" endtime="20211125 08:02:20.461"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211125 08:02:20.486" level="INFO">${random} = 13741</msg>
<status status="PASS" starttime="20211125 08:02:20.485" endtime="20211125 08:02:20.486"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:02:20.486" level="INFO">${prefix} = 13741</msg>
<status status="PASS" starttime="20211125 08:02:20.486" endtime="20211125 08:02:20.486"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.485" endtime="20211125 08:02:20.487"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:20.493" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:20.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:02:20.498" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:02:20.490" endtime="20211125 08:02:20.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:20.499" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:02:20.498" endtime="20211125 08:02:20.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:02:20.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:02:20.499" endtime="20211125 08:02:20.500"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.489" endtime="20211125 08:02:20.501"/>
</kw>
<msg timestamp="20211125 08:02:20.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:20.489" endtime="20211125 08:02:20.501"/>
</kw>
<msg timestamp="20211125 08:02:20.501" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:02:20.488" endtime="20211125 08:02:20.501"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:02:20.504" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:02:20.502" endtime="20211125 08:02:20.504"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:20.510" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:20.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:02:20.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:02:20.507" endtime="20211125 08:02:20.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:20.555" level="INFO"/>
<status status="PASS" starttime="20211125 08:02:20.551" endtime="20211125 08:02:20.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:02:20.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:02:20.555" endtime="20211125 08:02:20.556"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.506" endtime="20211125 08:02:20.557"/>
</kw>
<msg timestamp="20211125 08:02:20.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:20.505" endtime="20211125 08:02:20.557"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.505" endtime="20211125 08:02:20.557"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.504" endtime="20211125 08:02:20.557"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.488" endtime="20211125 08:02:20.558"/>
</kw>
<status status="PASS" starttime="20211125 08:02:20.487" endtime="20211125 08:02:20.558"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:20.564" level="INFO">Running command 'ozone sh volume info o3://om:9862/13741-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:28.512" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 08:02:28.512" level="INFO">${output} = VOLUME_NOT_FOUND Volume 13741-rpcwoport is not found</msg>
<status status="PASS" starttime="20211125 08:02:20.561" endtime="20211125 08:02:28.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:28.514" level="INFO">VOLUME_NOT_FOUND Volume 13741-rpcwoport is not found</msg>
<status status="PASS" starttime="20211125 08:02:28.513" endtime="20211125 08:02:28.514"/>
</kw>
<msg timestamp="20211125 08:02:28.515" level="INFO">${result} = VOLUME_NOT_FOUND Volume 13741-rpcwoport is not found</msg>
<status status="PASS" starttime="20211125 08:02:20.559" endtime="20211125 08:02:28.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:02:28.516" endtime="20211125 08:02:28.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:28.521" level="INFO">Running command 'ozone sh volume create o3://om:9862/13741-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:36.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:02:36.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:02:28.518" endtime="20211125 08:02:36.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:36.488" level="INFO"/>
<status status="PASS" starttime="20211125 08:02:36.486" endtime="20211125 08:02:36.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:02:36.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:02:36.488" endtime="20211125 08:02:36.489"/>
</kw>
<status status="PASS" starttime="20211125 08:02:28.518" endtime="20211125 08:02:36.489"/>
</kw>
<msg timestamp="20211125 08:02:36.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:28.517" endtime="20211125 08:02:36.490"/>
</kw>
<msg timestamp="20211125 08:02:36.490" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211125 08:02:28.516" endtime="20211125 08:02:36.490"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:02:36.490" endtime="20211125 08:02:36.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:36.497" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="13741-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:43.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:02:43.244" level="INFO">${output} = {
  "metadata": {},
  "name": "13741-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211125 08:02:36.494" endtime="20211125 08:02:43.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:43.247" level="INFO">{
  "metadata": {},
  "name": "13741-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T08:02:36.386Z",
  "modificationTime": "2021-11-25T08:02:36.386Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 08:02:43.245" endtime="20211125 08:02:43.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:02:43.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:02:43.248" endtime="20211125 08:02:43.250"/>
</kw>
<status status="PASS" starttime="20211125 08:02:36.493" endtime="20211125 08:02:43.250"/>
</kw>
<msg timestamp="20211125 08:02:43.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:36.493" endtime="20211125 08:02:43.251"/>
</kw>
<msg timestamp="20211125 08:02:43.251" level="INFO">${result} = {
  "metadata": {},
  "name": "13741-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211125 08:02:36.492" endtime="20211125 08:02:43.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:02:43.252" endtime="20211125 08:02:43.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:43.262" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="13741-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:51.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:02:51.306" level="INFO">${output} = {
  "metadata": {},
  "name": "13741-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211125 08:02:43.258" endtime="20211125 08:02:51.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:51.308" level="INFO">{
  "metadata": {},
  "name": "13741-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T08:02:36.386Z",
  "modificationTime": "2021-11-25T08:02:36.386Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 08:02:51.307" endtime="20211125 08:02:51.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:02:51.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:02:51.308" endtime="20211125 08:02:51.310"/>
</kw>
<status status="PASS" starttime="20211125 08:02:43.257" endtime="20211125 08:02:51.310"/>
</kw>
<msg timestamp="20211125 08:02:51.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:43.256" endtime="20211125 08:02:51.311"/>
</kw>
<msg timestamp="20211125 08:02:51.311" level="INFO">${result} = {
  "metadata": {},
  "name": "13741-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211125 08:02:43.254" endtime="20211125 08:02:51.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:02:51.312" endtime="20211125 08:02:51.313"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:51.321" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/13741-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:02:59.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:02:59.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:02:51.317" endtime="20211125 08:02:59.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:02:59.397" level="INFO"/>
<status status="PASS" starttime="20211125 08:02:59.396" endtime="20211125 08:02:59.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:02:59.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:02:59.398" endtime="20211125 08:02:59.399"/>
</kw>
<status status="PASS" starttime="20211125 08:02:51.316" endtime="20211125 08:02:59.400"/>
</kw>
<msg timestamp="20211125 08:02:59.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:51.315" endtime="20211125 08:02:59.401"/>
</kw>
<status status="PASS" starttime="20211125 08:02:51.313" endtime="20211125 08:02:59.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:02:59.408" level="INFO">Running command 'ozone sh volume info o3://om:9862/13741-rpcwoport | jq -r '. | select(.name=="13741-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:07.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:07.937" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:02:59.405" endtime="20211125 08:03:07.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:07.939" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 08:03:07.938" endtime="20211125 08:03:07.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:07.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:07.939" endtime="20211125 08:03:07.940"/>
</kw>
<status status="PASS" starttime="20211125 08:02:59.404" endtime="20211125 08:03:07.940"/>
</kw>
<msg timestamp="20211125 08:03:07.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:02:59.403" endtime="20211125 08:03:07.940"/>
</kw>
<msg timestamp="20211125 08:03:07.941" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:02:59.401" endtime="20211125 08:03:07.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:03:07.941" endtime="20211125 08:03:07.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:07.947" level="INFO">Running command 'ozone sh bucket create o3://om:9862/13741-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:14.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:14.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:03:07.944" endtime="20211125 08:03:14.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:14.541" level="INFO"/>
<status status="PASS" starttime="20211125 08:03:14.541" endtime="20211125 08:03:14.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:14.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:14.542" endtime="20211125 08:03:14.542"/>
</kw>
<status status="PASS" starttime="20211125 08:03:07.944" endtime="20211125 08:03:14.543"/>
</kw>
<msg timestamp="20211125 08:03:14.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:07.943" endtime="20211125 08:03:14.543"/>
</kw>
<status status="PASS" starttime="20211125 08:03:07.942" endtime="20211125 08:03:14.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:14.548" level="INFO">Running command 'ozone sh bucket info o3://om:9862/13741-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:22.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:22.246" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211125 08:03:14.545" endtime="20211125 08:03:22.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:22.247" level="INFO">DISK</msg>
<status status="PASS" starttime="20211125 08:03:22.246" endtime="20211125 08:03:22.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:22.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:22.248" endtime="20211125 08:03:22.248"/>
</kw>
<status status="PASS" starttime="20211125 08:03:14.545" endtime="20211125 08:03:22.249"/>
</kw>
<msg timestamp="20211125 08:03:22.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:14.544" endtime="20211125 08:03:22.249"/>
</kw>
<msg timestamp="20211125 08:03:22.249" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211125 08:03:14.543" endtime="20211125 08:03:22.249"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:03:22.249" endtime="20211125 08:03:22.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:22.255" level="INFO">Running command 'ozone sh bucket info o3://om:9862/13741-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:30.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:30.548" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:03:22.252" endtime="20211125 08:03:30.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:30.550" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 08:03:30.549" endtime="20211125 08:03:30.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:30.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:30.550" endtime="20211125 08:03:30.551"/>
</kw>
<status status="PASS" starttime="20211125 08:03:22.251" endtime="20211125 08:03:30.552"/>
</kw>
<msg timestamp="20211125 08:03:30.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:22.251" endtime="20211125 08:03:30.552"/>
</kw>
<msg timestamp="20211125 08:03:30.552" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:03:22.250" endtime="20211125 08:03:30.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:03:30.553" endtime="20211125 08:03:30.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:30.559" level="INFO">Running command 'ozone sh bucket info o3://om:9862/13741-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:38.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:38.805" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211125 08:03:30.556" endtime="20211125 08:03:38.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:38.806" level="INFO">100</msg>
<status status="PASS" starttime="20211125 08:03:38.805" endtime="20211125 08:03:38.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:38.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:38.807" endtime="20211125 08:03:38.808"/>
</kw>
<status status="PASS" starttime="20211125 08:03:30.555" endtime="20211125 08:03:38.808"/>
</kw>
<msg timestamp="20211125 08:03:38.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:30.555" endtime="20211125 08:03:38.808"/>
</kw>
<msg timestamp="20211125 08:03:38.809" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211125 08:03:30.554" endtime="20211125 08:03:38.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:03:38.809" endtime="20211125 08:03:38.810"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:38.815" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/13741-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:46.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:46.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:03:38.812" endtime="20211125 08:03:46.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:46.550" level="INFO"/>
<status status="PASS" starttime="20211125 08:03:46.549" endtime="20211125 08:03:46.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:46.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:46.551" endtime="20211125 08:03:46.552"/>
</kw>
<status status="PASS" starttime="20211125 08:03:38.811" endtime="20211125 08:03:46.553"/>
</kw>
<msg timestamp="20211125 08:03:46.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:38.811" endtime="20211125 08:03:46.553"/>
</kw>
<status status="PASS" starttime="20211125 08:03:38.810" endtime="20211125 08:03:46.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:46.561" level="INFO">Running command 'ozone sh bucket info o3://om:9862/13741-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:03:54.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:03:54.985" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211125 08:03:46.558" endtime="20211125 08:03:54.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:03:54.987" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211125 08:03:54.986" endtime="20211125 08:03:54.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:03:54.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:03:54.988" endtime="20211125 08:03:54.990"/>
</kw>
<status status="PASS" starttime="20211125 08:03:46.557" endtime="20211125 08:03:54.990"/>
</kw>
<msg timestamp="20211125 08:03:54.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:46.556" endtime="20211125 08:03:54.990"/>
</kw>
<msg timestamp="20211125 08:03:54.991" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211125 08:03:46.554" endtime="20211125 08:03:54.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:03:54.991" endtime="20211125 08:03:54.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:03:55.000" level="INFO">Running command 'ozone sh bucket info o3://om:9862/13741-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:04:01.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:04:01.167" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211125 08:03:54.997" endtime="20211125 08:04:01.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:04:01.170" level="INFO">1000</msg>
<status status="PASS" starttime="20211125 08:04:01.168" endtime="20211125 08:04:01.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:04:01.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:04:01.171" endtime="20211125 08:04:01.172"/>
</kw>
<status status="PASS" starttime="20211125 08:03:54.995" endtime="20211125 08:04:01.173"/>
</kw>
<msg timestamp="20211125 08:04:01.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:03:54.995" endtime="20211125 08:04:01.173"/>
</kw>
<msg timestamp="20211125 08:04:01.174" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211125 08:03:54.993" endtime="20211125 08:04:01.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:04:01.174" endtime="20211125 08:04:01.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:04:01.183" level="INFO">Running command 'ozone sh bucket list o3://om:9862/13741-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:04:09.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:04:09.527" level="INFO">${output} = 13741-rpcwoport</msg>
<status status="PASS" starttime="20211125 08:04:01.180" endtime="20211125 08:04:09.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:04:09.528" level="INFO">13741-rpcwoport</msg>
<status status="PASS" starttime="20211125 08:04:09.527" endtime="20211125 08:04:09.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:04:09.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:04:09.528" endtime="20211125 08:04:09.529"/>
</kw>
<status status="PASS" starttime="20211125 08:04:01.179" endtime="20211125 08:04:09.529"/>
</kw>
<msg timestamp="20211125 08:04:09.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:04:01.178" endtime="20211125 08:04:09.530"/>
</kw>
<msg timestamp="20211125 08:04:09.530" level="INFO">${result} = 13741-rpcwoport</msg>
<status status="PASS" starttime="20211125 08:04:01.176" endtime="20211125 08:04:09.530"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:04:09.530" endtime="20211125 08:04:09.532"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:04:09.546" level="INFO">Running command 'ozone sh key put o3://om:9862/13741-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:20.488" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 08:04:09.543" endtime="20211125 08:07:20.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.489" endtime="20211125 08:07:20.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.489" endtime="20211125 08:07:20.489"/>
</kw>
<status status="FAIL" starttime="20211125 08:04:09.542" endtime="20211125 08:07:20.490"/>
</kw>
<msg timestamp="20211125 08:07:20.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 08:04:09.542" endtime="20211125 08:07:20.490"/>
</kw>
<status status="FAIL" starttime="20211125 08:04:09.541" endtime="20211125 08:07:20.490"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.490" endtime="20211125 08:07:20.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.491" endtime="20211125 08:07:20.491"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.491" endtime="20211125 08:07:20.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.491" endtime="20211125 08:07:20.491"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.491" endtime="20211125 08:07:20.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.492" endtime="20211125 08:07:20.492"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.492" endtime="20211125 08:07:20.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.492" endtime="20211125 08:07:20.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.494" endtime="20211125 08:07:20.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.494" endtime="20211125 08:07:20.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.494" endtime="20211125 08:07:20.494"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.495" endtime="20211125 08:07:20.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.495" endtime="20211125 08:07:20.495"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.495" endtime="20211125 08:07:20.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.495" endtime="20211125 08:07:20.496"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.496" endtime="20211125 08:07:20.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.496" endtime="20211125 08:07:20.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.496" endtime="20211125 08:07:20.496"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.496" endtime="20211125 08:07:20.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.496" endtime="20211125 08:07:20.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.497" endtime="20211125 08:07:20.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.497" endtime="20211125 08:07:20.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.497" endtime="20211125 08:07:20.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.497" endtime="20211125 08:07:20.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.498" endtime="20211125 08:07:20.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.498" endtime="20211125 08:07:20.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.498" endtime="20211125 08:07:20.498"/>
</kw>
<status status="FAIL" starttime="20211125 08:04:09.532" endtime="20211125 08:07:20.498"/>
</kw>
<status status="FAIL" starttime="20211125 08:04:09.532" endtime="20211125 08:07:20.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.498" endtime="20211125 08:07:20.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.499" endtime="20211125 08:07:20.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.499" endtime="20211125 08:07:20.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.499" endtime="20211125 08:07:20.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.499" endtime="20211125 08:07:20.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.499" endtime="20211125 08:07:20.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.500" endtime="20211125 08:07:20.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.500" endtime="20211125 08:07:20.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.500" endtime="20211125 08:07:20.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.500" endtime="20211125 08:07:20.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.501" endtime="20211125 08:07:20.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.501" endtime="20211125 08:07:20.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.501" endtime="20211125 08:07:20.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.502" endtime="20211125 08:07:20.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.502" endtime="20211125 08:07:20.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.502" endtime="20211125 08:07:20.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.502" endtime="20211125 08:07:20.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.503" endtime="20211125 08:07:20.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.503" endtime="20211125 08:07:20.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.503" endtime="20211125 08:07:20.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.504" endtime="20211125 08:07:20.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.504" endtime="20211125 08:07:20.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.504" endtime="20211125 08:07:20.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:07:20.504" endtime="20211125 08:07:20.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.505" endtime="20211125 08:07:20.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:07:20.505" endtime="20211125 08:07:20.505"/>
</kw>
<status status="FAIL" starttime="20211125 08:02:20.558" endtime="20211125 08:07:20.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211125 08:02:20.487" endtime="20211125 08:07:20.506">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:20.515" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:20.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:20.520" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:07:20.512" endtime="20211125 08:07:20.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:20.525" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:07:20.521" endtime="20211125 08:07:20.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:20.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:20.526" endtime="20211125 08:07:20.527"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.512" endtime="20211125 08:07:20.527"/>
</kw>
<msg timestamp="20211125 08:07:20.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:20.511" endtime="20211125 08:07:20.527"/>
</kw>
<msg timestamp="20211125 08:07:20.528" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:07:20.511" endtime="20211125 08:07:20.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:07:20.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:07:20.528" endtime="20211125 08:07:20.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:20.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:20.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:20.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:07:20.533" endtime="20211125 08:07:20.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:20.612" level="INFO"/>
<status status="PASS" starttime="20211125 08:07:20.610" endtime="20211125 08:07:20.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:20.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:20.612" endtime="20211125 08:07:20.613"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.532" endtime="20211125 08:07:20.613"/>
</kw>
<msg timestamp="20211125 08:07:20.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:20.531" endtime="20211125 08:07:20.614"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.531" endtime="20211125 08:07:20.614"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.530" endtime="20211125 08:07:20.614"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.510" endtime="20211125 08:07:20.614"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.509" endtime="20211125 08:07:20.617"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:20.629" level="INFO">Running command 'ozone sh volume create o3://om:9862/13741-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:28.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:28.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:07:20.626" endtime="20211125 08:07:28.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:28.705" level="INFO"/>
<status status="PASS" starttime="20211125 08:07:28.705" endtime="20211125 08:07:28.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:28.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:28.706" endtime="20211125 08:07:28.706"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.625" endtime="20211125 08:07:28.707"/>
</kw>
<msg timestamp="20211125 08:07:28.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:20.624" endtime="20211125 08:07:28.707"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.623" endtime="20211125 08:07:28.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:28.716" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/13741-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:35.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:35.256" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:07:28.710" endtime="20211125 08:07:35.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:35.257" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:07:35.256" endtime="20211125 08:07:35.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:35.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:35.258" endtime="20211125 08:07:35.259"/>
</kw>
<status status="PASS" starttime="20211125 08:07:28.710" endtime="20211125 08:07:35.259"/>
</kw>
<msg timestamp="20211125 08:07:35.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:28.709" endtime="20211125 08:07:35.259"/>
</kw>
<msg timestamp="20211125 08:07:35.260" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:07:28.707" endtime="20211125 08:07:35.260"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:07:35.260" endtime="20211125 08:07:35.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:35.267" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/13741-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:43.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:43.334" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211125 08:07:35.264" endtime="20211125 08:07:43.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:43.335" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211125 08:07:43.334" endtime="20211125 08:07:43.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:43.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:43.335" endtime="20211125 08:07:43.337"/>
</kw>
<status status="PASS" starttime="20211125 08:07:35.263" endtime="20211125 08:07:43.337"/>
</kw>
<msg timestamp="20211125 08:07:43.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:35.263" endtime="20211125 08:07:43.337"/>
</kw>
<msg timestamp="20211125 08:07:43.338" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211125 08:07:35.261" endtime="20211125 08:07:43.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:43.344" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/13741-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:51.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:51.353" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211125 08:07:43.341" endtime="20211125 08:07:51.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:51.354" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:07:51.353" endtime="20211125 08:07:51.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:51.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:51.355" endtime="20211125 08:07:51.355"/>
</kw>
<status status="PASS" starttime="20211125 08:07:43.339" endtime="20211125 08:07:51.356"/>
</kw>
<msg timestamp="20211125 08:07:51.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:43.339" endtime="20211125 08:07:51.356"/>
</kw>
<msg timestamp="20211125 08:07:51.356" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211125 08:07:43.338" endtime="20211125 08:07:51.357"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:07:51.357" endtime="20211125 08:07:51.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:51.364" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/13741-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:07:58.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:07:58.911" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:07:51.360" endtime="20211125 08:07:58.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:07:58.913" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:07:58.912" endtime="20211125 08:07:58.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:07:58.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:07:58.913" endtime="20211125 08:07:58.914"/>
</kw>
<status status="PASS" starttime="20211125 08:07:51.359" endtime="20211125 08:07:58.914"/>
</kw>
<msg timestamp="20211125 08:07:58.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:51.359" endtime="20211125 08:07:58.915"/>
</kw>
<msg timestamp="20211125 08:07:58.915" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:07:51.358" endtime="20211125 08:07:58.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:07:58.924" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/13741-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:07.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:07.920" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211125 08:07:58.921" endtime="20211125 08:08:07.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:07.923" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:08:07.921" endtime="20211125 08:08:07.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:07.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:07.924" endtime="20211125 08:08:07.925"/>
</kw>
<status status="PASS" starttime="20211125 08:07:58.919" endtime="20211125 08:08:07.926"/>
</kw>
<msg timestamp="20211125 08:08:07.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:07:58.917" endtime="20211125 08:08:07.926"/>
</kw>
<msg timestamp="20211125 08:08:07.926" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211125 08:07:58.915" endtime="20211125 08:08:07.926"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:08:07.926" endtime="20211125 08:08:07.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:07.936" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/13741-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:14.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:14.571" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:08:07.933" endtime="20211125 08:08:14.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:14.573" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:08:14.572" endtime="20211125 08:08:14.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:14.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:14.573" endtime="20211125 08:08:14.574"/>
</kw>
<status status="PASS" starttime="20211125 08:08:07.931" endtime="20211125 08:08:14.574"/>
</kw>
<msg timestamp="20211125 08:08:14.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:07.930" endtime="20211125 08:08:14.575"/>
</kw>
<msg timestamp="20211125 08:08:14.575" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:08:07.929" endtime="20211125 08:08:14.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:14.579" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/13741-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:22.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:22.595" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211125 08:08:14.577" endtime="20211125 08:08:22.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:22.597" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:08:22.596" endtime="20211125 08:08:22.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:22.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:22.597" endtime="20211125 08:08:22.598"/>
</kw>
<status status="PASS" starttime="20211125 08:08:14.576" endtime="20211125 08:08:22.599"/>
</kw>
<msg timestamp="20211125 08:08:22.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:14.576" endtime="20211125 08:08:22.599"/>
</kw>
<msg timestamp="20211125 08:08:22.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211125 08:08:14.575" endtime="20211125 08:08:22.600"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:08:22.600" endtime="20211125 08:08:22.602"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:08:22.602" endtime="20211125 08:08:22.604"/>
</kw>
<status status="PASS" starttime="20211125 08:07:20.619" endtime="20211125 08:08:22.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 08:07:20.507" endtime="20211125 08:08:22.605"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:22.614" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:22.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:22.621" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:08:22.611" endtime="20211125 08:08:22.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:22.623" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:08:22.622" endtime="20211125 08:08:22.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:22.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:22.624" endtime="20211125 08:08:22.625"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.610" endtime="20211125 08:08:22.626"/>
</kw>
<msg timestamp="20211125 08:08:22.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:22.609" endtime="20211125 08:08:22.627"/>
</kw>
<msg timestamp="20211125 08:08:22.630" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:08:22.608" endtime="20211125 08:08:22.630"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:08:22.631" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:08:22.630" endtime="20211125 08:08:22.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:22.636" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:22.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:22.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:08:22.633" endtime="20211125 08:08:22.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:22.647" level="INFO"/>
<status status="PASS" starttime="20211125 08:08:22.646" endtime="20211125 08:08:22.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:22.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:22.648" endtime="20211125 08:08:22.648"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.632" endtime="20211125 08:08:22.649"/>
</kw>
<msg timestamp="20211125 08:08:22.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:22.632" endtime="20211125 08:08:22.649"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.631" endtime="20211125 08:08:22.650"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.631" endtime="20211125 08:08:22.650"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.608" endtime="20211125 08:08:22.650"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.607" endtime="20211125 08:08:22.650"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:22.657" level="INFO">Running command 'ozone sh bucket create o3://om:9862/13741-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:30.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:30.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:08:22.653" endtime="20211125 08:08:30.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:30.808" level="INFO"/>
<status status="PASS" starttime="20211125 08:08:30.807" endtime="20211125 08:08:30.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:30.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:30.808" endtime="20211125 08:08:30.809"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.653" endtime="20211125 08:08:30.809"/>
</kw>
<msg timestamp="20211125 08:08:30.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:22.652" endtime="20211125 08:08:30.810"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.651" endtime="20211125 08:08:30.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:30.815" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/13741-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:36.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:36.992" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:08:30.812" endtime="20211125 08:08:36.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:36.994" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:08:36.993" endtime="20211125 08:08:36.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:36.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:36.994" endtime="20211125 08:08:36.995"/>
</kw>
<status status="PASS" starttime="20211125 08:08:30.812" endtime="20211125 08:08:36.995"/>
</kw>
<msg timestamp="20211125 08:08:36.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:30.811" endtime="20211125 08:08:36.995"/>
</kw>
<msg timestamp="20211125 08:08:36.996" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:08:30.810" endtime="20211125 08:08:36.996"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:08:36.996" endtime="20211125 08:08:36.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:37.003" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/13741-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:44.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:44.553" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211125 08:08:36.999" endtime="20211125 08:08:44.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:44.555" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211125 08:08:44.554" endtime="20211125 08:08:44.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:44.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:44.556" endtime="20211125 08:08:44.556"/>
</kw>
<status status="PASS" starttime="20211125 08:08:36.998" endtime="20211125 08:08:44.556"/>
</kw>
<msg timestamp="20211125 08:08:44.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:36.998" endtime="20211125 08:08:44.557"/>
</kw>
<msg timestamp="20211125 08:08:44.557" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211125 08:08:36.996" endtime="20211125 08:08:44.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:44.564" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/13741-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:08:52.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:08:52.406" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:08:44.561" endtime="20211125 08:08:52.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:08:52.409" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:08:52.408" endtime="20211125 08:08:52.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:08:52.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:08:52.409" endtime="20211125 08:08:52.410"/>
</kw>
<status status="PASS" starttime="20211125 08:08:44.560" endtime="20211125 08:08:52.410"/>
</kw>
<msg timestamp="20211125 08:08:52.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:44.559" endtime="20211125 08:08:52.410"/>
</kw>
<msg timestamp="20211125 08:08:52.411" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:08:44.558" endtime="20211125 08:08:52.411"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:08:52.411" endtime="20211125 08:08:52.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:08:52.420" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/13741-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:09:00.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:09:00.445" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:08:52.415" endtime="20211125 08:09:00.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:09:00.447" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:09:00.446" endtime="20211125 08:09:00.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:09:00.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:09:00.447" endtime="20211125 08:09:00.448"/>
</kw>
<status status="PASS" starttime="20211125 08:08:52.414" endtime="20211125 08:09:00.448"/>
</kw>
<msg timestamp="20211125 08:09:00.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:08:52.413" endtime="20211125 08:09:00.449"/>
</kw>
<msg timestamp="20211125 08:09:00.450" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:08:52.412" endtime="20211125 08:09:00.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:09:00.456" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/13741-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:09:07.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:09:07.639" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:09:00.454" endtime="20211125 08:09:07.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:09:07.640" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:09:07.640" endtime="20211125 08:09:07.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:09:07.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:09:07.641" endtime="20211125 08:09:07.641"/>
</kw>
<status status="PASS" starttime="20211125 08:09:00.453" endtime="20211125 08:09:07.642"/>
</kw>
<msg timestamp="20211125 08:09:07.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:09:00.452" endtime="20211125 08:09:07.642"/>
</kw>
<msg timestamp="20211125 08:09:07.642" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:09:00.450" endtime="20211125 08:09:07.642"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:09:07.643" endtime="20211125 08:09:07.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:09:07.649" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/13741-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:09:15.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:09:15.291" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:09:07.646" endtime="20211125 08:09:15.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:09:15.294" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:09:15.292" endtime="20211125 08:09:15.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:09:15.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:09:15.294" endtime="20211125 08:09:15.295"/>
</kw>
<status status="PASS" starttime="20211125 08:09:07.645" endtime="20211125 08:09:15.296"/>
</kw>
<msg timestamp="20211125 08:09:15.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:09:07.645" endtime="20211125 08:09:15.297"/>
</kw>
<msg timestamp="20211125 08:09:15.297" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:09:07.644" endtime="20211125 08:09:15.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:09:15.312" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/13741-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:09:24.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:09:24.057" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211125 08:09:15.301" endtime="20211125 08:09:24.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:09:24.058" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:09:24.058" endtime="20211125 08:09:24.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:09:24.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:09:24.059" endtime="20211125 08:09:24.059"/>
</kw>
<status status="PASS" starttime="20211125 08:09:15.300" endtime="20211125 08:09:24.060"/>
</kw>
<msg timestamp="20211125 08:09:24.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:09:15.300" endtime="20211125 08:09:24.060"/>
</kw>
<msg timestamp="20211125 08:09:24.060" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211125 08:09:15.298" endtime="20211125 08:09:24.060"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:09:24.060" endtime="20211125 08:09:24.061"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:09:24.062" endtime="20211125 08:09:24.062"/>
</kw>
<status status="PASS" starttime="20211125 08:08:22.651" endtime="20211125 08:09:24.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 08:08:22.605" endtime="20211125 08:09:24.063"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:09:24.072" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:09:24.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:09:24.078" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:09:24.068" endtime="20211125 08:09:24.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:09:24.079" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:09:24.078" endtime="20211125 08:09:24.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:09:24.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:09:24.080" endtime="20211125 08:09:24.081"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.068" endtime="20211125 08:09:24.081"/>
</kw>
<msg timestamp="20211125 08:09:24.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:09:24.067" endtime="20211125 08:09:24.082"/>
</kw>
<msg timestamp="20211125 08:09:24.082" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:09:24.067" endtime="20211125 08:09:24.082"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:09:24.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:09:24.082" endtime="20211125 08:09:24.083"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:09:24.089" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:09:24.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:09:24.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:09:24.087" endtime="20211125 08:09:24.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:09:24.105" level="INFO"/>
<status status="PASS" starttime="20211125 08:09:24.104" endtime="20211125 08:09:24.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:09:24.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:09:24.106" endtime="20211125 08:09:24.107"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.086" endtime="20211125 08:09:24.108"/>
</kw>
<msg timestamp="20211125 08:09:24.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:09:24.086" endtime="20211125 08:09:24.109"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.084" endtime="20211125 08:09:24.109"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.084" endtime="20211125 08:09:24.109"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.066" endtime="20211125 08:09:24.109"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.065" endtime="20211125 08:09:24.109"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:09:24.115" level="INFO">Running command 'ozone sh key put o3://om:9862/13741-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:12:33.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:12:33.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:09:24.112" endtime="20211125 08:12:33.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:12:33.945" level="INFO"/>
<status status="PASS" starttime="20211125 08:12:33.943" endtime="20211125 08:12:33.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:12:33.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:12:33.945" endtime="20211125 08:12:33.946"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.112" endtime="20211125 08:12:33.947"/>
</kw>
<msg timestamp="20211125 08:12:33.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:09:24.111" endtime="20211125 08:12:33.947"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.110" endtime="20211125 08:12:33.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:12:33.953" level="INFO">Running command 'ozone sh key getacl o3://om:9862/13741-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:12:42.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:12:42.251" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211125 08:12:33.951" endtime="20211125 08:12:42.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:12:42.254" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:12:42.252" endtime="20211125 08:12:42.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:12:42.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:12:42.254" endtime="20211125 08:12:42.255"/>
</kw>
<status status="PASS" starttime="20211125 08:12:33.950" endtime="20211125 08:12:42.256"/>
</kw>
<msg timestamp="20211125 08:12:42.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:12:33.949" endtime="20211125 08:12:42.256"/>
</kw>
<msg timestamp="20211125 08:12:42.256" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211125 08:12:33.948" endtime="20211125 08:12:42.256"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:12:42.257" endtime="20211125 08:12:42.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:12:42.263" level="INFO">Running command 'ozone sh key addacl o3://om:9862/13741-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:12:50.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:12:50.115" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 08:12:42.259" endtime="20211125 08:12:50.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:12:50.118" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 08:12:50.116" endtime="20211125 08:12:50.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:12:50.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:12:50.118" endtime="20211125 08:12:50.120"/>
</kw>
<status status="PASS" starttime="20211125 08:12:42.258" endtime="20211125 08:12:50.121"/>
</kw>
<msg timestamp="20211125 08:12:50.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:12:42.258" endtime="20211125 08:12:50.121"/>
</kw>
<msg timestamp="20211125 08:12:50.122" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211125 08:12:42.257" endtime="20211125 08:12:50.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:12:50.128" level="INFO">Running command 'ozone sh key getacl o3://om:9862/13741-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:12:58.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:12:58.502" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211125 08:12:50.126" endtime="20211125 08:12:58.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:12:58.504" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:12:58.503" endtime="20211125 08:12:58.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:12:58.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:12:58.504" endtime="20211125 08:12:58.506"/>
</kw>
<status status="PASS" starttime="20211125 08:12:50.125" endtime="20211125 08:12:58.506"/>
</kw>
<msg timestamp="20211125 08:12:58.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:12:50.124" endtime="20211125 08:12:58.507"/>
</kw>
<msg timestamp="20211125 08:12:58.507" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211125 08:12:50.122" endtime="20211125 08:12:58.507"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:12:58.507" endtime="20211125 08:12:58.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:12:58.514" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/13741-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:04.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:04.149" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:12:58.511" endtime="20211125 08:13:04.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:04.153" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:13:04.149" endtime="20211125 08:13:04.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:04.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:04.153" endtime="20211125 08:13:04.155"/>
</kw>
<status status="PASS" starttime="20211125 08:12:58.511" endtime="20211125 08:13:04.156"/>
</kw>
<msg timestamp="20211125 08:13:04.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:12:58.511" endtime="20211125 08:13:04.156"/>
</kw>
<msg timestamp="20211125 08:13:04.157" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211125 08:12:58.509" endtime="20211125 08:13:04.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:04.179" level="INFO">Running command 'ozone sh key getacl o3://om:9862/13741-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:13.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:13.042" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211125 08:13:04.171" endtime="20211125 08:13:13.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:13.045" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:13:13.043" endtime="20211125 08:13:13.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:13.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:13.045" endtime="20211125 08:13:13.048"/>
</kw>
<status status="PASS" starttime="20211125 08:13:04.160" endtime="20211125 08:13:13.049"/>
</kw>
<msg timestamp="20211125 08:13:13.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:04.160" endtime="20211125 08:13:13.049"/>
</kw>
<msg timestamp="20211125 08:13:13.050" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211125 08:13:04.159" endtime="20211125 08:13:13.050"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:13:13.051" endtime="20211125 08:13:13.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:13.061" level="INFO">Running command 'ozone sh key setacl o3://om:9862/13741-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:21.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:21.087" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:13:13.057" endtime="20211125 08:13:21.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:21.088" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:13:21.087" endtime="20211125 08:13:21.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:21.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:21.088" endtime="20211125 08:13:21.089"/>
</kw>
<status status="PASS" starttime="20211125 08:13:13.055" endtime="20211125 08:13:21.090"/>
</kw>
<msg timestamp="20211125 08:13:21.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:13.054" endtime="20211125 08:13:21.090"/>
</kw>
<msg timestamp="20211125 08:13:21.090" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:13:13.052" endtime="20211125 08:13:21.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:21.095" level="INFO">Running command 'ozone sh key getacl o3://om:9862/13741-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:29.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:29.110" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211125 08:13:21.092" endtime="20211125 08:13:29.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:29.111" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:13:29.111" endtime="20211125 08:13:29.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:29.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:29.112" endtime="20211125 08:13:29.112"/>
</kw>
<status status="PASS" starttime="20211125 08:13:21.092" endtime="20211125 08:13:29.113"/>
</kw>
<msg timestamp="20211125 08:13:29.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:21.091" endtime="20211125 08:13:29.114"/>
</kw>
<msg timestamp="20211125 08:13:29.115" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211125 08:13:21.091" endtime="20211125 08:13:29.115"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:13:29.115" endtime="20211125 08:13:29.116"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:13:29.116" endtime="20211125 08:13:29.117"/>
</kw>
<status status="PASS" starttime="20211125 08:09:24.110" endtime="20211125 08:13:29.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 08:09:24.064" endtime="20211125 08:13:29.118"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:29.128" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:29.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:29.133" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:13:29.126" endtime="20211125 08:13:29.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:29.135" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:13:29.134" endtime="20211125 08:13:29.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:29.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:29.136" endtime="20211125 08:13:29.136"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.124" endtime="20211125 08:13:29.137"/>
</kw>
<msg timestamp="20211125 08:13:29.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:29.124" endtime="20211125 08:13:29.137"/>
</kw>
<msg timestamp="20211125 08:13:29.138" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:13:29.123" endtime="20211125 08:13:29.138"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:13:29.139" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:13:29.138" endtime="20211125 08:13:29.139"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:29.144" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:29.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:29.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:13:29.142" endtime="20211125 08:13:29.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:29.187" level="INFO"/>
<status status="PASS" starttime="20211125 08:13:29.186" endtime="20211125 08:13:29.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:29.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:29.188" endtime="20211125 08:13:29.189"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.141" endtime="20211125 08:13:29.189"/>
</kw>
<msg timestamp="20211125 08:13:29.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:29.141" endtime="20211125 08:13:29.189"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.140" endtime="20211125 08:13:29.189"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.139" endtime="20211125 08:13:29.189"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.122" endtime="20211125 08:13:29.190"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.121" endtime="20211125 08:13:29.190"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:29.196" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:35.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:35.078" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211125 08:13:29.192" endtime="20211125 08:13:35.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:35.079" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211125 08:13:35.078" endtime="20211125 08:13:35.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:35.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:35.079" endtime="20211125 08:13:35.080"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.192" endtime="20211125 08:13:35.081"/>
</kw>
<msg timestamp="20211125 08:13:35.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:29.191" endtime="20211125 08:13:35.081"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.191" endtime="20211125 08:13:35.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:35.088" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:42.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:42.975" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211125 08:13:35.083" endtime="20211125 08:13:42.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:42.976" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:13:42.976" endtime="20211125 08:13:42.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:42.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:42.977" endtime="20211125 08:13:42.977"/>
</kw>
<status status="PASS" starttime="20211125 08:13:35.083" endtime="20211125 08:13:42.978"/>
</kw>
<msg timestamp="20211125 08:13:42.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:35.082" endtime="20211125 08:13:42.978"/>
</kw>
<msg timestamp="20211125 08:13:42.978" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211125 08:13:35.081" endtime="20211125 08:13:42.978"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:13:42.978" endtime="20211125 08:13:42.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:42.986" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:50.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:50.988" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211125 08:13:42.982" endtime="20211125 08:13:50.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:50.989" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211125 08:13:50.988" endtime="20211125 08:13:50.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:50.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:50.989" endtime="20211125 08:13:50.991"/>
</kw>
<status status="PASS" starttime="20211125 08:13:42.982" endtime="20211125 08:13:50.992"/>
</kw>
<msg timestamp="20211125 08:13:50.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:42.981" endtime="20211125 08:13:50.992"/>
</kw>
<msg timestamp="20211125 08:13:50.993" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211125 08:13:42.980" endtime="20211125 08:13:50.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:51.000" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:13:58.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:13:58.604" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211125 08:13:50.997" endtime="20211125 08:13:58.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:13:58.606" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:13:58.605" endtime="20211125 08:13:58.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:13:58.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:13:58.606" endtime="20211125 08:13:58.607"/>
</kw>
<status status="PASS" starttime="20211125 08:13:50.996" endtime="20211125 08:13:58.607"/>
</kw>
<msg timestamp="20211125 08:13:58.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:50.995" endtime="20211125 08:13:58.607"/>
</kw>
<msg timestamp="20211125 08:13:58.608" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211125 08:13:50.993" endtime="20211125 08:13:58.608"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:13:58.608" endtime="20211125 08:13:58.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:13:58.614" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:14:06.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:14:06.232" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:13:58.611" endtime="20211125 08:14:06.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:14:06.234" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:14:06.233" endtime="20211125 08:14:06.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:14:06.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:14:06.234" endtime="20211125 08:14:06.235"/>
</kw>
<status status="PASS" starttime="20211125 08:13:58.610" endtime="20211125 08:14:06.235"/>
</kw>
<msg timestamp="20211125 08:14:06.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:13:58.610" endtime="20211125 08:14:06.235"/>
</kw>
<msg timestamp="20211125 08:14:06.236" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211125 08:13:58.609" endtime="20211125 08:14:06.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:14:06.244" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:14:14.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:14:14.791" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211125 08:14:06.240" endtime="20211125 08:14:14.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:14:14.792" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:14:14.791" endtime="20211125 08:14:14.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:14:14.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:14:14.793" endtime="20211125 08:14:14.793"/>
</kw>
<status status="PASS" starttime="20211125 08:14:06.239" endtime="20211125 08:14:14.794"/>
</kw>
<msg timestamp="20211125 08:14:14.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:14:06.238" endtime="20211125 08:14:14.797"/>
</kw>
<msg timestamp="20211125 08:14:14.797" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211125 08:14:06.236" endtime="20211125 08:14:14.797"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:14:14.797" endtime="20211125 08:14:14.798"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:14:14.798" endtime="20211125 08:14:14.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:14:14.805" level="INFO">Running command 'ozone sh key put o3://om:9862/13741-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:27.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:17:27.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:14:14.801" endtime="20211125 08:17:27.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:27.948" level="INFO"/>
<status status="PASS" starttime="20211125 08:17:27.947" endtime="20211125 08:17:27.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:17:27.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:17:27.950" endtime="20211125 08:17:27.951"/>
</kw>
<status status="PASS" starttime="20211125 08:14:14.800" endtime="20211125 08:17:27.952"/>
</kw>
<msg timestamp="20211125 08:17:27.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:14:14.800" endtime="20211125 08:17:27.953"/>
</kw>
<status status="PASS" starttime="20211125 08:14:14.799" endtime="20211125 08:17:27.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:27.961" level="INFO">Running command 'ozone sh key getacl o3://om:9862/13741-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:36.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:17:36.805" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:17:27.957" endtime="20211125 08:17:36.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:36.807" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211125 08:17:36.806" endtime="20211125 08:17:36.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:17:36.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:17:36.807" endtime="20211125 08:17:36.808"/>
</kw>
<status status="PASS" starttime="20211125 08:17:27.956" endtime="20211125 08:17:36.808"/>
</kw>
<msg timestamp="20211125 08:17:36.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:17:27.955" endtime="20211125 08:17:36.808"/>
</kw>
<msg timestamp="20211125 08:17:36.809" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211125 08:17:27.954" endtime="20211125 08:17:36.809"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:17:36.809" endtime="20211125 08:17:36.809"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211125 08:17:36.810" endtime="20211125 08:17:36.812"/>
</kw>
<status status="PASS" starttime="20211125 08:13:29.190" endtime="20211125 08:17:36.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211125 08:13:29.120" endtime="20211125 08:17:36.816"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:36.829" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:36.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:17:36.838" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:17:36.824" endtime="20211125 08:17:36.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:36.841" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:17:36.838" endtime="20211125 08:17:36.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:17:36.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:17:36.842" endtime="20211125 08:17:36.842"/>
</kw>
<status status="PASS" starttime="20211125 08:17:36.823" endtime="20211125 08:17:36.843"/>
</kw>
<msg timestamp="20211125 08:17:36.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:17:36.822" endtime="20211125 08:17:36.843"/>
</kw>
<msg timestamp="20211125 08:17:36.843" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:17:36.822" endtime="20211125 08:17:36.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:17:36.844" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:17:36.844" endtime="20211125 08:17:36.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:36.853" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:36.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:17:36.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:17:36.848" endtime="20211125 08:17:36.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:36.874" level="INFO"/>
<status status="PASS" starttime="20211125 08:17:36.873" endtime="20211125 08:17:36.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:17:36.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:17:36.874" endtime="20211125 08:17:36.876"/>
</kw>
<status status="PASS" starttime="20211125 08:17:36.847" endtime="20211125 08:17:36.877"/>
</kw>
<msg timestamp="20211125 08:17:36.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:17:36.847" endtime="20211125 08:17:36.878"/>
</kw>
<status status="PASS" starttime="20211125 08:17:36.846" endtime="20211125 08:17:36.878"/>
</kw>
<status status="PASS" starttime="20211125 08:17:36.846" endtime="20211125 08:17:36.879"/>
</kw>
<status status="PASS" starttime="20211125 08:17:36.820" endtime="20211125 08:17:36.879"/>
</kw>
<status status="PASS" starttime="20211125 08:17:36.820" endtime="20211125 08:17:36.879"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:36.888" level="INFO">Running command 'ozone sh volume info o3:///13741-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:45.699" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 08:17:45.699" level="INFO">${output} = VOLUME_NOT_FOUND Volume 13741-rpcwport is not found</msg>
<status status="PASS" starttime="20211125 08:17:36.884" endtime="20211125 08:17:45.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:45.703" level="INFO">VOLUME_NOT_FOUND Volume 13741-rpcwport is not found</msg>
<status status="PASS" starttime="20211125 08:17:45.701" endtime="20211125 08:17:45.703"/>
</kw>
<msg timestamp="20211125 08:17:45.704" level="INFO">${result} = VOLUME_NOT_FOUND Volume 13741-rpcwport is not found</msg>
<status status="PASS" starttime="20211125 08:17:36.883" endtime="20211125 08:17:45.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:17:45.705" endtime="20211125 08:17:45.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:45.729" level="INFO">Running command 'ozone sh volume create o3:///13741-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:52.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:17:52.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:17:45.719" endtime="20211125 08:17:52.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:52.635" level="INFO"/>
<status status="PASS" starttime="20211125 08:17:52.634" endtime="20211125 08:17:52.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:17:52.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:17:52.635" endtime="20211125 08:17:52.636"/>
</kw>
<status status="PASS" starttime="20211125 08:17:45.718" endtime="20211125 08:17:52.636"/>
</kw>
<msg timestamp="20211125 08:17:52.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:17:45.718" endtime="20211125 08:17:52.636"/>
</kw>
<msg timestamp="20211125 08:17:52.637" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211125 08:17:45.707" endtime="20211125 08:17:52.637"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:17:52.637" endtime="20211125 08:17:52.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:52.642" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="13741-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:17:59.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:17:59.382" level="INFO">${output} = {
  "metadata": {},
  "name": "13741-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 08:17:52.639" endtime="20211125 08:17:59.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:17:59.384" level="INFO">{
  "metadata": {},
  "name": "13741-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T08:17:52.518Z",
  "modificationTime": "2021-11-25T08:17:52.518Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 08:17:59.383" endtime="20211125 08:17:59.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:17:59.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:17:59.384" endtime="20211125 08:17:59.385"/>
</kw>
<status status="PASS" starttime="20211125 08:17:52.639" endtime="20211125 08:17:59.386"/>
</kw>
<msg timestamp="20211125 08:17:59.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:17:52.639" endtime="20211125 08:17:59.386"/>
</kw>
<msg timestamp="20211125 08:17:59.386" level="INFO">${result} = {
  "metadata": {},
  "name": "13741-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 08:17:52.637" endtime="20211125 08:17:59.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:17:59.386" endtime="20211125 08:17:59.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:17:59.392" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="13741-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:07.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:07.873" level="INFO">${output} = {
  "metadata": {},
  "name": "13741-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 08:17:59.390" endtime="20211125 08:18:07.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:07.876" level="INFO">{
  "metadata": {},
  "name": "13741-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T08:17:52.518Z",
  "modificationTime": "2021-11-25T08:17:52.518Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 08:18:07.874" endtime="20211125 08:18:07.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:07.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:07.876" endtime="20211125 08:18:07.880"/>
</kw>
<status status="PASS" starttime="20211125 08:17:59.389" endtime="20211125 08:18:07.881"/>
</kw>
<msg timestamp="20211125 08:18:07.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:17:59.388" endtime="20211125 08:18:07.881"/>
</kw>
<msg timestamp="20211125 08:18:07.882" level="INFO">${result} = {
  "metadata": {},
  "name": "13741-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211125 08:17:59.387" endtime="20211125 08:18:07.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:18:07.882" endtime="20211125 08:18:07.883"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:07.889" level="INFO">Running command 'ozone sh volume setquota o3:///13741-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:15.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:15.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:18:07.887" endtime="20211125 08:18:15.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:15.433" level="INFO"/>
<status status="PASS" starttime="20211125 08:18:15.432" endtime="20211125 08:18:15.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:15.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:15.434" endtime="20211125 08:18:15.434"/>
</kw>
<status status="PASS" starttime="20211125 08:18:07.885" endtime="20211125 08:18:15.435"/>
</kw>
<msg timestamp="20211125 08:18:15.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:07.885" endtime="20211125 08:18:15.435"/>
</kw>
<status status="PASS" starttime="20211125 08:18:07.883" endtime="20211125 08:18:15.435"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:15.441" level="INFO">Running command 'ozone sh volume info o3:///13741-rpcwport | jq -r '. | select(.name=="13741-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:25.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:25.353" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:18:15.438" endtime="20211125 08:18:25.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:25.355" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 08:18:25.354" endtime="20211125 08:18:25.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:25.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:25.355" endtime="20211125 08:18:25.356"/>
</kw>
<status status="PASS" starttime="20211125 08:18:15.437" endtime="20211125 08:18:25.357"/>
</kw>
<msg timestamp="20211125 08:18:25.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:15.437" endtime="20211125 08:18:25.357"/>
</kw>
<msg timestamp="20211125 08:18:25.358" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:18:15.436" endtime="20211125 08:18:25.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:18:25.358" endtime="20211125 08:18:25.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:25.365" level="INFO">Running command 'ozone sh bucket create o3:///13741-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:32.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:32.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:18:25.362" endtime="20211125 08:18:32.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:32.965" level="INFO"/>
<status status="PASS" starttime="20211125 08:18:32.963" endtime="20211125 08:18:32.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:32.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:32.966" endtime="20211125 08:18:32.967"/>
</kw>
<status status="PASS" starttime="20211125 08:18:25.361" endtime="20211125 08:18:32.967"/>
</kw>
<msg timestamp="20211125 08:18:32.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:25.361" endtime="20211125 08:18:32.968"/>
</kw>
<status status="PASS" starttime="20211125 08:18:25.359" endtime="20211125 08:18:32.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:32.975" level="INFO">Running command 'ozone sh bucket info o3:///13741-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:41.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:41.134" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211125 08:18:32.972" endtime="20211125 08:18:41.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:41.136" level="INFO">DISK</msg>
<status status="PASS" starttime="20211125 08:18:41.134" endtime="20211125 08:18:41.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:41.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:41.136" endtime="20211125 08:18:41.137"/>
</kw>
<status status="PASS" starttime="20211125 08:18:32.971" endtime="20211125 08:18:41.137"/>
</kw>
<msg timestamp="20211125 08:18:41.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:32.971" endtime="20211125 08:18:41.138"/>
</kw>
<msg timestamp="20211125 08:18:41.138" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211125 08:18:32.968" endtime="20211125 08:18:41.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:18:41.138" endtime="20211125 08:18:41.139"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:41.145" level="INFO">Running command 'ozone sh bucket info o3:///13741-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:49.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:49.726" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:18:41.142" endtime="20211125 08:18:49.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:49.731" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 08:18:49.726" endtime="20211125 08:18:49.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:49.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:49.731" endtime="20211125 08:18:49.732"/>
</kw>
<status status="PASS" starttime="20211125 08:18:41.141" endtime="20211125 08:18:49.733"/>
</kw>
<msg timestamp="20211125 08:18:49.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:41.140" endtime="20211125 08:18:49.733"/>
</kw>
<msg timestamp="20211125 08:18:49.734" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:18:41.139" endtime="20211125 08:18:49.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:18:49.734" endtime="20211125 08:18:49.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:49.741" level="INFO">Running command 'ozone sh bucket info o3:///13741-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:18:58.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:18:58.244" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211125 08:18:49.738" endtime="20211125 08:18:58.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:18:58.247" level="INFO">100</msg>
<status status="PASS" starttime="20211125 08:18:58.245" endtime="20211125 08:18:58.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:18:58.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:18:58.248" endtime="20211125 08:18:58.249"/>
</kw>
<status status="PASS" starttime="20211125 08:18:49.737" endtime="20211125 08:18:58.250"/>
</kw>
<msg timestamp="20211125 08:18:58.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:49.737" endtime="20211125 08:18:58.250"/>
</kw>
<msg timestamp="20211125 08:18:58.251" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211125 08:18:49.735" endtime="20211125 08:18:58.251"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:18:58.251" endtime="20211125 08:18:58.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:18:58.258" level="INFO">Running command 'ozone sh bucket setquota o3:///13741-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:19:06.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:19:06.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:18:58.256" endtime="20211125 08:19:06.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:19:06.189" level="INFO"/>
<status status="PASS" starttime="20211125 08:19:06.188" endtime="20211125 08:19:06.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:19:06.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:19:06.189" endtime="20211125 08:19:06.190"/>
</kw>
<status status="PASS" starttime="20211125 08:18:58.254" endtime="20211125 08:19:06.191"/>
</kw>
<msg timestamp="20211125 08:19:06.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:18:58.254" endtime="20211125 08:19:06.191"/>
</kw>
<status status="PASS" starttime="20211125 08:18:58.252" endtime="20211125 08:19:06.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:19:06.198" level="INFO">Running command 'ozone sh bucket info o3:///13741-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:19:14.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:19:14.516" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211125 08:19:06.194" endtime="20211125 08:19:14.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:19:14.519" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211125 08:19:14.518" endtime="20211125 08:19:14.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:19:14.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:19:14.519" endtime="20211125 08:19:14.521"/>
</kw>
<status status="PASS" starttime="20211125 08:19:06.194" endtime="20211125 08:19:14.522"/>
</kw>
<msg timestamp="20211125 08:19:14.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:19:06.193" endtime="20211125 08:19:14.523"/>
</kw>
<msg timestamp="20211125 08:19:14.523" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211125 08:19:06.192" endtime="20211125 08:19:14.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:19:14.524" endtime="20211125 08:19:14.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:19:14.532" level="INFO">Running command 'ozone sh bucket info o3:///13741-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:19:23.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:19:23.266" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211125 08:19:14.529" endtime="20211125 08:19:23.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:19:23.268" level="INFO">1000</msg>
<status status="PASS" starttime="20211125 08:19:23.267" endtime="20211125 08:19:23.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:19:23.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:19:23.269" endtime="20211125 08:19:23.270"/>
</kw>
<status status="PASS" starttime="20211125 08:19:14.528" endtime="20211125 08:19:23.270"/>
</kw>
<msg timestamp="20211125 08:19:23.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:19:14.528" endtime="20211125 08:19:23.271"/>
</kw>
<msg timestamp="20211125 08:19:23.271" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211125 08:19:14.525" endtime="20211125 08:19:23.272"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:19:23.272" endtime="20211125 08:19:23.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:19:23.281" level="INFO">Running command 'ozone sh bucket list o3:///13741-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:19:31.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:19:31.727" level="INFO">${output} = 13741-rpcwport</msg>
<status status="PASS" starttime="20211125 08:19:23.278" endtime="20211125 08:19:31.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:19:31.729" level="INFO">13741-rpcwport</msg>
<status status="PASS" starttime="20211125 08:19:31.728" endtime="20211125 08:19:31.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:19:31.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:19:31.729" endtime="20211125 08:19:31.730"/>
</kw>
<status status="PASS" starttime="20211125 08:19:23.276" endtime="20211125 08:19:31.731"/>
</kw>
<msg timestamp="20211125 08:19:31.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:19:23.275" endtime="20211125 08:19:31.731"/>
</kw>
<msg timestamp="20211125 08:19:31.731" level="INFO">${result} = 13741-rpcwport</msg>
<status status="PASS" starttime="20211125 08:19:23.273" endtime="20211125 08:19:31.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:19:31.732" endtime="20211125 08:19:31.732"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:19:31.742" level="INFO">Running command 'ozone sh key put o3:///13741-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:22:36.820" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 08:19:31.738" endtime="20211125 08:22:36.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.820" endtime="20211125 08:22:36.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.821" endtime="20211125 08:22:36.821"/>
</kw>
<status status="FAIL" starttime="20211125 08:19:31.735" endtime="20211125 08:22:36.821"/>
</kw>
<msg timestamp="20211125 08:22:36.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 08:19:31.735" endtime="20211125 08:22:36.822"/>
</kw>
<status status="FAIL" starttime="20211125 08:19:31.734" endtime="20211125 08:22:36.822"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.822" endtime="20211125 08:22:36.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.822" endtime="20211125 08:22:36.823"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.823" endtime="20211125 08:22:36.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.823" endtime="20211125 08:22:36.823"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.823" endtime="20211125 08:22:36.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.823" endtime="20211125 08:22:36.823"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.823" endtime="20211125 08:22:36.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.824" endtime="20211125 08:22:36.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.824" endtime="20211125 08:22:36.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.824" endtime="20211125 08:22:36.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.825" endtime="20211125 08:22:36.825"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.825" endtime="20211125 08:22:36.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.825" endtime="20211125 08:22:36.825"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.825" endtime="20211125 08:22:36.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.825" endtime="20211125 08:22:36.825"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.826" endtime="20211125 08:22:36.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.826" endtime="20211125 08:22:36.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.826" endtime="20211125 08:22:36.826"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.826" endtime="20211125 08:22:36.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.827" endtime="20211125 08:22:36.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.827" endtime="20211125 08:22:36.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.827" endtime="20211125 08:22:36.827"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.827" endtime="20211125 08:22:36.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.827" endtime="20211125 08:22:36.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.828" endtime="20211125 08:22:36.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.828" endtime="20211125 08:22:36.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.828" endtime="20211125 08:22:36.828"/>
</kw>
<status status="FAIL" starttime="20211125 08:19:31.733" endtime="20211125 08:22:36.828"/>
</kw>
<status status="FAIL" starttime="20211125 08:19:31.732" endtime="20211125 08:22:36.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.829" endtime="20211125 08:22:36.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.829" endtime="20211125 08:22:36.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.829" endtime="20211125 08:22:36.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.830" endtime="20211125 08:22:36.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.830" endtime="20211125 08:22:36.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.830" endtime="20211125 08:22:36.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.830" endtime="20211125 08:22:36.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.831" endtime="20211125 08:22:36.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.831" endtime="20211125 08:22:36.831"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.831" endtime="20211125 08:22:36.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.831" endtime="20211125 08:22:36.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.831" endtime="20211125 08:22:36.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.832" endtime="20211125 08:22:36.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.832" endtime="20211125 08:22:36.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.832" endtime="20211125 08:22:36.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.833" endtime="20211125 08:22:36.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.833" endtime="20211125 08:22:36.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.833" endtime="20211125 08:22:36.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.833" endtime="20211125 08:22:36.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.833" endtime="20211125 08:22:36.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.834" endtime="20211125 08:22:36.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.834" endtime="20211125 08:22:36.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.834" endtime="20211125 08:22:36.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:22:36.834" endtime="20211125 08:22:36.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.834" endtime="20211125 08:22:36.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:22:36.835" endtime="20211125 08:22:36.835"/>
</kw>
<status status="FAIL" starttime="20211125 08:17:36.880" endtime="20211125 08:22:36.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211125 08:17:36.818" endtime="20211125 08:22:36.835">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:22:36.841" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:22:36.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:22:36.846" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 08:22:36.839" endtime="20211125 08:22:36.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:22:36.847" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 08:22:36.846" endtime="20211125 08:22:36.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:22:36.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:22:36.847" endtime="20211125 08:22:36.848"/>
</kw>
<status status="PASS" starttime="20211125 08:22:36.838" endtime="20211125 08:22:36.848"/>
</kw>
<msg timestamp="20211125 08:22:36.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:22:36.838" endtime="20211125 08:22:36.848"/>
</kw>
<msg timestamp="20211125 08:22:36.849" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 08:22:36.838" endtime="20211125 08:22:36.849"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 08:22:36.849" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 08:22:36.849" endtime="20211125 08:22:36.850"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:22:36.855" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:22:36.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:22:36.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:22:36.852" endtime="20211125 08:22:36.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:22:36.921" level="INFO"/>
<status status="PASS" starttime="20211125 08:22:36.915" endtime="20211125 08:22:36.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:22:36.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:22:36.921" endtime="20211125 08:22:36.922"/>
</kw>
<status status="PASS" starttime="20211125 08:22:36.851" endtime="20211125 08:22:36.922"/>
</kw>
<msg timestamp="20211125 08:22:36.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:22:36.851" endtime="20211125 08:22:36.923"/>
</kw>
<status status="PASS" starttime="20211125 08:22:36.850" endtime="20211125 08:22:36.923"/>
</kw>
<status status="PASS" starttime="20211125 08:22:36.850" endtime="20211125 08:22:36.923"/>
</kw>
<status status="PASS" starttime="20211125 08:22:36.837" endtime="20211125 08:22:36.923"/>
</kw>
<status status="PASS" starttime="20211125 08:22:36.836" endtime="20211125 08:22:36.924"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:22:36.929" level="INFO">Running command 'ozone sh volume info /13741-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:22:43.233" level="INFO">${rc} = 255</msg>
<msg timestamp="20211125 08:22:43.233" level="INFO">${output} = VOLUME_NOT_FOUND Volume 13741-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211125 08:22:36.927" endtime="20211125 08:22:43.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:22:43.235" level="INFO">VOLUME_NOT_FOUND Volume 13741-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211125 08:22:43.234" endtime="20211125 08:22:43.235"/>
</kw>
<msg timestamp="20211125 08:22:43.235" level="INFO">${result} = VOLUME_NOT_FOUND Volume 13741-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211125 08:22:36.926" endtime="20211125 08:22:43.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:22:43.236" endtime="20211125 08:22:43.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:22:43.241" level="INFO">Running command 'ozone sh volume create /13741-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:22:51.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:22:51.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:22:43.239" endtime="20211125 08:22:51.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:22:51.190" level="INFO"/>
<status status="PASS" starttime="20211125 08:22:51.189" endtime="20211125 08:22:51.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:22:51.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:22:51.190" endtime="20211125 08:22:51.191"/>
</kw>
<status status="PASS" starttime="20211125 08:22:43.238" endtime="20211125 08:22:51.191"/>
</kw>
<msg timestamp="20211125 08:22:51.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:22:43.237" endtime="20211125 08:22:51.191"/>
</kw>
<msg timestamp="20211125 08:22:51.192" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211125 08:22:43.236" endtime="20211125 08:22:51.192"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:22:51.192" endtime="20211125 08:22:51.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:22:51.199" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="13741-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:22:59.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:22:59.241" level="INFO">${output} = {
  "metadata": {},
  "name": "13741-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211125 08:22:51.195" endtime="20211125 08:22:59.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:22:59.244" level="INFO">{
  "metadata": {},
  "name": "13741-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T08:22:50.907Z",
  "modificationTime": "2021-11-25T08:22:50.907Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 08:22:59.242" endtime="20211125 08:22:59.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:22:59.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:22:59.244" endtime="20211125 08:22:59.246"/>
</kw>
<status status="PASS" starttime="20211125 08:22:51.194" endtime="20211125 08:22:59.246"/>
</kw>
<msg timestamp="20211125 08:22:59.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:22:51.194" endtime="20211125 08:22:59.247"/>
</kw>
<msg timestamp="20211125 08:22:59.248" level="INFO">${result} = {
  "metadata": {},
  "name": "13741-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211125 08:22:51.193" endtime="20211125 08:22:59.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:22:59.249" endtime="20211125 08:22:59.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:22:59.256" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="13741-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:07.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:07.578" level="INFO">${output} = {
  "metadata": {},
  "name": "13741-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211125 08:22:59.253" endtime="20211125 08:23:07.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:07.580" level="INFO">{
  "metadata": {},
  "name": "13741-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-25T08:22:50.907Z",
  "modificationTime": "2021-11-25T08:22:50.907Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211125 08:23:07.579" endtime="20211125 08:23:07.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:07.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:07.580" endtime="20211125 08:23:07.582"/>
</kw>
<status status="PASS" starttime="20211125 08:22:59.252" endtime="20211125 08:23:07.583"/>
</kw>
<msg timestamp="20211125 08:23:07.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:22:59.251" endtime="20211125 08:23:07.583"/>
</kw>
<msg timestamp="20211125 08:23:07.584" level="INFO">${result} = {
  "metadata": {},
  "name": "13741-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211125 08:22:59.250" endtime="20211125 08:23:07.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211125 08:23:07.584" endtime="20211125 08:23:07.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:07.591" level="INFO">Running command 'ozone sh volume setquota /13741-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:13.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:13.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:23:07.588" endtime="20211125 08:23:13.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:13.989" level="INFO"/>
<status status="PASS" starttime="20211125 08:23:13.988" endtime="20211125 08:23:13.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:13.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:13.989" endtime="20211125 08:23:13.990"/>
</kw>
<status status="PASS" starttime="20211125 08:23:07.588" endtime="20211125 08:23:13.990"/>
</kw>
<msg timestamp="20211125 08:23:13.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:07.587" endtime="20211125 08:23:13.990"/>
</kw>
<status status="PASS" starttime="20211125 08:23:07.585" endtime="20211125 08:23:13.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:14.001" level="INFO">Running command 'ozone sh volume info /13741-rpcwoscheme | jq -r '. | select(.name=="13741-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:21.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:21.841" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:23:13.998" endtime="20211125 08:23:21.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:21.842" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 08:23:21.841" endtime="20211125 08:23:21.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:21.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:21.842" endtime="20211125 08:23:21.843"/>
</kw>
<status status="PASS" starttime="20211125 08:23:13.997" endtime="20211125 08:23:21.844"/>
</kw>
<msg timestamp="20211125 08:23:21.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:13.992" endtime="20211125 08:23:21.844"/>
</kw>
<msg timestamp="20211125 08:23:21.845" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:23:13.991" endtime="20211125 08:23:21.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:23:21.845" endtime="20211125 08:23:21.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:21.850" level="INFO">Running command 'ozone sh bucket create /13741-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:29.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:29.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:23:21.847" endtime="20211125 08:23:29.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:29.891" level="INFO"/>
<status status="PASS" starttime="20211125 08:23:29.890" endtime="20211125 08:23:29.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:29.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:29.891" endtime="20211125 08:23:29.892"/>
</kw>
<status status="PASS" starttime="20211125 08:23:21.847" endtime="20211125 08:23:29.892"/>
</kw>
<msg timestamp="20211125 08:23:29.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:21.847" endtime="20211125 08:23:29.893"/>
</kw>
<status status="PASS" starttime="20211125 08:23:21.846" endtime="20211125 08:23:29.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:29.900" level="INFO">Running command 'ozone sh bucket info /13741-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:36.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:36.150" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211125 08:23:29.896" endtime="20211125 08:23:36.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:36.152" level="INFO">DISK</msg>
<status status="PASS" starttime="20211125 08:23:36.151" endtime="20211125 08:23:36.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:36.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:36.152" endtime="20211125 08:23:36.153"/>
</kw>
<status status="PASS" starttime="20211125 08:23:29.895" endtime="20211125 08:23:36.153"/>
</kw>
<msg timestamp="20211125 08:23:36.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:29.895" endtime="20211125 08:23:36.153"/>
</kw>
<msg timestamp="20211125 08:23:36.153" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211125 08:23:29.893" endtime="20211125 08:23:36.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:23:36.154" endtime="20211125 08:23:36.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:36.160" level="INFO">Running command 'ozone sh bucket info /13741-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:44.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:44.320" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:23:36.157" endtime="20211125 08:23:44.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:44.321" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211125 08:23:44.320" endtime="20211125 08:23:44.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:44.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:44.322" endtime="20211125 08:23:44.323"/>
</kw>
<status status="PASS" starttime="20211125 08:23:36.156" endtime="20211125 08:23:44.324"/>
</kw>
<msg timestamp="20211125 08:23:44.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:36.156" endtime="20211125 08:23:44.324"/>
</kw>
<msg timestamp="20211125 08:23:44.325" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211125 08:23:36.154" endtime="20211125 08:23:44.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:23:44.326" endtime="20211125 08:23:44.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:44.336" level="INFO">Running command 'ozone sh bucket info /13741-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:52.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:52.404" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211125 08:23:44.332" endtime="20211125 08:23:52.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:52.405" level="INFO">100</msg>
<status status="PASS" starttime="20211125 08:23:52.404" endtime="20211125 08:23:52.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:52.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:52.406" endtime="20211125 08:23:52.407"/>
</kw>
<status status="PASS" starttime="20211125 08:23:44.331" endtime="20211125 08:23:52.407"/>
</kw>
<msg timestamp="20211125 08:23:52.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:44.330" endtime="20211125 08:23:52.408"/>
</kw>
<msg timestamp="20211125 08:23:52.408" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211125 08:23:44.327" endtime="20211125 08:23:52.408"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:23:52.408" endtime="20211125 08:23:52.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:52.417" level="INFO">Running command 'ozone sh bucket setquota /13741-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:23:58.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:23:58.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:23:52.411" endtime="20211125 08:23:58.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:23:58.285" level="INFO"/>
<status status="PASS" starttime="20211125 08:23:58.284" endtime="20211125 08:23:58.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:23:58.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:23:58.285" endtime="20211125 08:23:58.286"/>
</kw>
<status status="PASS" starttime="20211125 08:23:52.410" endtime="20211125 08:23:58.286"/>
</kw>
<msg timestamp="20211125 08:23:58.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:52.410" endtime="20211125 08:23:58.286"/>
</kw>
<status status="PASS" starttime="20211125 08:23:52.409" endtime="20211125 08:23:58.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:23:58.293" level="INFO">Running command 'ozone sh bucket info /13741-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:24:07.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:24:07.037" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211125 08:23:58.289" endtime="20211125 08:24:07.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:24:07.039" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211125 08:24:07.038" endtime="20211125 08:24:07.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:24:07.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:24:07.039" endtime="20211125 08:24:07.040"/>
</kw>
<status status="PASS" starttime="20211125 08:23:58.288" endtime="20211125 08:24:07.040"/>
</kw>
<msg timestamp="20211125 08:24:07.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:23:58.288" endtime="20211125 08:24:07.040"/>
</kw>
<msg timestamp="20211125 08:24:07.041" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211125 08:23:58.287" endtime="20211125 08:24:07.041"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:24:07.041" endtime="20211125 08:24:07.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:24:07.050" level="INFO">Running command 'ozone sh bucket info /13741-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:24:15.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:24:15.617" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211125 08:24:07.044" endtime="20211125 08:24:15.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:24:15.618" level="INFO">1000</msg>
<status status="PASS" starttime="20211125 08:24:15.617" endtime="20211125 08:24:15.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:24:15.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:24:15.619" endtime="20211125 08:24:15.620"/>
</kw>
<status status="PASS" starttime="20211125 08:24:07.044" endtime="20211125 08:24:15.621"/>
</kw>
<msg timestamp="20211125 08:24:15.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:24:07.043" endtime="20211125 08:24:15.621"/>
</kw>
<msg timestamp="20211125 08:24:15.622" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211125 08:24:07.042" endtime="20211125 08:24:15.622"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:24:15.622" endtime="20211125 08:24:15.623"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:24:15.633" level="INFO">Running command 'ozone sh bucket list /13741-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:24:23.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:24:23.147" level="INFO">${output} = 13741-rpcwoscheme</msg>
<status status="PASS" starttime="20211125 08:24:15.630" endtime="20211125 08:24:23.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:24:23.149" level="INFO">13741-rpcwoscheme</msg>
<status status="PASS" starttime="20211125 08:24:23.148" endtime="20211125 08:24:23.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:24:23.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:24:23.150" endtime="20211125 08:24:23.151"/>
</kw>
<status status="PASS" starttime="20211125 08:24:15.626" endtime="20211125 08:24:23.152"/>
</kw>
<msg timestamp="20211125 08:24:23.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:24:15.626" endtime="20211125 08:24:23.153"/>
</kw>
<msg timestamp="20211125 08:24:23.153" level="INFO">${result} = 13741-rpcwoscheme</msg>
<status status="PASS" starttime="20211125 08:24:15.623" endtime="20211125 08:24:23.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211125 08:24:23.154" endtime="20211125 08:24:23.156"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:24:23.163" level="INFO">Running command 'ozone sh key put /13741-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:27:34.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:27:34.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:24:23.160" endtime="20211125 08:27:34.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:27:34.945" level="INFO"/>
<status status="PASS" starttime="20211125 08:27:34.944" endtime="20211125 08:27:34.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:27:34.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:27:34.946" endtime="20211125 08:27:34.946"/>
</kw>
<status status="PASS" starttime="20211125 08:24:23.159" endtime="20211125 08:27:34.947"/>
</kw>
<msg timestamp="20211125 08:27:34.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:24:23.159" endtime="20211125 08:27:34.947"/>
</kw>
<status status="PASS" starttime="20211125 08:24:23.158" endtime="20211125 08:27:34.947"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:27:34.953" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:27:34.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 08:27:34.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 08:27:34.950" endtime="20211125 08:27:34.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 08:27:34.958" level="INFO"/>
<status status="PASS" starttime="20211125 08:27:34.958" endtime="20211125 08:27:34.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 08:27:34.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 08:27:34.959" endtime="20211125 08:27:34.960"/>
</kw>
<status status="PASS" starttime="20211125 08:27:34.949" endtime="20211125 08:27:34.960"/>
</kw>
<msg timestamp="20211125 08:27:34.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 08:27:34.948" endtime="20211125 08:27:34.960"/>
</kw>
<status status="PASS" starttime="20211125 08:27:34.947" endtime="20211125 08:27:34.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 08:27:34.966" level="INFO">Running command 'ozone sh key get /13741-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 08:27:36.837" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211125 08:27:34.964" endtime="20211125 08:27:36.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.838" endtime="20211125 08:27:36.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.839" endtime="20211125 08:27:36.839"/>
</kw>
<status status="FAIL" starttime="20211125 08:27:34.962" endtime="20211125 08:27:36.839"/>
</kw>
<msg timestamp="20211125 08:27:36.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211125 08:27:34.962" endtime="20211125 08:27:36.840"/>
</kw>
<status status="FAIL" starttime="20211125 08:27:34.961" endtime="20211125 08:27:36.841"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.842" endtime="20211125 08:27:36.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.842" endtime="20211125 08:27:36.842"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.843" endtime="20211125 08:27:36.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.844" endtime="20211125 08:27:36.844"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.844" endtime="20211125 08:27:36.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.844" endtime="20211125 08:27:36.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.844" endtime="20211125 08:27:36.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.845" endtime="20211125 08:27:36.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.846" endtime="20211125 08:27:36.846"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.846" endtime="20211125 08:27:36.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.849" endtime="20211125 08:27:36.849"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.849" endtime="20211125 08:27:36.851"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.851" endtime="20211125 08:27:36.851"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.851" endtime="20211125 08:27:36.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.853" endtime="20211125 08:27:36.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.854" endtime="20211125 08:27:36.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.855" endtime="20211125 08:27:36.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.856" endtime="20211125 08:27:36.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.857" endtime="20211125 08:27:36.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.858" endtime="20211125 08:27:36.858"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.862" endtime="20211125 08:27:36.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.864" endtime="20211125 08:27:36.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.865" endtime="20211125 08:27:36.865"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.866" endtime="20211125 08:27:36.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.867" endtime="20211125 08:27:36.867"/>
</kw>
<status status="FAIL" starttime="20211125 08:24:23.157" endtime="20211125 08:27:36.870"/>
</kw>
<status status="FAIL" starttime="20211125 08:24:23.156" endtime="20211125 08:27:36.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.870" endtime="20211125 08:27:36.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.872" endtime="20211125 08:27:36.872"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.872" endtime="20211125 08:27:36.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.876" endtime="20211125 08:27:36.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.877" endtime="20211125 08:27:36.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.878" endtime="20211125 08:27:36.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.881" endtime="20211125 08:27:36.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.881" endtime="20211125 08:27:36.883"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.884" endtime="20211125 08:27:36.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.885" endtime="20211125 08:27:36.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.887" endtime="20211125 08:27:36.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.888" endtime="20211125 08:27:36.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.888" endtime="20211125 08:27:36.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.891" endtime="20211125 08:27:36.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.891" endtime="20211125 08:27:36.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.894" endtime="20211125 08:27:36.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.895" endtime="20211125 08:27:36.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.895" endtime="20211125 08:27:36.895"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.897" endtime="20211125 08:27:36.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.897" endtime="20211125 08:27:36.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.900" endtime="20211125 08:27:36.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.900" endtime="20211125 08:27:36.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.902" endtime="20211125 08:27:36.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211125 08:27:36.903" endtime="20211125 08:27:36.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.904" endtime="20211125 08:27:36.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211125 08:27:36.905" endtime="20211125 08:27:36.906"/>
</kw>
<status status="FAIL" starttime="20211125 08:22:36.924" endtime="20211125 08:27:36.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211125 08:22:36.836" endtime="20211125 08:27:36.908">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211125 08:02:20.464" endtime="20211125 08:27:36.918"/>
</suite>
<status status="FAIL" starttime="20211125 07:37:37.690" endtime="20211125 08:27:36.955"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:32.377" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:32.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:32.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211125 07:37:32.372" endtime="20211125 07:37:32.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:32.383" level="INFO">scm</msg>
<status status="PASS" starttime="20211125 07:37:32.382" endtime="20211125 07:37:32.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:32.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:32.384" endtime="20211125 07:37:32.384"/>
</kw>
<status status="PASS" starttime="20211125 07:37:32.372" endtime="20211125 07:37:32.385"/>
</kw>
<msg timestamp="20211125 07:37:32.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:32.371" endtime="20211125 07:37:32.385"/>
</kw>
<msg timestamp="20211125 07:37:32.385" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211125 07:37:32.371" endtime="20211125 07:37:32.385"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211125 07:37:32.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211125 07:37:32.385" endtime="20211125 07:37:32.386"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211125 07:37:32.390" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211125 07:37:32.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211125 07:37:32.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211125 07:37:32.388" endtime="20211125 07:37:32.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211125 07:37:32.400" level="INFO"/>
<status status="PASS" starttime="20211125 07:37:32.399" endtime="20211125 07:37:32.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211125 07:37:32.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211125 07:37:32.400" endtime="20211125 07:37:32.400"/>
</kw>
<status status="PASS" starttime="20211125 07:37:32.388" endtime="20211125 07:37:32.401"/>
</kw>
<msg timestamp="20211125 07:37:32.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211125 07:37:32.387" endtime="20211125 07:37:32.401"/>
</kw>
<status status="PASS" starttime="20211125 07:37:32.387" endtime="20211125 07:37:32.402"/>
</kw>
<status status="PASS" starttime="20211125 07:37:32.386" endtime="20211125 07:37:32.402"/>
</kw>
<status status="PASS" starttime="20211125 07:37:32.370" endtime="20211125 07:37:32.402"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211125 07:37:32.369" endtime="20211125 07:37:32.402"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211125 07:37:32.307" endtime="20211125 07:37:32.403"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2999361"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
