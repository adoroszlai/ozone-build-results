<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211118 18:53:28.236" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:27.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:27.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:27.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:03:27.716" endtime="20211118 18:03:27.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:27.725" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:03:27.724" endtime="20211118 18:03:27.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:27.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:27.725" endtime="20211118 18:03:27.732"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.715" endtime="20211118 18:03:27.733"/>
</kw>
<msg timestamp="20211118 18:03:27.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:27.715" endtime="20211118 18:03:27.733"/>
</kw>
<msg timestamp="20211118 18:03:27.733" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211118 18:03:27.714" endtime="20211118 18:03:27.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:27.740" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:27.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:27.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:03:27.737" endtime="20211118 18:03:27.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:27.749" level="INFO"/>
<status status="PASS" starttime="20211118 18:03:27.748" endtime="20211118 18:03:27.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:27.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:27.749" endtime="20211118 18:03:27.750"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.736" endtime="20211118 18:03:27.750"/>
</kw>
<msg timestamp="20211118 18:03:27.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:27.736" endtime="20211118 18:03:27.750"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.735" endtime="20211118 18:03:27.751"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.733" endtime="20211118 18:03:27.751"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.714" endtime="20211118 18:03:27.751"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.713" endtime="20211118 18:03:27.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:27.754" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:27.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:27.884" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211118 18:03:27.752" endtime="20211118 18:03:27.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:27.886" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 18 Nov 2021 18:03:27 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC5evddUFPcF8eSlHdZDm8bTwPk0XwIAa9KGzEzVgzv1adV6u+go/qUDwdhMJp7nWfQSq24KpUN+A3RUGgWNfe0krQ
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1637294607873&amp;s=V+rRR0vo8RBCARh0uqjZ0V1ewHVfRjXxS7orUUp9h/o="; Path=/; HttpOnly
Last-Modified: Thu, 18 Nov 2021 17:47:50 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211118 18:03:27.885" endtime="20211118 18:03:27.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:27.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:27.886" endtime="20211118 18:03:27.887"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.752" endtime="20211118 18:03:27.887"/>
</kw>
<msg timestamp="20211118 18:03:27.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:27.752" endtime="20211118 18:03:27.887"/>
</kw>
<msg timestamp="20211118 18:03:27.888" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211118 18:03:27.751" endtime="20211118 18:03:27.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:03:27.888" endtime="20211118 18:03:27.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:03:27.712" endtime="20211118 18:03:27.888"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:27.896" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:27.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:27.899" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:03:27.894" endtime="20211118 18:03:27.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:27.901" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:03:27.900" endtime="20211118 18:03:27.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:27.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:27.901" endtime="20211118 18:03:27.902"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.893" endtime="20211118 18:03:27.902"/>
</kw>
<msg timestamp="20211118 18:03:27.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:27.893" endtime="20211118 18:03:27.902"/>
</kw>
<msg timestamp="20211118 18:03:27.902" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:03:27.892" endtime="20211118 18:03:27.902"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:03:27.904" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:03:27.903" endtime="20211118 18:03:27.904"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:27.908" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:27.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:27.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:03:27.907" endtime="20211118 18:03:27.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:27.916" level="INFO"/>
<status status="PASS" starttime="20211118 18:03:27.916" endtime="20211118 18:03:27.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:27.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:27.916" endtime="20211118 18:03:27.917"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.906" endtime="20211118 18:03:27.917"/>
</kw>
<msg timestamp="20211118 18:03:27.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:27.906" endtime="20211118 18:03:27.918"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.905" endtime="20211118 18:03:27.918"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.905" endtime="20211118 18:03:27.918"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.892" endtime="20211118 18:03:27.918"/>
</kw>
<status status="PASS" starttime="20211118 18:03:27.892" endtime="20211118 18:03:27.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:27.922" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:27.891" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:03:27.920" endtime="20211118 18:08:27.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:08:27.892" endtime="20211118 18:08:27.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:08:27.893" endtime="20211118 18:08:27.893"/>
</kw>
<status status="FAIL" starttime="20211118 18:03:27.919" endtime="20211118 18:08:27.893"/>
</kw>
<msg timestamp="20211118 18:08:27.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:03:27.919" endtime="20211118 18:08:27.894"/>
</kw>
<status status="FAIL" starttime="20211118 18:03:27.918" endtime="20211118 18:08:27.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211118 18:08:27.894" endtime="20211118 18:08:27.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:08:27.895" endtime="20211118 18:08:27.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211118 18:03:27.890" endtime="20211118 18:08:27.895">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211118 18:03:27.681" endtime="20211118 18:08:27.897"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:27.910" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:31.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:31.168" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211118 18:08:27.907" endtime="20211118 18:08:31.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:31.169" level="INFO">om</msg>
<status status="PASS" starttime="20211118 18:08:31.168" endtime="20211118 18:08:31.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:31.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:31.170" endtime="20211118 18:08:31.171"/>
</kw>
<status status="PASS" starttime="20211118 18:08:27.906" endtime="20211118 18:08:31.171"/>
</kw>
<msg timestamp="20211118 18:08:31.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:27.906" endtime="20211118 18:08:31.172"/>
</kw>
<msg timestamp="20211118 18:08:31.172" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211118 18:08:27.905" endtime="20211118 18:08:31.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:31.173" endtime="20211118 18:08:31.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:31.178" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:34.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:34.188" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211118 18:08:31.175" endtime="20211118 18:08:34.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:34.189" level="INFO">om</msg>
<status status="PASS" starttime="20211118 18:08:34.188" endtime="20211118 18:08:34.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:34.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:34.190" endtime="20211118 18:08:34.190"/>
</kw>
<status status="PASS" starttime="20211118 18:08:31.174" endtime="20211118 18:08:34.191"/>
</kw>
<msg timestamp="20211118 18:08:34.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:31.174" endtime="20211118 18:08:34.191"/>
</kw>
<msg timestamp="20211118 18:08:34.192" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211118 18:08:31.174" endtime="20211118 18:08:34.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:34.192" endtime="20211118 18:08:34.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:08:27.904" endtime="20211118 18:08:34.194"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:34.200" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:37.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:37.184" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:08:34.198" endtime="20211118 18:08:37.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:37.185" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:08:37.184" endtime="20211118 18:08:37.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:37.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:37.185" endtime="20211118 18:08:37.186"/>
</kw>
<status status="PASS" starttime="20211118 18:08:34.197" endtime="20211118 18:08:37.186"/>
</kw>
<msg timestamp="20211118 18:08:37.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:34.197" endtime="20211118 18:08:37.187"/>
</kw>
<msg timestamp="20211118 18:08:37.187" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211118 18:08:34.196" endtime="20211118 18:08:37.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:37.188" endtime="20211118 18:08:37.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:37.196" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:40.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:40.261" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:08:37.192" endtime="20211118 18:08:40.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:40.262" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:08:40.261" endtime="20211118 18:08:40.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:40.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:40.263" endtime="20211118 18:08:40.264"/>
</kw>
<status status="PASS" starttime="20211118 18:08:37.192" endtime="20211118 18:08:40.264"/>
</kw>
<msg timestamp="20211118 18:08:40.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:37.191" endtime="20211118 18:08:40.265"/>
</kw>
<msg timestamp="20211118 18:08:40.265" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211118 18:08:37.190" endtime="20211118 18:08:40.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:40.265" endtime="20211118 18:08:40.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:08:34.194" endtime="20211118 18:08:40.266"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:40.276" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:42.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:42.973" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211118 18:08:40.273" endtime="20211118 18:08:42.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:42.974" level="INFO">om</msg>
<status status="PASS" starttime="20211118 18:08:42.973" endtime="20211118 18:08:42.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:42.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:42.975" endtime="20211118 18:08:42.976"/>
</kw>
<status status="PASS" starttime="20211118 18:08:40.271" endtime="20211118 18:08:42.977"/>
</kw>
<msg timestamp="20211118 18:08:42.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:40.271" endtime="20211118 18:08:42.977"/>
</kw>
<msg timestamp="20211118 18:08:42.978" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211118 18:08:40.269" endtime="20211118 18:08:42.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:42.978" endtime="20211118 18:08:42.979"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:42.980" endtime="20211118 18:08:42.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:42.986" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:45.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:45.565" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211118 18:08:42.983" endtime="20211118 18:08:45.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:45.566" level="INFO">om</msg>
<status status="PASS" starttime="20211118 18:08:45.565" endtime="20211118 18:08:45.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:45.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:45.567" endtime="20211118 18:08:45.567"/>
</kw>
<status status="PASS" starttime="20211118 18:08:42.982" endtime="20211118 18:08:45.568"/>
</kw>
<msg timestamp="20211118 18:08:45.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:42.982" endtime="20211118 18:08:45.568"/>
</kw>
<msg timestamp="20211118 18:08:45.568" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211118 18:08:42.981" endtime="20211118 18:08:45.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:45.569" endtime="20211118 18:08:45.569"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:45.569" endtime="20211118 18:08:45.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:08:40.267" endtime="20211118 18:08:45.570"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:45.575" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:48.397" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:08:48.397" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211118 18:08:45.572" endtime="20211118 18:08:48.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:48.400" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211118 18:08:48.398" endtime="20211118 18:08:48.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:48.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:48.400" endtime="20211118 18:08:48.401"/>
</kw>
<msg timestamp="20211118 18:08:48.401" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211118 18:08:45.571" endtime="20211118 18:08:48.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:48.402" endtime="20211118 18:08:48.402"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:48.406" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:51.095" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:08:51.095" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211118 18:08:48.403" endtime="20211118 18:08:51.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:51.098" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211118 18:08:51.096" endtime="20211118 18:08:51.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:51.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:51.098" endtime="20211118 18:08:51.100"/>
</kw>
<msg timestamp="20211118 18:08:51.100" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211118 18:08:48.403" endtime="20211118 18:08:51.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:08:51.101" endtime="20211118 18:08:51.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:08:45.570" endtime="20211118 18:08:51.102"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211118 18:08:27.900" endtime="20211118 18:08:51.103"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211118 18:08:51.129" level="INFO">${random} = 94716</msg>
<status status="PASS" starttime="20211118 18:08:51.128" endtime="20211118 18:08:51.129"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:08:51.131" level="INFO">${source} = 94716-source</msg>
<status status="PASS" starttime="20211118 18:08:51.129" endtime="20211118 18:08:51.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:08:51.134" level="INFO">${target} = 94716-target</msg>
<status status="PASS" starttime="20211118 18:08:51.131" endtime="20211118 18:08:51.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:51.139" level="INFO">Running command 'ozone sh volume create 94716-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:08:58.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:08:58.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:08:51.136" endtime="20211118 18:08:58.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:08:58.823" level="INFO"/>
<status status="PASS" starttime="20211118 18:08:58.822" endtime="20211118 18:08:58.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:08:58.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:08:58.823" endtime="20211118 18:08:58.824"/>
</kw>
<status status="PASS" starttime="20211118 18:08:51.136" endtime="20211118 18:08:58.824"/>
</kw>
<msg timestamp="20211118 18:08:58.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:51.135" endtime="20211118 18:08:58.825"/>
</kw>
<status status="PASS" starttime="20211118 18:08:51.134" endtime="20211118 18:08:58.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:08:58.830" level="INFO">Running command 'ozone sh volume create 94716-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:09:05.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:09:05.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:08:58.826" endtime="20211118 18:09:05.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:09:05.548" level="INFO"/>
<status status="PASS" starttime="20211118 18:09:05.548" endtime="20211118 18:09:05.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:09:05.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:09:05.549" endtime="20211118 18:09:05.550"/>
</kw>
<status status="PASS" starttime="20211118 18:08:58.826" endtime="20211118 18:09:05.550"/>
</kw>
<msg timestamp="20211118 18:09:05.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:08:58.826" endtime="20211118 18:09:05.551"/>
</kw>
<status status="PASS" starttime="20211118 18:08:58.825" endtime="20211118 18:09:05.559"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:09:05.575" level="INFO">Running command 'ozone sh bucket create 94716-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:09:13.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:09:13.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:09:05.571" endtime="20211118 18:09:13.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:09:13.679" level="INFO"/>
<status status="PASS" starttime="20211118 18:09:13.677" endtime="20211118 18:09:13.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:09:13.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:09:13.680" endtime="20211118 18:09:13.681"/>
</kw>
<status status="PASS" starttime="20211118 18:09:05.570" endtime="20211118 18:09:13.684"/>
</kw>
<msg timestamp="20211118 18:09:13.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:09:05.563" endtime="20211118 18:09:13.685"/>
</kw>
<status status="PASS" starttime="20211118 18:09:05.562" endtime="20211118 18:09:13.685"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:09:13.693" level="INFO">Running command 'ozone sh key put 94716-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:12:25.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:12:25.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:09:13.687" endtime="20211118 18:12:25.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:12:25.614" level="INFO"/>
<status status="PASS" starttime="20211118 18:12:25.613" endtime="20211118 18:12:25.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:12:25.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:12:25.614" endtime="20211118 18:12:25.615"/>
</kw>
<status status="PASS" starttime="20211118 18:09:13.686" endtime="20211118 18:12:25.615"/>
</kw>
<msg timestamp="20211118 18:12:25.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:09:13.686" endtime="20211118 18:12:25.615"/>
</kw>
<status status="PASS" starttime="20211118 18:09:13.685" endtime="20211118 18:12:25.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:12:25.620" level="INFO">Running command 'ozone sh bucket create 94716-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:12:33.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:12:33.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:12:25.617" endtime="20211118 18:12:33.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:12:33.124" level="INFO"/>
<status status="PASS" starttime="20211118 18:12:33.124" endtime="20211118 18:12:33.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:12:33.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:12:33.124" endtime="20211118 18:12:33.125"/>
</kw>
<status status="PASS" starttime="20211118 18:12:25.617" endtime="20211118 18:12:33.125"/>
</kw>
<msg timestamp="20211118 18:12:33.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:12:25.617" endtime="20211118 18:12:33.126"/>
</kw>
<status status="PASS" starttime="20211118 18:12:25.616" endtime="20211118 18:12:33.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:12:33.132" level="INFO">Running command 'ozone sh bucket link 94716-source/readable-bucket 94716-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:12:40.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:12:40.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:12:33.130" endtime="20211118 18:12:40.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:12:40.786" level="INFO"/>
<status status="PASS" starttime="20211118 18:12:40.785" endtime="20211118 18:12:40.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:12:40.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:12:40.786" endtime="20211118 18:12:40.787"/>
</kw>
<status status="PASS" starttime="20211118 18:12:33.127" endtime="20211118 18:12:40.787"/>
</kw>
<msg timestamp="20211118 18:12:40.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:12:33.126" endtime="20211118 18:12:40.789"/>
</kw>
<status status="PASS" starttime="20211118 18:12:33.126" endtime="20211118 18:12:40.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:12:40.794" level="INFO">Running command 'ozone sh bucket link 94716-source/readable-bucket 94716-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:12:47.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:12:47.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:12:40.791" endtime="20211118 18:12:47.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:12:47.710" level="INFO"/>
<status status="PASS" starttime="20211118 18:12:47.710" endtime="20211118 18:12:47.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:12:47.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:12:47.711" endtime="20211118 18:12:47.711"/>
</kw>
<status status="PASS" starttime="20211118 18:12:40.791" endtime="20211118 18:12:47.712"/>
</kw>
<msg timestamp="20211118 18:12:47.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:12:40.791" endtime="20211118 18:12:47.712"/>
</kw>
<status status="PASS" starttime="20211118 18:12:40.790" endtime="20211118 18:12:47.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:12:47.717" level="INFO">Running command 'ozone sh bucket link 94716-source/unreadable-bucket 94716-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:12:53.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:12:53.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:12:47.714" endtime="20211118 18:12:53.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:12:53.743" level="INFO"/>
<status status="PASS" starttime="20211118 18:12:53.742" endtime="20211118 18:12:53.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:12:53.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:12:53.743" endtime="20211118 18:12:53.744"/>
</kw>
<status status="PASS" starttime="20211118 18:12:47.713" endtime="20211118 18:12:53.745"/>
</kw>
<msg timestamp="20211118 18:12:53.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:12:47.713" endtime="20211118 18:12:53.746"/>
</kw>
<status status="PASS" starttime="20211118 18:12:47.712" endtime="20211118 18:12:53.746"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:12:53.754" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94716-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:02.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:02.060" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:12:53.750" endtime="20211118 18:13:02.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:02.061" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:02.061" endtime="20211118 18:13:02.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:02.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:02.062" endtime="20211118 18:13:02.062"/>
</kw>
<status status="PASS" starttime="20211118 18:12:53.749" endtime="20211118 18:13:02.063"/>
</kw>
<msg timestamp="20211118 18:13:02.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:12:53.749" endtime="20211118 18:13:02.063"/>
</kw>
<status status="PASS" starttime="20211118 18:12:53.746" endtime="20211118 18:13:02.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:02.067" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94716-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:08.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:08.574" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:02.065" endtime="20211118 18:13:08.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:08.576" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:08.575" endtime="20211118 18:13:08.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:08.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:08.576" endtime="20211118 18:13:08.576"/>
</kw>
<status status="PASS" starttime="20211118 18:13:02.065" endtime="20211118 18:13:08.577"/>
</kw>
<msg timestamp="20211118 18:13:08.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:02.064" endtime="20211118 18:13:08.577"/>
</kw>
<status status="PASS" starttime="20211118 18:13:02.064" endtime="20211118 18:13:08.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:08.581" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94716-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:14.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:14.212" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:08.579" endtime="20211118 18:13:14.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:14.213" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:14.213" endtime="20211118 18:13:14.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:14.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:14.214" endtime="20211118 18:13:14.214"/>
</kw>
<status status="PASS" starttime="20211118 18:13:08.578" endtime="20211118 18:13:14.215"/>
</kw>
<msg timestamp="20211118 18:13:14.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:08.578" endtime="20211118 18:13:14.215"/>
</kw>
<status status="PASS" starttime="20211118 18:13:08.577" endtime="20211118 18:13:14.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:14.220" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94716-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:20.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:20.173" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:14.217" endtime="20211118 18:13:20.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:20.174" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:20.174" endtime="20211118 18:13:20.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:20.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:20.175" endtime="20211118 18:13:20.176"/>
</kw>
<status status="PASS" starttime="20211118 18:13:14.216" endtime="20211118 18:13:20.177"/>
</kw>
<msg timestamp="20211118 18:13:20.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:14.216" endtime="20211118 18:13:20.178"/>
</kw>
<status status="PASS" starttime="20211118 18:13:14.215" endtime="20211118 18:13:20.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:20.185" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94716-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:27.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:27.978" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:20.182" endtime="20211118 18:13:27.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:27.980" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:13:27.979" endtime="20211118 18:13:27.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:27.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:27.981" endtime="20211118 18:13:27.981"/>
</kw>
<status status="PASS" starttime="20211118 18:13:20.181" endtime="20211118 18:13:27.982"/>
</kw>
<msg timestamp="20211118 18:13:27.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:20.180" endtime="20211118 18:13:27.982"/>
</kw>
<status status="PASS" starttime="20211118 18:13:20.179" endtime="20211118 18:13:27.983"/>
</kw>
<status status="PASS" starttime="20211118 18:09:05.561" endtime="20211118 18:13:27.983"/>
</kw>
<status status="PASS" starttime="20211118 18:09:05.560" endtime="20211118 18:13:27.984"/>
</kw>
<status status="PASS" starttime="20211118 18:08:51.127" endtime="20211118 18:13:27.984"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:27.994" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:28.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:28.001" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:13:27.991" endtime="20211118 18:13:28.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:28.003" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:13:28.002" endtime="20211118 18:13:28.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:28.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:28.004" endtime="20211118 18:13:28.006"/>
</kw>
<status status="PASS" starttime="20211118 18:13:27.989" endtime="20211118 18:13:28.006"/>
</kw>
<msg timestamp="20211118 18:13:28.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:27.989" endtime="20211118 18:13:28.007"/>
</kw>
<msg timestamp="20211118 18:13:28.007" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:13:27.988" endtime="20211118 18:13:28.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:13:28.011" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:13:28.008" endtime="20211118 18:13:28.011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:28.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:28.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:28.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:13:28.014" endtime="20211118 18:13:28.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:28.078" level="INFO"/>
<status status="PASS" starttime="20211118 18:13:28.077" endtime="20211118 18:13:28.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:28.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:28.078" endtime="20211118 18:13:28.078"/>
</kw>
<status status="PASS" starttime="20211118 18:13:28.013" endtime="20211118 18:13:28.079"/>
</kw>
<msg timestamp="20211118 18:13:28.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:28.012" endtime="20211118 18:13:28.079"/>
</kw>
<status status="PASS" starttime="20211118 18:13:28.012" endtime="20211118 18:13:28.079"/>
</kw>
<status status="PASS" starttime="20211118 18:13:28.011" endtime="20211118 18:13:28.079"/>
</kw>
<status status="PASS" starttime="20211118 18:13:27.987" endtime="20211118 18:13:28.080"/>
</kw>
<status status="PASS" starttime="20211118 18:13:27.986" endtime="20211118 18:13:28.080"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:28.085" level="INFO">Running command 'ozone sh bucket link 94716-source/no-such-bucket 94716-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:35.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:35.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:13:28.082" endtime="20211118 18:13:35.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:35.610" level="INFO"/>
<status status="PASS" starttime="20211118 18:13:35.609" endtime="20211118 18:13:35.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:35.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:35.610" endtime="20211118 18:13:35.611"/>
</kw>
<status status="PASS" starttime="20211118 18:13:28.081" endtime="20211118 18:13:35.611"/>
</kw>
<msg timestamp="20211118 18:13:35.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:28.081" endtime="20211118 18:13:35.611"/>
</kw>
<status status="PASS" starttime="20211118 18:13:28.080" endtime="20211118 18:13:35.612"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:35.615" level="INFO">Running command 'ozone sh key list 94716-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:41.675" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:13:41.676" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211118 18:13:35.613" endtime="20211118 18:13:41.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:41.677" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211118 18:13:41.676" endtime="20211118 18:13:41.677"/>
</kw>
<msg timestamp="20211118 18:13:41.678" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211118 18:13:35.612" endtime="20211118 18:13:41.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:13:41.678" endtime="20211118 18:13:41.679"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:13:27.984" endtime="20211118 18:13:41.679"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:41.690" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:41.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:41.698" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:13:41.687" endtime="20211118 18:13:41.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:41.699" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:13:41.699" endtime="20211118 18:13:41.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:41.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:41.700" endtime="20211118 18:13:41.700"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.686" endtime="20211118 18:13:41.700"/>
</kw>
<msg timestamp="20211118 18:13:41.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:41.685" endtime="20211118 18:13:41.701"/>
</kw>
<msg timestamp="20211118 18:13:41.701" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:13:41.684" endtime="20211118 18:13:41.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:13:41.702" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:13:41.701" endtime="20211118 18:13:41.702"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:41.707" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:41.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:41.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:13:41.704" endtime="20211118 18:13:41.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:41.717" level="INFO"/>
<status status="PASS" starttime="20211118 18:13:41.716" endtime="20211118 18:13:41.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:41.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:41.718" endtime="20211118 18:13:41.719"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.704" endtime="20211118 18:13:41.720"/>
</kw>
<msg timestamp="20211118 18:13:41.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:41.703" endtime="20211118 18:13:41.720"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.702" endtime="20211118 18:13:41.721"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.702" endtime="20211118 18:13:41.721"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.683" endtime="20211118 18:13:41.721"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.682" endtime="20211118 18:13:41.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:41.727" level="INFO">Running command 'ozone sh bucket link 94716-source/bucket1 94716-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:48.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:48.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:13:41.725" endtime="20211118 18:13:48.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:48.544" level="INFO"/>
<status status="PASS" starttime="20211118 18:13:48.543" endtime="20211118 18:13:48.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:48.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:48.545" endtime="20211118 18:13:48.546"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.724" endtime="20211118 18:13:48.547"/>
</kw>
<msg timestamp="20211118 18:13:48.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:41.723" endtime="20211118 18:13:48.547"/>
</kw>
<status status="PASS" starttime="20211118 18:13:41.722" endtime="20211118 18:13:48.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:48.554" level="INFO">Running command 'ozone sh bucket create 94716-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:13:56.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:13:56.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:13:48.551" endtime="20211118 18:13:56.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:13:56.135" level="INFO"/>
<status status="PASS" starttime="20211118 18:13:56.135" endtime="20211118 18:13:56.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:13:56.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:13:56.136" endtime="20211118 18:13:56.136"/>
</kw>
<status status="PASS" starttime="20211118 18:13:48.550" endtime="20211118 18:13:56.136"/>
</kw>
<msg timestamp="20211118 18:13:56.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:13:48.550" endtime="20211118 18:13:56.137"/>
</kw>
<status status="PASS" starttime="20211118 18:13:48.548" endtime="20211118 18:13:56.137"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:13:56.143" level="INFO">Running command 'ozone sh key put 94716-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:15:41.682" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:13:56.140" endtime="20211118 18:15:41.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:15:41.683" endtime="20211118 18:15:41.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:15:41.683" endtime="20211118 18:15:41.683"/>
</kw>
<status status="FAIL" starttime="20211118 18:13:56.138" endtime="20211118 18:15:41.684"/>
</kw>
<msg timestamp="20211118 18:15:41.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:13:56.138" endtime="20211118 18:15:41.684"/>
</kw>
<status status="FAIL" starttime="20211118 18:13:56.137" endtime="20211118 18:15:41.684"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211118 18:15:41.684" endtime="20211118 18:15:41.685"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211118 18:13:41.681" endtime="20211118 18:15:41.685">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:15:41.693" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:15:41.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:15:41.698" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:15:41.689" endtime="20211118 18:15:41.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:15:41.700" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:15:41.699" endtime="20211118 18:15:41.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:15:41.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:15:41.700" endtime="20211118 18:15:41.701"/>
</kw>
<status status="PASS" starttime="20211118 18:15:41.689" endtime="20211118 18:15:41.702"/>
</kw>
<msg timestamp="20211118 18:15:41.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:15:41.688" endtime="20211118 18:15:41.702"/>
</kw>
<msg timestamp="20211118 18:15:41.702" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:15:41.688" endtime="20211118 18:15:41.702"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:15:41.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:15:41.703" endtime="20211118 18:15:41.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:15:41.710" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:15:41.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:15:41.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:15:41.707" endtime="20211118 18:15:41.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:15:41.722" level="INFO"/>
<status status="PASS" starttime="20211118 18:15:41.721" endtime="20211118 18:15:41.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:15:41.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:15:41.723" endtime="20211118 18:15:41.724"/>
</kw>
<status status="PASS" starttime="20211118 18:15:41.706" endtime="20211118 18:15:41.725"/>
</kw>
<msg timestamp="20211118 18:15:41.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:15:41.706" endtime="20211118 18:15:41.726"/>
</kw>
<status status="PASS" starttime="20211118 18:15:41.705" endtime="20211118 18:15:41.726"/>
</kw>
<status status="PASS" starttime="20211118 18:15:41.704" endtime="20211118 18:15:41.726"/>
</kw>
<status status="PASS" starttime="20211118 18:15:41.687" endtime="20211118 18:15:41.726"/>
</kw>
<status status="PASS" starttime="20211118 18:15:41.686" endtime="20211118 18:15:41.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:15:41.732" level="INFO">Running command 'ozone sh key put 94716-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:41.687" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:15:41.729" endtime="20211118 18:17:41.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:17:41.688" endtime="20211118 18:17:41.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:17:41.688" endtime="20211118 18:17:41.688"/>
</kw>
<status status="FAIL" starttime="20211118 18:15:41.728" endtime="20211118 18:17:41.689"/>
</kw>
<msg timestamp="20211118 18:17:41.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:15:41.728" endtime="20211118 18:17:41.689"/>
</kw>
<status status="FAIL" starttime="20211118 18:15:41.727" endtime="20211118 18:17:41.689"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211118 18:17:41.690" endtime="20211118 18:17:41.690"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211118 18:15:41.686" endtime="20211118 18:17:41.690">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:41.698" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:41.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:17:41.702" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:17:41.695" endtime="20211118 18:17:41.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:17:41.703" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:17:41.702" endtime="20211118 18:17:41.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:17:41.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:17:41.703" endtime="20211118 18:17:41.704"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.695" endtime="20211118 18:17:41.704"/>
</kw>
<msg timestamp="20211118 18:17:41.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:17:41.694" endtime="20211118 18:17:41.704"/>
</kw>
<msg timestamp="20211118 18:17:41.705" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:17:41.694" endtime="20211118 18:17:41.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:17:41.706" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:17:41.705" endtime="20211118 18:17:41.706"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:41.710" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:41.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:17:41.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:17:41.708" endtime="20211118 18:17:41.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:17:41.720" level="INFO"/>
<status status="PASS" starttime="20211118 18:17:41.719" endtime="20211118 18:17:41.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:17:41.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:17:41.720" endtime="20211118 18:17:41.721"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.707" endtime="20211118 18:17:41.721"/>
</kw>
<msg timestamp="20211118 18:17:41.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:17:41.707" endtime="20211118 18:17:41.722"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.706" endtime="20211118 18:17:41.722"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.706" endtime="20211118 18:17:41.722"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.693" endtime="20211118 18:17:41.722"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.692" endtime="20211118 18:17:41.722"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:41.732" level="INFO">Running command 'ozone sh key list 94716-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:48.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:17:48.559" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211118 18:17:41.724" endtime="20211118 18:17:48.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:17:48.561" level="INFO">key1</msg>
<status status="PASS" starttime="20211118 18:17:48.560" endtime="20211118 18:17:48.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:17:48.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:17:48.561" endtime="20211118 18:17:48.562"/>
</kw>
<status status="PASS" starttime="20211118 18:17:41.723" endtime="20211118 18:17:48.563"/>
</kw>
<msg timestamp="20211118 18:17:48.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:17:41.723" endtime="20211118 18:17:48.563"/>
</kw>
<msg timestamp="20211118 18:17:48.563" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211118 18:17:41.722" endtime="20211118 18:17:48.563"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:48.567" level="INFO">Running command 'ozone sh key list 94716-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:54.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:17:54.763" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211118 18:17:48.565" endtime="20211118 18:17:54.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:17:54.767" level="INFO">key1</msg>
<status status="PASS" starttime="20211118 18:17:54.764" endtime="20211118 18:17:54.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:17:54.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:17:54.767" endtime="20211118 18:17:54.768"/>
</kw>
<status status="PASS" starttime="20211118 18:17:48.564" endtime="20211118 18:17:54.769"/>
</kw>
<msg timestamp="20211118 18:17:54.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:17:48.564" endtime="20211118 18:17:54.769"/>
</kw>
<msg timestamp="20211118 18:17:54.770" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211118 18:17:48.563" endtime="20211118 18:17:54.770"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:17:54.771" endtime="20211118 18:17:54.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:17:54.773" endtime="20211118 18:17:54.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211118 18:17:54.775" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211118 18:17:54.774" endtime="20211118 18:17:54.775"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211118 18:17:41.692" endtime="20211118 18:17:54.777">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:54.788" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:54.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:17:54.797" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:17:54.786" endtime="20211118 18:17:54.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:17:54.798" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:17:54.797" endtime="20211118 18:17:54.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:17:54.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:17:54.798" endtime="20211118 18:17:54.799"/>
</kw>
<status status="PASS" starttime="20211118 18:17:54.785" endtime="20211118 18:17:54.800"/>
</kw>
<msg timestamp="20211118 18:17:54.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:17:54.784" endtime="20211118 18:17:54.800"/>
</kw>
<msg timestamp="20211118 18:17:54.800" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:17:54.784" endtime="20211118 18:17:54.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:17:54.801" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:17:54.801" endtime="20211118 18:17:54.801"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:54.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:17:54.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:17:54.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:17:54.804" endtime="20211118 18:17:54.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:17:54.818" level="INFO"/>
<status status="PASS" starttime="20211118 18:17:54.817" endtime="20211118 18:17:54.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:17:54.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:17:54.818" endtime="20211118 18:17:54.823"/>
</kw>
<status status="PASS" starttime="20211118 18:17:54.803" endtime="20211118 18:17:54.823"/>
</kw>
<msg timestamp="20211118 18:17:54.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:17:54.803" endtime="20211118 18:17:54.823"/>
</kw>
<status status="PASS" starttime="20211118 18:17:54.802" endtime="20211118 18:17:54.824"/>
</kw>
<status status="PASS" starttime="20211118 18:17:54.801" endtime="20211118 18:17:54.824"/>
</kw>
<status status="PASS" starttime="20211118 18:17:54.783" endtime="20211118 18:17:54.824"/>
</kw>
<status status="PASS" starttime="20211118 18:17:54.783" endtime="20211118 18:17:54.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:17:54.829" level="INFO">Running command 'ozone sh key delete 94716-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:02.972" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:18:02.972" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211118 18:17:54.826" endtime="20211118 18:18:02.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:02.974" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211118 18:18:02.973" endtime="20211118 18:18:02.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:02.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211118 18:18:02.976" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211118 18:18:02.974" endtime="20211118 18:18:02.976"/>
</kw>
<status status="FAIL" starttime="20211118 18:17:54.826" endtime="20211118 18:18:02.977"/>
</kw>
<msg timestamp="20211118 18:18:02.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:17:54.825" endtime="20211118 18:18:02.977"/>
</kw>
<status status="FAIL" starttime="20211118 18:17:54.825" endtime="20211118 18:18:02.978"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211118 18:18:02.978" endtime="20211118 18:18:02.978"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:18:02.979" endtime="20211118 18:18:02.979"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211118 18:17:54.782" endtime="20211118 18:18:02.979">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:02.992" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:02.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:02.997" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:18:02.989" endtime="20211118 18:18:02.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:02.999" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:18:02.998" endtime="20211118 18:18:03.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:03.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:03.001" endtime="20211118 18:18:03.002"/>
</kw>
<status status="PASS" starttime="20211118 18:18:02.987" endtime="20211118 18:18:03.002"/>
</kw>
<msg timestamp="20211118 18:18:03.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:02.986" endtime="20211118 18:18:03.003"/>
</kw>
<msg timestamp="20211118 18:18:03.003" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:18:02.985" endtime="20211118 18:18:03.003"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:18:03.004" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:18:03.003" endtime="20211118 18:18:03.004"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:03.011" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:03.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:03.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:18:03.008" endtime="20211118 18:18:03.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:03.022" level="INFO"/>
<status status="PASS" starttime="20211118 18:18:03.021" endtime="20211118 18:18:03.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:03.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:03.022" endtime="20211118 18:18:03.024"/>
</kw>
<status status="PASS" starttime="20211118 18:18:03.007" endtime="20211118 18:18:03.024"/>
</kw>
<msg timestamp="20211118 18:18:03.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:03.006" endtime="20211118 18:18:03.025"/>
</kw>
<status status="PASS" starttime="20211118 18:18:03.005" endtime="20211118 18:18:03.025"/>
</kw>
<status status="PASS" starttime="20211118 18:18:03.004" endtime="20211118 18:18:03.025"/>
</kw>
<status status="PASS" starttime="20211118 18:18:02.984" endtime="20211118 18:18:03.025"/>
</kw>
<status status="PASS" starttime="20211118 18:18:02.983" endtime="20211118 18:18:03.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:03.031" level="INFO">Running command 'ozone sh bucket list 94716-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:09.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:09.346" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211118 18:18:03.028" endtime="20211118 18:18:09.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:09.347" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:13:35.541Z",
  "modificationTime" : "2021-11-18T18:13:35.541Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:12:53.673Z",
  "modificationTime" : "2021-11-18T18:13:27.885Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:13:48.382Z",
  "modificationTime" : "2021-11-18T18:13:48.382Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:12:40.575Z",
  "modificationTime" : "2021-11-18T18:13:19.973Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:12:47.550Z",
  "modificationTime" : "2021-11-18T18:12:47.550Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
} ]</msg>
<status status="PASS" starttime="20211118 18:18:09.346" endtime="20211118 18:18:09.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:09.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:09.348" endtime="20211118 18:18:09.348"/>
</kw>
<status status="PASS" starttime="20211118 18:18:03.027" endtime="20211118 18:18:09.349"/>
</kw>
<msg timestamp="20211118 18:18:09.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:03.026" endtime="20211118 18:18:09.349"/>
</kw>
<msg timestamp="20211118 18:18:09.349" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211118 18:18:03.025" endtime="20211118 18:18:09.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:09.350" endtime="20211118 18:18:09.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:09.351" endtime="20211118 18:18:09.351"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:18:02.981" endtime="20211118 18:18:09.351"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:09.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:09.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:09.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:18:09.362" endtime="20211118 18:18:09.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:09.372" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:18:09.371" endtime="20211118 18:18:09.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:09.372" endtime="20211118 18:18:09.374"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.360" endtime="20211118 18:18:09.374"/>
</kw>
<msg timestamp="20211118 18:18:09.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:09.359" endtime="20211118 18:18:09.375"/>
</kw>
<msg timestamp="20211118 18:18:09.375" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:18:09.357" endtime="20211118 18:18:09.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:18:09.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:18:09.376" endtime="20211118 18:18:09.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:09.383" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:09.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:09.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:18:09.380" endtime="20211118 18:18:09.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:09.392" level="INFO"/>
<status status="PASS" starttime="20211118 18:18:09.391" endtime="20211118 18:18:09.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:09.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:09.392" endtime="20211118 18:18:09.396"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.379" endtime="20211118 18:18:09.396"/>
</kw>
<msg timestamp="20211118 18:18:09.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:09.379" endtime="20211118 18:18:09.397"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.378" endtime="20211118 18:18:09.397"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.377" endtime="20211118 18:18:09.397"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.356" endtime="20211118 18:18:09.397"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.354" endtime="20211118 18:18:09.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:09.403" level="INFO">Running command 'ozone sh bucket info 94716-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:17.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:17.599" level="INFO">${output} = {
  "volumeName" : "94716-target",
  "bucketName" : "link1",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-18T18:13:48.382Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211118 18:18:09.400" endtime="20211118 18:18:17.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:17.601" level="INFO">{
  "volumeName" : "94716-target",
  "bucketName" : "link1",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-18T18:13:48.382Z",
  "modificationTime" : "2021-11-18T18:13:48.382Z"
}</msg>
<status status="PASS" starttime="20211118 18:18:17.600" endtime="20211118 18:18:17.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:17.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:17.601" endtime="20211118 18:18:17.602"/>
</kw>
<status status="PASS" starttime="20211118 18:18:09.399" endtime="20211118 18:18:17.602"/>
</kw>
<msg timestamp="20211118 18:18:17.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:09.399" endtime="20211118 18:18:17.603"/>
</kw>
<msg timestamp="20211118 18:18:17.603" level="INFO">${result} = {
  "volumeName" : "94716-target",
  "bucketName" : "link1",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-18T18:13:48.382Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211118 18:18:09.398" endtime="20211118 18:18:17.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.603" endtime="20211118 18:18:17.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.604" endtime="20211118 18:18:17.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.604" endtime="20211118 18:18:17.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.605" endtime="20211118 18:18:17.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.606" endtime="20211118 18:18:17.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.606" endtime="20211118 18:18:17.607"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:18:17.607" endtime="20211118 18:18:17.608"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:18:09.352" endtime="20211118 18:18:17.608"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:17.615" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:17.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:17.620" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:18:17.613" endtime="20211118 18:18:17.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:17.621" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:18:17.620" endtime="20211118 18:18:17.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:17.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:17.621" endtime="20211118 18:18:17.625"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.612" endtime="20211118 18:18:17.626"/>
</kw>
<msg timestamp="20211118 18:18:17.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:17.612" endtime="20211118 18:18:17.626"/>
</kw>
<msg timestamp="20211118 18:18:17.626" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:18:17.611" endtime="20211118 18:18:17.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:18:17.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:18:17.626" endtime="20211118 18:18:17.627"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:17.632" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:17.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:17.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:18:17.630" endtime="20211118 18:18:17.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:17.642" level="INFO"/>
<status status="PASS" starttime="20211118 18:18:17.641" endtime="20211118 18:18:17.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:17.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:17.642" endtime="20211118 18:18:17.643"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.629" endtime="20211118 18:18:17.643"/>
</kw>
<msg timestamp="20211118 18:18:17.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:17.629" endtime="20211118 18:18:17.643"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.628" endtime="20211118 18:18:17.644"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.627" endtime="20211118 18:18:17.644"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.611" endtime="20211118 18:18:17.644"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.610" endtime="20211118 18:18:17.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:17.648" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 94716-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:25.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:25.424" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:18:17.646" endtime="20211118 18:18:25.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:25.425" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:18:25.424" endtime="20211118 18:18:25.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:25.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:25.425" endtime="20211118 18:18:25.426"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.645" endtime="20211118 18:18:25.427"/>
</kw>
<msg timestamp="20211118 18:18:25.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:17.645" endtime="20211118 18:18:25.427"/>
</kw>
<status status="PASS" starttime="20211118 18:18:17.644" endtime="20211118 18:18:25.427"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:25.434" level="INFO">Running command 'ozone sh bucket getacl 94716-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:33.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:33.997" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211118 18:18:25.431" endtime="20211118 18:18:33.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:33.999" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211118 18:18:33.998" endtime="20211118 18:18:33.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:33.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:33.999" endtime="20211118 18:18:34.000"/>
</kw>
<status status="PASS" starttime="20211118 18:18:25.430" endtime="20211118 18:18:34.000"/>
</kw>
<msg timestamp="20211118 18:18:34.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:25.430" endtime="20211118 18:18:34.000"/>
</kw>
<msg timestamp="20211118 18:18:34.001" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211118 18:18:25.429" endtime="20211118 18:18:34.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:18:34.001" endtime="20211118 18:18:34.001"/>
</kw>
<status status="PASS" starttime="20211118 18:18:25.428" endtime="20211118 18:18:34.002"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:34.008" level="INFO">Running command 'ozone sh bucket getacl 94716-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:42.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:42.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:18:34.006" endtime="20211118 18:18:42.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:42.133" level="INFO"/>
<status status="PASS" starttime="20211118 18:18:42.131" endtime="20211118 18:18:42.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:42.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:42.133" endtime="20211118 18:18:42.134"/>
</kw>
<status status="PASS" starttime="20211118 18:18:34.005" endtime="20211118 18:18:42.134"/>
</kw>
<msg timestamp="20211118 18:18:42.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:34.005" endtime="20211118 18:18:42.135"/>
</kw>
<msg timestamp="20211118 18:18:42.135" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211118 18:18:34.003" endtime="20211118 18:18:42.135"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:18:42.135" endtime="20211118 18:18:42.136"/>
</kw>
<status status="PASS" starttime="20211118 18:18:34.002" endtime="20211118 18:18:42.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:42.140" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 94716-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:49.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:49.368" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:18:42.138" endtime="20211118 18:18:49.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:49.370" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:18:49.369" endtime="20211118 18:18:49.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:49.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:49.370" endtime="20211118 18:18:49.371"/>
</kw>
<status status="PASS" starttime="20211118 18:18:42.137" endtime="20211118 18:18:49.371"/>
</kw>
<msg timestamp="20211118 18:18:49.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:42.137" endtime="20211118 18:18:49.371"/>
</kw>
<status status="PASS" starttime="20211118 18:18:42.136" endtime="20211118 18:18:49.372"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:49.377" level="INFO">Running command 'ozone sh bucket getacl 94716-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:18:57.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:18:57.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:18:49.375" endtime="20211118 18:18:57.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:18:57.165" level="INFO"/>
<status status="PASS" starttime="20211118 18:18:57.164" endtime="20211118 18:18:57.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:18:57.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:18:57.166" endtime="20211118 18:18:57.167"/>
</kw>
<status status="PASS" starttime="20211118 18:18:49.374" endtime="20211118 18:18:57.168"/>
</kw>
<msg timestamp="20211118 18:18:57.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:49.374" endtime="20211118 18:18:57.168"/>
</kw>
<msg timestamp="20211118 18:18:57.169" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211118 18:18:49.373" endtime="20211118 18:18:57.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:18:57.169" endtime="20211118 18:18:57.171"/>
</kw>
<status status="PASS" starttime="20211118 18:18:49.372" endtime="20211118 18:18:57.171"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:18:57.181" level="INFO">Running command 'ozone sh bucket getacl 94716-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:04.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:04.527" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211118 18:18:57.177" endtime="20211118 18:19:04.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:04.529" level="INFO">READ</msg>
<status status="PASS" starttime="20211118 18:19:04.528" endtime="20211118 18:19:04.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:04.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:04.529" endtime="20211118 18:19:04.530"/>
</kw>
<status status="PASS" starttime="20211118 18:18:57.176" endtime="20211118 18:19:04.530"/>
</kw>
<msg timestamp="20211118 18:19:04.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:18:57.175" endtime="20211118 18:19:04.530"/>
</kw>
<msg timestamp="20211118 18:19:04.531" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211118 18:18:57.173" endtime="20211118 18:19:04.531"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:19:04.531" endtime="20211118 18:19:04.531"/>
</kw>
<status status="PASS" starttime="20211118 18:18:57.172" endtime="20211118 18:19:04.532"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:18:17.609" endtime="20211118 18:19:04.532"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:04.538" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:04.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:04.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:04.536" endtime="20211118 18:19:04.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:04.544" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:04.543" endtime="20211118 18:19:04.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:04.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:04.544" endtime="20211118 18:19:04.545"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.536" endtime="20211118 18:19:04.545"/>
</kw>
<msg timestamp="20211118 18:19:04.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:04.536" endtime="20211118 18:19:04.545"/>
</kw>
<msg timestamp="20211118 18:19:04.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:04.535" endtime="20211118 18:19:04.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:04.546" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:04.546" endtime="20211118 18:19:04.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:04.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:04.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:04.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:04.549" endtime="20211118 18:19:04.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:04.607" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:04.607" endtime="20211118 18:19:04.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:04.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:04.608" endtime="20211118 18:19:04.608"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.548" endtime="20211118 18:19:04.609"/>
</kw>
<msg timestamp="20211118 18:19:04.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:04.548" endtime="20211118 18:19:04.609"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.547" endtime="20211118 18:19:04.609"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.547" endtime="20211118 18:19:04.609"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.534" endtime="20211118 18:19:04.610"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.534" endtime="20211118 18:19:04.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:04.614" level="INFO">Running command 'ozone sh bucket link 94716-source/bucket2 94716-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:10.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:10.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:04.612" endtime="20211118 18:19:10.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:10.755" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:10.754" endtime="20211118 18:19:10.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:10.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:10.755" endtime="20211118 18:19:10.756"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.611" endtime="20211118 18:19:10.757"/>
</kw>
<msg timestamp="20211118 18:19:10.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:04.611" endtime="20211118 18:19:10.757"/>
</kw>
<status status="PASS" starttime="20211118 18:19:04.610" endtime="20211118 18:19:10.757"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:10.763" level="INFO">Running command 'ozone sh bucket create 94716-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:17.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:19:17.208" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211118 18:19:10.761" endtime="20211118 18:19:17.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:17.210" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211118 18:19:17.209" endtime="20211118 18:19:17.210"/>
</kw>
<msg timestamp="20211118 18:19:17.210" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211118 18:19:10.760" endtime="20211118 18:19:17.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:17.211" endtime="20211118 18:19:17.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:17.215" level="INFO">Running command 'ozone sh bucket create 94716-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:24.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:24.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:17.213" endtime="20211118 18:19:24.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:24.958" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:24.957" endtime="20211118 18:19:24.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:24.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:24.958" endtime="20211118 18:19:24.959"/>
</kw>
<status status="PASS" starttime="20211118 18:19:17.212" endtime="20211118 18:19:24.959"/>
</kw>
<msg timestamp="20211118 18:19:24.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:17.212" endtime="20211118 18:19:24.959"/>
</kw>
<status status="PASS" starttime="20211118 18:19:17.211" endtime="20211118 18:19:24.960"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:24.964" level="INFO">Running command 'ozone sh bucket link 94716-source/bucket1 94716-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:32.510" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:19:32.510" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211118 18:19:24.961" endtime="20211118 18:19:32.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:32.512" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211118 18:19:32.511" endtime="20211118 18:19:32.512"/>
</kw>
<msg timestamp="20211118 18:19:32.512" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211118 18:19:24.960" endtime="20211118 18:19:32.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:32.513" endtime="20211118 18:19:32.513"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:19:04.533" endtime="20211118 18:19:32.513"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:32.520" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:32.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:32.524" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:32.518" endtime="20211118 18:19:32.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:32.525" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:32.524" endtime="20211118 18:19:32.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:32.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:32.525" endtime="20211118 18:19:32.526"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.518" endtime="20211118 18:19:32.526"/>
</kw>
<msg timestamp="20211118 18:19:32.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:32.517" endtime="20211118 18:19:32.526"/>
</kw>
<msg timestamp="20211118 18:19:32.527" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:32.517" endtime="20211118 18:19:32.527"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:32.527" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:32.527" endtime="20211118 18:19:32.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:32.531" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:32.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:32.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:32.530" endtime="20211118 18:19:32.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:32.540" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:32.539" endtime="20211118 18:19:32.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:32.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:32.540" endtime="20211118 18:19:32.541"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.529" endtime="20211118 18:19:32.541"/>
</kw>
<msg timestamp="20211118 18:19:32.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:32.529" endtime="20211118 18:19:32.541"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.528" endtime="20211118 18:19:32.541"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.528" endtime="20211118 18:19:32.541"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.516" endtime="20211118 18:19:32.542"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.515" endtime="20211118 18:19:32.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:32.546" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:32.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:32.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:32.544" endtime="20211118 18:19:32.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:32.550" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:32.550" endtime="20211118 18:19:32.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:32.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:32.551" endtime="20211118 18:19:32.551"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.544" endtime="20211118 18:19:32.551"/>
</kw>
<msg timestamp="20211118 18:19:32.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:32.543" endtime="20211118 18:19:32.552"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.543" endtime="20211118 18:19:32.552"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:32.557" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:32.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:32.560" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:32.554" endtime="20211118 18:19:32.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:32.561" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:32.560" endtime="20211118 18:19:32.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:32.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:32.561" endtime="20211118 18:19:32.562"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.554" endtime="20211118 18:19:32.562"/>
</kw>
<msg timestamp="20211118 18:19:32.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:32.553" endtime="20211118 18:19:32.562"/>
</kw>
<msg timestamp="20211118 18:19:32.562" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:32.553" endtime="20211118 18:19:32.562"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:32.563" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:32.563" endtime="20211118 18:19:32.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:32.568" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:32.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:32.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:32.566" endtime="20211118 18:19:32.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:32.578" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:32.577" endtime="20211118 18:19:32.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:32.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:32.579" endtime="20211118 18:19:32.579"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.565" endtime="20211118 18:19:32.580"/>
</kw>
<msg timestamp="20211118 18:19:32.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:32.565" endtime="20211118 18:19:32.580"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.564" endtime="20211118 18:19:32.580"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.564" endtime="20211118 18:19:32.581"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.552" endtime="20211118 18:19:32.581"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.552" endtime="20211118 18:19:32.581"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:32.584" level="INFO">Running command 'ozone sh key list 94716-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:38.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:38.454" level="INFO">${output} = [ {
  "volumeName" : "94716-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-18T18:09:20.831Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211118 18:19:32.582" endtime="20211118 18:19:38.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:38.456" level="INFO">[ {
  "volumeName" : "94716-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-18T18:09:20.831Z",
  "modificationTime" : "2021-11-18T18:12:24.923Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211118 18:19:38.455" endtime="20211118 18:19:38.456"/>
</kw>
<msg timestamp="20211118 18:19:38.456" level="INFO">${result} = [ {
  "volumeName" : "94716-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-18T18:09:20.831Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211118 18:19:32.581" endtime="20211118 18:19:38.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:38.457" endtime="20211118 18:19:38.457"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.542" endtime="20211118 18:19:38.457"/>
</kw>
<status status="PASS" starttime="20211118 18:19:32.542" endtime="20211118 18:19:38.457"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:19:32.514" endtime="20211118 18:19:38.458"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:38.465" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:38.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:38.469" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:38.462" endtime="20211118 18:19:38.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:38.470" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:38.470" endtime="20211118 18:19:38.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:38.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:38.471" endtime="20211118 18:19:38.471"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.462" endtime="20211118 18:19:38.472"/>
</kw>
<msg timestamp="20211118 18:19:38.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:38.461" endtime="20211118 18:19:38.472"/>
</kw>
<msg timestamp="20211118 18:19:38.472" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:38.461" endtime="20211118 18:19:38.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:38.473" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:38.472" endtime="20211118 18:19:38.473"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:38.478" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:38.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:38.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:38.476" endtime="20211118 18:19:38.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:38.487" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:38.486" endtime="20211118 18:19:38.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:38.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:38.487" endtime="20211118 18:19:38.488"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.475" endtime="20211118 18:19:38.488"/>
</kw>
<msg timestamp="20211118 18:19:38.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:38.475" endtime="20211118 18:19:38.488"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.474" endtime="20211118 18:19:38.489"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.473" endtime="20211118 18:19:38.489"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.460" endtime="20211118 18:19:38.489"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.460" endtime="20211118 18:19:38.489"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:38.494" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:38.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:38.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:38.492" endtime="20211118 18:19:38.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:38.499" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:38.498" endtime="20211118 18:19:38.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:38.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:38.499" endtime="20211118 18:19:38.501"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.492" endtime="20211118 18:19:38.502"/>
</kw>
<msg timestamp="20211118 18:19:38.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:38.492" endtime="20211118 18:19:38.502"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.491" endtime="20211118 18:19:38.502"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:38.508" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:38.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:38.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:38.505" endtime="20211118 18:19:38.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:38.513" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:38.513" endtime="20211118 18:19:38.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:38.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:38.514" endtime="20211118 18:19:38.515"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.504" endtime="20211118 18:19:38.515"/>
</kw>
<msg timestamp="20211118 18:19:38.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:38.504" endtime="20211118 18:19:38.515"/>
</kw>
<msg timestamp="20211118 18:19:38.516" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:38.503" endtime="20211118 18:19:38.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:38.517" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:38.516" endtime="20211118 18:19:38.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:38.522" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:38.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:38.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:38.519" endtime="20211118 18:19:38.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:38.532" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:38.531" endtime="20211118 18:19:38.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:38.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:38.532" endtime="20211118 18:19:38.533"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.519" endtime="20211118 18:19:38.533"/>
</kw>
<msg timestamp="20211118 18:19:38.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:38.518" endtime="20211118 18:19:38.534"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.518" endtime="20211118 18:19:38.534"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.517" endtime="20211118 18:19:38.534"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.503" endtime="20211118 18:19:38.534"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.502" endtime="20211118 18:19:38.534"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:38.538" level="INFO">Running command 'ozone sh key list 94716-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:45.506" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:19:45.506" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:94716-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211118 18:19:38.535" endtime="20211118 18:19:45.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:45.508" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:94716-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211118 18:19:45.507" endtime="20211118 18:19:45.508"/>
</kw>
<msg timestamp="20211118 18:19:45.508" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:94716-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211118 18:19:38.535" endtime="20211118 18:19:45.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:45.509" endtime="20211118 18:19:45.509"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.490" endtime="20211118 18:19:45.509"/>
</kw>
<status status="PASS" starttime="20211118 18:19:38.490" endtime="20211118 18:19:45.509"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:19:38.458" endtime="20211118 18:19:45.510"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:45.523" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:45.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:45.528" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:45.519" endtime="20211118 18:19:45.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:45.530" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:45.529" endtime="20211118 18:19:45.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:45.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:45.531" endtime="20211118 18:19:45.532"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.518" endtime="20211118 18:19:45.534"/>
</kw>
<msg timestamp="20211118 18:19:45.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:45.518" endtime="20211118 18:19:45.534"/>
</kw>
<msg timestamp="20211118 18:19:45.535" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:45.515" endtime="20211118 18:19:45.535"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:45.536" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:45.535" endtime="20211118 18:19:45.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:45.544" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:45.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:45.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:45.540" endtime="20211118 18:19:45.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:45.556" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:45.555" endtime="20211118 18:19:45.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:45.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:45.557" endtime="20211118 18:19:45.558"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.539" endtime="20211118 18:19:45.559"/>
</kw>
<msg timestamp="20211118 18:19:45.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:45.538" endtime="20211118 18:19:45.559"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.537" endtime="20211118 18:19:45.559"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.536" endtime="20211118 18:19:45.559"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.514" endtime="20211118 18:19:45.560"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.512" endtime="20211118 18:19:45.560"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:45.566" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:45.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:45.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:45.564" endtime="20211118 18:19:45.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:45.574" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:45.573" endtime="20211118 18:19:45.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:45.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:45.574" endtime="20211118 18:19:45.576"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.563" endtime="20211118 18:19:45.576"/>
</kw>
<msg timestamp="20211118 18:19:45.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:45.562" endtime="20211118 18:19:45.577"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.562" endtime="20211118 18:19:45.577"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:45.585" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:45.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:45.590" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:45.582" endtime="20211118 18:19:45.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:45.592" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:45.592" endtime="20211118 18:19:45.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:45.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:45.593" endtime="20211118 18:19:45.594"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.581" endtime="20211118 18:19:45.595"/>
</kw>
<msg timestamp="20211118 18:19:45.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:45.580" endtime="20211118 18:19:45.595"/>
</kw>
<msg timestamp="20211118 18:19:45.596" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:45.579" endtime="20211118 18:19:45.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:45.597" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:45.596" endtime="20211118 18:19:45.597"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:45.602" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:45.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:45.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:45.600" endtime="20211118 18:19:45.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:45.617" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:45.616" endtime="20211118 18:19:45.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:45.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:45.617" endtime="20211118 18:19:45.618"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.599" endtime="20211118 18:19:45.619"/>
</kw>
<msg timestamp="20211118 18:19:45.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:45.599" endtime="20211118 18:19:45.619"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.598" endtime="20211118 18:19:45.619"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.597" endtime="20211118 18:19:45.620"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.578" endtime="20211118 18:19:45.620"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.577" endtime="20211118 18:19:45.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:45.625" level="INFO">Running command 'ozone sh bucket info 94716-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:51.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:51.457" level="INFO">${output} = {
  "volumeName" : "94716-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-18T18:12:53.673Z...</msg>
<status status="PASS" starttime="20211118 18:19:45.622" endtime="20211118 18:19:51.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:51.460" level="INFO">{
  "volumeName" : "94716-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-18T18:12:53.673Z",
  "modificationTime" : "2021-11-18T18:13:27.885Z"
}</msg>
<status status="PASS" starttime="20211118 18:19:51.458" endtime="20211118 18:19:51.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:51.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:51.460" endtime="20211118 18:19:51.461"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.621" endtime="20211118 18:19:51.462"/>
</kw>
<msg timestamp="20211118 18:19:51.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:45.621" endtime="20211118 18:19:51.462"/>
</kw>
<msg timestamp="20211118 18:19:51.462" level="INFO">${result} = {
  "volumeName" : "94716-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-18T18:12:53.673Z...</msg>
<status status="PASS" starttime="20211118 18:19:45.620" endtime="20211118 18:19:51.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:51.462" endtime="20211118 18:19:51.463"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:51.463" endtime="20211118 18:19:51.464"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:51.472" level="INFO">Running command 'ozone sh key list 94716-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:58.113" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:19:58.113" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:94716-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211118 18:19:51.466" endtime="20211118 18:19:58.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:58.114" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:94716-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211118 18:19:58.113" endtime="20211118 18:19:58.114"/>
</kw>
<msg timestamp="20211118 18:19:58.115" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:94716-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211118 18:19:51.464" endtime="20211118 18:19:58.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:19:58.115" endtime="20211118 18:19:58.115"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.561" endtime="20211118 18:19:58.115"/>
</kw>
<status status="PASS" starttime="20211118 18:19:45.560" endtime="20211118 18:19:58.116"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:19:45.511" endtime="20211118 18:19:58.116"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:58.122" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:58.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:58.127" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:19:58.120" endtime="20211118 18:19:58.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:58.128" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:19:58.127" endtime="20211118 18:19:58.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:58.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:58.128" endtime="20211118 18:19:58.129"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.120" endtime="20211118 18:19:58.129"/>
</kw>
<msg timestamp="20211118 18:19:58.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:58.119" endtime="20211118 18:19:58.129"/>
</kw>
<msg timestamp="20211118 18:19:58.129" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:19:58.119" endtime="20211118 18:19:58.129"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:19:58.131" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:19:58.130" endtime="20211118 18:19:58.131"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:58.136" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:19:58.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:19:58.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:58.134" endtime="20211118 18:19:58.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:19:58.146" level="INFO"/>
<status status="PASS" starttime="20211118 18:19:58.145" endtime="20211118 18:19:58.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:19:58.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:19:58.146" endtime="20211118 18:19:58.147"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.133" endtime="20211118 18:19:58.147"/>
</kw>
<msg timestamp="20211118 18:19:58.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:58.133" endtime="20211118 18:19:58.148"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.132" endtime="20211118 18:19:58.148"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.132" endtime="20211118 18:19:58.148"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.118" endtime="20211118 18:19:58.148"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.118" endtime="20211118 18:19:58.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:19:58.153" level="INFO">Running command 'ozone sh bucket link 94716-target/loop1 94716-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:03.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:20:03.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:19:58.151" endtime="20211118 18:20:03.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:03.222" level="INFO"/>
<status status="PASS" starttime="20211118 18:20:03.221" endtime="20211118 18:20:03.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:20:03.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:20:03.223" endtime="20211118 18:20:03.223"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.149" endtime="20211118 18:20:03.224"/>
</kw>
<msg timestamp="20211118 18:20:03.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:19:58.149" endtime="20211118 18:20:03.224"/>
</kw>
<status status="PASS" starttime="20211118 18:19:58.148" endtime="20211118 18:20:03.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:03.228" level="INFO">Running command 'ozone sh bucket link 94716-target/loop2 94716-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:11.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:20:11.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:20:03.226" endtime="20211118 18:20:11.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:11.777" level="INFO"/>
<status status="PASS" starttime="20211118 18:20:11.776" endtime="20211118 18:20:11.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:20:11.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:20:11.777" endtime="20211118 18:20:11.778"/>
</kw>
<status status="PASS" starttime="20211118 18:20:03.226" endtime="20211118 18:20:11.778"/>
</kw>
<msg timestamp="20211118 18:20:11.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:20:03.225" endtime="20211118 18:20:11.779"/>
</kw>
<status status="PASS" starttime="20211118 18:20:03.225" endtime="20211118 18:20:11.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:11.787" level="INFO">Running command 'ozone sh bucket link 94716-target/loop3 94716-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:20.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:20:20.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:20:11.782" endtime="20211118 18:20:20.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:20.541" level="INFO"/>
<status status="PASS" starttime="20211118 18:20:20.540" endtime="20211118 18:20:20.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:20:20.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:20:20.541" endtime="20211118 18:20:20.542"/>
</kw>
<status status="PASS" starttime="20211118 18:20:11.781" endtime="20211118 18:20:20.542"/>
</kw>
<msg timestamp="20211118 18:20:20.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:20:11.781" endtime="20211118 18:20:20.542"/>
</kw>
<status status="PASS" starttime="20211118 18:20:11.780" endtime="20211118 18:20:20.543"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:20.547" level="INFO">Running command 'ozone sh key list 94716-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:28.918" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:20:28.919" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211118 18:20:20.543" endtime="20211118 18:20:28.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:28.920" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211118 18:20:28.919" endtime="20211118 18:20:28.921"/>
</kw>
<msg timestamp="20211118 18:20:28.921" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211118 18:20:20.543" endtime="20211118 18:20:28.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:20:28.921" endtime="20211118 18:20:28.922"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:19:58.116" endtime="20211118 18:20:28.922"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:28.935" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:28.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:20:28.941" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:20:28.931" endtime="20211118 18:20:28.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:28.944" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:20:28.942" endtime="20211118 18:20:28.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:20:28.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:20:28.944" endtime="20211118 18:20:28.946"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.930" endtime="20211118 18:20:28.947"/>
</kw>
<msg timestamp="20211118 18:20:28.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:20:28.929" endtime="20211118 18:20:28.948"/>
</kw>
<msg timestamp="20211118 18:20:28.948" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:20:28.928" endtime="20211118 18:20:28.948"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:20:28.950" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:20:28.949" endtime="20211118 18:20:28.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:28.959" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:28.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:20:28.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:20:28.957" endtime="20211118 18:20:28.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:28.972" level="INFO"/>
<status status="PASS" starttime="20211118 18:20:28.971" endtime="20211118 18:20:28.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:20:28.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:20:28.973" endtime="20211118 18:20:28.974"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.955" endtime="20211118 18:20:28.974"/>
</kw>
<msg timestamp="20211118 18:20:28.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:20:28.954" endtime="20211118 18:20:28.974"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.952" endtime="20211118 18:20:28.975"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.950" endtime="20211118 18:20:28.975"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.927" endtime="20211118 18:20:28.975"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.925" endtime="20211118 18:20:28.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:28.981" level="INFO">Running command 'ozone sh bucket link 94716-source/bucket1 94716-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:20:36.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:20:36.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:20:28.978" endtime="20211118 18:20:36.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:20:36.642" level="INFO"/>
<status status="PASS" starttime="20211118 18:20:36.640" endtime="20211118 18:20:36.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:20:36.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:20:36.642" endtime="20211118 18:20:36.643"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.977" endtime="20211118 18:20:36.644"/>
</kw>
<msg timestamp="20211118 18:20:36.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:20:28.977" endtime="20211118 18:20:36.644"/>
</kw>
<status status="PASS" starttime="20211118 18:20:28.976" endtime="20211118 18:20:36.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:20:36.653" level="INFO">Running command 'ozone sh key put 94716-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:22:28.926" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:20:36.650" endtime="20211118 18:22:28.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:22:28.926" endtime="20211118 18:22:28.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:22:28.927" endtime="20211118 18:22:28.927"/>
</kw>
<status status="FAIL" starttime="20211118 18:20:36.648" endtime="20211118 18:22:28.927"/>
</kw>
<msg timestamp="20211118 18:22:28.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:20:36.647" endtime="20211118 18:22:28.927"/>
</kw>
<status status="FAIL" starttime="20211118 18:20:36.646" endtime="20211118 18:22:28.928"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211118 18:22:28.928" endtime="20211118 18:22:28.928"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211118 18:20:28.924" endtime="20211118 18:22:28.928">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:22:28.937" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:22:28.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:22:28.944" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:22:28.934" endtime="20211118 18:22:28.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:22:28.946" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:22:28.944" endtime="20211118 18:22:28.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:22:28.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:22:28.946" endtime="20211118 18:22:28.948"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.934" endtime="20211118 18:22:28.949"/>
</kw>
<msg timestamp="20211118 18:22:28.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:22:28.933" endtime="20211118 18:22:28.949"/>
</kw>
<msg timestamp="20211118 18:22:28.950" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:22:28.933" endtime="20211118 18:22:28.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:22:28.951" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:22:28.950" endtime="20211118 18:22:28.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:22:28.959" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:22:28.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:22:28.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:22:28.956" endtime="20211118 18:22:28.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:22:28.972" level="INFO"/>
<status status="PASS" starttime="20211118 18:22:28.970" endtime="20211118 18:22:28.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:22:28.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:22:28.972" endtime="20211118 18:22:28.974"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.955" endtime="20211118 18:22:28.975"/>
</kw>
<msg timestamp="20211118 18:22:28.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:22:28.954" endtime="20211118 18:22:28.975"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.953" endtime="20211118 18:22:28.975"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.952" endtime="20211118 18:22:28.975"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.932" endtime="20211118 18:22:28.976"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.931" endtime="20211118 18:22:28.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:22:28.981" level="INFO">Running command 'ozone sh bucket delete 94716-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:22:37.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:22:37.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:22:28.978" endtime="20211118 18:22:37.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:22:37.033" level="INFO"/>
<status status="PASS" starttime="20211118 18:22:37.029" endtime="20211118 18:22:37.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:22:37.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:22:37.033" endtime="20211118 18:22:37.034"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.977" endtime="20211118 18:22:37.034"/>
</kw>
<msg timestamp="20211118 18:22:37.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:22:28.977" endtime="20211118 18:22:37.034"/>
</kw>
<status status="PASS" starttime="20211118 18:22:28.976" endtime="20211118 18:22:37.034"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:22:37.042" level="INFO">Running command 'ozone sh bucket list 94716-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:22:44.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:22:44.013" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-1...</msg>
<status status="PASS" starttime="20211118 18:22:37.037" endtime="20211118 18:22:44.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:22:44.015" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:19:24.872Z",
  "modificationTime" : "2021-11-18T18:19:24.872Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:13:35.541Z",
  "modificationTime" : "2021-11-18T18:13:35.541Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:12:53.673Z",
  "modificationTime" : "2021-11-18T18:13:27.885Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:19:10.680Z",
  "modificationTime" : "2021-11-18T18:19:10.680Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:20:36.553Z",
  "modificationTime" : "2021-11-18T18:20:36.553Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:20:20.140Z",
  "modificationTime" : "2021-11-18T18:20:20.140Z",
  "sourceVolume" : "94716-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:20:02.982Z",
  "modificationTime" : "2021-11-18T18:20:02.982Z",
  "sourceVolume" : "94716-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:20:11.663Z",
  "modificationTime" : "2021-11-18T18:20:11.663Z",
  "sourceVolume" : "94716-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:12:40.575Z",
  "modificationTime" : "2021-11-18T18:13:19.973Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-18T18:12:47.550Z",
  "modificationTime" : "2021-11-18T18:12:47.550Z",
  "sourceVolume" : "94716-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
} ]</msg>
<status status="PASS" starttime="20211118 18:22:44.014" endtime="20211118 18:22:44.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:22:44.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:22:44.015" endtime="20211118 18:22:44.017"/>
</kw>
<status status="PASS" starttime="20211118 18:22:37.036" endtime="20211118 18:22:44.018"/>
</kw>
<msg timestamp="20211118 18:22:44.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:22:37.035" endtime="20211118 18:22:44.018"/>
</kw>
<msg timestamp="20211118 18:22:44.019" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "94716-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-1...</msg>
<status status="PASS" starttime="20211118 18:22:37.034" endtime="20211118 18:22:44.019"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:22:44.020" endtime="20211118 18:22:44.021"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:22:44.027" level="INFO">Running command 'ozone sh key list 94716-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:22:53.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:22:53.349" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211118 18:22:44.024" endtime="20211118 18:22:53.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:22:53.350" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211118 18:22:53.349" endtime="20211118 18:22:53.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:22:53.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:22:53.351" endtime="20211118 18:22:53.352"/>
</kw>
<status status="PASS" starttime="20211118 18:22:44.023" endtime="20211118 18:22:53.353"/>
</kw>
<msg timestamp="20211118 18:22:53.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:22:44.022" endtime="20211118 18:22:53.353"/>
</kw>
<msg timestamp="20211118 18:22:53.354" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211118 18:22:44.021" endtime="20211118 18:22:53.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:22:53.354" endtime="20211118 18:22:53.355"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:22:28.929" endtime="20211118 18:22:53.356"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211118 18:08:51.108" endtime="20211118 18:22:53.359"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211118 18:22:53.399" level="INFO">${random} = 67167</msg>
<status status="PASS" starttime="20211118 18:22:53.398" endtime="20211118 18:22:53.399"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:22:53.400" level="INFO">${prefix} = 67167</msg>
<status status="PASS" starttime="20211118 18:22:53.399" endtime="20211118 18:22:53.400"/>
</kw>
<status status="PASS" starttime="20211118 18:22:53.398" endtime="20211118 18:22:53.401"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:22:53.408" level="INFO">Running command 'ozone sh volume info /67167-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:01.684" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:23:01.684" level="INFO">${output} = VOLUME_NOT_FOUND Volume 67167-rpcbasic is not found</msg>
<status status="PASS" starttime="20211118 18:22:53.405" endtime="20211118 18:23:01.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:01.688" level="INFO">VOLUME_NOT_FOUND Volume 67167-rpcbasic is not found</msg>
<status status="PASS" starttime="20211118 18:23:01.686" endtime="20211118 18:23:01.688"/>
</kw>
<msg timestamp="20211118 18:23:01.689" level="INFO">${result} = VOLUME_NOT_FOUND Volume 67167-rpcbasic is not found</msg>
<status status="PASS" starttime="20211118 18:22:53.404" endtime="20211118 18:23:01.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:23:01.689" endtime="20211118 18:23:01.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:01.698" level="INFO">Running command 'ozone sh volume create /67167-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:10.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:10.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:23:01.695" endtime="20211118 18:23:10.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:10.720" level="INFO"/>
<status status="PASS" starttime="20211118 18:23:10.719" endtime="20211118 18:23:10.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:10.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:10.721" endtime="20211118 18:23:10.723"/>
</kw>
<status status="PASS" starttime="20211118 18:23:01.693" endtime="20211118 18:23:10.724"/>
</kw>
<msg timestamp="20211118 18:23:10.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:01.692" endtime="20211118 18:23:10.725"/>
</kw>
<msg timestamp="20211118 18:23:10.726" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211118 18:23:01.691" endtime="20211118 18:23:10.726"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:23:10.726" endtime="20211118 18:23:10.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:10.738" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="67167-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:17.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:17.076" level="INFO">${output} = {
  "metadata": {},
  "name": "67167-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:23:10.733" endtime="20211118 18:23:17.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:17.077" level="INFO">{
  "metadata": {},
  "name": "67167-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:23:10.616Z",
  "modificationTime": "2021-11-18T18:23:10.616Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:23:17.077" endtime="20211118 18:23:17.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:17.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:17.078" endtime="20211118 18:23:17.078"/>
</kw>
<status status="PASS" starttime="20211118 18:23:10.732" endtime="20211118 18:23:17.079"/>
</kw>
<msg timestamp="20211118 18:23:17.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:10.731" endtime="20211118 18:23:17.079"/>
</kw>
<msg timestamp="20211118 18:23:17.079" level="INFO">${result} = {
  "metadata": {},
  "name": "67167-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:23:10.728" endtime="20211118 18:23:17.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:23:17.080" endtime="20211118 18:23:17.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:17.087" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="67167-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:24.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:24.296" level="INFO">${output} = {
  "metadata": {},
  "name": "67167-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:23:17.084" endtime="20211118 18:23:24.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:24.297" level="INFO">{
  "metadata": {},
  "name": "67167-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:23:10.616Z",
  "modificationTime": "2021-11-18T18:23:10.616Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:23:24.296" endtime="20211118 18:23:24.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:24.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:24.298" endtime="20211118 18:23:24.298"/>
</kw>
<status status="PASS" starttime="20211118 18:23:17.083" endtime="20211118 18:23:24.299"/>
</kw>
<msg timestamp="20211118 18:23:24.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:17.082" endtime="20211118 18:23:24.299"/>
</kw>
<msg timestamp="20211118 18:23:24.299" level="INFO">${result} = {
  "metadata": {},
  "name": "67167-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:23:17.081" endtime="20211118 18:23:24.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:23:24.300" endtime="20211118 18:23:24.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:24.311" level="INFO">Running command 'ozone sh volume setquota /67167-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:30.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:30.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:23:24.302" endtime="20211118 18:23:30.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:30.214" level="INFO"/>
<status status="PASS" starttime="20211118 18:23:30.214" endtime="20211118 18:23:30.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:30.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:30.215" endtime="20211118 18:23:30.215"/>
</kw>
<status status="PASS" starttime="20211118 18:23:24.301" endtime="20211118 18:23:30.216"/>
</kw>
<msg timestamp="20211118 18:23:30.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:24.301" endtime="20211118 18:23:30.216"/>
</kw>
<status status="PASS" starttime="20211118 18:23:24.300" endtime="20211118 18:23:30.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:30.220" level="INFO">Running command 'ozone sh volume info /67167-rpcbasic | jq -r '. | select(.name=="67167-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:36.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:36.647" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:23:30.218" endtime="20211118 18:23:36.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:36.650" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:23:36.648" endtime="20211118 18:23:36.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:36.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:36.651" endtime="20211118 18:23:36.652"/>
</kw>
<status status="PASS" starttime="20211118 18:23:30.218" endtime="20211118 18:23:36.652"/>
</kw>
<msg timestamp="20211118 18:23:36.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:30.217" endtime="20211118 18:23:36.653"/>
</kw>
<msg timestamp="20211118 18:23:36.653" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:23:30.216" endtime="20211118 18:23:36.653"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:23:36.653" endtime="20211118 18:23:36.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:36.660" level="INFO">Running command 'ozone sh bucket create /67167-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:45.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:45.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:23:36.657" endtime="20211118 18:23:45.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:45.219" level="INFO"/>
<status status="PASS" starttime="20211118 18:23:45.218" endtime="20211118 18:23:45.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:45.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:45.219" endtime="20211118 18:23:45.220"/>
</kw>
<status status="PASS" starttime="20211118 18:23:36.656" endtime="20211118 18:23:45.220"/>
</kw>
<msg timestamp="20211118 18:23:45.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:36.655" endtime="20211118 18:23:45.220"/>
</kw>
<status status="PASS" starttime="20211118 18:23:36.654" endtime="20211118 18:23:45.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:45.228" level="INFO">Running command 'ozone sh bucket info /67167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:23:55.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:23:55.111" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211118 18:23:45.223" endtime="20211118 18:23:55.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:23:55.113" level="INFO">DISK</msg>
<status status="PASS" starttime="20211118 18:23:55.112" endtime="20211118 18:23:55.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:23:55.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:23:55.114" endtime="20211118 18:23:55.116"/>
</kw>
<status status="PASS" starttime="20211118 18:23:45.222" endtime="20211118 18:23:55.116"/>
</kw>
<msg timestamp="20211118 18:23:55.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:45.222" endtime="20211118 18:23:55.116"/>
</kw>
<msg timestamp="20211118 18:23:55.117" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211118 18:23:45.221" endtime="20211118 18:23:55.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:23:55.117" endtime="20211118 18:23:55.118"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:23:55.126" level="INFO">Running command 'ozone sh bucket info /67167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:24:02.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:24:02.200" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:23:55.122" endtime="20211118 18:24:02.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:24:02.202" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:24:02.201" endtime="20211118 18:24:02.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:24:02.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:24:02.203" endtime="20211118 18:24:02.204"/>
</kw>
<status status="PASS" starttime="20211118 18:23:55.121" endtime="20211118 18:24:02.204"/>
</kw>
<msg timestamp="20211118 18:24:02.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:23:55.120" endtime="20211118 18:24:02.205"/>
</kw>
<msg timestamp="20211118 18:24:02.205" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:23:55.118" endtime="20211118 18:24:02.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:24:02.205" endtime="20211118 18:24:02.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:24:02.210" level="INFO">Running command 'ozone sh bucket info /67167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:24:10.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:24:10.052" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211118 18:24:02.208" endtime="20211118 18:24:10.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:24:10.055" level="INFO">100</msg>
<status status="PASS" starttime="20211118 18:24:10.053" endtime="20211118 18:24:10.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:24:10.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:24:10.056" endtime="20211118 18:24:10.057"/>
</kw>
<status status="PASS" starttime="20211118 18:24:02.207" endtime="20211118 18:24:10.058"/>
</kw>
<msg timestamp="20211118 18:24:10.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:24:02.207" endtime="20211118 18:24:10.060"/>
</kw>
<msg timestamp="20211118 18:24:10.060" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211118 18:24:02.206" endtime="20211118 18:24:10.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:24:10.061" endtime="20211118 18:24:10.061"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:24:10.067" level="INFO">Running command 'ozone sh bucket setquota /67167-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:24:18.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:24:18.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:24:10.064" endtime="20211118 18:24:18.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:24:18.231" level="INFO"/>
<status status="PASS" starttime="20211118 18:24:18.229" endtime="20211118 18:24:18.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:24:18.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:24:18.231" endtime="20211118 18:24:18.232"/>
</kw>
<status status="PASS" starttime="20211118 18:24:10.063" endtime="20211118 18:24:18.232"/>
</kw>
<msg timestamp="20211118 18:24:18.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:24:10.062" endtime="20211118 18:24:18.232"/>
</kw>
<status status="PASS" starttime="20211118 18:24:10.061" endtime="20211118 18:24:18.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:24:18.238" level="INFO">Running command 'ozone sh bucket info /67167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:24:24.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:24:24.452" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:24:18.235" endtime="20211118 18:24:24.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:24:24.454" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211118 18:24:24.453" endtime="20211118 18:24:24.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:24:24.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:24:24.454" endtime="20211118 18:24:24.456"/>
</kw>
<status status="PASS" starttime="20211118 18:24:18.234" endtime="20211118 18:24:24.457"/>
</kw>
<msg timestamp="20211118 18:24:24.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:24:18.234" endtime="20211118 18:24:24.458"/>
</kw>
<msg timestamp="20211118 18:24:24.458" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:24:18.233" endtime="20211118 18:24:24.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:24:24.459" endtime="20211118 18:24:24.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:24:24.472" level="INFO">Running command 'ozone sh bucket info /67167-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:24:32.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:24:32.565" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211118 18:24:24.468" endtime="20211118 18:24:32.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:24:32.567" level="INFO">1000</msg>
<status status="PASS" starttime="20211118 18:24:32.566" endtime="20211118 18:24:32.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:24:32.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:24:32.567" endtime="20211118 18:24:32.567"/>
</kw>
<status status="PASS" starttime="20211118 18:24:24.466" endtime="20211118 18:24:32.568"/>
</kw>
<msg timestamp="20211118 18:24:32.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:24:24.464" endtime="20211118 18:24:32.568"/>
</kw>
<msg timestamp="20211118 18:24:32.568" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211118 18:24:24.461" endtime="20211118 18:24:32.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:24:32.569" endtime="20211118 18:24:32.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:24:32.575" level="INFO">Running command 'ozone sh bucket list /67167-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:24:38.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:24:38.828" level="INFO">${output} = 67167-rpcbasic</msg>
<status status="PASS" starttime="20211118 18:24:32.572" endtime="20211118 18:24:38.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:24:38.829" level="INFO">67167-rpcbasic</msg>
<status status="PASS" starttime="20211118 18:24:38.828" endtime="20211118 18:24:38.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:24:38.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:24:38.829" endtime="20211118 18:24:38.830"/>
</kw>
<status status="PASS" starttime="20211118 18:24:32.572" endtime="20211118 18:24:38.830"/>
</kw>
<msg timestamp="20211118 18:24:38.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:24:32.571" endtime="20211118 18:24:38.831"/>
</kw>
<msg timestamp="20211118 18:24:38.831" level="INFO">${result} = 67167-rpcbasic</msg>
<status status="PASS" starttime="20211118 18:24:32.569" endtime="20211118 18:24:38.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:24:38.831" endtime="20211118 18:24:38.832"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:24:38.838" level="INFO">Running command 'ozone sh key put /67167-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:27:49.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:27:49.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:24:38.835" endtime="20211118 18:27:49.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:27:49.503" level="INFO"/>
<status status="PASS" starttime="20211118 18:27:49.501" endtime="20211118 18:27:49.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:27:49.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:27:49.503" endtime="20211118 18:27:49.504"/>
</kw>
<status status="PASS" starttime="20211118 18:24:38.834" endtime="20211118 18:27:49.505"/>
</kw>
<msg timestamp="20211118 18:27:49.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:24:38.834" endtime="20211118 18:27:49.505"/>
</kw>
<status status="PASS" starttime="20211118 18:24:38.833" endtime="20211118 18:27:49.506"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:27:49.512" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:27:49.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:27:49.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:27:49.509" endtime="20211118 18:27:49.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:27:49.518" level="INFO"/>
<status status="PASS" starttime="20211118 18:27:49.517" endtime="20211118 18:27:49.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:27:49.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:27:49.519" endtime="20211118 18:27:49.519"/>
</kw>
<status status="PASS" starttime="20211118 18:27:49.508" endtime="20211118 18:27:49.520"/>
</kw>
<msg timestamp="20211118 18:27:49.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:27:49.507" endtime="20211118 18:27:49.520"/>
</kw>
<status status="PASS" starttime="20211118 18:27:49.506" endtime="20211118 18:27:49.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:27:49.524" level="INFO">Running command 'ozone sh key get /67167-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:27:53.402" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:27:49.522" endtime="20211118 18:27:53.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.403" endtime="20211118 18:27:53.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.403" endtime="20211118 18:27:53.403"/>
</kw>
<status status="FAIL" starttime="20211118 18:27:49.522" endtime="20211118 18:27:53.404"/>
</kw>
<msg timestamp="20211118 18:27:53.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:27:49.521" endtime="20211118 18:27:53.405"/>
</kw>
<status status="FAIL" starttime="20211118 18:27:49.521" endtime="20211118 18:27:53.405"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.405" endtime="20211118 18:27:53.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.405" endtime="20211118 18:27:53.406"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.406" endtime="20211118 18:27:53.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.406" endtime="20211118 18:27:53.406"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.406" endtime="20211118 18:27:53.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.406" endtime="20211118 18:27:53.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.407" endtime="20211118 18:27:53.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.407" endtime="20211118 18:27:53.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.407" endtime="20211118 18:27:53.407"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.407" endtime="20211118 18:27:53.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.407" endtime="20211118 18:27:53.408"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.408" endtime="20211118 18:27:53.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.408" endtime="20211118 18:27:53.408"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.408" endtime="20211118 18:27:53.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.408" endtime="20211118 18:27:53.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.409" endtime="20211118 18:27:53.409"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.409" endtime="20211118 18:27:53.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.411" endtime="20211118 18:27:53.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.411" endtime="20211118 18:27:53.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.412" endtime="20211118 18:27:53.412"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.412" endtime="20211118 18:27:53.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.412" endtime="20211118 18:27:53.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.415" endtime="20211118 18:27:53.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.415" endtime="20211118 18:27:53.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.416" endtime="20211118 18:27:53.416"/>
</kw>
<status status="FAIL" starttime="20211118 18:24:38.832" endtime="20211118 18:27:53.416"/>
</kw>
<status status="FAIL" starttime="20211118 18:24:38.832" endtime="20211118 18:27:53.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.416" endtime="20211118 18:27:53.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.416" endtime="20211118 18:27:53.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.417" endtime="20211118 18:27:53.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.417" endtime="20211118 18:27:53.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.419" endtime="20211118 18:27:53.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.419" endtime="20211118 18:27:53.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.420" endtime="20211118 18:27:53.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.420" endtime="20211118 18:27:53.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.420" endtime="20211118 18:27:53.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.420" endtime="20211118 18:27:53.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.420" endtime="20211118 18:27:53.421"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.421" endtime="20211118 18:27:53.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.421" endtime="20211118 18:27:53.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.423" endtime="20211118 18:27:53.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.424" endtime="20211118 18:27:53.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.424" endtime="20211118 18:27:53.424"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.424" endtime="20211118 18:27:53.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.424" endtime="20211118 18:27:53.425"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.425" endtime="20211118 18:27:53.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.425" endtime="20211118 18:27:53.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.425" endtime="20211118 18:27:53.425"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.426" endtime="20211118 18:27:53.426"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.427" endtime="20211118 18:27:53.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:27:53.428" endtime="20211118 18:27:53.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.428" endtime="20211118 18:27:53.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:27:53.428" endtime="20211118 18:27:53.428"/>
</kw>
<status status="FAIL" starttime="20211118 18:22:53.402" endtime="20211118 18:27:53.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211118 18:22:53.401" endtime="20211118 18:27:53.430">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211118 18:22:53.367" endtime="20211118 18:27:53.433"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211118 18:27:53.457" level="INFO">${random} = 15022</msg>
<status status="PASS" starttime="20211118 18:27:53.456" endtime="20211118 18:27:53.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:27:53.457" level="INFO">${prefix} = 15022</msg>
<status status="PASS" starttime="20211118 18:27:53.457" endtime="20211118 18:27:53.457"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.456" endtime="20211118 18:27:53.457"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:27:53.479" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:27:53.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:27:53.492" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:27:53.469" endtime="20211118 18:27:53.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:27:53.494" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:27:53.493" endtime="20211118 18:27:53.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:27:53.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:27:53.494" endtime="20211118 18:27:53.495"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.468" endtime="20211118 18:27:53.496"/>
</kw>
<msg timestamp="20211118 18:27:53.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:27:53.464" endtime="20211118 18:27:53.496"/>
</kw>
<msg timestamp="20211118 18:27:53.496" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:27:53.463" endtime="20211118 18:27:53.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:27:53.500" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:27:53.496" endtime="20211118 18:27:53.500"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:27:53.519" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:27:53.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:27:53.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:27:53.509" endtime="20211118 18:27:53.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:27:53.590" level="INFO"/>
<status status="PASS" starttime="20211118 18:27:53.589" endtime="20211118 18:27:53.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:27:53.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:27:53.591" endtime="20211118 18:27:53.592"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.507" endtime="20211118 18:27:53.592"/>
</kw>
<msg timestamp="20211118 18:27:53.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:27:53.501" endtime="20211118 18:27:53.592"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.501" endtime="20211118 18:27:53.593"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.500" endtime="20211118 18:27:53.593"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.463" endtime="20211118 18:27:53.593"/>
</kw>
<status status="PASS" starttime="20211118 18:27:53.462" endtime="20211118 18:27:53.593"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:27:53.604" level="INFO">Running command 'ozone sh volume info o3://om:9862/15022-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:06.946" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:28:06.946" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15022-rpcwoport is not found</msg>
<status status="PASS" starttime="20211118 18:27:53.596" endtime="20211118 18:28:06.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:06.947" level="INFO">VOLUME_NOT_FOUND Volume 15022-rpcwoport is not found</msg>
<status status="PASS" starttime="20211118 18:28:06.946" endtime="20211118 18:28:06.947"/>
</kw>
<msg timestamp="20211118 18:28:06.948" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15022-rpcwoport is not found</msg>
<status status="PASS" starttime="20211118 18:27:53.594" endtime="20211118 18:28:06.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:28:06.948" endtime="20211118 18:28:06.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:06.953" level="INFO">Running command 'ozone sh volume create o3://om:9862/15022-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:15.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:28:15.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:28:06.950" endtime="20211118 18:28:15.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:15.216" level="INFO"/>
<status status="PASS" starttime="20211118 18:28:15.215" endtime="20211118 18:28:15.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:28:15.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:28:15.216" endtime="20211118 18:28:15.217"/>
</kw>
<status status="PASS" starttime="20211118 18:28:06.950" endtime="20211118 18:28:15.218"/>
</kw>
<msg timestamp="20211118 18:28:15.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:06.949" endtime="20211118 18:28:15.218"/>
</kw>
<msg timestamp="20211118 18:28:15.218" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211118 18:28:06.948" endtime="20211118 18:28:15.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:28:15.219" endtime="20211118 18:28:15.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:15.225" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="15022-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:23.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:28:23.676" level="INFO">${output} = {
  "metadata": {},
  "name": "15022-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211118 18:28:15.223" endtime="20211118 18:28:23.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:23.678" level="INFO">{
  "metadata": {},
  "name": "15022-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:28:14.820Z",
  "modificationTime": "2021-11-18T18:28:14.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:28:23.677" endtime="20211118 18:28:23.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:28:23.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:28:23.679" endtime="20211118 18:28:23.680"/>
</kw>
<status status="PASS" starttime="20211118 18:28:15.222" endtime="20211118 18:28:23.681"/>
</kw>
<msg timestamp="20211118 18:28:23.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:15.222" endtime="20211118 18:28:23.681"/>
</kw>
<msg timestamp="20211118 18:28:23.682" level="INFO">${result} = {
  "metadata": {},
  "name": "15022-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211118 18:28:15.220" endtime="20211118 18:28:23.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:28:23.683" endtime="20211118 18:28:23.684"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:23.690" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="15022-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:31.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:28:31.925" level="INFO">${output} = {
  "metadata": {},
  "name": "15022-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211118 18:28:23.687" endtime="20211118 18:28:31.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:31.926" level="INFO">{
  "metadata": {},
  "name": "15022-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:28:14.820Z",
  "modificationTime": "2021-11-18T18:28:14.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:28:31.926" endtime="20211118 18:28:31.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:28:31.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:28:31.927" endtime="20211118 18:28:31.928"/>
</kw>
<status status="PASS" starttime="20211118 18:28:23.686" endtime="20211118 18:28:31.929"/>
</kw>
<msg timestamp="20211118 18:28:31.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:23.685" endtime="20211118 18:28:31.929"/>
</kw>
<msg timestamp="20211118 18:28:31.929" level="INFO">${result} = {
  "metadata": {},
  "name": "15022-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211118 18:28:23.684" endtime="20211118 18:28:31.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:28:31.930" endtime="20211118 18:28:31.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:31.939" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/15022-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:39.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:28:39.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:28:31.936" endtime="20211118 18:28:39.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:39.906" level="INFO"/>
<status status="PASS" starttime="20211118 18:28:39.905" endtime="20211118 18:28:39.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:28:39.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:28:39.907" endtime="20211118 18:28:39.908"/>
</kw>
<status status="PASS" starttime="20211118 18:28:31.934" endtime="20211118 18:28:39.909"/>
</kw>
<msg timestamp="20211118 18:28:39.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:31.933" endtime="20211118 18:28:39.910"/>
</kw>
<status status="PASS" starttime="20211118 18:28:31.931" endtime="20211118 18:28:39.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:39.919" level="INFO">Running command 'ozone sh volume info o3://om:9862/15022-rpcwoport | jq -r '. | select(.name=="15022-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:48.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:28:48.052" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:28:39.915" endtime="20211118 18:28:48.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:48.053" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:28:48.052" endtime="20211118 18:28:48.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:28:48.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:28:48.054" endtime="20211118 18:28:48.054"/>
</kw>
<status status="PASS" starttime="20211118 18:28:39.914" endtime="20211118 18:28:48.055"/>
</kw>
<msg timestamp="20211118 18:28:48.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:39.913" endtime="20211118 18:28:48.055"/>
</kw>
<msg timestamp="20211118 18:28:48.055" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:28:39.911" endtime="20211118 18:28:48.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:28:48.056" endtime="20211118 18:28:48.056"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:48.061" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15022-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:28:55.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:28:55.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:28:48.058" endtime="20211118 18:28:55.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:28:55.535" level="INFO"/>
<status status="PASS" starttime="20211118 18:28:55.533" endtime="20211118 18:28:55.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:28:55.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:28:55.536" endtime="20211118 18:28:55.537"/>
</kw>
<status status="PASS" starttime="20211118 18:28:48.058" endtime="20211118 18:28:55.537"/>
</kw>
<msg timestamp="20211118 18:28:55.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:48.057" endtime="20211118 18:28:55.538"/>
</kw>
<status status="PASS" starttime="20211118 18:28:48.056" endtime="20211118 18:28:55.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:28:55.545" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15022-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:02.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:02.998" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211118 18:28:55.542" endtime="20211118 18:29:02.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:03.000" level="INFO">DISK</msg>
<status status="PASS" starttime="20211118 18:29:02.999" endtime="20211118 18:29:03.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:03.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:03.000" endtime="20211118 18:29:03.001"/>
</kw>
<status status="PASS" starttime="20211118 18:28:55.541" endtime="20211118 18:29:03.001"/>
</kw>
<msg timestamp="20211118 18:29:03.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:28:55.540" endtime="20211118 18:29:03.002"/>
</kw>
<msg timestamp="20211118 18:29:03.002" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211118 18:28:55.538" endtime="20211118 18:29:03.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:29:03.002" endtime="20211118 18:29:03.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:03.008" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15022-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:11.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:11.352" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:29:03.006" endtime="20211118 18:29:11.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:11.353" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:29:11.352" endtime="20211118 18:29:11.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:11.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:11.353" endtime="20211118 18:29:11.360"/>
</kw>
<status status="PASS" starttime="20211118 18:29:03.005" endtime="20211118 18:29:11.362"/>
</kw>
<msg timestamp="20211118 18:29:11.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:29:03.004" endtime="20211118 18:29:11.362"/>
</kw>
<msg timestamp="20211118 18:29:11.362" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:29:03.003" endtime="20211118 18:29:11.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:29:11.363" endtime="20211118 18:29:11.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:11.374" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15022-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:19.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:19.858" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211118 18:29:11.370" endtime="20211118 18:29:19.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:19.860" level="INFO">100</msg>
<status status="PASS" starttime="20211118 18:29:19.859" endtime="20211118 18:29:19.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:19.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:19.860" endtime="20211118 18:29:19.861"/>
</kw>
<status status="PASS" starttime="20211118 18:29:11.367" endtime="20211118 18:29:19.861"/>
</kw>
<msg timestamp="20211118 18:29:19.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:29:11.367" endtime="20211118 18:29:19.862"/>
</kw>
<msg timestamp="20211118 18:29:19.862" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211118 18:29:11.365" endtime="20211118 18:29:19.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:29:19.862" endtime="20211118 18:29:19.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:19.868" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/15022-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:27.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:27.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:29:19.866" endtime="20211118 18:29:27.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:27.818" level="INFO"/>
<status status="PASS" starttime="20211118 18:29:27.817" endtime="20211118 18:29:27.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:27.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:27.818" endtime="20211118 18:29:27.819"/>
</kw>
<status status="PASS" starttime="20211118 18:29:19.865" endtime="20211118 18:29:27.819"/>
</kw>
<msg timestamp="20211118 18:29:27.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:29:19.864" endtime="20211118 18:29:27.819"/>
</kw>
<status status="PASS" starttime="20211118 18:29:19.863" endtime="20211118 18:29:27.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:27.826" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15022-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:36.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:36.249" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:29:27.823" endtime="20211118 18:29:36.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:36.251" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211118 18:29:36.250" endtime="20211118 18:29:36.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:36.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:36.251" endtime="20211118 18:29:36.251"/>
</kw>
<status status="PASS" starttime="20211118 18:29:27.822" endtime="20211118 18:29:36.252"/>
</kw>
<msg timestamp="20211118 18:29:36.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:29:27.822" endtime="20211118 18:29:36.252"/>
</kw>
<msg timestamp="20211118 18:29:36.252" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:29:27.820" endtime="20211118 18:29:36.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:29:36.253" endtime="20211118 18:29:36.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:36.260" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15022-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:44.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:44.876" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211118 18:29:36.256" endtime="20211118 18:29:44.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:44.878" level="INFO">1000</msg>
<status status="PASS" starttime="20211118 18:29:44.877" endtime="20211118 18:29:44.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:44.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:44.879" endtime="20211118 18:29:44.879"/>
</kw>
<status status="PASS" starttime="20211118 18:29:36.255" endtime="20211118 18:29:44.880"/>
</kw>
<msg timestamp="20211118 18:29:44.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:29:36.254" endtime="20211118 18:29:44.880"/>
</kw>
<msg timestamp="20211118 18:29:44.880" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211118 18:29:36.253" endtime="20211118 18:29:44.880"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:29:44.880" endtime="20211118 18:29:44.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:44.885" level="INFO">Running command 'ozone sh bucket list o3://om:9862/15022-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:29:53.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:29:53.248" level="INFO">${output} = 15022-rpcwoport</msg>
<status status="PASS" starttime="20211118 18:29:44.883" endtime="20211118 18:29:53.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:29:53.250" level="INFO">15022-rpcwoport</msg>
<status status="PASS" starttime="20211118 18:29:53.249" endtime="20211118 18:29:53.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:29:53.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:29:53.250" endtime="20211118 18:29:53.251"/>
</kw>
<status status="PASS" starttime="20211118 18:29:44.882" endtime="20211118 18:29:53.251"/>
</kw>
<msg timestamp="20211118 18:29:53.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:29:44.882" endtime="20211118 18:29:53.252"/>
</kw>
<msg timestamp="20211118 18:29:53.252" level="INFO">${result} = 15022-rpcwoport</msg>
<status status="PASS" starttime="20211118 18:29:44.881" endtime="20211118 18:29:53.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:29:53.252" endtime="20211118 18:29:53.253"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:29:53.262" level="INFO">Running command 'ozone sh key put o3://om:9862/15022-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:32:53.463" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:29:53.259" endtime="20211118 18:32:53.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.464" endtime="20211118 18:32:53.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.464" endtime="20211118 18:32:53.464"/>
</kw>
<status status="FAIL" starttime="20211118 18:29:53.258" endtime="20211118 18:32:53.465"/>
</kw>
<msg timestamp="20211118 18:32:53.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:29:53.256" endtime="20211118 18:32:53.465"/>
</kw>
<status status="FAIL" starttime="20211118 18:29:53.255" endtime="20211118 18:32:53.465"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.465" endtime="20211118 18:32:53.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.466" endtime="20211118 18:32:53.466"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.466" endtime="20211118 18:32:53.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.466" endtime="20211118 18:32:53.466"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.466" endtime="20211118 18:32:53.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.467" endtime="20211118 18:32:53.467"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.467" endtime="20211118 18:32:53.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.470" endtime="20211118 18:32:53.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.471" endtime="20211118 18:32:53.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.471" endtime="20211118 18:32:53.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.471" endtime="20211118 18:32:53.472"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.472" endtime="20211118 18:32:53.472"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.472" endtime="20211118 18:32:53.472"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.472" endtime="20211118 18:32:53.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.473" endtime="20211118 18:32:53.473"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.473" endtime="20211118 18:32:53.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.473" endtime="20211118 18:32:53.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.473" endtime="20211118 18:32:53.473"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.474" endtime="20211118 18:32:53.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.474" endtime="20211118 18:32:53.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.474" endtime="20211118 18:32:53.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.474" endtime="20211118 18:32:53.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.474" endtime="20211118 18:32:53.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.475" endtime="20211118 18:32:53.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.475" endtime="20211118 18:32:53.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.475" endtime="20211118 18:32:53.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.475" endtime="20211118 18:32:53.475"/>
</kw>
<status status="FAIL" starttime="20211118 18:29:53.254" endtime="20211118 18:32:53.476"/>
</kw>
<status status="FAIL" starttime="20211118 18:29:53.254" endtime="20211118 18:32:53.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.476" endtime="20211118 18:32:53.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.476" endtime="20211118 18:32:53.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.477" endtime="20211118 18:32:53.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.477" endtime="20211118 18:32:53.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.477" endtime="20211118 18:32:53.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.478" endtime="20211118 18:32:53.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.478" endtime="20211118 18:32:53.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.479" endtime="20211118 18:32:53.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.479" endtime="20211118 18:32:53.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.479" endtime="20211118 18:32:53.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.480" endtime="20211118 18:32:53.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.480" endtime="20211118 18:32:53.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.481" endtime="20211118 18:32:53.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.481" endtime="20211118 18:32:53.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.481" endtime="20211118 18:32:53.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.482" endtime="20211118 18:32:53.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.482" endtime="20211118 18:32:53.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.483" endtime="20211118 18:32:53.483"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.483" endtime="20211118 18:32:53.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.483" endtime="20211118 18:32:53.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.484" endtime="20211118 18:32:53.484"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.484" endtime="20211118 18:32:53.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.484" endtime="20211118 18:32:53.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:32:53.485" endtime="20211118 18:32:53.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.485" endtime="20211118 18:32:53.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:32:53.485" endtime="20211118 18:32:53.485"/>
</kw>
<status status="FAIL" starttime="20211118 18:27:53.593" endtime="20211118 18:32:53.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211118 18:27:53.458" endtime="20211118 18:32:53.486">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:32:53.514" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:32:53.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:32:53.519" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:32:53.494" endtime="20211118 18:32:53.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:32:53.521" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:32:53.520" endtime="20211118 18:32:53.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:32:53.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:32:53.521" endtime="20211118 18:32:53.523"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.493" endtime="20211118 18:32:53.523"/>
</kw>
<msg timestamp="20211118 18:32:53.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:32:53.492" endtime="20211118 18:32:53.523"/>
</kw>
<msg timestamp="20211118 18:32:53.524" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:32:53.491" endtime="20211118 18:32:53.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:32:53.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:32:53.524" endtime="20211118 18:32:53.525"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:32:53.531" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:32:53.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:32:53.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:32:53.528" endtime="20211118 18:32:53.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:32:53.543" level="INFO"/>
<status status="PASS" starttime="20211118 18:32:53.541" endtime="20211118 18:32:53.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:32:53.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:32:53.543" endtime="20211118 18:32:53.544"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.527" endtime="20211118 18:32:53.545"/>
</kw>
<msg timestamp="20211118 18:32:53.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:32:53.526" endtime="20211118 18:32:53.545"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.525" endtime="20211118 18:32:53.546"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.525" endtime="20211118 18:32:53.546"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.491" endtime="20211118 18:32:53.546"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.490" endtime="20211118 18:32:53.546"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:32:53.552" level="INFO">Running command 'ozone sh volume create o3://om:9862/15022-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:01.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:01.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:32:53.550" endtime="20211118 18:33:01.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:01.662" level="INFO"/>
<status status="PASS" starttime="20211118 18:33:01.661" endtime="20211118 18:33:01.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:01.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:01.662" endtime="20211118 18:33:01.663"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.549" endtime="20211118 18:33:01.663"/>
</kw>
<msg timestamp="20211118 18:33:01.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:32:53.549" endtime="20211118 18:33:01.663"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.548" endtime="20211118 18:33:01.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:01.669" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15022-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:10.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:10.760" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:33:01.665" endtime="20211118 18:33:10.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:10.762" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:33:10.760" endtime="20211118 18:33:10.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:10.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:10.763" endtime="20211118 18:33:10.766"/>
</kw>
<status status="PASS" starttime="20211118 18:33:01.665" endtime="20211118 18:33:10.766"/>
</kw>
<msg timestamp="20211118 18:33:10.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:01.664" endtime="20211118 18:33:10.767"/>
</kw>
<msg timestamp="20211118 18:33:10.768" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:33:01.664" endtime="20211118 18:33:10.768"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:33:10.768" endtime="20211118 18:33:10.769"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:10.776" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/15022-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:16.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:16.442" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211118 18:33:10.771" endtime="20211118 18:33:16.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:16.444" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211118 18:33:16.443" endtime="20211118 18:33:16.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:16.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:16.444" endtime="20211118 18:33:16.445"/>
</kw>
<status status="PASS" starttime="20211118 18:33:10.770" endtime="20211118 18:33:16.446"/>
</kw>
<msg timestamp="20211118 18:33:16.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:10.770" endtime="20211118 18:33:16.447"/>
</kw>
<msg timestamp="20211118 18:33:16.447" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211118 18:33:10.769" endtime="20211118 18:33:16.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:16.455" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15022-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:25.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:25.225" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211118 18:33:16.451" endtime="20211118 18:33:25.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:25.229" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:33:25.227" endtime="20211118 18:33:25.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:25.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:25.230" endtime="20211118 18:33:25.233"/>
</kw>
<status status="PASS" starttime="20211118 18:33:16.450" endtime="20211118 18:33:25.234"/>
</kw>
<msg timestamp="20211118 18:33:25.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:16.449" endtime="20211118 18:33:25.234"/>
</kw>
<msg timestamp="20211118 18:33:25.235" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211118 18:33:16.448" endtime="20211118 18:33:25.235"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:33:25.235" endtime="20211118 18:33:25.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:25.243" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/15022-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:31.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:31.910" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:33:25.240" endtime="20211118 18:33:31.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:31.912" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:33:31.911" endtime="20211118 18:33:31.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:31.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:31.912" endtime="20211118 18:33:31.913"/>
</kw>
<status status="PASS" starttime="20211118 18:33:25.239" endtime="20211118 18:33:31.913"/>
</kw>
<msg timestamp="20211118 18:33:31.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:25.239" endtime="20211118 18:33:31.913"/>
</kw>
<msg timestamp="20211118 18:33:31.914" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:33:25.237" endtime="20211118 18:33:31.914"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:31.918" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15022-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:39.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:39.986" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211118 18:33:31.916" endtime="20211118 18:33:39.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:39.988" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:33:39.987" endtime="20211118 18:33:39.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:39.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:39.989" endtime="20211118 18:33:39.990"/>
</kw>
<status status="PASS" starttime="20211118 18:33:31.916" endtime="20211118 18:33:39.990"/>
</kw>
<msg timestamp="20211118 18:33:39.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:31.915" endtime="20211118 18:33:39.991"/>
</kw>
<msg timestamp="20211118 18:33:39.992" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211118 18:33:31.914" endtime="20211118 18:33:39.992"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:33:39.992" endtime="20211118 18:33:39.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:40.001" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/15022-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:47.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:47.573" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:33:39.998" endtime="20211118 18:33:47.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:47.575" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:33:47.574" endtime="20211118 18:33:47.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:47.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:47.575" endtime="20211118 18:33:47.576"/>
</kw>
<status status="PASS" starttime="20211118 18:33:39.996" endtime="20211118 18:33:47.576"/>
</kw>
<msg timestamp="20211118 18:33:47.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:39.996" endtime="20211118 18:33:47.577"/>
</kw>
<msg timestamp="20211118 18:33:47.577" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:33:39.994" endtime="20211118 18:33:47.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:47.583" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15022-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:54.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:54.165" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211118 18:33:47.580" endtime="20211118 18:33:54.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:54.166" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:33:54.165" endtime="20211118 18:33:54.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:54.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:54.166" endtime="20211118 18:33:54.167"/>
</kw>
<status status="PASS" starttime="20211118 18:33:47.579" endtime="20211118 18:33:54.167"/>
</kw>
<msg timestamp="20211118 18:33:54.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:47.578" endtime="20211118 18:33:54.168"/>
</kw>
<msg timestamp="20211118 18:33:54.168" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211118 18:33:47.577" endtime="20211118 18:33:54.168"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:33:54.168" endtime="20211118 18:33:54.169"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:33:54.169" endtime="20211118 18:33:54.170"/>
</kw>
<status status="PASS" starttime="20211118 18:32:53.547" endtime="20211118 18:33:54.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:32:53.488" endtime="20211118 18:33:54.170"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:54.179" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:54.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:54.183" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:33:54.176" endtime="20211118 18:33:54.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:54.184" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:33:54.183" endtime="20211118 18:33:54.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:54.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:54.184" endtime="20211118 18:33:54.185"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.174" endtime="20211118 18:33:54.185"/>
</kw>
<msg timestamp="20211118 18:33:54.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:54.174" endtime="20211118 18:33:54.186"/>
</kw>
<msg timestamp="20211118 18:33:54.186" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:33:54.173" endtime="20211118 18:33:54.186"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:33:54.187" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:33:54.186" endtime="20211118 18:33:54.187"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:54.191" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:54.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:54.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:33:54.189" endtime="20211118 18:33:54.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:54.242" level="INFO"/>
<status status="PASS" starttime="20211118 18:33:54.241" endtime="20211118 18:33:54.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:54.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:54.242" endtime="20211118 18:33:54.243"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.189" endtime="20211118 18:33:54.243"/>
</kw>
<msg timestamp="20211118 18:33:54.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:54.188" endtime="20211118 18:33:54.243"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.188" endtime="20211118 18:33:54.243"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.187" endtime="20211118 18:33:54.244"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.173" endtime="20211118 18:33:54.244"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.172" endtime="20211118 18:33:54.244"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:54.249" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15022-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:33:59.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:33:59.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:33:54.246" endtime="20211118 18:33:59.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:33:59.679" level="INFO"/>
<status status="PASS" starttime="20211118 18:33:59.679" endtime="20211118 18:33:59.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:33:59.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:33:59.680" endtime="20211118 18:33:59.681"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.246" endtime="20211118 18:33:59.682"/>
</kw>
<msg timestamp="20211118 18:33:59.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:54.245" endtime="20211118 18:33:59.682"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.245" endtime="20211118 18:33:59.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:33:59.691" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15022-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:08.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:08.220" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:33:59.687" endtime="20211118 18:34:08.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:08.221" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:34:08.220" endtime="20211118 18:34:08.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:08.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:08.221" endtime="20211118 18:34:08.222"/>
</kw>
<status status="PASS" starttime="20211118 18:33:59.686" endtime="20211118 18:34:08.222"/>
</kw>
<msg timestamp="20211118 18:34:08.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:33:59.685" endtime="20211118 18:34:08.222"/>
</kw>
<msg timestamp="20211118 18:34:08.223" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:33:59.683" endtime="20211118 18:34:08.223"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:34:08.223" endtime="20211118 18:34:08.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:08.229" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/15022-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:14.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:14.417" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211118 18:34:08.226" endtime="20211118 18:34:14.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:14.419" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211118 18:34:14.418" endtime="20211118 18:34:14.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:14.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:14.419" endtime="20211118 18:34:14.420"/>
</kw>
<status status="PASS" starttime="20211118 18:34:08.225" endtime="20211118 18:34:14.420"/>
</kw>
<msg timestamp="20211118 18:34:14.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:08.225" endtime="20211118 18:34:14.420"/>
</kw>
<msg timestamp="20211118 18:34:14.421" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211118 18:34:08.224" endtime="20211118 18:34:14.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:14.425" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15022-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:22.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:22.308" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:34:14.423" endtime="20211118 18:34:22.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:22.309" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:34:22.309" endtime="20211118 18:34:22.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:22.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:22.310" endtime="20211118 18:34:22.310"/>
</kw>
<status status="PASS" starttime="20211118 18:34:14.422" endtime="20211118 18:34:22.311"/>
</kw>
<msg timestamp="20211118 18:34:22.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:14.422" endtime="20211118 18:34:22.311"/>
</kw>
<msg timestamp="20211118 18:34:22.311" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:34:14.421" endtime="20211118 18:34:22.311"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:34:22.312" endtime="20211118 18:34:22.313"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:22.321" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/15022-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:29.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:29.891" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:34:22.316" endtime="20211118 18:34:29.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:29.893" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:34:29.892" endtime="20211118 18:34:29.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:29.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:29.893" endtime="20211118 18:34:29.893"/>
</kw>
<status status="PASS" starttime="20211118 18:34:22.316" endtime="20211118 18:34:29.894"/>
</kw>
<msg timestamp="20211118 18:34:29.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:22.314" endtime="20211118 18:34:29.894"/>
</kw>
<msg timestamp="20211118 18:34:29.896" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:34:22.313" endtime="20211118 18:34:29.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:29.904" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15022-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:37.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:37.953" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:34:29.901" endtime="20211118 18:34:37.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:37.955" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:34:37.954" endtime="20211118 18:34:37.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:37.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:37.955" endtime="20211118 18:34:37.956"/>
</kw>
<status status="PASS" starttime="20211118 18:34:29.899" endtime="20211118 18:34:37.957"/>
</kw>
<msg timestamp="20211118 18:34:37.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:29.898" endtime="20211118 18:34:37.957"/>
</kw>
<msg timestamp="20211118 18:34:37.957" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:34:29.897" endtime="20211118 18:34:37.957"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:34:37.957" endtime="20211118 18:34:37.958"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:37.968" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/15022-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:46.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:46.196" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:34:37.963" endtime="20211118 18:34:46.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:46.199" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:34:46.197" endtime="20211118 18:34:46.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:46.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:46.200" endtime="20211118 18:34:46.201"/>
</kw>
<status status="PASS" starttime="20211118 18:34:37.962" endtime="20211118 18:34:46.203"/>
</kw>
<msg timestamp="20211118 18:34:46.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:37.961" endtime="20211118 18:34:46.203"/>
</kw>
<msg timestamp="20211118 18:34:46.204" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:34:37.959" endtime="20211118 18:34:46.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:46.211" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15022-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:54.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:54.373" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211118 18:34:46.209" endtime="20211118 18:34:54.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:54.375" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:34:54.374" endtime="20211118 18:34:54.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:54.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:54.376" endtime="20211118 18:34:54.377"/>
</kw>
<status status="PASS" starttime="20211118 18:34:46.207" endtime="20211118 18:34:54.377"/>
</kw>
<msg timestamp="20211118 18:34:54.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:46.206" endtime="20211118 18:34:54.378"/>
</kw>
<msg timestamp="20211118 18:34:54.385" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211118 18:34:46.204" endtime="20211118 18:34:54.385"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:34:54.385" endtime="20211118 18:34:54.386"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:34:54.386" endtime="20211118 18:34:54.387"/>
</kw>
<status status="PASS" starttime="20211118 18:33:54.244" endtime="20211118 18:34:54.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:33:54.171" endtime="20211118 18:34:54.387"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:54.394" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:54.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:54.400" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:34:54.392" endtime="20211118 18:34:54.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:54.402" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:34:54.401" endtime="20211118 18:34:54.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:54.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:54.402" endtime="20211118 18:34:54.404"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.391" endtime="20211118 18:34:54.405"/>
</kw>
<msg timestamp="20211118 18:34:54.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:54.391" endtime="20211118 18:34:54.405"/>
</kw>
<msg timestamp="20211118 18:34:54.406" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:34:54.391" endtime="20211118 18:34:54.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:34:54.409" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:34:54.407" endtime="20211118 18:34:54.409"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:54.419" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:34:54.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:34:54.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:34:54.415" endtime="20211118 18:34:54.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:34:54.432" level="INFO"/>
<status status="PASS" starttime="20211118 18:34:54.431" endtime="20211118 18:34:54.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:34:54.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:34:54.432" endtime="20211118 18:34:54.433"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.412" endtime="20211118 18:34:54.433"/>
</kw>
<msg timestamp="20211118 18:34:54.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:54.412" endtime="20211118 18:34:54.434"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.410" endtime="20211118 18:34:54.434"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.409" endtime="20211118 18:34:54.434"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.390" endtime="20211118 18:34:54.434"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.389" endtime="20211118 18:34:54.434"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:34:54.439" level="INFO">Running command 'ozone sh key put o3://om:9862/15022-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:07.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:07.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:34:54.437" endtime="20211118 18:38:07.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:07.736" level="INFO"/>
<status status="PASS" starttime="20211118 18:38:07.734" endtime="20211118 18:38:07.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:07.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:07.736" endtime="20211118 18:38:07.737"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.437" endtime="20211118 18:38:07.739"/>
</kw>
<msg timestamp="20211118 18:38:07.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:34:54.436" endtime="20211118 18:38:07.739"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.436" endtime="20211118 18:38:07.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:07.755" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15022-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:16.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:16.225" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211118 18:38:07.752" endtime="20211118 18:38:16.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:16.227" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:38:16.226" endtime="20211118 18:38:16.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:16.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:16.228" endtime="20211118 18:38:16.229"/>
</kw>
<status status="PASS" starttime="20211118 18:38:07.743" endtime="20211118 18:38:16.229"/>
</kw>
<msg timestamp="20211118 18:38:16.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:07.743" endtime="20211118 18:38:16.229"/>
</kw>
<msg timestamp="20211118 18:38:16.230" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211118 18:38:07.739" endtime="20211118 18:38:16.230"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:38:16.230" endtime="20211118 18:38:16.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:16.238" level="INFO">Running command 'ozone sh key addacl o3://om:9862/15022-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:24.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:24.219" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:38:16.235" endtime="20211118 18:38:24.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:24.220" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:38:24.219" endtime="20211118 18:38:24.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:24.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:24.220" endtime="20211118 18:38:24.221"/>
</kw>
<status status="PASS" starttime="20211118 18:38:16.234" endtime="20211118 18:38:24.221"/>
</kw>
<msg timestamp="20211118 18:38:24.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:16.233" endtime="20211118 18:38:24.222"/>
</kw>
<msg timestamp="20211118 18:38:24.222" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211118 18:38:16.232" endtime="20211118 18:38:24.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:24.229" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15022-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:32.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:32.594" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211118 18:38:24.224" endtime="20211118 18:38:32.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:32.596" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:38:32.595" endtime="20211118 18:38:32.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:32.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:32.597" endtime="20211118 18:38:32.598"/>
</kw>
<status status="PASS" starttime="20211118 18:38:24.224" endtime="20211118 18:38:32.599"/>
</kw>
<msg timestamp="20211118 18:38:32.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:24.223" endtime="20211118 18:38:32.599"/>
</kw>
<msg timestamp="20211118 18:38:32.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211118 18:38:24.222" endtime="20211118 18:38:32.600"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:38:32.600" endtime="20211118 18:38:32.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:32.609" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/15022-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:39.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:39.705" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:38:32.605" endtime="20211118 18:38:39.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:39.707" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:38:39.706" endtime="20211118 18:38:39.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:39.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:39.707" endtime="20211118 18:38:39.708"/>
</kw>
<status status="PASS" starttime="20211118 18:38:32.604" endtime="20211118 18:38:39.708"/>
</kw>
<msg timestamp="20211118 18:38:39.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:32.603" endtime="20211118 18:38:39.708"/>
</kw>
<msg timestamp="20211118 18:38:39.709" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211118 18:38:32.602" endtime="20211118 18:38:39.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:39.713" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15022-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:46.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:46.844" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211118 18:38:39.711" endtime="20211118 18:38:46.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:46.851" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:38:46.844" endtime="20211118 18:38:46.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:46.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:46.852" endtime="20211118 18:38:46.853"/>
</kw>
<status status="PASS" starttime="20211118 18:38:39.710" endtime="20211118 18:38:46.854"/>
</kw>
<msg timestamp="20211118 18:38:46.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:39.710" endtime="20211118 18:38:46.854"/>
</kw>
<msg timestamp="20211118 18:38:46.855" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211118 18:38:39.709" endtime="20211118 18:38:46.855"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:38:46.855" endtime="20211118 18:38:46.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:46.861" level="INFO">Running command 'ozone sh key setacl o3://om:9862/15022-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:38:55.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:38:55.545" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:38:46.859" endtime="20211118 18:38:55.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:38:55.550" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:38:55.547" endtime="20211118 18:38:55.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:38:55.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:38:55.550" endtime="20211118 18:38:55.552"/>
</kw>
<status status="PASS" starttime="20211118 18:38:46.858" endtime="20211118 18:38:55.553"/>
</kw>
<msg timestamp="20211118 18:38:55.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:46.857" endtime="20211118 18:38:55.554"/>
</kw>
<msg timestamp="20211118 18:38:55.555" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:38:46.856" endtime="20211118 18:38:55.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:38:55.564" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15022-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:02.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:02.376" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211118 18:38:55.560" endtime="20211118 18:39:02.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:02.379" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:39:02.376" endtime="20211118 18:39:02.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:02.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:02.379" endtime="20211118 18:39:02.380"/>
</kw>
<status status="PASS" starttime="20211118 18:38:55.558" endtime="20211118 18:39:02.380"/>
</kw>
<msg timestamp="20211118 18:39:02.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:38:55.557" endtime="20211118 18:39:02.381"/>
</kw>
<msg timestamp="20211118 18:39:02.382" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211118 18:38:55.556" endtime="20211118 18:39:02.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:39:02.382" endtime="20211118 18:39:02.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:39:02.383" endtime="20211118 18:39:02.384"/>
</kw>
<status status="PASS" starttime="20211118 18:34:54.435" endtime="20211118 18:39:02.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:34:54.388" endtime="20211118 18:39:02.385"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:02.396" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:02.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:02.401" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:39:02.393" endtime="20211118 18:39:02.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:02.404" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:39:02.402" endtime="20211118 18:39:02.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:02.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:02.404" endtime="20211118 18:39:02.405"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.392" endtime="20211118 18:39:02.406"/>
</kw>
<msg timestamp="20211118 18:39:02.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:02.391" endtime="20211118 18:39:02.406"/>
</kw>
<msg timestamp="20211118 18:39:02.407" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:39:02.390" endtime="20211118 18:39:02.407"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:39:02.408" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:39:02.408" endtime="20211118 18:39:02.408"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:02.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:02.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:02.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:39:02.411" endtime="20211118 18:39:02.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:02.476" level="INFO"/>
<status status="PASS" starttime="20211118 18:39:02.475" endtime="20211118 18:39:02.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:02.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:02.476" endtime="20211118 18:39:02.477"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.410" endtime="20211118 18:39:02.477"/>
</kw>
<msg timestamp="20211118 18:39:02.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:02.410" endtime="20211118 18:39:02.478"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.409" endtime="20211118 18:39:02.478"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.409" endtime="20211118 18:39:02.478"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.389" endtime="20211118 18:39:02.478"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.388" endtime="20211118 18:39:02.478"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:02.485" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:09.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:09.785" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211118 18:39:02.481" endtime="20211118 18:39:09.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:09.789" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211118 18:39:09.786" endtime="20211118 18:39:09.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:09.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:09.790" endtime="20211118 18:39:09.792"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.480" endtime="20211118 18:39:09.793"/>
</kw>
<msg timestamp="20211118 18:39:09.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:02.480" endtime="20211118 18:39:09.793"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.479" endtime="20211118 18:39:09.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:09.807" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:18.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:18.157" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211118 18:39:09.802" endtime="20211118 18:39:18.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:18.159" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:39:18.158" endtime="20211118 18:39:18.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:18.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:18.159" endtime="20211118 18:39:18.160"/>
</kw>
<status status="PASS" starttime="20211118 18:39:09.798" endtime="20211118 18:39:18.160"/>
</kw>
<msg timestamp="20211118 18:39:18.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:09.796" endtime="20211118 18:39:18.161"/>
</kw>
<msg timestamp="20211118 18:39:18.161" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211118 18:39:09.794" endtime="20211118 18:39:18.161"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:39:18.161" endtime="20211118 18:39:18.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:18.170" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:25.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:25.779" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211118 18:39:18.167" endtime="20211118 18:39:25.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:25.781" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211118 18:39:25.780" endtime="20211118 18:39:25.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:25.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:25.781" endtime="20211118 18:39:25.782"/>
</kw>
<status status="PASS" starttime="20211118 18:39:18.166" endtime="20211118 18:39:25.782"/>
</kw>
<msg timestamp="20211118 18:39:25.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:18.165" endtime="20211118 18:39:25.783"/>
</kw>
<msg timestamp="20211118 18:39:25.783" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211118 18:39:18.163" endtime="20211118 18:39:25.783"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:25.788" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:33.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:33.898" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211118 18:39:25.785" endtime="20211118 18:39:33.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:33.901" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:39:33.899" endtime="20211118 18:39:33.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:33.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:33.902" endtime="20211118 18:39:33.903"/>
</kw>
<status status="PASS" starttime="20211118 18:39:25.785" endtime="20211118 18:39:33.904"/>
</kw>
<msg timestamp="20211118 18:39:33.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:25.784" endtime="20211118 18:39:33.905"/>
</kw>
<msg timestamp="20211118 18:39:33.906" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211118 18:39:25.783" endtime="20211118 18:39:33.906"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:39:33.906" endtime="20211118 18:39:33.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:33.918" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:41.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:41.236" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:39:33.913" endtime="20211118 18:39:41.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:41.239" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:39:41.237" endtime="20211118 18:39:41.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:41.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:41.239" endtime="20211118 18:39:41.240"/>
</kw>
<status status="PASS" starttime="20211118 18:39:33.912" endtime="20211118 18:39:41.241"/>
</kw>
<msg timestamp="20211118 18:39:41.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:33.911" endtime="20211118 18:39:41.241"/>
</kw>
<msg timestamp="20211118 18:39:41.241" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211118 18:39:33.909" endtime="20211118 18:39:41.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:41.246" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:39:48.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:39:48.936" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211118 18:39:41.244" endtime="20211118 18:39:48.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:39:48.939" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:39:48.937" endtime="20211118 18:39:48.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:39:48.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:39:48.939" endtime="20211118 18:39:48.941"/>
</kw>
<status status="PASS" starttime="20211118 18:39:41.243" endtime="20211118 18:39:48.941"/>
</kw>
<msg timestamp="20211118 18:39:48.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:41.242" endtime="20211118 18:39:48.942"/>
</kw>
<msg timestamp="20211118 18:39:48.942" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211118 18:39:41.241" endtime="20211118 18:39:48.942"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:39:48.943" endtime="20211118 18:39:48.944"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:39:48.944" endtime="20211118 18:39:48.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:39:48.953" level="INFO">Running command 'ozone sh key put o3://om:9862/15022-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:00.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:00.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:39:48.949" endtime="20211118 18:43:00.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:00.393" level="INFO"/>
<status status="PASS" starttime="20211118 18:43:00.392" endtime="20211118 18:43:00.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:00.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:00.393" endtime="20211118 18:43:00.394"/>
</kw>
<status status="PASS" starttime="20211118 18:39:48.948" endtime="20211118 18:43:00.395"/>
</kw>
<msg timestamp="20211118 18:43:00.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:39:48.947" endtime="20211118 18:43:00.395"/>
</kw>
<status status="PASS" starttime="20211118 18:39:48.946" endtime="20211118 18:43:00.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:00.401" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15022-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:09.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:09.178" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:43:00.398" endtime="20211118 18:43:09.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:09.180" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211118 18:43:09.179" endtime="20211118 18:43:09.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:09.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:09.180" endtime="20211118 18:43:09.182"/>
</kw>
<status status="PASS" starttime="20211118 18:43:00.397" endtime="20211118 18:43:09.183"/>
</kw>
<msg timestamp="20211118 18:43:09.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:00.397" endtime="20211118 18:43:09.184"/>
</kw>
<msg timestamp="20211118 18:43:09.185" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211118 18:43:00.395" endtime="20211118 18:43:09.185"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:43:09.185" endtime="20211118 18:43:09.187"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211118 18:43:09.187" endtime="20211118 18:43:09.188"/>
</kw>
<status status="PASS" starttime="20211118 18:39:02.479" endtime="20211118 18:43:09.188"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211118 18:39:02.387" endtime="20211118 18:43:09.189"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:09.199" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:09.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:09.206" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:43:09.197" endtime="20211118 18:43:09.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:09.208" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:43:09.206" endtime="20211118 18:43:09.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:09.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:09.208" endtime="20211118 18:43:09.210"/>
</kw>
<status status="PASS" starttime="20211118 18:43:09.196" endtime="20211118 18:43:09.210"/>
</kw>
<msg timestamp="20211118 18:43:09.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:09.194" endtime="20211118 18:43:09.211"/>
</kw>
<msg timestamp="20211118 18:43:09.212" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:43:09.194" endtime="20211118 18:43:09.212"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:43:09.214" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:43:09.212" endtime="20211118 18:43:09.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:09.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:09.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:09.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:43:09.219" endtime="20211118 18:43:09.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:09.235" level="INFO"/>
<status status="PASS" starttime="20211118 18:43:09.234" endtime="20211118 18:43:09.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:09.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:09.236" endtime="20211118 18:43:09.237"/>
</kw>
<status status="PASS" starttime="20211118 18:43:09.218" endtime="20211118 18:43:09.238"/>
</kw>
<msg timestamp="20211118 18:43:09.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:09.218" endtime="20211118 18:43:09.239"/>
</kw>
<status status="PASS" starttime="20211118 18:43:09.216" endtime="20211118 18:43:09.239"/>
</kw>
<status status="PASS" starttime="20211118 18:43:09.214" endtime="20211118 18:43:09.239"/>
</kw>
<status status="PASS" starttime="20211118 18:43:09.192" endtime="20211118 18:43:09.240"/>
</kw>
<status status="PASS" starttime="20211118 18:43:09.192" endtime="20211118 18:43:09.240"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:09.247" level="INFO">Running command 'ozone sh volume info o3:///15022-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:16.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:43:16.351" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15022-rpcwport is not found</msg>
<status status="PASS" starttime="20211118 18:43:09.245" endtime="20211118 18:43:16.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:16.353" level="INFO">VOLUME_NOT_FOUND Volume 15022-rpcwport is not found</msg>
<status status="PASS" starttime="20211118 18:43:16.352" endtime="20211118 18:43:16.353"/>
</kw>
<msg timestamp="20211118 18:43:16.353" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15022-rpcwport is not found</msg>
<status status="PASS" starttime="20211118 18:43:09.244" endtime="20211118 18:43:16.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:43:16.354" endtime="20211118 18:43:16.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:16.358" level="INFO">Running command 'ozone sh volume create o3:///15022-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:24.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:24.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:43:16.356" endtime="20211118 18:43:24.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:24.729" level="INFO"/>
<status status="PASS" starttime="20211118 18:43:24.728" endtime="20211118 18:43:24.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:24.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:24.729" endtime="20211118 18:43:24.730"/>
</kw>
<status status="PASS" starttime="20211118 18:43:16.355" endtime="20211118 18:43:24.730"/>
</kw>
<msg timestamp="20211118 18:43:24.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:16.355" endtime="20211118 18:43:24.730"/>
</kw>
<msg timestamp="20211118 18:43:24.731" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211118 18:43:16.354" endtime="20211118 18:43:24.731"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:43:24.731" endtime="20211118 18:43:24.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:24.740" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="15022-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:33.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:33.643" level="INFO">${output} = {
  "metadata": {},
  "name": "15022-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:43:24.737" endtime="20211118 18:43:33.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:33.644" level="INFO">{
  "metadata": {},
  "name": "15022-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:43:24.363Z",
  "modificationTime": "2021-11-18T18:43:24.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:43:33.643" endtime="20211118 18:43:33.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:33.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:33.644" endtime="20211118 18:43:33.645"/>
</kw>
<status status="PASS" starttime="20211118 18:43:24.735" endtime="20211118 18:43:33.645"/>
</kw>
<msg timestamp="20211118 18:43:33.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:24.735" endtime="20211118 18:43:33.646"/>
</kw>
<msg timestamp="20211118 18:43:33.646" level="INFO">${result} = {
  "metadata": {},
  "name": "15022-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:43:24.733" endtime="20211118 18:43:33.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:43:33.647" endtime="20211118 18:43:33.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:33.653" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="15022-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:42.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:42.162" level="INFO">${output} = {
  "metadata": {},
  "name": "15022-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:43:33.650" endtime="20211118 18:43:42.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:42.166" level="INFO">{
  "metadata": {},
  "name": "15022-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:43:24.363Z",
  "modificationTime": "2021-11-18T18:43:24.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:43:42.163" endtime="20211118 18:43:42.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:42.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:42.166" endtime="20211118 18:43:42.168"/>
</kw>
<status status="PASS" starttime="20211118 18:43:33.650" endtime="20211118 18:43:42.168"/>
</kw>
<msg timestamp="20211118 18:43:42.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:33.649" endtime="20211118 18:43:42.169"/>
</kw>
<msg timestamp="20211118 18:43:42.169" level="INFO">${result} = {
  "metadata": {},
  "name": "15022-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211118 18:43:33.648" endtime="20211118 18:43:42.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:43:42.170" endtime="20211118 18:43:42.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:42.182" level="INFO">Running command 'ozone sh volume setquota o3:///15022-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:49.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:49.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:43:42.178" endtime="20211118 18:43:49.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:49.776" level="INFO"/>
<status status="PASS" starttime="20211118 18:43:49.775" endtime="20211118 18:43:49.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:49.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:49.777" endtime="20211118 18:43:49.778"/>
</kw>
<status status="PASS" starttime="20211118 18:43:42.173" endtime="20211118 18:43:49.779"/>
</kw>
<msg timestamp="20211118 18:43:49.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:42.172" endtime="20211118 18:43:49.779"/>
</kw>
<status status="PASS" starttime="20211118 18:43:42.171" endtime="20211118 18:43:49.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:49.788" level="INFO">Running command 'ozone sh volume info o3:///15022-rpcwport | jq -r '. | select(.name=="15022-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:43:58.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:43:58.648" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:43:49.784" endtime="20211118 18:43:58.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:43:58.650" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:43:58.649" endtime="20211118 18:43:58.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:43:58.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:43:58.651" endtime="20211118 18:43:58.652"/>
</kw>
<status status="PASS" starttime="20211118 18:43:49.784" endtime="20211118 18:43:58.653"/>
</kw>
<msg timestamp="20211118 18:43:58.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:49.783" endtime="20211118 18:43:58.653"/>
</kw>
<msg timestamp="20211118 18:43:58.653" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:43:49.780" endtime="20211118 18:43:58.653"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:43:58.653" endtime="20211118 18:43:58.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:43:58.660" level="INFO">Running command 'ozone sh bucket create o3:///15022-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:07.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:07.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:43:58.657" endtime="20211118 18:44:07.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:07.215" level="INFO"/>
<status status="PASS" starttime="20211118 18:44:07.213" endtime="20211118 18:44:07.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:07.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:07.216" endtime="20211118 18:44:07.218"/>
</kw>
<status status="PASS" starttime="20211118 18:43:58.656" endtime="20211118 18:44:07.218"/>
</kw>
<msg timestamp="20211118 18:44:07.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:43:58.655" endtime="20211118 18:44:07.219"/>
</kw>
<status status="PASS" starttime="20211118 18:43:58.654" endtime="20211118 18:44:07.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:07.227" level="INFO">Running command 'ozone sh bucket info o3:///15022-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:16.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:16.377" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211118 18:44:07.224" endtime="20211118 18:44:16.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:16.379" level="INFO">DISK</msg>
<status status="PASS" starttime="20211118 18:44:16.378" endtime="20211118 18:44:16.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:16.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:16.379" endtime="20211118 18:44:16.382"/>
</kw>
<status status="PASS" starttime="20211118 18:44:07.223" endtime="20211118 18:44:16.383"/>
</kw>
<msg timestamp="20211118 18:44:16.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:07.222" endtime="20211118 18:44:16.384"/>
</kw>
<msg timestamp="20211118 18:44:16.384" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211118 18:44:07.220" endtime="20211118 18:44:16.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:44:16.385" endtime="20211118 18:44:16.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:16.393" level="INFO">Running command 'ozone sh bucket info o3:///15022-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:24.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:24.246" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:44:16.390" endtime="20211118 18:44:24.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:24.248" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:44:24.247" endtime="20211118 18:44:24.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:24.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:24.248" endtime="20211118 18:44:24.249"/>
</kw>
<status status="PASS" starttime="20211118 18:44:16.389" endtime="20211118 18:44:24.249"/>
</kw>
<msg timestamp="20211118 18:44:24.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:16.388" endtime="20211118 18:44:24.249"/>
</kw>
<msg timestamp="20211118 18:44:24.250" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:44:16.386" endtime="20211118 18:44:24.250"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:44:24.250" endtime="20211118 18:44:24.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:24.256" level="INFO">Running command 'ozone sh bucket info o3:///15022-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:32.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:32.174" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211118 18:44:24.253" endtime="20211118 18:44:32.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:32.175" level="INFO">100</msg>
<status status="PASS" starttime="20211118 18:44:32.174" endtime="20211118 18:44:32.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:32.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:32.176" endtime="20211118 18:44:32.177"/>
</kw>
<status status="PASS" starttime="20211118 18:44:24.252" endtime="20211118 18:44:32.177"/>
</kw>
<msg timestamp="20211118 18:44:32.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:24.252" endtime="20211118 18:44:32.177"/>
</kw>
<msg timestamp="20211118 18:44:32.178" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211118 18:44:24.251" endtime="20211118 18:44:32.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:44:32.178" endtime="20211118 18:44:32.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:32.183" level="INFO">Running command 'ozone sh bucket setquota o3:///15022-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:40.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:40.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:44:32.181" endtime="20211118 18:44:40.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:40.108" level="INFO"/>
<status status="PASS" starttime="20211118 18:44:40.108" endtime="20211118 18:44:40.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:40.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:40.109" endtime="20211118 18:44:40.109"/>
</kw>
<status status="PASS" starttime="20211118 18:44:32.180" endtime="20211118 18:44:40.110"/>
</kw>
<msg timestamp="20211118 18:44:40.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:32.180" endtime="20211118 18:44:40.110"/>
</kw>
<status status="PASS" starttime="20211118 18:44:32.179" endtime="20211118 18:44:40.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:40.116" level="INFO">Running command 'ozone sh bucket info o3:///15022-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:46.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:46.824" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:44:40.113" endtime="20211118 18:44:46.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:46.826" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211118 18:44:46.825" endtime="20211118 18:44:46.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:46.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:46.826" endtime="20211118 18:44:46.827"/>
</kw>
<status status="PASS" starttime="20211118 18:44:40.112" endtime="20211118 18:44:46.827"/>
</kw>
<msg timestamp="20211118 18:44:46.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:40.112" endtime="20211118 18:44:46.828"/>
</kw>
<msg timestamp="20211118 18:44:46.828" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:44:40.111" endtime="20211118 18:44:46.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:44:46.828" endtime="20211118 18:44:46.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:46.834" level="INFO">Running command 'ozone sh bucket info o3:///15022-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:44:53.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:44:53.133" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211118 18:44:46.831" endtime="20211118 18:44:53.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:44:53.136" level="INFO">1000</msg>
<status status="PASS" starttime="20211118 18:44:53.134" endtime="20211118 18:44:53.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:44:53.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:44:53.137" endtime="20211118 18:44:53.139"/>
</kw>
<status status="PASS" starttime="20211118 18:44:46.831" endtime="20211118 18:44:53.140"/>
</kw>
<msg timestamp="20211118 18:44:53.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:46.830" endtime="20211118 18:44:53.140"/>
</kw>
<msg timestamp="20211118 18:44:53.141" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211118 18:44:46.829" endtime="20211118 18:44:53.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:44:53.142" endtime="20211118 18:44:53.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:44:53.151" level="INFO">Running command 'ozone sh bucket list o3:///15022-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:45:01.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:45:01.519" level="INFO">${output} = 15022-rpcwport</msg>
<status status="PASS" starttime="20211118 18:44:53.148" endtime="20211118 18:45:01.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:45:01.521" level="INFO">15022-rpcwport</msg>
<status status="PASS" starttime="20211118 18:45:01.520" endtime="20211118 18:45:01.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:45:01.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:45:01.521" endtime="20211118 18:45:01.523"/>
</kw>
<status status="PASS" starttime="20211118 18:44:53.147" endtime="20211118 18:45:01.523"/>
</kw>
<msg timestamp="20211118 18:45:01.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:44:53.146" endtime="20211118 18:45:01.523"/>
</kw>
<msg timestamp="20211118 18:45:01.524" level="INFO">${result} = 15022-rpcwport</msg>
<status status="PASS" starttime="20211118 18:44:53.144" endtime="20211118 18:45:01.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:45:01.524" endtime="20211118 18:45:01.525"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:45:01.533" level="INFO">Running command 'ozone sh key put o3:///15022-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:09.191" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:45:01.529" endtime="20211118 18:48:09.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.192" endtime="20211118 18:48:09.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.192" endtime="20211118 18:48:09.192"/>
</kw>
<status status="FAIL" starttime="20211118 18:45:01.529" endtime="20211118 18:48:09.193"/>
</kw>
<msg timestamp="20211118 18:48:09.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:45:01.528" endtime="20211118 18:48:09.193"/>
</kw>
<status status="FAIL" starttime="20211118 18:45:01.527" endtime="20211118 18:48:09.193"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.194" endtime="20211118 18:48:09.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.194" endtime="20211118 18:48:09.194"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.194" endtime="20211118 18:48:09.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.194" endtime="20211118 18:48:09.194"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.194" endtime="20211118 18:48:09.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.195" endtime="20211118 18:48:09.195"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.195" endtime="20211118 18:48:09.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.195" endtime="20211118 18:48:09.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.196" endtime="20211118 18:48:09.196"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.196" endtime="20211118 18:48:09.196"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.196" endtime="20211118 18:48:09.197"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.197" endtime="20211118 18:48:09.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.197" endtime="20211118 18:48:09.197"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.197" endtime="20211118 18:48:09.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.197" endtime="20211118 18:48:09.197"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.198" endtime="20211118 18:48:09.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.198" endtime="20211118 18:48:09.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.198" endtime="20211118 18:48:09.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.198" endtime="20211118 18:48:09.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.199" endtime="20211118 18:48:09.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.199" endtime="20211118 18:48:09.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.199" endtime="20211118 18:48:09.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.199" endtime="20211118 18:48:09.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.199" endtime="20211118 18:48:09.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.200" endtime="20211118 18:48:09.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.200" endtime="20211118 18:48:09.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.200" endtime="20211118 18:48:09.200"/>
</kw>
<status status="FAIL" starttime="20211118 18:45:01.526" endtime="20211118 18:48:09.200"/>
</kw>
<status status="FAIL" starttime="20211118 18:45:01.526" endtime="20211118 18:48:09.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.201" endtime="20211118 18:48:09.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.201" endtime="20211118 18:48:09.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.201" endtime="20211118 18:48:09.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.201" endtime="20211118 18:48:09.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.201" endtime="20211118 18:48:09.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.202" endtime="20211118 18:48:09.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.202" endtime="20211118 18:48:09.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.202" endtime="20211118 18:48:09.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.202" endtime="20211118 18:48:09.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.202" endtime="20211118 18:48:09.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.203" endtime="20211118 18:48:09.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.203" endtime="20211118 18:48:09.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.203" endtime="20211118 18:48:09.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.204" endtime="20211118 18:48:09.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.204" endtime="20211118 18:48:09.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.205" endtime="20211118 18:48:09.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.205" endtime="20211118 18:48:09.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.205" endtime="20211118 18:48:09.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.206" endtime="20211118 18:48:09.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.207" endtime="20211118 18:48:09.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.207" endtime="20211118 18:48:09.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.208" endtime="20211118 18:48:09.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.208" endtime="20211118 18:48:09.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:48:09.208" endtime="20211118 18:48:09.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.209" endtime="20211118 18:48:09.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:48:09.209" endtime="20211118 18:48:09.210"/>
</kw>
<status status="FAIL" starttime="20211118 18:43:09.241" endtime="20211118 18:48:09.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211118 18:43:09.190" endtime="20211118 18:48:09.211">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:09.221" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:09.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:09.223" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:48:09.217" endtime="20211118 18:48:09.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:09.224" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:48:09.223" endtime="20211118 18:48:09.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:09.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:09.225" endtime="20211118 18:48:09.225"/>
</kw>
<status status="PASS" starttime="20211118 18:48:09.216" endtime="20211118 18:48:09.226"/>
</kw>
<msg timestamp="20211118 18:48:09.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:09.216" endtime="20211118 18:48:09.226"/>
</kw>
<msg timestamp="20211118 18:48:09.227" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:48:09.216" endtime="20211118 18:48:09.227"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:48:09.228" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:48:09.227" endtime="20211118 18:48:09.228"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:09.235" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:09.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:09.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:48:09.232" endtime="20211118 18:48:09.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:09.294" level="INFO"/>
<status status="PASS" starttime="20211118 18:48:09.293" endtime="20211118 18:48:09.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:09.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:09.294" endtime="20211118 18:48:09.294"/>
</kw>
<status status="PASS" starttime="20211118 18:48:09.231" endtime="20211118 18:48:09.295"/>
</kw>
<msg timestamp="20211118 18:48:09.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:09.230" endtime="20211118 18:48:09.295"/>
</kw>
<status status="PASS" starttime="20211118 18:48:09.229" endtime="20211118 18:48:09.296"/>
</kw>
<status status="PASS" starttime="20211118 18:48:09.228" endtime="20211118 18:48:09.296"/>
</kw>
<status status="PASS" starttime="20211118 18:48:09.215" endtime="20211118 18:48:09.296"/>
</kw>
<status status="PASS" starttime="20211118 18:48:09.213" endtime="20211118 18:48:09.296"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:09.302" level="INFO">Running command 'ozone sh volume info /15022-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:17.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20211118 18:48:17.759" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15022-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211118 18:48:09.299" endtime="20211118 18:48:17.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:17.760" level="INFO">VOLUME_NOT_FOUND Volume 15022-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211118 18:48:17.760" endtime="20211118 18:48:17.760"/>
</kw>
<msg timestamp="20211118 18:48:17.761" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15022-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211118 18:48:09.299" endtime="20211118 18:48:17.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:48:17.761" endtime="20211118 18:48:17.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:17.767" level="INFO">Running command 'ozone sh volume create /15022-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:26.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:26.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:48:17.763" endtime="20211118 18:48:26.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:26.202" level="INFO"/>
<status status="PASS" starttime="20211118 18:48:26.201" endtime="20211118 18:48:26.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:26.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:26.202" endtime="20211118 18:48:26.203"/>
</kw>
<status status="PASS" starttime="20211118 18:48:17.762" endtime="20211118 18:48:26.203"/>
</kw>
<msg timestamp="20211118 18:48:26.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:17.762" endtime="20211118 18:48:26.204"/>
</kw>
<msg timestamp="20211118 18:48:26.205" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211118 18:48:17.761" endtime="20211118 18:48:26.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:48:26.205" endtime="20211118 18:48:26.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:26.212" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="15022-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:36.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:36.146" level="INFO">${output} = {
  "metadata": {},
  "name": "15022-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211118 18:48:26.209" endtime="20211118 18:48:36.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:36.148" level="INFO">{
  "metadata": {},
  "name": "15022-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:48:25.885Z",
  "modificationTime": "2021-11-18T18:48:25.885Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:48:36.147" endtime="20211118 18:48:36.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:36.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:36.148" endtime="20211118 18:48:36.149"/>
</kw>
<status status="PASS" starttime="20211118 18:48:26.208" endtime="20211118 18:48:36.149"/>
</kw>
<msg timestamp="20211118 18:48:36.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:26.208" endtime="20211118 18:48:36.150"/>
</kw>
<msg timestamp="20211118 18:48:36.150" level="INFO">${result} = {
  "metadata": {},
  "name": "15022-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211118 18:48:26.206" endtime="20211118 18:48:36.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:48:36.150" endtime="20211118 18:48:36.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:36.156" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="15022-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:44.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:44.471" level="INFO">${output} = {
  "metadata": {},
  "name": "15022-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211118 18:48:36.153" endtime="20211118 18:48:44.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:44.472" level="INFO">{
  "metadata": {},
  "name": "15022-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-18T18:48:25.885Z",
  "modificationTime": "2021-11-18T18:48:25.885Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211118 18:48:44.472" endtime="20211118 18:48:44.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:44.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:44.473" endtime="20211118 18:48:44.473"/>
</kw>
<status status="PASS" starttime="20211118 18:48:36.152" endtime="20211118 18:48:44.474"/>
</kw>
<msg timestamp="20211118 18:48:44.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:36.152" endtime="20211118 18:48:44.474"/>
</kw>
<msg timestamp="20211118 18:48:44.474" level="INFO">${result} = {
  "metadata": {},
  "name": "15022-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211118 18:48:36.151" endtime="20211118 18:48:44.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211118 18:48:44.475" endtime="20211118 18:48:44.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:44.480" level="INFO">Running command 'ozone sh volume setquota /15022-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:50.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:50.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:48:44.478" endtime="20211118 18:48:50.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:50.598" level="INFO"/>
<status status="PASS" starttime="20211118 18:48:50.597" endtime="20211118 18:48:50.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:50.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:50.598" endtime="20211118 18:48:50.599"/>
</kw>
<status status="PASS" starttime="20211118 18:48:44.477" endtime="20211118 18:48:50.600"/>
</kw>
<msg timestamp="20211118 18:48:50.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:44.476" endtime="20211118 18:48:50.600"/>
</kw>
<status status="PASS" starttime="20211118 18:48:44.475" endtime="20211118 18:48:50.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:50.606" level="INFO">Running command 'ozone sh volume info /15022-rpcwoscheme | jq -r '. | select(.name=="15022-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:48:57.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:48:57.480" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:48:50.604" endtime="20211118 18:48:57.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:48:57.483" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:48:57.480" endtime="20211118 18:48:57.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:48:57.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:48:57.483" endtime="20211118 18:48:57.484"/>
</kw>
<status status="PASS" starttime="20211118 18:48:50.603" endtime="20211118 18:48:57.484"/>
</kw>
<msg timestamp="20211118 18:48:57.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:50.602" endtime="20211118 18:48:57.485"/>
</kw>
<msg timestamp="20211118 18:48:57.485" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:48:50.601" endtime="20211118 18:48:57.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:48:57.485" endtime="20211118 18:48:57.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:48:57.492" level="INFO">Running command 'ozone sh bucket create /15022-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:06.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:06.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:48:57.489" endtime="20211118 18:49:06.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:06.018" level="INFO"/>
<status status="PASS" starttime="20211118 18:49:06.017" endtime="20211118 18:49:06.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:06.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:06.018" endtime="20211118 18:49:06.022"/>
</kw>
<status status="PASS" starttime="20211118 18:48:57.488" endtime="20211118 18:49:06.023"/>
</kw>
<msg timestamp="20211118 18:49:06.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:48:57.487" endtime="20211118 18:49:06.023"/>
</kw>
<status status="PASS" starttime="20211118 18:48:57.486" endtime="20211118 18:49:06.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:06.033" level="INFO">Running command 'ozone sh bucket info /15022-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:15.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:15.180" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211118 18:49:06.029" endtime="20211118 18:49:15.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:15.182" level="INFO">DISK</msg>
<status status="PASS" starttime="20211118 18:49:15.181" endtime="20211118 18:49:15.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:15.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:15.182" endtime="20211118 18:49:15.183"/>
</kw>
<status status="PASS" starttime="20211118 18:49:06.028" endtime="20211118 18:49:15.184"/>
</kw>
<msg timestamp="20211118 18:49:15.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:06.027" endtime="20211118 18:49:15.185"/>
</kw>
<msg timestamp="20211118 18:49:15.187" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211118 18:49:06.024" endtime="20211118 18:49:15.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:49:15.187" endtime="20211118 18:49:15.188"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:15.196" level="INFO">Running command 'ozone sh bucket info /15022-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:24.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:24.012" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:49:15.192" endtime="20211118 18:49:24.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:24.014" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211118 18:49:24.013" endtime="20211118 18:49:24.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:24.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:24.015" endtime="20211118 18:49:24.016"/>
</kw>
<status status="PASS" starttime="20211118 18:49:15.191" endtime="20211118 18:49:24.016"/>
</kw>
<msg timestamp="20211118 18:49:24.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:15.191" endtime="20211118 18:49:24.016"/>
</kw>
<msg timestamp="20211118 18:49:24.017" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211118 18:49:15.189" endtime="20211118 18:49:24.017"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:49:24.017" endtime="20211118 18:49:24.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:24.027" level="INFO">Running command 'ozone sh bucket info /15022-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:32.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:32.636" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211118 18:49:24.024" endtime="20211118 18:49:32.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:32.638" level="INFO">100</msg>
<status status="PASS" starttime="20211118 18:49:32.637" endtime="20211118 18:49:32.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:32.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:32.638" endtime="20211118 18:49:32.639"/>
</kw>
<status status="PASS" starttime="20211118 18:49:24.022" endtime="20211118 18:49:32.639"/>
</kw>
<msg timestamp="20211118 18:49:32.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:24.022" endtime="20211118 18:49:32.639"/>
</kw>
<msg timestamp="20211118 18:49:32.640" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211118 18:49:24.019" endtime="20211118 18:49:32.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:49:32.640" endtime="20211118 18:49:32.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:32.646" level="INFO">Running command 'ozone sh bucket setquota /15022-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:40.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:40.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:49:32.643" endtime="20211118 18:49:40.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:40.486" level="INFO"/>
<status status="PASS" starttime="20211118 18:49:40.485" endtime="20211118 18:49:40.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:40.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:40.487" endtime="20211118 18:49:40.488"/>
</kw>
<status status="PASS" starttime="20211118 18:49:32.642" endtime="20211118 18:49:40.488"/>
</kw>
<msg timestamp="20211118 18:49:40.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:32.642" endtime="20211118 18:49:40.489"/>
</kw>
<status status="PASS" starttime="20211118 18:49:32.641" endtime="20211118 18:49:40.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:40.495" level="INFO">Running command 'ozone sh bucket info /15022-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:48.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:48.729" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:49:40.492" endtime="20211118 18:49:48.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:48.733" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211118 18:49:48.730" endtime="20211118 18:49:48.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:48.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:48.733" endtime="20211118 18:49:48.734"/>
</kw>
<status status="PASS" starttime="20211118 18:49:40.491" endtime="20211118 18:49:48.735"/>
</kw>
<msg timestamp="20211118 18:49:48.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:40.491" endtime="20211118 18:49:48.735"/>
</kw>
<msg timestamp="20211118 18:49:48.736" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211118 18:49:40.489" endtime="20211118 18:49:48.736"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:49:48.736" endtime="20211118 18:49:48.737"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:48.745" level="INFO">Running command 'ozone sh bucket info /15022-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:49:57.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:49:57.319" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211118 18:49:48.742" endtime="20211118 18:49:57.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:49:57.321" level="INFO">1000</msg>
<status status="PASS" starttime="20211118 18:49:57.320" endtime="20211118 18:49:57.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:49:57.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:49:57.322" endtime="20211118 18:49:57.324"/>
</kw>
<status status="PASS" starttime="20211118 18:49:48.741" endtime="20211118 18:49:57.325"/>
</kw>
<msg timestamp="20211118 18:49:57.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:48.740" endtime="20211118 18:49:57.328"/>
</kw>
<msg timestamp="20211118 18:49:57.328" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211118 18:49:48.737" endtime="20211118 18:49:57.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:49:57.329" endtime="20211118 18:49:57.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:49:57.336" level="INFO">Running command 'ozone sh bucket list /15022-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:50:05.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:50:05.050" level="INFO">${output} = 15022-rpcwoscheme</msg>
<status status="PASS" starttime="20211118 18:49:57.333" endtime="20211118 18:50:05.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:50:05.051" level="INFO">15022-rpcwoscheme</msg>
<status status="PASS" starttime="20211118 18:50:05.050" endtime="20211118 18:50:05.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:50:05.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:50:05.052" endtime="20211118 18:50:05.052"/>
</kw>
<status status="PASS" starttime="20211118 18:49:57.332" endtime="20211118 18:50:05.053"/>
</kw>
<msg timestamp="20211118 18:50:05.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:49:57.331" endtime="20211118 18:50:05.053"/>
</kw>
<msg timestamp="20211118 18:50:05.053" level="INFO">${result} = 15022-rpcwoscheme</msg>
<status status="PASS" starttime="20211118 18:49:57.330" endtime="20211118 18:50:05.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211118 18:50:05.054" endtime="20211118 18:50:05.054"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:50:05.060" level="INFO">Running command 'ozone sh key put /15022-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:53:09.214" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211118 18:50:05.057" endtime="20211118 18:53:09.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.214" endtime="20211118 18:53:09.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.215" endtime="20211118 18:53:09.215"/>
</kw>
<status status="FAIL" starttime="20211118 18:50:05.057" endtime="20211118 18:53:09.215"/>
</kw>
<msg timestamp="20211118 18:53:09.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211118 18:50:05.056" endtime="20211118 18:53:09.216"/>
</kw>
<status status="FAIL" starttime="20211118 18:50:05.056" endtime="20211118 18:53:09.216"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.216" endtime="20211118 18:53:09.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.217" endtime="20211118 18:53:09.217"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.217" endtime="20211118 18:53:09.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.217" endtime="20211118 18:53:09.217"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.217" endtime="20211118 18:53:09.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.217" endtime="20211118 18:53:09.218"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.218" endtime="20211118 18:53:09.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.218" endtime="20211118 18:53:09.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.218" endtime="20211118 18:53:09.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.218" endtime="20211118 18:53:09.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.218" endtime="20211118 18:53:09.219"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.219" endtime="20211118 18:53:09.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.219" endtime="20211118 18:53:09.219"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.219" endtime="20211118 18:53:09.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.219" endtime="20211118 18:53:09.219"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.219" endtime="20211118 18:53:09.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.220" endtime="20211118 18:53:09.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.220" endtime="20211118 18:53:09.220"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.220" endtime="20211118 18:53:09.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.220" endtime="20211118 18:53:09.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.221" endtime="20211118 18:53:09.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.221" endtime="20211118 18:53:09.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.221" endtime="20211118 18:53:09.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.221" endtime="20211118 18:53:09.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.221" endtime="20211118 18:53:09.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.222" endtime="20211118 18:53:09.222"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.222" endtime="20211118 18:53:09.222"/>
</kw>
<status status="FAIL" starttime="20211118 18:50:05.055" endtime="20211118 18:53:09.222"/>
</kw>
<status status="FAIL" starttime="20211118 18:50:05.054" endtime="20211118 18:53:09.222"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.223" endtime="20211118 18:53:09.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.223" endtime="20211118 18:53:09.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.223" endtime="20211118 18:53:09.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.223" endtime="20211118 18:53:09.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.224" endtime="20211118 18:53:09.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.224" endtime="20211118 18:53:09.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.224" endtime="20211118 18:53:09.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.224" endtime="20211118 18:53:09.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.225" endtime="20211118 18:53:09.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.225" endtime="20211118 18:53:09.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.225" endtime="20211118 18:53:09.225"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.225" endtime="20211118 18:53:09.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.225" endtime="20211118 18:53:09.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.227" endtime="20211118 18:53:09.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.227" endtime="20211118 18:53:09.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.228" endtime="20211118 18:53:09.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.230" endtime="20211118 18:53:09.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.231" endtime="20211118 18:53:09.231"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.231" endtime="20211118 18:53:09.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.231" endtime="20211118 18:53:09.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.231" endtime="20211118 18:53:09.231"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.231" endtime="20211118 18:53:09.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.232" endtime="20211118 18:53:09.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211118 18:53:09.232" endtime="20211118 18:53:09.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.232" endtime="20211118 18:53:09.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211118 18:53:09.232" endtime="20211118 18:53:09.233"/>
</kw>
<status status="FAIL" starttime="20211118 18:48:09.296" endtime="20211118 18:53:09.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211118 18:48:09.212" endtime="20211118 18:53:09.233">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211118 18:27:53.437" endtime="20211118 18:53:09.235"/>
</suite>
<status status="FAIL" starttime="20211118 18:03:27.649" endtime="20211118 18:53:09.243"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:22.253" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:22.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:22.258" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211118 18:03:22.248" endtime="20211118 18:03:22.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:22.260" level="INFO">scm</msg>
<status status="PASS" starttime="20211118 18:03:22.259" endtime="20211118 18:03:22.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:22.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:22.260" endtime="20211118 18:03:22.260"/>
</kw>
<status status="PASS" starttime="20211118 18:03:22.247" endtime="20211118 18:03:22.261"/>
</kw>
<msg timestamp="20211118 18:03:22.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:22.247" endtime="20211118 18:03:22.261"/>
</kw>
<msg timestamp="20211118 18:03:22.261" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211118 18:03:22.247" endtime="20211118 18:03:22.261"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211118 18:03:22.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211118 18:03:22.262" endtime="20211118 18:03:22.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211118 18:03:22.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211118 18:03:22.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20211118 18:03:22.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211118 18:03:22.265" endtime="20211118 18:03:22.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211118 18:03:22.276" level="INFO"/>
<status status="PASS" starttime="20211118 18:03:22.275" endtime="20211118 18:03:22.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211118 18:03:22.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211118 18:03:22.276" endtime="20211118 18:03:22.277"/>
</kw>
<status status="PASS" starttime="20211118 18:03:22.264" endtime="20211118 18:03:22.277"/>
</kw>
<msg timestamp="20211118 18:03:22.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211118 18:03:22.264" endtime="20211118 18:03:22.277"/>
</kw>
<status status="PASS" starttime="20211118 18:03:22.263" endtime="20211118 18:03:22.278"/>
</kw>
<status status="PASS" starttime="20211118 18:03:22.262" endtime="20211118 18:03:22.278"/>
</kw>
<status status="PASS" starttime="20211118 18:03:22.246" endtime="20211118 18:03:22.278"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211118 18:03:22.245" endtime="20211118 18:03:22.278"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211118 18:03:22.180" endtime="20211118 18:03:22.279"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2981693"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
