<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211116 13:33:04.989" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:23:02.117" level="INFO">${random} = 16186</msg>
<status status="PASS" starttime="20211116 13:23:02.116" endtime="20211116 13:23:02.117"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:23:02.123" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-16186 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:23:07.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:23:07.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:23:02.119" endtime="20211116 13:23:07.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:23:07.261" level="INFO"/>
<status status="PASS" starttime="20211116 13:23:07.260" endtime="20211116 13:23:07.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:23:07.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:23:07.261" endtime="20211116 13:23:07.262"/>
</kw>
<status status="PASS" starttime="20211116 13:23:02.119" endtime="20211116 13:23:07.262"/>
</kw>
<msg timestamp="20211116 13:23:07.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:23:02.118" endtime="20211116 13:23:07.263"/>
</kw>
<msg timestamp="20211116 13:23:07.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:23:02.117" endtime="20211116 13:23:07.263"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:23:07.263" endtime="20211116 13:23:07.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:23:02.115" endtime="20211116 13:23:07.264"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:23:02.048" endtime="20211116 13:23:07.266"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:27:46.749" level="INFO">${random} = 93336</msg>
<status status="PASS" starttime="20211116 13:27:46.749" endtime="20211116 13:27:46.749"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:27:46.756" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-93336 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:27:51.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:27:51.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:46.752" endtime="20211116 13:27:51.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:27:51.077" level="INFO"/>
<status status="PASS" starttime="20211116 13:27:51.077" endtime="20211116 13:27:51.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:27:51.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:27:51.078" endtime="20211116 13:27:51.078"/>
</kw>
<status status="PASS" starttime="20211116 13:27:46.751" endtime="20211116 13:27:51.079"/>
</kw>
<msg timestamp="20211116 13:27:51.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:27:46.751" endtime="20211116 13:27:51.079"/>
</kw>
<msg timestamp="20211116 13:27:51.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:46.750" endtime="20211116 13:27:51.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:27:51.079" endtime="20211116 13:27:51.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:27:46.748" endtime="20211116 13:27:51.080"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:27:46.678" endtime="20211116 13:27:51.083"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:27:55.188" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:27:57.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:27:57.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:55.184" endtime="20211116 13:27:57.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:27:57.842" level="INFO"/>
<status status="PASS" starttime="20211116 13:27:57.841" endtime="20211116 13:27:57.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:27:57.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:27:57.842" endtime="20211116 13:27:57.843"/>
</kw>
<status status="PASS" starttime="20211116 13:27:55.183" endtime="20211116 13:27:57.851"/>
</kw>
<msg timestamp="20211116 13:27:57.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:27:55.183" endtime="20211116 13:27:57.851"/>
</kw>
<msg timestamp="20211116 13:27:57.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:55.181" endtime="20211116 13:27:57.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:27:57.852" endtime="20211116 13:27:57.852"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:27:57.859" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:28:00.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:28:00.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:57.855" endtime="20211116 13:28:00.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:28:00.725" level="INFO"/>
<status status="PASS" starttime="20211116 13:28:00.724" endtime="20211116 13:28:00.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:28:00.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:28:00.725" endtime="20211116 13:28:00.726"/>
</kw>
<status status="PASS" starttime="20211116 13:27:57.854" endtime="20211116 13:28:00.726"/>
</kw>
<msg timestamp="20211116 13:28:00.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:27:57.853" endtime="20211116 13:28:00.726"/>
</kw>
<msg timestamp="20211116 13:28:00.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:57.852" endtime="20211116 13:28:00.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:28:00.727" endtime="20211116 13:28:00.728"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:28:00.732" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:28:06.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:28:06.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:28:00.730" endtime="20211116 13:28:06.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:28:06.462" level="INFO"/>
<status status="PASS" starttime="20211116 13:28:06.461" endtime="20211116 13:28:06.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:28:06.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:28:06.462" endtime="20211116 13:28:06.463"/>
</kw>
<status status="PASS" starttime="20211116 13:28:00.729" endtime="20211116 13:28:06.463"/>
</kw>
<msg timestamp="20211116 13:28:06.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:28:00.729" endtime="20211116 13:28:06.463"/>
</kw>
<msg timestamp="20211116 13:28:06.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:28:00.728" endtime="20211116 13:28:06.464"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:28:06.464" endtime="20211116 13:28:06.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:27:55.180" endtime="20211116 13:28:06.465"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211116 13:27:55.115" endtime="20211116 13:28:06.466"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:28:10.473" level="INFO">${random} = 92134</msg>
<status status="PASS" starttime="20211116 13:28:10.473" endtime="20211116 13:28:10.473"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:28:10.479" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-92134 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:28:14.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:28:14.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:28:10.476" endtime="20211116 13:28:14.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:28:14.959" level="INFO"/>
<status status="PASS" starttime="20211116 13:28:14.959" endtime="20211116 13:28:14.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:28:14.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:28:14.960" endtime="20211116 13:28:14.960"/>
</kw>
<status status="PASS" starttime="20211116 13:28:10.475" endtime="20211116 13:28:14.961"/>
</kw>
<msg timestamp="20211116 13:28:14.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:28:10.475" endtime="20211116 13:28:14.961"/>
</kw>
<msg timestamp="20211116 13:28:14.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:28:10.474" endtime="20211116 13:28:14.961"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:28:14.962" endtime="20211116 13:28:14.962"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:28:10.472" endtime="20211116 13:28:14.962"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:28:10.407" endtime="20211116 13:28:14.964"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:27:37.674" level="INFO">${random} = 37643</msg>
<status status="PASS" starttime="20211116 13:27:37.674" endtime="20211116 13:27:37.674"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:27:37.680" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-37643 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:27:42.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:27:42.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:37.677" endtime="20211116 13:27:42.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:27:42.692" level="INFO"/>
<status status="PASS" starttime="20211116 13:27:42.691" endtime="20211116 13:27:42.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:27:42.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:27:42.692" endtime="20211116 13:27:42.693"/>
</kw>
<status status="PASS" starttime="20211116 13:27:37.676" endtime="20211116 13:27:42.694"/>
</kw>
<msg timestamp="20211116 13:27:42.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:27:37.676" endtime="20211116 13:27:42.694"/>
</kw>
<msg timestamp="20211116 13:27:42.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:27:37.675" endtime="20211116 13:27:42.694"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:27:42.695" endtime="20211116 13:27:42.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:27:37.673" endtime="20211116 13:27:42.696"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:27:37.604" endtime="20211116 13:27:42.697"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:22:46.477" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:22:49.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:22:49.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:22:46.473" endtime="20211116 13:22:49.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:22:49.139" level="INFO"/>
<status status="PASS" starttime="20211116 13:22:49.133" endtime="20211116 13:22:49.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:22:49.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:22:49.139" endtime="20211116 13:22:49.140"/>
</kw>
<status status="PASS" starttime="20211116 13:22:46.473" endtime="20211116 13:22:49.143"/>
</kw>
<msg timestamp="20211116 13:22:49.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:22:46.472" endtime="20211116 13:22:49.143"/>
</kw>
<msg timestamp="20211116 13:22:49.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:22:46.471" endtime="20211116 13:22:49.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:22:49.143" endtime="20211116 13:22:49.144"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:22:49.154" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:22:51.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:22:51.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:22:49.150" endtime="20211116 13:22:51.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:22:51.802" level="INFO"/>
<status status="PASS" starttime="20211116 13:22:51.801" endtime="20211116 13:22:51.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:22:51.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:22:51.803" endtime="20211116 13:22:51.804"/>
</kw>
<status status="PASS" starttime="20211116 13:22:49.145" endtime="20211116 13:22:51.804"/>
</kw>
<msg timestamp="20211116 13:22:51.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:22:49.145" endtime="20211116 13:22:51.804"/>
</kw>
<msg timestamp="20211116 13:22:51.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:22:49.144" endtime="20211116 13:22:51.805"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:22:51.805" endtime="20211116 13:22:51.805"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:22:51.809" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:22:58.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:22:58.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:22:51.807" endtime="20211116 13:22:58.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:22:58.067" level="INFO"/>
<status status="PASS" starttime="20211116 13:22:58.066" endtime="20211116 13:22:58.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:22:58.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:22:58.067" endtime="20211116 13:22:58.068"/>
</kw>
<status status="PASS" starttime="20211116 13:22:51.807" endtime="20211116 13:22:58.068"/>
</kw>
<msg timestamp="20211116 13:22:58.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:22:51.806" endtime="20211116 13:22:58.068"/>
</kw>
<msg timestamp="20211116 13:22:58.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211116 13:22:51.805" endtime="20211116 13:22:58.069"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:22:58.069" endtime="20211116 13:22:58.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:22:46.471" endtime="20211116 13:22:58.070"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211116 13:22:46.407" endtime="20211116 13:22:58.071"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:31.937" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211116 13:31:31.936" endtime="20211116 13:31:31.937"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:31.937" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:31.937" endtime="20211116 13:31:31.937"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:31.938" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:31.937" endtime="20211116 13:31:31.938"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:31.939" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:31.938" endtime="20211116 13:31:31.939"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:31.941" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:31.941" level="INFO">${version_file_contents} = #Tue Nov 16 13:30:13 UTC 2021
cTime=1637068891220
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
nodeType=SCM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb3
layoutVersion=2
</msg>
<status status="PASS" starttime="20211116 13:31:31.941" endtime="20211116 13:31:31.941"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:31.942" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211116 13:31:31.942" endtime="20211116 13:31:31.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:31.942" endtime="20211116 13:31:31.943"/>
</kw>
<status status="PASS" starttime="20211116 13:31:31.939" endtime="20211116 13:31:31.943"/>
</kw>
<status status="PASS" starttime="20211116 13:31:31.939" endtime="20211116 13:31:31.943"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:31.935" endtime="20211116 13:31:31.943"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:31.867" endtime="20211116 13:31:31.945"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:32:18.832" level="INFO">${random} = 08180</msg>
<status status="PASS" starttime="20211116 13:32:18.832" endtime="20211116 13:32:18.833"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:18.839" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-08180 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:23.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:23.888" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:18.835" endtime="20211116 13:32:23.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:23.890" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:23.889" endtime="20211116 13:32:23.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:23.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:23.890" endtime="20211116 13:32:23.891"/>
</kw>
<status status="PASS" starttime="20211116 13:32:18.834" endtime="20211116 13:32:23.891"/>
</kw>
<msg timestamp="20211116 13:32:23.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:18.834" endtime="20211116 13:32:23.892"/>
</kw>
<msg timestamp="20211116 13:32:23.892" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:18.833" endtime="20211116 13:32:23.892"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:23.892" endtime="20211116 13:32:23.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:32:18.831" endtime="20211116 13:32:23.893"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:32:18.764" endtime="20211116 13:32:23.894"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:27.963" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:31.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:31.070" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:27.959" endtime="20211116 13:32:31.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:31.071" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:31.070" endtime="20211116 13:32:31.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:31.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:31.072" endtime="20211116 13:32:31.072"/>
</kw>
<status status="PASS" starttime="20211116 13:32:27.958" endtime="20211116 13:32:31.073"/>
</kw>
<msg timestamp="20211116 13:32:31.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:27.958" endtime="20211116 13:32:31.073"/>
</kw>
<msg timestamp="20211116 13:32:31.073" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:27.957" endtime="20211116 13:32:31.073"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:31.074" endtime="20211116 13:32:31.074"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:31.079" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:33.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:33.880" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:31.076" endtime="20211116 13:32:33.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:33.883" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:33.882" endtime="20211116 13:32:33.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:33.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:33.884" endtime="20211116 13:32:33.884"/>
</kw>
<status status="PASS" starttime="20211116 13:32:31.075" endtime="20211116 13:32:33.885"/>
</kw>
<msg timestamp="20211116 13:32:33.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:31.075" endtime="20211116 13:32:33.885"/>
</kw>
<msg timestamp="20211116 13:32:33.885" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:31.074" endtime="20211116 13:32:33.885"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:33.885" endtime="20211116 13:32:33.886"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:33.895" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:40.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:40.962" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:33.892" endtime="20211116 13:32:40.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:40.964" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:40.963" endtime="20211116 13:32:40.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:40.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:40.964" endtime="20211116 13:32:40.965"/>
</kw>
<status status="PASS" starttime="20211116 13:32:33.891" endtime="20211116 13:32:40.965"/>
</kw>
<msg timestamp="20211116 13:32:40.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:33.891" endtime="20211116 13:32:40.966"/>
</kw>
<msg timestamp="20211116 13:32:40.966" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:33.890" endtime="20211116 13:32:40.966"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:40.966" endtime="20211116 13:32:40.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:32:27.956" endtime="20211116 13:32:40.967"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211116 13:32:27.889" endtime="20211116 13:32:40.969"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:32:45.089" level="INFO">${random} = 90655</msg>
<status status="PASS" starttime="20211116 13:32:45.088" endtime="20211116 13:32:45.089"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:45.096" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-90655 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:49.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:49.910" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:45.091" endtime="20211116 13:32:49.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:49.912" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:49.911" endtime="20211116 13:32:49.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:49.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:49.912" endtime="20211116 13:32:49.913"/>
</kw>
<status status="PASS" starttime="20211116 13:32:45.090" endtime="20211116 13:32:49.913"/>
</kw>
<msg timestamp="20211116 13:32:49.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:45.090" endtime="20211116 13:32:49.913"/>
</kw>
<msg timestamp="20211116 13:32:49.913" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:45.089" endtime="20211116 13:32:49.913"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:49.914" endtime="20211116 13:32:49.914"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:32:45.087" endtime="20211116 13:32:49.914"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:32:45.017" endtime="20211116 13:32:49.916"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:36.353" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211116 13:31:36.352" endtime="20211116 13:31:36.353"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:36.354" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:36.353" endtime="20211116 13:31:36.354"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:36.355" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:36.354" endtime="20211116 13:31:36.355"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:36.355" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:36.355" endtime="20211116 13:31:36.356"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:36.358" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:36.358" level="INFO">${version_file_contents} = #Tue Nov 16 13:30:14 UTC 2021
cTime=1637069032072
clusterID=cf33ee25-0945-4bf8-9109-83d120868594
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211116 13:31:36.357" endtime="20211116 13:31:36.358"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:36.360" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211116 13:31:36.358" endtime="20211116 13:31:36.360"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:36.360" endtime="20211116 13:31:36.361"/>
</kw>
<status status="PASS" starttime="20211116 13:31:36.356" endtime="20211116 13:31:36.361"/>
</kw>
<status status="PASS" starttime="20211116 13:31:36.356" endtime="20211116 13:31:36.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:36.351" endtime="20211116 13:31:36.361"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:36.281" endtime="20211116 13:31:36.362"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:40.584" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211116 13:31:40.584" endtime="20211116 13:31:40.584"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:40.585" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:40.585" endtime="20211116 13:31:40.585"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:40.586" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:40.585" endtime="20211116 13:31:40.586"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:40.586" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:40.586" endtime="20211116 13:31:40.587"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:40.588" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:40.589" level="INFO">${version_file_contents} = #Tue Nov 16 13:30:33 UTC 2021
cTime=1637069031496
clusterID=7da1334b-b2e7-4ec5-a8ea-863eccbf26d7
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211116 13:31:40.588" endtime="20211116 13:31:40.589"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:40.590" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211116 13:31:40.589" endtime="20211116 13:31:40.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:40.590" endtime="20211116 13:31:40.590"/>
</kw>
<status status="PASS" starttime="20211116 13:31:40.587" endtime="20211116 13:31:40.591"/>
</kw>
<status status="PASS" starttime="20211116 13:31:40.587" endtime="20211116 13:31:40.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:40.583" endtime="20211116 13:31:40.591"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:40.511" endtime="20211116 13:31:40.592"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:44.653" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211116 13:31:44.652" endtime="20211116 13:31:44.653"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:44.653" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:44.653" endtime="20211116 13:31:44.654"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:44.654" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:44.654" endtime="20211116 13:31:44.654"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:44.655" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:44.654" endtime="20211116 13:31:44.655"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:44.656" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:44.657" level="INFO">${version_file_contents} = #Tue Nov 16 13:30:28 UTC 2021
cTime=1637069033681
clusterID=08f400cc-9a76-4c16-a7a0-8b5ebdb25f56
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211116 13:31:44.656" endtime="20211116 13:31:44.657"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:44.658" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211116 13:31:44.657" endtime="20211116 13:31:44.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:44.658" endtime="20211116 13:31:44.658"/>
</kw>
<status status="PASS" starttime="20211116 13:31:44.656" endtime="20211116 13:31:44.658"/>
</kw>
<status status="PASS" starttime="20211116 13:31:44.655" endtime="20211116 13:31:44.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:44.651" endtime="20211116 13:31:44.659"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:44.585" endtime="20211116 13:31:44.660"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:48.712" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211116 13:31:48.711" endtime="20211116 13:31:48.712"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:48.712" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:48.712" endtime="20211116 13:31:48.712"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:48.713" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:48.713" endtime="20211116 13:31:48.713"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:48.714" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:48.713" endtime="20211116 13:31:48.714"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:48.715" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:48.716" level="INFO">${version_file_contents} = #Tue Nov 16 13:22:02 UTC 2021
cTime=1637068900263
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
omUuid=710cfe03-73f3-4a98-bd9d-4f1343eb014c
nodeType=OM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb...</msg>
<status status="PASS" starttime="20211116 13:31:48.715" endtime="20211116 13:31:48.716"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:48.717" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:31:48.716" endtime="20211116 13:31:48.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:48.717" endtime="20211116 13:31:48.717"/>
</kw>
<status status="PASS" starttime="20211116 13:31:48.715" endtime="20211116 13:31:48.718"/>
</kw>
<status status="PASS" starttime="20211116 13:31:48.714" endtime="20211116 13:31:48.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:48.710" endtime="20211116 13:31:48.718"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:48.636" endtime="20211116 13:31:48.719"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:52.827" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211116 13:31:52.826" endtime="20211116 13:31:52.827"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:52.827" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:52.827" endtime="20211116 13:31:52.827"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:52.828" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:52.828" endtime="20211116 13:31:52.828"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:52.829" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:52.828" endtime="20211116 13:31:52.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:52.831" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:52.831" level="INFO">${version_file_contents} = #Tue Nov 16 13:22:02 UTC 2021
cTime=1637068898868
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
omUuid=f4a38b69-75e0-48a7-93b1-be5622b43f6f
nodeType=OM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb...</msg>
<status status="PASS" starttime="20211116 13:31:52.830" endtime="20211116 13:31:52.831"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:52.832" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:31:52.831" endtime="20211116 13:31:52.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:52.832" endtime="20211116 13:31:52.833"/>
</kw>
<status status="PASS" starttime="20211116 13:31:52.830" endtime="20211116 13:31:52.833"/>
</kw>
<status status="PASS" starttime="20211116 13:31:52.829" endtime="20211116 13:31:52.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:52.825" endtime="20211116 13:31:52.833"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:52.761" endtime="20211116 13:31:52.834"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:56.960" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211116 13:31:56.959" endtime="20211116 13:31:56.960"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:31:56.961" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:31:56.960" endtime="20211116 13:31:56.961"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:31:56.961" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:31:56.961" endtime="20211116 13:31:56.961"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:31:56.962" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211116 13:31:56.962" endtime="20211116 13:31:56.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:31:56.964" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:31:56.964" level="INFO">${version_file_contents} = #Tue Nov 16 13:22:02 UTC 2021
cTime=1637068901833
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
omUuid=f6f60df4-a359-4993-a147-26374f2f210f
nodeType=OM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb...</msg>
<status status="PASS" starttime="20211116 13:31:56.963" endtime="20211116 13:31:56.964"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:31:56.965" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:31:56.964" endtime="20211116 13:31:56.965"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:31:56.965" endtime="20211116 13:31:56.966"/>
</kw>
<status status="PASS" starttime="20211116 13:31:56.963" endtime="20211116 13:31:56.966"/>
</kw>
<status status="PASS" starttime="20211116 13:31:56.962" endtime="20211116 13:31:56.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:56.958" endtime="20211116 13:31:56.966"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:31:56.889" endtime="20211116 13:31:56.967"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:32:01.004" level="INFO">${random} = 47412</msg>
<status status="PASS" starttime="20211116 13:32:01.004" endtime="20211116 13:32:01.004"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:01.011" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-47412 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:06.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:06.056" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:01.007" endtime="20211116 13:32:06.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:06.058" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:06.057" endtime="20211116 13:32:06.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:06.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:06.058" endtime="20211116 13:32:06.059"/>
</kw>
<status status="PASS" starttime="20211116 13:32:01.006" endtime="20211116 13:32:06.059"/>
</kw>
<msg timestamp="20211116 13:32:06.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:01.006" endtime="20211116 13:32:06.059"/>
</kw>
<msg timestamp="20211116 13:32:06.060" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:01.005" endtime="20211116 13:32:06.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:06.060" endtime="20211116 13:32:06.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:32:01.003" endtime="20211116 13:32:06.061"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:32:00.936" endtime="20211116 13:32:06.062"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:32:10.176" level="INFO">${random} = 39533</msg>
<status status="PASS" starttime="20211116 13:32:10.175" endtime="20211116 13:32:10.176"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:32:10.182" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-39533 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:32:14.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:32:14.775" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:10.178" endtime="20211116 13:32:14.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:32:14.776" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:14.775" endtime="20211116 13:32:14.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:32:14.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:32:14.777" endtime="20211116 13:32:14.777"/>
</kw>
<status status="PASS" starttime="20211116 13:32:10.178" endtime="20211116 13:32:14.778"/>
</kw>
<msg timestamp="20211116 13:32:14.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:32:10.177" endtime="20211116 13:32:14.778"/>
</kw>
<msg timestamp="20211116 13:32:14.778" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:32:10.176" endtime="20211116 13:32:14.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:32:14.779" endtime="20211116 13:32:14.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:32:10.174" endtime="20211116 13:32:14.779"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:32:10.107" endtime="20211116 13:32:14.781"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211116 13:30:05.044" endtime="20211116 13:30:05.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:30:05.052" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:31:23.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:31:23.856" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211116 13:30:05.046" endtime="20211116 13:31:23.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:31:23.858" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211116 13:31:23.857" endtime="20211116 13:31:23.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:31:23.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:31:23.858" endtime="20211116 13:31:23.859"/>
</kw>
<status status="PASS" starttime="20211116 13:30:05.046" endtime="20211116 13:31:23.859"/>
</kw>
<msg timestamp="20211116 13:31:23.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:30:05.045" endtime="20211116 13:31:23.859"/>
</kw>
<msg timestamp="20211116 13:31:23.860" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211116 13:30:05.045" endtime="20211116 13:31:23.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:31:23.860" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211116 13:31:23.860" endtime="20211116 13:31:23.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:30:05.043" endtime="20211116 13:31:23.861"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211116 13:31:23.864" endtime="20211116 13:31:23.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:31:23.869" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:31:27.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:31:27.722" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211116 13:31:23.867" endtime="20211116 13:31:27.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:31:27.724" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:455)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:441)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:279)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211116 13:31:27.723" endtime="20211116 13:31:27.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:31:27.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:31:27.725" endtime="20211116 13:31:27.725"/>
</kw>
<status status="PASS" starttime="20211116 13:31:23.866" endtime="20211116 13:31:27.730"/>
</kw>
<msg timestamp="20211116 13:31:27.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:31:23.866" endtime="20211116 13:31:27.730"/>
</kw>
<msg timestamp="20211116 13:31:27.731" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211116 13:31:23.865" endtime="20211116 13:31:27.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:31:27.732" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:455)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:441)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:279)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211116 13:31:27.731" endtime="20211116 13:31:27.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:31:23.863" endtime="20211116 13:31:27.732"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211116 13:30:04.974" endtime="20211116 13:31:27.739"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:24:59.392" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211116 13:24:59.391" endtime="20211116 13:24:59.392"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:24:59.393" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:24:59.392" endtime="20211116 13:24:59.393"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:24:59.394" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:24:59.393" endtime="20211116 13:24:59.394"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:24:59.394" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211116 13:24:59.394" endtime="20211116 13:24:59.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:24:59.396" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:24:59.396" level="INFO">${version_file_contents} = #Tue Nov 16 13:23:52 UTC 2021
cTime=1637069032072
clusterID=cf33ee25-0945-4bf8-9109-83d120868594
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211116 13:24:59.395" endtime="20211116 13:24:59.396"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:24:59.397" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:24:59.396" endtime="20211116 13:24:59.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:24:59.397" endtime="20211116 13:24:59.398"/>
</kw>
<status status="PASS" starttime="20211116 13:24:59.395" endtime="20211116 13:24:59.398"/>
</kw>
<status status="PASS" starttime="20211116 13:24:59.395" endtime="20211116 13:24:59.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:24:59.391" endtime="20211116 13:24:59.398"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:24:59.328" endtime="20211116 13:24:59.399"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:03.443" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211116 13:25:03.442" endtime="20211116 13:25:03.443"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:03.444" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:25:03.443" endtime="20211116 13:25:03.444"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:25:03.444" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:25:03.444" endtime="20211116 13:25:03.445"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:25:03.445" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211116 13:25:03.445" endtime="20211116 13:25:03.445"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:25:03.448" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:25:03.448" level="INFO">${version_file_contents} = #Tue Nov 16 13:23:51 UTC 2021
cTime=1637069031496
clusterID=7da1334b-b2e7-4ec5-a8ea-863eccbf26d7
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211116 13:25:03.448" endtime="20211116 13:25:03.448"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:25:03.450" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:25:03.449" endtime="20211116 13:25:03.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:03.450" endtime="20211116 13:25:03.451"/>
</kw>
<status status="PASS" starttime="20211116 13:25:03.447" endtime="20211116 13:25:03.451"/>
</kw>
<status status="PASS" starttime="20211116 13:25:03.446" endtime="20211116 13:25:03.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:03.441" endtime="20211116 13:25:03.451"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:25:03.375" endtime="20211116 13:25:03.452"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:07.433" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211116 13:25:07.432" endtime="20211116 13:25:07.433"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:07.434" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:25:07.434" endtime="20211116 13:25:07.434"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:25:07.435" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:25:07.434" endtime="20211116 13:25:07.435"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:25:07.435" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211116 13:25:07.435" endtime="20211116 13:25:07.436"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:25:07.437" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:25:07.438" level="INFO">${version_file_contents} = #Tue Nov 16 13:23:53 UTC 2021
cTime=1637069033681
clusterID=08f400cc-9a76-4c16-a7a0-8b5ebdb25f56
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211116 13:25:07.437" endtime="20211116 13:25:07.438"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:25:07.439" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:25:07.438" endtime="20211116 13:25:07.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:07.439" endtime="20211116 13:25:07.439"/>
</kw>
<status status="PASS" starttime="20211116 13:25:07.437" endtime="20211116 13:25:07.440"/>
</kw>
<status status="PASS" starttime="20211116 13:25:07.436" endtime="20211116 13:25:07.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:07.431" endtime="20211116 13:25:07.440"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:25:07.362" endtime="20211116 13:25:07.441"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:11.558" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211116 13:25:11.557" endtime="20211116 13:25:11.558"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:11.558" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:25:11.558" endtime="20211116 13:25:11.558"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:25:11.559" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:25:11.559" endtime="20211116 13:25:11.559"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:25:11.560" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211116 13:25:11.559" endtime="20211116 13:25:11.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:25:11.561" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:25:11.562" level="INFO">${version_file_contents} = #Tue Nov 16 13:22:02 UTC 2021
cTime=1637068900263
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
omUuid=710cfe03-73f3-4a98-bd9d-4f1343eb014c
nodeType=OM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb...</msg>
<status status="PASS" starttime="20211116 13:25:11.561" endtime="20211116 13:25:11.562"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:25:11.563" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:25:11.562" endtime="20211116 13:25:11.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:11.563" endtime="20211116 13:25:11.563"/>
</kw>
<status status="PASS" starttime="20211116 13:25:11.561" endtime="20211116 13:25:11.564"/>
</kw>
<status status="PASS" starttime="20211116 13:25:11.560" endtime="20211116 13:25:11.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:11.556" endtime="20211116 13:25:11.564"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:25:11.487" endtime="20211116 13:25:11.565"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:15.629" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211116 13:25:15.628" endtime="20211116 13:25:15.629"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:15.630" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:25:15.629" endtime="20211116 13:25:15.630"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:25:15.630" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:25:15.630" endtime="20211116 13:25:15.631"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:25:15.631" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211116 13:25:15.631" endtime="20211116 13:25:15.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:25:15.633" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:25:15.634" level="INFO">${version_file_contents} = #Tue Nov 16 13:22:02 UTC 2021
cTime=1637068898868
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
omUuid=f4a38b69-75e0-48a7-93b1-be5622b43f6f
nodeType=OM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb...</msg>
<status status="PASS" starttime="20211116 13:25:15.633" endtime="20211116 13:25:15.634"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:25:15.635" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:25:15.634" endtime="20211116 13:25:15.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:15.635" endtime="20211116 13:25:15.635"/>
</kw>
<status status="PASS" starttime="20211116 13:25:15.632" endtime="20211116 13:25:15.635"/>
</kw>
<status status="PASS" starttime="20211116 13:25:15.631" endtime="20211116 13:25:15.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:15.627" endtime="20211116 13:25:15.636"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:25:15.563" endtime="20211116 13:25:15.636"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:19.737" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211116 13:25:19.736" endtime="20211116 13:25:19.737"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:25:19.738" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:25:19.738" endtime="20211116 13:25:19.738"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:25:19.739" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:25:19.738" endtime="20211116 13:25:19.739"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:25:19.740" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211116 13:25:19.739" endtime="20211116 13:25:19.740"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:25:19.741" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:25:19.742" level="INFO">${version_file_contents} = #Tue Nov 16 13:22:02 UTC 2021
cTime=1637068901833
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
omUuid=f6f60df4-a359-4993-a147-26374f2f210f
nodeType=OM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb...</msg>
<status status="PASS" starttime="20211116 13:25:19.741" endtime="20211116 13:25:19.742"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:25:19.743" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:25:19.742" endtime="20211116 13:25:19.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:19.743" endtime="20211116 13:25:19.743"/>
</kw>
<status status="PASS" starttime="20211116 13:25:19.741" endtime="20211116 13:25:19.744"/>
</kw>
<status status="PASS" starttime="20211116 13:25:19.740" endtime="20211116 13:25:19.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:19.736" endtime="20211116 13:25:19.744"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:25:19.670" endtime="20211116 13:25:19.745"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:25:23.722" level="INFO">${random} = 51619</msg>
<status status="PASS" starttime="20211116 13:25:23.721" endtime="20211116 13:25:23.722"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:25:23.728" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-51619 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:25:29.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:25:29.087" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:23.724" endtime="20211116 13:25:29.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:25:29.089" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:29.088" endtime="20211116 13:25:29.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:25:29.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:25:29.089" endtime="20211116 13:25:29.090"/>
</kw>
<status status="PASS" starttime="20211116 13:25:23.724" endtime="20211116 13:25:29.090"/>
</kw>
<msg timestamp="20211116 13:25:29.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:25:23.723" endtime="20211116 13:25:29.090"/>
</kw>
<msg timestamp="20211116 13:25:29.091" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:23.722" endtime="20211116 13:25:29.091"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:29.091" endtime="20211116 13:25:29.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:23.720" endtime="20211116 13:25:29.092"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:25:23.656" endtime="20211116 13:25:29.093"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:25:33.146" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:25:37.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:25:37.239" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:33.141" endtime="20211116 13:25:37.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:25:37.240" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:37.239" endtime="20211116 13:25:37.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:25:37.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:25:37.241" endtime="20211116 13:25:37.243"/>
</kw>
<status status="PASS" starttime="20211116 13:25:33.141" endtime="20211116 13:25:37.246"/>
</kw>
<msg timestamp="20211116 13:25:37.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:25:33.141" endtime="20211116 13:25:37.251"/>
</kw>
<msg timestamp="20211116 13:25:37.251" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:33.140" endtime="20211116 13:25:37.251"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:37.251" endtime="20211116 13:25:37.252"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:25:37.261" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:25:40.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:25:40.427" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:37.257" endtime="20211116 13:25:40.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:25:40.428" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:40.428" endtime="20211116 13:25:40.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:25:40.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:25:40.429" endtime="20211116 13:25:40.429"/>
</kw>
<status status="PASS" starttime="20211116 13:25:37.254" endtime="20211116 13:25:40.430"/>
</kw>
<msg timestamp="20211116 13:25:40.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:25:37.253" endtime="20211116 13:25:40.430"/>
</kw>
<msg timestamp="20211116 13:25:40.430" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:37.252" endtime="20211116 13:25:40.431"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:40.431" endtime="20211116 13:25:40.431"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:25:40.438" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:25:46.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:25:46.200" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:40.434" endtime="20211116 13:25:46.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:25:46.202" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:46.201" endtime="20211116 13:25:46.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:25:46.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:25:46.202" endtime="20211116 13:25:46.203"/>
</kw>
<status status="PASS" starttime="20211116 13:25:40.433" endtime="20211116 13:25:46.203"/>
</kw>
<msg timestamp="20211116 13:25:46.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:25:40.433" endtime="20211116 13:25:46.203"/>
</kw>
<msg timestamp="20211116 13:25:46.203" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:40.431" endtime="20211116 13:25:46.204"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:46.204" endtime="20211116 13:25:46.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:33.139" endtime="20211116 13:25:46.205"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211116 13:25:33.074" endtime="20211116 13:25:46.207"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211116 13:25:50.287" level="INFO">${random} = 05302</msg>
<status status="PASS" starttime="20211116 13:25:50.285" endtime="20211116 13:25:50.287"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211116 13:25:50.293" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-05302 2&gt;&amp;1'.</msg>
<msg timestamp="20211116 13:25:55.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20211116 13:25:55.265" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:50.289" endtime="20211116 13:25:55.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211116 13:25:55.267" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:55.266" endtime="20211116 13:25:55.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211116 13:25:55.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211116 13:25:55.267" endtime="20211116 13:25:55.268"/>
</kw>
<status status="PASS" starttime="20211116 13:25:50.288" endtime="20211116 13:25:55.268"/>
</kw>
<msg timestamp="20211116 13:25:55.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211116 13:25:50.288" endtime="20211116 13:25:55.269"/>
</kw>
<msg timestamp="20211116 13:25:55.269" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211116 13:25:50.287" endtime="20211116 13:25:55.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:25:55.269" endtime="20211116 13:25:55.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:25:50.284" endtime="20211116 13:25:55.270"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211116 13:25:50.219" endtime="20211116 13:25:55.272"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:24:55.326" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211116 13:24:55.325" endtime="20211116 13:24:55.326"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211116 13:24:55.327" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211116 13:24:55.326" endtime="20211116 13:24:55.327"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211116 13:24:55.328" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211116 13:24:55.327" endtime="20211116 13:24:55.328"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211116 13:24:55.328" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211116 13:24:55.328" endtime="20211116 13:24:55.328"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211116 13:24:55.330" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211116 13:24:55.330" level="INFO">${version_file_contents} = #Tue Nov 16 13:21:31 UTC 2021
cTime=1637068891220
clusterID=CID-f02af04a-d245-4734-b4b6-56529bdb784e
nodeType=SCM
scmUuid=20a6a5d9-867c-4ebd-bd71-d2649b505eb3
layoutVersion=0
</msg>
<status status="PASS" starttime="20211116 13:24:55.329" endtime="20211116 13:24:55.330"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211116 13:24:55.331" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211116 13:24:55.330" endtime="20211116 13:24:55.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211116 13:24:55.331" endtime="20211116 13:24:55.332"/>
</kw>
<status status="PASS" starttime="20211116 13:24:55.329" endtime="20211116 13:24:55.332"/>
</kw>
<status status="PASS" starttime="20211116 13:24:55.329" endtime="20211116 13:24:55.332"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211116 13:24:55.324" endtime="20211116 13:24:55.332"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211116 13:24:55.262" endtime="20211116 13:24:55.333"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="182658"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
