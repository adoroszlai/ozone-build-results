<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211113 01:56:18.851" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:21.245" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:21.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:21.251" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:06:21.241" endtime="20211113 01:06:21.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:21.252" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:06:21.252" endtime="20211113 01:06:21.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:21.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:21.253" endtime="20211113 01:06:21.253"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.241" endtime="20211113 01:06:21.254"/>
</kw>
<msg timestamp="20211113 01:06:21.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:21.240" endtime="20211113 01:06:21.254"/>
</kw>
<msg timestamp="20211113 01:06:21.254" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211113 01:06:21.240" endtime="20211113 01:06:21.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:21.258" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:21.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:21.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:06:21.256" endtime="20211113 01:06:21.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:21.268" level="INFO"/>
<status status="PASS" starttime="20211113 01:06:21.267" endtime="20211113 01:06:21.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:21.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:21.268" endtime="20211113 01:06:21.269"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.256" endtime="20211113 01:06:21.270"/>
</kw>
<msg timestamp="20211113 01:06:21.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:21.256" endtime="20211113 01:06:21.270"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.255" endtime="20211113 01:06:21.270"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.254" endtime="20211113 01:06:21.270"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.240" endtime="20211113 01:06:21.271"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.239" endtime="20211113 01:06:21.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:21.274" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:21.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:21.414" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211113 01:06:21.272" endtime="20211113 01:06:21.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:21.415" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Sat, 13 Nov 2021 01:06:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCai/w3Qnoq8oC0zy6Yk1u0bozxE/nlwXmGJIXWYxyuZid0HZEh+KTTxOdtO2svLf+Yv5DynXS1g7aOMWuKDJlOLXa
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1636801581403&amp;s=BkfP706V9nZX1Jqhm+DftymW6pSSCpXdeoPSdlMMY9M="; Path=/; HttpOnly
Last-Modified: Sat, 13 Nov 2021 00:49:36 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211113 01:06:21.415" endtime="20211113 01:06:21.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:21.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:21.416" endtime="20211113 01:06:21.416"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.272" endtime="20211113 01:06:21.417"/>
</kw>
<msg timestamp="20211113 01:06:21.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:21.271" endtime="20211113 01:06:21.417"/>
</kw>
<msg timestamp="20211113 01:06:21.418" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211113 01:06:21.271" endtime="20211113 01:06:21.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:06:21.418" endtime="20211113 01:06:21.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:06:21.238" endtime="20211113 01:06:21.419"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:21.430" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:21.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:21.434" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:06:21.426" endtime="20211113 01:06:21.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:21.435" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:06:21.434" endtime="20211113 01:06:21.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:21.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:21.435" endtime="20211113 01:06:21.436"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.426" endtime="20211113 01:06:21.436"/>
</kw>
<msg timestamp="20211113 01:06:21.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:21.425" endtime="20211113 01:06:21.437"/>
</kw>
<msg timestamp="20211113 01:06:21.437" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:06:21.425" endtime="20211113 01:06:21.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:06:21.439" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:06:21.437" endtime="20211113 01:06:21.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:21.443" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:21.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:21.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:06:21.442" endtime="20211113 01:06:21.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:21.454" level="INFO"/>
<status status="PASS" starttime="20211113 01:06:21.454" endtime="20211113 01:06:21.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:21.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:21.455" endtime="20211113 01:06:21.455"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.441" endtime="20211113 01:06:21.456"/>
</kw>
<msg timestamp="20211113 01:06:21.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:21.441" endtime="20211113 01:06:21.456"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.440" endtime="20211113 01:06:21.456"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.439" endtime="20211113 01:06:21.456"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.424" endtime="20211113 01:06:21.456"/>
</kw>
<status status="PASS" starttime="20211113 01:06:21.424" endtime="20211113 01:06:21.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:21.460" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:21.423" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:06:21.458" endtime="20211113 01:11:21.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:11:21.424" endtime="20211113 01:11:21.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:11:21.424" endtime="20211113 01:11:21.424"/>
</kw>
<status status="FAIL" starttime="20211113 01:06:21.458" endtime="20211113 01:11:21.424"/>
</kw>
<msg timestamp="20211113 01:11:21.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:06:21.457" endtime="20211113 01:11:21.425"/>
</kw>
<status status="FAIL" starttime="20211113 01:06:21.457" endtime="20211113 01:11:21.425"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211113 01:11:21.426" endtime="20211113 01:11:21.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:11:21.426" endtime="20211113 01:11:21.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211113 01:06:21.421" endtime="20211113 01:11:21.426">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211113 01:06:21.205" endtime="20211113 01:11:21.428"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:21.442" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:24.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:24.322" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211113 01:11:21.439" endtime="20211113 01:11:24.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:24.324" level="INFO">om</msg>
<status status="PASS" starttime="20211113 01:11:24.323" endtime="20211113 01:11:24.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:24.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:24.324" endtime="20211113 01:11:24.325"/>
</kw>
<status status="PASS" starttime="20211113 01:11:21.438" endtime="20211113 01:11:24.326"/>
</kw>
<msg timestamp="20211113 01:11:24.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:21.438" endtime="20211113 01:11:24.326"/>
</kw>
<msg timestamp="20211113 01:11:24.326" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211113 01:11:21.437" endtime="20211113 01:11:24.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:24.326" endtime="20211113 01:11:24.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:24.333" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:27.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:27.145" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211113 01:11:24.329" endtime="20211113 01:11:27.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:27.147" level="INFO">om</msg>
<status status="PASS" starttime="20211113 01:11:27.146" endtime="20211113 01:11:27.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:27.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:27.147" endtime="20211113 01:11:27.148"/>
</kw>
<status status="PASS" starttime="20211113 01:11:24.328" endtime="20211113 01:11:27.148"/>
</kw>
<msg timestamp="20211113 01:11:27.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:24.328" endtime="20211113 01:11:27.149"/>
</kw>
<msg timestamp="20211113 01:11:27.149" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211113 01:11:24.327" endtime="20211113 01:11:27.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:27.150" endtime="20211113 01:11:27.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:11:21.436" endtime="20211113 01:11:27.151"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:27.157" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:30.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:30.129" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:11:27.154" endtime="20211113 01:11:30.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:30.130" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:11:30.130" endtime="20211113 01:11:30.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:30.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:30.131" endtime="20211113 01:11:30.132"/>
</kw>
<status status="PASS" starttime="20211113 01:11:27.153" endtime="20211113 01:11:30.133"/>
</kw>
<msg timestamp="20211113 01:11:30.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:27.153" endtime="20211113 01:11:30.133"/>
</kw>
<msg timestamp="20211113 01:11:30.134" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211113 01:11:27.152" endtime="20211113 01:11:30.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:30.134" endtime="20211113 01:11:30.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:30.143" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:33.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:33.262" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:11:30.140" endtime="20211113 01:11:33.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:33.263" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:11:33.262" endtime="20211113 01:11:33.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:33.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:33.263" endtime="20211113 01:11:33.264"/>
</kw>
<status status="PASS" starttime="20211113 01:11:30.139" endtime="20211113 01:11:33.264"/>
</kw>
<msg timestamp="20211113 01:11:33.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:30.137" endtime="20211113 01:11:33.265"/>
</kw>
<msg timestamp="20211113 01:11:33.265" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211113 01:11:30.136" endtime="20211113 01:11:33.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:33.265" endtime="20211113 01:11:33.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:11:27.151" endtime="20211113 01:11:33.266"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:33.276" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:35.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:35.992" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211113 01:11:33.271" endtime="20211113 01:11:35.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:35.994" level="INFO">om</msg>
<status status="PASS" starttime="20211113 01:11:35.993" endtime="20211113 01:11:35.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:35.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:35.995" endtime="20211113 01:11:35.995"/>
</kw>
<status status="PASS" starttime="20211113 01:11:33.270" endtime="20211113 01:11:35.996"/>
</kw>
<msg timestamp="20211113 01:11:35.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:33.269" endtime="20211113 01:11:35.996"/>
</kw>
<msg timestamp="20211113 01:11:35.997" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211113 01:11:33.268" endtime="20211113 01:11:35.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:35.997" endtime="20211113 01:11:36.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:36.001" endtime="20211113 01:11:36.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:36.006" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:38.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:38.616" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211113 01:11:36.004" endtime="20211113 01:11:38.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:38.619" level="INFO">om</msg>
<status status="PASS" starttime="20211113 01:11:38.618" endtime="20211113 01:11:38.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:38.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:38.619" endtime="20211113 01:11:38.619"/>
</kw>
<status status="PASS" starttime="20211113 01:11:36.003" endtime="20211113 01:11:38.620"/>
</kw>
<msg timestamp="20211113 01:11:38.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:36.003" endtime="20211113 01:11:38.621"/>
</kw>
<msg timestamp="20211113 01:11:38.621" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211113 01:11:36.002" endtime="20211113 01:11:38.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:38.622" endtime="20211113 01:11:38.622"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:38.622" endtime="20211113 01:11:38.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:11:33.267" endtime="20211113 01:11:38.623"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:38.632" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:41.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:11:41.227" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211113 01:11:38.629" endtime="20211113 01:11:41.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:41.228" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211113 01:11:41.227" endtime="20211113 01:11:41.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:41.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:41.228" endtime="20211113 01:11:41.229"/>
</kw>
<msg timestamp="20211113 01:11:41.230" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211113 01:11:38.628" endtime="20211113 01:11:41.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:41.230" endtime="20211113 01:11:41.231"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:41.235" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:43.992" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:11:43.992" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211113 01:11:41.232" endtime="20211113 01:11:43.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:43.993" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211113 01:11:43.992" endtime="20211113 01:11:43.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:43.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:43.994" endtime="20211113 01:11:43.994"/>
</kw>
<msg timestamp="20211113 01:11:43.995" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211113 01:11:41.231" endtime="20211113 01:11:43.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:11:43.995" endtime="20211113 01:11:43.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:11:38.625" endtime="20211113 01:11:43.996"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211113 01:11:21.431" endtime="20211113 01:11:43.997"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211113 01:11:44.019" level="INFO">${random} = 71044</msg>
<status status="PASS" starttime="20211113 01:11:44.018" endtime="20211113 01:11:44.019"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:11:44.021" level="INFO">${source} = 71044-source</msg>
<status status="PASS" starttime="20211113 01:11:44.019" endtime="20211113 01:11:44.022"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:11:44.024" level="INFO">${target} = 71044-target</msg>
<status status="PASS" starttime="20211113 01:11:44.022" endtime="20211113 01:11:44.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:44.028" level="INFO">Running command 'ozone sh volume create 71044-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:51.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:51.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:11:44.025" endtime="20211113 01:11:51.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:51.262" level="INFO"/>
<status status="PASS" starttime="20211113 01:11:51.261" endtime="20211113 01:11:51.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:51.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:51.262" endtime="20211113 01:11:51.262"/>
</kw>
<status status="PASS" starttime="20211113 01:11:44.025" endtime="20211113 01:11:51.263"/>
</kw>
<msg timestamp="20211113 01:11:51.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:44.024" endtime="20211113 01:11:51.263"/>
</kw>
<status status="PASS" starttime="20211113 01:11:44.024" endtime="20211113 01:11:51.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:51.267" level="INFO">Running command 'ozone sh volume create 71044-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:11:59.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:11:59.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:11:51.265" endtime="20211113 01:11:59.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:11:59.255" level="INFO"/>
<status status="PASS" starttime="20211113 01:11:59.254" endtime="20211113 01:11:59.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:11:59.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:11:59.255" endtime="20211113 01:11:59.256"/>
</kw>
<status status="PASS" starttime="20211113 01:11:51.265" endtime="20211113 01:11:59.256"/>
</kw>
<msg timestamp="20211113 01:11:59.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:51.264" endtime="20211113 01:11:59.256"/>
</kw>
<status status="PASS" starttime="20211113 01:11:51.264" endtime="20211113 01:11:59.257"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:11:59.264" level="INFO">Running command 'ozone sh bucket create 71044-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:12:06.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:12:06.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:11:59.261" endtime="20211113 01:12:06.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:12:06.886" level="INFO"/>
<status status="PASS" starttime="20211113 01:12:06.885" endtime="20211113 01:12:06.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:12:06.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:12:06.886" endtime="20211113 01:12:06.887"/>
</kw>
<status status="PASS" starttime="20211113 01:11:59.260" endtime="20211113 01:12:06.887"/>
</kw>
<msg timestamp="20211113 01:12:06.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:11:59.258" endtime="20211113 01:12:06.887"/>
</kw>
<status status="PASS" starttime="20211113 01:11:59.258" endtime="20211113 01:12:06.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:12:06.894" level="INFO">Running command 'ozone sh key put 71044-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:15:19.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:15:19.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:12:06.891" endtime="20211113 01:15:19.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:15:19.746" level="INFO"/>
<status status="PASS" starttime="20211113 01:15:19.745" endtime="20211113 01:15:19.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:15:19.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:15:19.746" endtime="20211113 01:15:19.747"/>
</kw>
<status status="PASS" starttime="20211113 01:12:06.890" endtime="20211113 01:15:19.747"/>
</kw>
<msg timestamp="20211113 01:15:19.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:12:06.890" endtime="20211113 01:15:19.748"/>
</kw>
<status status="PASS" starttime="20211113 01:12:06.888" endtime="20211113 01:15:19.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:15:19.753" level="INFO">Running command 'ozone sh bucket create 71044-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:15:26.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:15:26.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:15:19.749" endtime="20211113 01:15:26.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:15:26.018" level="INFO"/>
<status status="PASS" starttime="20211113 01:15:26.017" endtime="20211113 01:15:26.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:15:26.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:15:26.018" endtime="20211113 01:15:26.018"/>
</kw>
<status status="PASS" starttime="20211113 01:15:19.749" endtime="20211113 01:15:26.019"/>
</kw>
<msg timestamp="20211113 01:15:26.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:15:19.748" endtime="20211113 01:15:26.019"/>
</kw>
<status status="PASS" starttime="20211113 01:15:19.748" endtime="20211113 01:15:26.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:15:26.024" level="INFO">Running command 'ozone sh bucket link 71044-source/readable-bucket 71044-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:15:34.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:15:34.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:15:26.021" endtime="20211113 01:15:34.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:15:34.047" level="INFO"/>
<status status="PASS" starttime="20211113 01:15:34.047" endtime="20211113 01:15:34.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:15:34.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:15:34.048" endtime="20211113 01:15:34.048"/>
</kw>
<status status="PASS" starttime="20211113 01:15:26.020" endtime="20211113 01:15:34.048"/>
</kw>
<msg timestamp="20211113 01:15:34.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:15:26.020" endtime="20211113 01:15:34.049"/>
</kw>
<status status="PASS" starttime="20211113 01:15:26.019" endtime="20211113 01:15:34.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:15:34.054" level="INFO">Running command 'ozone sh bucket link 71044-source/readable-bucket 71044-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:15:41.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:15:41.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:15:34.051" endtime="20211113 01:15:41.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:15:41.438" level="INFO"/>
<status status="PASS" starttime="20211113 01:15:41.437" endtime="20211113 01:15:41.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:15:41.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:15:41.439" endtime="20211113 01:15:41.439"/>
</kw>
<status status="PASS" starttime="20211113 01:15:34.050" endtime="20211113 01:15:41.439"/>
</kw>
<msg timestamp="20211113 01:15:41.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:15:34.050" endtime="20211113 01:15:41.440"/>
</kw>
<status status="PASS" starttime="20211113 01:15:34.049" endtime="20211113 01:15:41.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:15:41.445" level="INFO">Running command 'ozone sh bucket link 71044-source/unreadable-bucket 71044-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:15:49.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:15:49.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:15:41.442" endtime="20211113 01:15:49.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:15:49.313" level="INFO"/>
<status status="PASS" starttime="20211113 01:15:49.313" endtime="20211113 01:15:49.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:15:49.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:15:49.314" endtime="20211113 01:15:49.314"/>
</kw>
<status status="PASS" starttime="20211113 01:15:41.441" endtime="20211113 01:15:49.315"/>
</kw>
<msg timestamp="20211113 01:15:49.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:15:41.441" endtime="20211113 01:15:49.315"/>
</kw>
<status status="PASS" starttime="20211113 01:15:41.440" endtime="20211113 01:15:49.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:15:49.321" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 71044-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:15:57.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:15:57.044" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:15:49.318" endtime="20211113 01:15:57.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:15:57.046" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:15:57.045" endtime="20211113 01:15:57.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:15:57.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:15:57.047" endtime="20211113 01:15:57.047"/>
</kw>
<status status="PASS" starttime="20211113 01:15:49.317" endtime="20211113 01:15:57.048"/>
</kw>
<msg timestamp="20211113 01:15:57.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:15:49.316" endtime="20211113 01:15:57.048"/>
</kw>
<status status="PASS" starttime="20211113 01:15:49.315" endtime="20211113 01:15:57.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:15:57.053" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 71044-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:05.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:05.181" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:15:57.050" endtime="20211113 01:16:05.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:05.183" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:05.182" endtime="20211113 01:16:05.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:05.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:05.184" endtime="20211113 01:16:05.185"/>
</kw>
<status status="PASS" starttime="20211113 01:15:57.050" endtime="20211113 01:16:05.186"/>
</kw>
<msg timestamp="20211113 01:16:05.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:15:57.049" endtime="20211113 01:16:05.186"/>
</kw>
<status status="PASS" starttime="20211113 01:15:57.049" endtime="20211113 01:16:05.187"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:05.196" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 71044-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:12.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:12.757" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:05.192" endtime="20211113 01:16:12.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:12.758" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:12.758" endtime="20211113 01:16:12.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:12.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:12.759" endtime="20211113 01:16:12.759"/>
</kw>
<status status="PASS" starttime="20211113 01:16:05.190" endtime="20211113 01:16:12.760"/>
</kw>
<msg timestamp="20211113 01:16:12.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:05.189" endtime="20211113 01:16:12.760"/>
</kw>
<status status="PASS" starttime="20211113 01:16:05.187" endtime="20211113 01:16:12.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:12.764" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 71044-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:18.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:18.344" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:12.762" endtime="20211113 01:16:18.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:18.345" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:18.344" endtime="20211113 01:16:18.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:18.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:18.345" endtime="20211113 01:16:18.346"/>
</kw>
<status status="PASS" starttime="20211113 01:16:12.761" endtime="20211113 01:16:18.346"/>
</kw>
<msg timestamp="20211113 01:16:18.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:12.761" endtime="20211113 01:16:18.346"/>
</kw>
<status status="PASS" starttime="20211113 01:16:12.761" endtime="20211113 01:16:18.346"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:18.351" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 71044-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:25.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:25.786" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:18.348" endtime="20211113 01:16:25.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:25.787" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:16:25.786" endtime="20211113 01:16:25.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:25.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:25.787" endtime="20211113 01:16:25.788"/>
</kw>
<status status="PASS" starttime="20211113 01:16:18.348" endtime="20211113 01:16:25.788"/>
</kw>
<msg timestamp="20211113 01:16:25.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:18.347" endtime="20211113 01:16:25.788"/>
</kw>
<status status="PASS" starttime="20211113 01:16:18.347" endtime="20211113 01:16:25.789"/>
</kw>
<status status="PASS" starttime="20211113 01:11:59.257" endtime="20211113 01:16:25.789"/>
</kw>
<status status="PASS" starttime="20211113 01:11:59.257" endtime="20211113 01:16:25.789"/>
</kw>
<status status="PASS" starttime="20211113 01:11:44.018" endtime="20211113 01:16:25.790"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:25.800" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:25.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:25.805" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:16:25.797" endtime="20211113 01:16:25.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:25.808" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:16:25.806" endtime="20211113 01:16:25.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:25.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:25.809" endtime="20211113 01:16:25.811"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.796" endtime="20211113 01:16:25.811"/>
</kw>
<msg timestamp="20211113 01:16:25.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:25.796" endtime="20211113 01:16:25.812"/>
</kw>
<msg timestamp="20211113 01:16:25.813" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:16:25.795" endtime="20211113 01:16:25.813"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:16:25.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:16:25.813" endtime="20211113 01:16:25.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:25.822" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:25.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:25.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:16:25.820" endtime="20211113 01:16:25.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:25.869" level="INFO"/>
<status status="PASS" starttime="20211113 01:16:25.868" endtime="20211113 01:16:25.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:25.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:25.870" endtime="20211113 01:16:25.870"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.819" endtime="20211113 01:16:25.871"/>
</kw>
<msg timestamp="20211113 01:16:25.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:25.818" endtime="20211113 01:16:25.871"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.817" endtime="20211113 01:16:25.871"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.816" endtime="20211113 01:16:25.871"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.794" endtime="20211113 01:16:25.871"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.793" endtime="20211113 01:16:25.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:25.880" level="INFO">Running command 'ozone sh bucket link 71044-source/no-such-bucket 71044-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:33.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:33.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:16:25.875" endtime="20211113 01:16:33.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:33.687" level="INFO"/>
<status status="PASS" starttime="20211113 01:16:33.686" endtime="20211113 01:16:33.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:33.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:33.687" endtime="20211113 01:16:33.688"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.874" endtime="20211113 01:16:33.688"/>
</kw>
<msg timestamp="20211113 01:16:33.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:25.873" endtime="20211113 01:16:33.688"/>
</kw>
<status status="PASS" starttime="20211113 01:16:25.872" endtime="20211113 01:16:33.688"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:33.694" level="INFO">Running command 'ozone sh key list 71044-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:41.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:16:41.365" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211113 01:16:33.690" endtime="20211113 01:16:41.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:41.367" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211113 01:16:41.366" endtime="20211113 01:16:41.367"/>
</kw>
<msg timestamp="20211113 01:16:41.368" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211113 01:16:33.689" endtime="20211113 01:16:41.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:16:41.369" endtime="20211113 01:16:41.370"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:16:25.790" endtime="20211113 01:16:41.370"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:41.381" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:41.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:41.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:16:41.378" endtime="20211113 01:16:41.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:41.389" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:16:41.388" endtime="20211113 01:16:41.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:41.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:41.389" endtime="20211113 01:16:41.390"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.377" endtime="20211113 01:16:41.390"/>
</kw>
<msg timestamp="20211113 01:16:41.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:41.377" endtime="20211113 01:16:41.391"/>
</kw>
<msg timestamp="20211113 01:16:41.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:16:41.376" endtime="20211113 01:16:41.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:16:41.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:16:41.392" endtime="20211113 01:16:41.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:41.400" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:41.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:41.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:16:41.398" endtime="20211113 01:16:41.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:41.414" level="INFO"/>
<status status="PASS" starttime="20211113 01:16:41.413" endtime="20211113 01:16:41.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:41.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:41.415" endtime="20211113 01:16:41.416"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.397" endtime="20211113 01:16:41.416"/>
</kw>
<msg timestamp="20211113 01:16:41.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:41.396" endtime="20211113 01:16:41.417"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.394" endtime="20211113 01:16:41.417"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.394" endtime="20211113 01:16:41.418"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.375" endtime="20211113 01:16:41.418"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.375" endtime="20211113 01:16:41.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:41.426" level="INFO">Running command 'ozone sh bucket link 71044-source/bucket1 71044-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:48.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:48.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:16:41.423" endtime="20211113 01:16:48.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:48.504" level="INFO"/>
<status status="PASS" starttime="20211113 01:16:48.502" endtime="20211113 01:16:48.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:48.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:48.505" endtime="20211113 01:16:48.508"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.421" endtime="20211113 01:16:48.509"/>
</kw>
<msg timestamp="20211113 01:16:48.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:41.420" endtime="20211113 01:16:48.510"/>
</kw>
<status status="PASS" starttime="20211113 01:16:41.419" endtime="20211113 01:16:48.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:48.517" level="INFO">Running command 'ozone sh bucket create 71044-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:16:56.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:16:56.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:16:48.514" endtime="20211113 01:16:56.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:16:56.602" level="INFO"/>
<status status="PASS" starttime="20211113 01:16:56.601" endtime="20211113 01:16:56.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:16:56.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:16:56.602" endtime="20211113 01:16:56.603"/>
</kw>
<status status="PASS" starttime="20211113 01:16:48.513" endtime="20211113 01:16:56.603"/>
</kw>
<msg timestamp="20211113 01:16:56.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:16:48.512" endtime="20211113 01:16:56.604"/>
</kw>
<status status="PASS" starttime="20211113 01:16:48.511" endtime="20211113 01:16:56.604"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:16:56.610" level="INFO">Running command 'ozone sh key put 71044-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:18:41.375" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:16:56.607" endtime="20211113 01:18:41.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:18:41.376" endtime="20211113 01:18:41.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:18:41.376" endtime="20211113 01:18:41.376"/>
</kw>
<status status="FAIL" starttime="20211113 01:16:56.606" endtime="20211113 01:18:41.377"/>
</kw>
<msg timestamp="20211113 01:18:41.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:16:56.605" endtime="20211113 01:18:41.377"/>
</kw>
<status status="FAIL" starttime="20211113 01:16:56.604" endtime="20211113 01:18:41.377"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211113 01:18:41.378" endtime="20211113 01:18:41.378"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211113 01:16:41.374" endtime="20211113 01:18:41.378">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:18:41.384" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:18:41.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:18:41.389" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:18:41.382" endtime="20211113 01:18:41.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:18:41.390" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:18:41.389" endtime="20211113 01:18:41.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:18:41.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:18:41.390" endtime="20211113 01:18:41.391"/>
</kw>
<status status="PASS" starttime="20211113 01:18:41.382" endtime="20211113 01:18:41.391"/>
</kw>
<msg timestamp="20211113 01:18:41.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:18:41.381" endtime="20211113 01:18:41.392"/>
</kw>
<msg timestamp="20211113 01:18:41.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:18:41.381" endtime="20211113 01:18:41.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:18:41.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:18:41.392" endtime="20211113 01:18:41.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:18:41.398" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:18:41.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:18:41.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:18:41.396" endtime="20211113 01:18:41.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:18:41.407" level="INFO"/>
<status status="PASS" starttime="20211113 01:18:41.407" endtime="20211113 01:18:41.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:18:41.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:18:41.408" endtime="20211113 01:18:41.408"/>
</kw>
<status status="PASS" starttime="20211113 01:18:41.395" endtime="20211113 01:18:41.409"/>
</kw>
<msg timestamp="20211113 01:18:41.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:18:41.394" endtime="20211113 01:18:41.409"/>
</kw>
<status status="PASS" starttime="20211113 01:18:41.394" endtime="20211113 01:18:41.409"/>
</kw>
<status status="PASS" starttime="20211113 01:18:41.393" endtime="20211113 01:18:41.409"/>
</kw>
<status status="PASS" starttime="20211113 01:18:41.380" endtime="20211113 01:18:41.410"/>
</kw>
<status status="PASS" starttime="20211113 01:18:41.380" endtime="20211113 01:18:41.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:18:41.413" level="INFO">Running command 'ozone sh key put 71044-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:41.380" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:18:41.412" endtime="20211113 01:20:41.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:20:41.381" endtime="20211113 01:20:41.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:20:41.381" endtime="20211113 01:20:41.381"/>
</kw>
<status status="FAIL" starttime="20211113 01:18:41.411" endtime="20211113 01:20:41.382"/>
</kw>
<msg timestamp="20211113 01:20:41.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:18:41.411" endtime="20211113 01:20:41.382"/>
</kw>
<status status="FAIL" starttime="20211113 01:18:41.410" endtime="20211113 01:20:41.383"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211113 01:20:41.383" endtime="20211113 01:20:41.383"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211113 01:18:41.379" endtime="20211113 01:20:41.383">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:41.392" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:41.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:20:41.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:20:41.390" endtime="20211113 01:20:41.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:20:41.401" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:20:41.401" endtime="20211113 01:20:41.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:20:41.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:20:41.402" endtime="20211113 01:20:41.403"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.389" endtime="20211113 01:20:41.403"/>
</kw>
<msg timestamp="20211113 01:20:41.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:20:41.389" endtime="20211113 01:20:41.403"/>
</kw>
<msg timestamp="20211113 01:20:41.404" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:20:41.388" endtime="20211113 01:20:41.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:20:41.405" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:20:41.404" endtime="20211113 01:20:41.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:41.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:41.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:20:41.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:20:41.409" endtime="20211113 01:20:41.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:20:41.423" level="INFO"/>
<status status="PASS" starttime="20211113 01:20:41.422" endtime="20211113 01:20:41.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:20:41.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:20:41.423" endtime="20211113 01:20:41.424"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.408" endtime="20211113 01:20:41.424"/>
</kw>
<msg timestamp="20211113 01:20:41.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:20:41.407" endtime="20211113 01:20:41.425"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.406" endtime="20211113 01:20:41.425"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.406" endtime="20211113 01:20:41.425"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.388" endtime="20211113 01:20:41.425"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.387" endtime="20211113 01:20:41.426"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:41.430" level="INFO">Running command 'ozone sh key list 71044-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:49.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:20:49.604" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211113 01:20:41.428" endtime="20211113 01:20:49.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:20:49.606" level="INFO">key1</msg>
<status status="PASS" starttime="20211113 01:20:49.605" endtime="20211113 01:20:49.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:20:49.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:20:49.607" endtime="20211113 01:20:49.608"/>
</kw>
<status status="PASS" starttime="20211113 01:20:41.427" endtime="20211113 01:20:49.608"/>
</kw>
<msg timestamp="20211113 01:20:49.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:20:41.427" endtime="20211113 01:20:49.609"/>
</kw>
<msg timestamp="20211113 01:20:49.609" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211113 01:20:41.426" endtime="20211113 01:20:49.609"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:49.614" level="INFO">Running command 'ozone sh key list 71044-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:58.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:20:58.234" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211113 01:20:49.611" endtime="20211113 01:20:58.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:20:58.236" level="INFO">key1</msg>
<status status="PASS" starttime="20211113 01:20:58.234" endtime="20211113 01:20:58.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:20:58.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:20:58.236" endtime="20211113 01:20:58.238"/>
</kw>
<status status="PASS" starttime="20211113 01:20:49.611" endtime="20211113 01:20:58.238"/>
</kw>
<msg timestamp="20211113 01:20:58.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:20:49.610" endtime="20211113 01:20:58.239"/>
</kw>
<msg timestamp="20211113 01:20:58.239" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211113 01:20:49.609" endtime="20211113 01:20:58.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:20:58.239" endtime="20211113 01:20:58.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:20:58.240" endtime="20211113 01:20:58.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211113 01:20:58.242" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211113 01:20:58.241" endtime="20211113 01:20:58.242"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211113 01:20:41.386" endtime="20211113 01:20:58.243">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:58.255" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:58.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:20:58.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:20:58.252" endtime="20211113 01:20:58.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:20:58.262" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:20:58.261" endtime="20211113 01:20:58.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:20:58.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:20:58.263" endtime="20211113 01:20:58.264"/>
</kw>
<status status="PASS" starttime="20211113 01:20:58.251" endtime="20211113 01:20:58.264"/>
</kw>
<msg timestamp="20211113 01:20:58.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:20:58.250" endtime="20211113 01:20:58.265"/>
</kw>
<msg timestamp="20211113 01:20:58.265" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:20:58.249" endtime="20211113 01:20:58.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:20:58.266" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:20:58.265" endtime="20211113 01:20:58.266"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:58.273" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:20:58.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:20:58.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:20:58.271" endtime="20211113 01:20:58.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:20:58.285" level="INFO"/>
<status status="PASS" starttime="20211113 01:20:58.284" endtime="20211113 01:20:58.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:20:58.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:20:58.285" endtime="20211113 01:20:58.286"/>
</kw>
<status status="PASS" starttime="20211113 01:20:58.270" endtime="20211113 01:20:58.287"/>
</kw>
<msg timestamp="20211113 01:20:58.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:20:58.269" endtime="20211113 01:20:58.287"/>
</kw>
<status status="PASS" starttime="20211113 01:20:58.267" endtime="20211113 01:20:58.288"/>
</kw>
<status status="PASS" starttime="20211113 01:20:58.267" endtime="20211113 01:20:58.288"/>
</kw>
<status status="PASS" starttime="20211113 01:20:58.248" endtime="20211113 01:20:58.289"/>
</kw>
<status status="PASS" starttime="20211113 01:20:58.247" endtime="20211113 01:20:58.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:20:58.294" level="INFO">Running command 'ozone sh key delete 71044-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:04.581" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:21:04.581" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211113 01:20:58.292" endtime="20211113 01:21:04.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:04.583" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211113 01:21:04.582" endtime="20211113 01:21:04.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:04.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211113 01:21:04.584" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211113 01:21:04.583" endtime="20211113 01:21:04.584"/>
</kw>
<status status="FAIL" starttime="20211113 01:20:58.290" endtime="20211113 01:21:04.585"/>
</kw>
<msg timestamp="20211113 01:21:04.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:20:58.290" endtime="20211113 01:21:04.585"/>
</kw>
<status status="FAIL" starttime="20211113 01:20:58.289" endtime="20211113 01:21:04.585"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211113 01:21:04.585" endtime="20211113 01:21:04.586"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:21:04.586" endtime="20211113 01:21:04.586"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211113 01:20:58.245" endtime="20211113 01:21:04.586">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:04.596" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:04.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:04.599" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:21:04.593" endtime="20211113 01:21:04.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:04.601" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:21:04.600" endtime="20211113 01:21:04.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:04.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:04.602" endtime="20211113 01:21:04.603"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.591" endtime="20211113 01:21:04.603"/>
</kw>
<msg timestamp="20211113 01:21:04.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:04.590" endtime="20211113 01:21:04.603"/>
</kw>
<msg timestamp="20211113 01:21:04.604" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:21:04.590" endtime="20211113 01:21:04.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:21:04.605" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:21:04.604" endtime="20211113 01:21:04.605"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:04.609" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:04.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:04.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:21:04.607" endtime="20211113 01:21:04.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:04.622" level="INFO"/>
<status status="PASS" starttime="20211113 01:21:04.621" endtime="20211113 01:21:04.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:04.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:04.622" endtime="20211113 01:21:04.623"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.607" endtime="20211113 01:21:04.624"/>
</kw>
<msg timestamp="20211113 01:21:04.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:04.606" endtime="20211113 01:21:04.624"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.605" endtime="20211113 01:21:04.624"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.605" endtime="20211113 01:21:04.624"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.589" endtime="20211113 01:21:04.625"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.588" endtime="20211113 01:21:04.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:04.631" level="INFO">Running command 'ozone sh bucket list 71044-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:13.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:13.079" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211113 01:21:04.627" endtime="20211113 01:21:13.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:13.081" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:16:33.597Z",
  "modificationTime" : "2021-11-13T01:16:33.597Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:15:49.231Z",
  "modificationTime" : "2021-11-13T01:16:25.699Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:16:48.401Z",
  "modificationTime" : "2021-11-13T01:16:48.401Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:15:33.617Z",
  "modificationTime" : "2021-11-13T01:16:18.252Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:15:41.330Z",
  "modificationTime" : "2021-11-13T01:15:41.330Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
} ]</msg>
<status status="PASS" starttime="20211113 01:21:13.080" endtime="20211113 01:21:13.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:13.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:13.082" endtime="20211113 01:21:13.082"/>
</kw>
<status status="PASS" starttime="20211113 01:21:04.627" endtime="20211113 01:21:13.083"/>
</kw>
<msg timestamp="20211113 01:21:13.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:04.626" endtime="20211113 01:21:13.083"/>
</kw>
<msg timestamp="20211113 01:21:13.083" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211113 01:21:04.625" endtime="20211113 01:21:13.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:13.084" endtime="20211113 01:21:13.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:13.084" endtime="20211113 01:21:13.085"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:21:04.587" endtime="20211113 01:21:13.085"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:13.094" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:13.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:13.099" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:21:13.091" endtime="20211113 01:21:13.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:13.100" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:21:13.099" endtime="20211113 01:21:13.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:13.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:13.100" endtime="20211113 01:21:13.101"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.090" endtime="20211113 01:21:13.102"/>
</kw>
<msg timestamp="20211113 01:21:13.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:13.090" endtime="20211113 01:21:13.102"/>
</kw>
<msg timestamp="20211113 01:21:13.102" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:21:13.089" endtime="20211113 01:21:13.102"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:21:13.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:21:13.103" endtime="20211113 01:21:13.104"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:13.110" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:13.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:13.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:21:13.107" endtime="20211113 01:21:13.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:13.122" level="INFO"/>
<status status="PASS" starttime="20211113 01:21:13.121" endtime="20211113 01:21:13.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:13.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:13.123" endtime="20211113 01:21:13.123"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.106" endtime="20211113 01:21:13.124"/>
</kw>
<msg timestamp="20211113 01:21:13.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:13.105" endtime="20211113 01:21:13.124"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.104" endtime="20211113 01:21:13.124"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.104" endtime="20211113 01:21:13.125"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.088" endtime="20211113 01:21:13.125"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.088" endtime="20211113 01:21:13.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:13.131" level="INFO">Running command 'ozone sh bucket info 71044-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:20.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:20.688" level="INFO">${output} = {
  "volumeName" : "71044-target",
  "bucketName" : "link1",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-13T01:16:48.401Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211113 01:21:13.128" endtime="20211113 01:21:20.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:20.690" level="INFO">{
  "volumeName" : "71044-target",
  "bucketName" : "link1",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-13T01:16:48.401Z",
  "modificationTime" : "2021-11-13T01:16:48.401Z"
}</msg>
<status status="PASS" starttime="20211113 01:21:20.689" endtime="20211113 01:21:20.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:20.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:20.691" endtime="20211113 01:21:20.691"/>
</kw>
<status status="PASS" starttime="20211113 01:21:13.127" endtime="20211113 01:21:20.692"/>
</kw>
<msg timestamp="20211113 01:21:20.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:13.127" endtime="20211113 01:21:20.692"/>
</kw>
<msg timestamp="20211113 01:21:20.692" level="INFO">${result} = {
  "volumeName" : "71044-target",
  "bucketName" : "link1",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-13T01:16:48.401Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211113 01:21:13.126" endtime="20211113 01:21:20.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.692" endtime="20211113 01:21:20.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.693" endtime="20211113 01:21:20.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.694" endtime="20211113 01:21:20.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.695" endtime="20211113 01:21:20.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.695" endtime="20211113 01:21:20.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.696" endtime="20211113 01:21:20.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:21:20.696" endtime="20211113 01:21:20.697"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:21:13.087" endtime="20211113 01:21:20.697"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:20.708" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:20.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:20.721" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:21:20.705" endtime="20211113 01:21:20.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:20.724" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:21:20.723" endtime="20211113 01:21:20.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:20.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:20.724" endtime="20211113 01:21:20.726"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.703" endtime="20211113 01:21:20.727"/>
</kw>
<msg timestamp="20211113 01:21:20.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:20.703" endtime="20211113 01:21:20.727"/>
</kw>
<msg timestamp="20211113 01:21:20.728" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:21:20.701" endtime="20211113 01:21:20.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:21:20.729" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:21:20.728" endtime="20211113 01:21:20.729"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:20.735" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:20.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:20.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:21:20.732" endtime="20211113 01:21:20.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:20.746" level="INFO"/>
<status status="PASS" starttime="20211113 01:21:20.745" endtime="20211113 01:21:20.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:20.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:20.746" endtime="20211113 01:21:20.747"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.731" endtime="20211113 01:21:20.747"/>
</kw>
<msg timestamp="20211113 01:21:20.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:20.731" endtime="20211113 01:21:20.748"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.730" endtime="20211113 01:21:20.748"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.730" endtime="20211113 01:21:20.748"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.701" endtime="20211113 01:21:20.748"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.700" endtime="20211113 01:21:20.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:20.753" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 71044-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:27.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:27.947" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:21:20.751" endtime="20211113 01:21:27.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:27.950" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:21:27.948" endtime="20211113 01:21:27.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:27.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:27.950" endtime="20211113 01:21:27.951"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.750" endtime="20211113 01:21:27.952"/>
</kw>
<msg timestamp="20211113 01:21:27.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:20.750" endtime="20211113 01:21:27.952"/>
</kw>
<status status="PASS" starttime="20211113 01:21:20.749" endtime="20211113 01:21:27.953"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:27.960" level="INFO">Running command 'ozone sh bucket getacl 71044-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:36.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:36.507" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211113 01:21:27.957" endtime="20211113 01:21:36.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:36.508" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211113 01:21:36.507" endtime="20211113 01:21:36.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:36.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:36.508" endtime="20211113 01:21:36.509"/>
</kw>
<status status="PASS" starttime="20211113 01:21:27.956" endtime="20211113 01:21:36.509"/>
</kw>
<msg timestamp="20211113 01:21:36.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:27.956" endtime="20211113 01:21:36.510"/>
</kw>
<msg timestamp="20211113 01:21:36.510" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211113 01:21:27.954" endtime="20211113 01:21:36.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:21:36.510" endtime="20211113 01:21:36.511"/>
</kw>
<status status="PASS" starttime="20211113 01:21:27.953" endtime="20211113 01:21:36.511"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:36.518" level="INFO">Running command 'ozone sh bucket getacl 71044-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:44.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:44.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:21:36.515" endtime="20211113 01:21:44.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:44.498" level="INFO"/>
<status status="PASS" starttime="20211113 01:21:44.494" endtime="20211113 01:21:44.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:44.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:44.499" endtime="20211113 01:21:44.499"/>
</kw>
<status status="PASS" starttime="20211113 01:21:36.514" endtime="20211113 01:21:44.500"/>
</kw>
<msg timestamp="20211113 01:21:44.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:36.514" endtime="20211113 01:21:44.500"/>
</kw>
<msg timestamp="20211113 01:21:44.500" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211113 01:21:36.513" endtime="20211113 01:21:44.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:21:44.501" endtime="20211113 01:21:44.502"/>
</kw>
<status status="PASS" starttime="20211113 01:21:36.511" endtime="20211113 01:21:44.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:44.509" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 71044-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:21:52.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:21:52.117" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:21:44.506" endtime="20211113 01:21:52.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:21:52.119" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:21:52.118" endtime="20211113 01:21:52.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:21:52.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:21:52.119" endtime="20211113 01:21:52.120"/>
</kw>
<status status="PASS" starttime="20211113 01:21:44.504" endtime="20211113 01:21:52.120"/>
</kw>
<msg timestamp="20211113 01:21:52.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:44.504" endtime="20211113 01:21:52.120"/>
</kw>
<status status="PASS" starttime="20211113 01:21:44.502" endtime="20211113 01:21:52.121"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:21:52.131" level="INFO">Running command 'ozone sh bucket getacl 71044-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:00.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:00.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:21:52.127" endtime="20211113 01:22:00.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:00.749" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:00.748" endtime="20211113 01:22:00.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:00.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:00.750" endtime="20211113 01:22:00.751"/>
</kw>
<status status="PASS" starttime="20211113 01:21:52.127" endtime="20211113 01:22:00.751"/>
</kw>
<msg timestamp="20211113 01:22:00.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:21:52.126" endtime="20211113 01:22:00.752"/>
</kw>
<msg timestamp="20211113 01:22:00.752" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211113 01:21:52.123" endtime="20211113 01:22:00.752"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:22:00.753" endtime="20211113 01:22:00.753"/>
</kw>
<status status="PASS" starttime="20211113 01:21:52.121" endtime="20211113 01:22:00.754"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:00.763" level="INFO">Running command 'ozone sh bucket getacl 71044-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:06.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:06.765" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211113 01:22:00.759" endtime="20211113 01:22:06.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:06.767" level="INFO">READ</msg>
<status status="PASS" starttime="20211113 01:22:06.766" endtime="20211113 01:22:06.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:06.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:06.767" endtime="20211113 01:22:06.769"/>
</kw>
<status status="PASS" starttime="20211113 01:22:00.758" endtime="20211113 01:22:06.769"/>
</kw>
<msg timestamp="20211113 01:22:06.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:00.758" endtime="20211113 01:22:06.770"/>
</kw>
<msg timestamp="20211113 01:22:06.770" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211113 01:22:00.756" endtime="20211113 01:22:06.771"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:22:06.771" endtime="20211113 01:22:06.772"/>
</kw>
<status status="PASS" starttime="20211113 01:22:00.754" endtime="20211113 01:22:06.772"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:21:20.699" endtime="20211113 01:22:06.773"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:06.783" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:06.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:06.787" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:06.780" endtime="20211113 01:22:06.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:06.791" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:06.788" endtime="20211113 01:22:06.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:06.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:06.792" endtime="20211113 01:22:06.793"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.779" endtime="20211113 01:22:06.794"/>
</kw>
<msg timestamp="20211113 01:22:06.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:06.779" endtime="20211113 01:22:06.794"/>
</kw>
<msg timestamp="20211113 01:22:06.794" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:06.778" endtime="20211113 01:22:06.794"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:06.795" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:06.795" endtime="20211113 01:22:06.796"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:06.802" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:06.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:06.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:06.800" endtime="20211113 01:22:06.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:06.840" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:06.840" endtime="20211113 01:22:06.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:06.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:06.841" endtime="20211113 01:22:06.842"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.798" endtime="20211113 01:22:06.842"/>
</kw>
<msg timestamp="20211113 01:22:06.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:06.798" endtime="20211113 01:22:06.842"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.796" endtime="20211113 01:22:06.843"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.796" endtime="20211113 01:22:06.843"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.777" endtime="20211113 01:22:06.843"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.776" endtime="20211113 01:22:06.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:06.847" level="INFO">Running command 'ozone sh bucket link 71044-source/bucket2 71044-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:14.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:14.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:06.845" endtime="20211113 01:22:14.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:14.293" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:14.292" endtime="20211113 01:22:14.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:14.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:14.293" endtime="20211113 01:22:14.295"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.844" endtime="20211113 01:22:14.295"/>
</kw>
<msg timestamp="20211113 01:22:14.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:06.844" endtime="20211113 01:22:14.295"/>
</kw>
<status status="PASS" starttime="20211113 01:22:06.843" endtime="20211113 01:22:14.296"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:14.302" level="INFO">Running command 'ozone sh bucket create 71044-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:21.858" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:22:21.858" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211113 01:22:14.297" endtime="20211113 01:22:21.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:21.859" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211113 01:22:21.858" endtime="20211113 01:22:21.861"/>
</kw>
<msg timestamp="20211113 01:22:21.862" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211113 01:22:14.296" endtime="20211113 01:22:21.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:22:21.862" endtime="20211113 01:22:21.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:21.868" level="INFO">Running command 'ozone sh bucket create 71044-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:30.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:30.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:21.865" endtime="20211113 01:22:30.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:30.087" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:30.086" endtime="20211113 01:22:30.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:30.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:30.087" endtime="20211113 01:22:30.088"/>
</kw>
<status status="PASS" starttime="20211113 01:22:21.864" endtime="20211113 01:22:30.089"/>
</kw>
<msg timestamp="20211113 01:22:30.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:21.864" endtime="20211113 01:22:30.089"/>
</kw>
<status status="PASS" starttime="20211113 01:22:21.863" endtime="20211113 01:22:30.090"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:30.095" level="INFO">Running command 'ozone sh bucket link 71044-source/bucket1 71044-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:37.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:22:37.669" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211113 01:22:30.091" endtime="20211113 01:22:37.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:37.672" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211113 01:22:37.670" endtime="20211113 01:22:37.672"/>
</kw>
<msg timestamp="20211113 01:22:37.672" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211113 01:22:30.090" endtime="20211113 01:22:37.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:22:37.672" endtime="20211113 01:22:37.673"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:22:06.774" endtime="20211113 01:22:37.673"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:37.685" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:37.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:37.690" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:37.681" endtime="20211113 01:22:37.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:37.691" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:37.690" endtime="20211113 01:22:37.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:37.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:37.692" endtime="20211113 01:22:37.693"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.679" endtime="20211113 01:22:37.693"/>
</kw>
<msg timestamp="20211113 01:22:37.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:37.679" endtime="20211113 01:22:37.694"/>
</kw>
<msg timestamp="20211113 01:22:37.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:37.678" endtime="20211113 01:22:37.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:37.695" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:37.694" endtime="20211113 01:22:37.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:37.705" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:37.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:37.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:37.703" endtime="20211113 01:22:37.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:37.719" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:37.717" endtime="20211113 01:22:37.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:37.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:37.719" endtime="20211113 01:22:37.720"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.698" endtime="20211113 01:22:37.721"/>
</kw>
<msg timestamp="20211113 01:22:37.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:37.698" endtime="20211113 01:22:37.721"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.697" endtime="20211113 01:22:37.721"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.696" endtime="20211113 01:22:37.722"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.676" endtime="20211113 01:22:37.722"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.676" endtime="20211113 01:22:37.722"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:37.728" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:37.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:37.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:37.725" endtime="20211113 01:22:37.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:37.734" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:37.733" endtime="20211113 01:22:37.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:37.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:37.735" endtime="20211113 01:22:37.736"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.724" endtime="20211113 01:22:37.737"/>
</kw>
<msg timestamp="20211113 01:22:37.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:37.724" endtime="20211113 01:22:37.737"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.724" endtime="20211113 01:22:37.737"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:37.742" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:37.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:37.748" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:37.740" endtime="20211113 01:22:37.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:37.749" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:37.748" endtime="20211113 01:22:37.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:37.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:37.750" endtime="20211113 01:22:37.751"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.740" endtime="20211113 01:22:37.751"/>
</kw>
<msg timestamp="20211113 01:22:37.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:37.739" endtime="20211113 01:22:37.752"/>
</kw>
<msg timestamp="20211113 01:22:37.752" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:37.739" endtime="20211113 01:22:37.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:37.753" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:37.752" endtime="20211113 01:22:37.753"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:37.758" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:37.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:37.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:37.756" endtime="20211113 01:22:37.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:37.770" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:37.769" endtime="20211113 01:22:37.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:37.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:37.770" endtime="20211113 01:22:37.771"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.755" endtime="20211113 01:22:37.771"/>
</kw>
<msg timestamp="20211113 01:22:37.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:37.755" endtime="20211113 01:22:37.772"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.754" endtime="20211113 01:22:37.772"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.753" endtime="20211113 01:22:37.772"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.738" endtime="20211113 01:22:37.772"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.737" endtime="20211113 01:22:37.772"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:37.776" level="INFO">Running command 'ozone sh key list 71044-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:44.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:44.219" level="INFO">${output} = [ {
  "volumeName" : "71044-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-13T01:12:15.128Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211113 01:22:37.773" endtime="20211113 01:22:44.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:44.220" level="INFO">[ {
  "volumeName" : "71044-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-13T01:12:15.128Z",
  "modificationTime" : "2021-11-13T01:15:18.908Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211113 01:22:44.219" endtime="20211113 01:22:44.220"/>
</kw>
<msg timestamp="20211113 01:22:44.221" level="INFO">${result} = [ {
  "volumeName" : "71044-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-13T01:12:15.128Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211113 01:22:37.773" endtime="20211113 01:22:44.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:22:44.221" endtime="20211113 01:22:44.222"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.723" endtime="20211113 01:22:44.222"/>
</kw>
<status status="PASS" starttime="20211113 01:22:37.722" endtime="20211113 01:22:44.222"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:22:37.674" endtime="20211113 01:22:44.222"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:44.231" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:44.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:44.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:44.229" endtime="20211113 01:22:44.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:44.239" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:44.238" endtime="20211113 01:22:44.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:44.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:44.239" endtime="20211113 01:22:44.240"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.228" endtime="20211113 01:22:44.240"/>
</kw>
<msg timestamp="20211113 01:22:44.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:44.228" endtime="20211113 01:22:44.240"/>
</kw>
<msg timestamp="20211113 01:22:44.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:44.227" endtime="20211113 01:22:44.241"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:44.241" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:44.241" endtime="20211113 01:22:44.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:44.247" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:44.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:44.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:44.245" endtime="20211113 01:22:44.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:44.257" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:44.256" endtime="20211113 01:22:44.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:44.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:44.257" endtime="20211113 01:22:44.258"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.244" endtime="20211113 01:22:44.259"/>
</kw>
<msg timestamp="20211113 01:22:44.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:44.244" endtime="20211113 01:22:44.259"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.243" endtime="20211113 01:22:44.260"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.242" endtime="20211113 01:22:44.260"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.227" endtime="20211113 01:22:44.260"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.226" endtime="20211113 01:22:44.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:44.268" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:44.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:44.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:44.265" endtime="20211113 01:22:44.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:44.275" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:44.274" endtime="20211113 01:22:44.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:44.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:44.275" endtime="20211113 01:22:44.276"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.265" endtime="20211113 01:22:44.276"/>
</kw>
<msg timestamp="20211113 01:22:44.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:44.264" endtime="20211113 01:22:44.276"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.263" endtime="20211113 01:22:44.276"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:44.282" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:44.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:44.288" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:44.280" endtime="20211113 01:22:44.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:44.289" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:44.288" endtime="20211113 01:22:44.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:44.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:44.290" endtime="20211113 01:22:44.291"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.279" endtime="20211113 01:22:44.291"/>
</kw>
<msg timestamp="20211113 01:22:44.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:44.278" endtime="20211113 01:22:44.291"/>
</kw>
<msg timestamp="20211113 01:22:44.292" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:44.278" endtime="20211113 01:22:44.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:44.293" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:44.292" endtime="20211113 01:22:44.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:44.299" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:44.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:44.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:44.295" endtime="20211113 01:22:44.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:44.307" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:44.306" endtime="20211113 01:22:44.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:44.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:44.308" endtime="20211113 01:22:44.309"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.295" endtime="20211113 01:22:44.309"/>
</kw>
<msg timestamp="20211113 01:22:44.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:44.294" endtime="20211113 01:22:44.310"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.294" endtime="20211113 01:22:44.310"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.293" endtime="20211113 01:22:44.310"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.277" endtime="20211113 01:22:44.310"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.277" endtime="20211113 01:22:44.310"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:44.314" level="INFO">Running command 'ozone sh key list 71044-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:51.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:22:51.809" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:71044-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211113 01:22:44.312" endtime="20211113 01:22:51.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:51.811" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:71044-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211113 01:22:51.810" endtime="20211113 01:22:51.812"/>
</kw>
<msg timestamp="20211113 01:22:51.813" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:71044-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211113 01:22:44.311" endtime="20211113 01:22:51.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:22:51.813" endtime="20211113 01:22:51.814"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.262" endtime="20211113 01:22:51.814"/>
</kw>
<status status="PASS" starttime="20211113 01:22:44.261" endtime="20211113 01:22:51.815"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:22:44.224" endtime="20211113 01:22:51.815"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:51.825" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:51.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:51.832" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:51.823" endtime="20211113 01:22:51.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:51.833" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:51.832" endtime="20211113 01:22:51.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:51.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:51.833" endtime="20211113 01:22:51.834"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.822" endtime="20211113 01:22:51.835"/>
</kw>
<msg timestamp="20211113 01:22:51.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:51.822" endtime="20211113 01:22:51.835"/>
</kw>
<msg timestamp="20211113 01:22:51.836" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:51.821" endtime="20211113 01:22:51.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:51.837" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:51.836" endtime="20211113 01:22:51.837"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:51.847" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:51.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:51.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:51.845" endtime="20211113 01:22:51.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:51.859" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:51.858" endtime="20211113 01:22:51.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:51.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:51.860" endtime="20211113 01:22:51.861"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.842" endtime="20211113 01:22:51.861"/>
</kw>
<msg timestamp="20211113 01:22:51.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:51.842" endtime="20211113 01:22:51.861"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.840" endtime="20211113 01:22:51.862"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.838" endtime="20211113 01:22:51.862"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.820" endtime="20211113 01:22:51.862"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.818" endtime="20211113 01:22:51.862"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:51.869" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:51.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:51.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:51.866" endtime="20211113 01:22:51.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:51.876" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:51.875" endtime="20211113 01:22:51.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:51.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:51.876" endtime="20211113 01:22:51.877"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.865" endtime="20211113 01:22:51.877"/>
</kw>
<msg timestamp="20211113 01:22:51.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:51.865" endtime="20211113 01:22:51.878"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.864" endtime="20211113 01:22:51.878"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:51.887" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:51.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:51.891" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:22:51.884" endtime="20211113 01:22:51.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:51.894" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:22:51.892" endtime="20211113 01:22:51.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:51.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:51.894" endtime="20211113 01:22:51.895"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.883" endtime="20211113 01:22:51.895"/>
</kw>
<msg timestamp="20211113 01:22:51.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:51.883" endtime="20211113 01:22:51.896"/>
</kw>
<msg timestamp="20211113 01:22:51.896" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:22:51.881" endtime="20211113 01:22:51.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:22:51.897" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:22:51.896" endtime="20211113 01:22:51.897"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:51.903" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:22:51.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:22:51.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:22:51.900" endtime="20211113 01:22:51.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:22:51.913" level="INFO"/>
<status status="PASS" starttime="20211113 01:22:51.912" endtime="20211113 01:22:51.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:22:51.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:22:51.914" endtime="20211113 01:22:51.914"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.900" endtime="20211113 01:22:51.915"/>
</kw>
<msg timestamp="20211113 01:22:51.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:51.899" endtime="20211113 01:22:51.915"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.898" endtime="20211113 01:22:51.916"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.897" endtime="20211113 01:22:51.916"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.879" endtime="20211113 01:22:51.916"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.879" endtime="20211113 01:22:51.916"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:22:51.923" level="INFO">Running command 'ozone sh bucket info 71044-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:00.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:00.574" level="INFO">${output} = {
  "volumeName" : "71044-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-13T01:15:49.231Z...</msg>
<status status="PASS" starttime="20211113 01:22:51.920" endtime="20211113 01:23:00.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:00.577" level="INFO">{
  "volumeName" : "71044-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-13T01:15:49.231Z",
  "modificationTime" : "2021-11-13T01:16:25.699Z"
}</msg>
<status status="PASS" starttime="20211113 01:23:00.575" endtime="20211113 01:23:00.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:00.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:00.577" endtime="20211113 01:23:00.579"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.919" endtime="20211113 01:23:00.579"/>
</kw>
<msg timestamp="20211113 01:23:00.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:22:51.918" endtime="20211113 01:23:00.580"/>
</kw>
<msg timestamp="20211113 01:23:00.580" level="INFO">${result} = {
  "volumeName" : "71044-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-13T01:15:49.231Z...</msg>
<status status="PASS" starttime="20211113 01:22:51.916" endtime="20211113 01:23:00.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:23:00.581" endtime="20211113 01:23:00.581"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:23:00.581" endtime="20211113 01:23:00.582"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:00.586" level="INFO">Running command 'ozone sh key list 71044-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:06.415" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:23:06.415" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:71044-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211113 01:23:00.583" endtime="20211113 01:23:06.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:06.418" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:71044-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211113 01:23:06.417" endtime="20211113 01:23:06.418"/>
</kw>
<msg timestamp="20211113 01:23:06.419" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:71044-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211113 01:23:00.582" endtime="20211113 01:23:06.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:23:06.420" endtime="20211113 01:23:06.422"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.863" endtime="20211113 01:23:06.422"/>
</kw>
<status status="PASS" starttime="20211113 01:22:51.863" endtime="20211113 01:23:06.423"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:22:51.817" endtime="20211113 01:23:06.423"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:06.436" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:06.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:06.439" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:23:06.428" endtime="20211113 01:23:06.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:06.441" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:23:06.440" endtime="20211113 01:23:06.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:06.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:06.441" endtime="20211113 01:23:06.442"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.427" endtime="20211113 01:23:06.442"/>
</kw>
<msg timestamp="20211113 01:23:06.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:06.427" endtime="20211113 01:23:06.442"/>
</kw>
<msg timestamp="20211113 01:23:06.444" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:23:06.426" endtime="20211113 01:23:06.444"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:23:06.445" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:23:06.444" endtime="20211113 01:23:06.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:06.452" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:06.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:06.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:23:06.450" endtime="20211113 01:23:06.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:06.463" level="INFO"/>
<status status="PASS" starttime="20211113 01:23:06.463" endtime="20211113 01:23:06.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:06.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:06.464" endtime="20211113 01:23:06.464"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.448" endtime="20211113 01:23:06.465"/>
</kw>
<msg timestamp="20211113 01:23:06.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:06.448" endtime="20211113 01:23:06.465"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.447" endtime="20211113 01:23:06.465"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.446" endtime="20211113 01:23:06.465"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.426" endtime="20211113 01:23:06.466"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.425" endtime="20211113 01:23:06.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:06.470" level="INFO">Running command 'ozone sh bucket link 71044-target/loop1 71044-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:12.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:12.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:23:06.468" endtime="20211113 01:23:12.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:12.858" level="INFO"/>
<status status="PASS" starttime="20211113 01:23:12.857" endtime="20211113 01:23:12.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:12.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:12.858" endtime="20211113 01:23:12.859"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.467" endtime="20211113 01:23:12.859"/>
</kw>
<msg timestamp="20211113 01:23:12.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:06.467" endtime="20211113 01:23:12.859"/>
</kw>
<status status="PASS" starttime="20211113 01:23:06.466" endtime="20211113 01:23:12.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:12.864" level="INFO">Running command 'ozone sh bucket link 71044-target/loop2 71044-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:19.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:19.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:23:12.862" endtime="20211113 01:23:19.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:19.771" level="INFO"/>
<status status="PASS" starttime="20211113 01:23:19.770" endtime="20211113 01:23:19.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:19.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:19.772" endtime="20211113 01:23:19.772"/>
</kw>
<status status="PASS" starttime="20211113 01:23:12.861" endtime="20211113 01:23:19.773"/>
</kw>
<msg timestamp="20211113 01:23:19.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:12.861" endtime="20211113 01:23:19.773"/>
</kw>
<status status="PASS" starttime="20211113 01:23:12.860" endtime="20211113 01:23:19.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:19.778" level="INFO">Running command 'ozone sh bucket link 71044-target/loop3 71044-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:27.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:27.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:23:19.775" endtime="20211113 01:23:27.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:27.931" level="INFO"/>
<status status="PASS" starttime="20211113 01:23:27.930" endtime="20211113 01:23:27.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:27.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:27.931" endtime="20211113 01:23:27.932"/>
</kw>
<status status="PASS" starttime="20211113 01:23:19.774" endtime="20211113 01:23:27.932"/>
</kw>
<msg timestamp="20211113 01:23:27.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:19.774" endtime="20211113 01:23:27.933"/>
</kw>
<status status="PASS" starttime="20211113 01:23:19.773" endtime="20211113 01:23:27.933"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:27.936" level="INFO">Running command 'ozone sh key list 71044-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:35.923" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:23:35.923" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211113 01:23:27.934" endtime="20211113 01:23:35.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:35.925" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211113 01:23:35.924" endtime="20211113 01:23:35.925"/>
</kw>
<msg timestamp="20211113 01:23:35.925" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211113 01:23:27.933" endtime="20211113 01:23:35.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:23:35.926" endtime="20211113 01:23:35.926"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:23:06.424" endtime="20211113 01:23:35.926"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:35.937" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:35.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:35.941" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:23:35.934" endtime="20211113 01:23:35.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:35.942" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:23:35.941" endtime="20211113 01:23:35.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:35.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:35.942" endtime="20211113 01:23:35.943"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.933" endtime="20211113 01:23:35.943"/>
</kw>
<msg timestamp="20211113 01:23:35.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:35.932" endtime="20211113 01:23:35.944"/>
</kw>
<msg timestamp="20211113 01:23:35.944" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:23:35.931" endtime="20211113 01:23:35.944"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:23:35.945" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:23:35.944" endtime="20211113 01:23:35.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:35.951" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:35.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:35.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:23:35.948" endtime="20211113 01:23:35.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:35.963" level="INFO"/>
<status status="PASS" starttime="20211113 01:23:35.962" endtime="20211113 01:23:35.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:35.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:35.963" endtime="20211113 01:23:35.965"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.947" endtime="20211113 01:23:35.965"/>
</kw>
<msg timestamp="20211113 01:23:35.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:35.947" endtime="20211113 01:23:35.965"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.946" endtime="20211113 01:23:35.966"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.945" endtime="20211113 01:23:35.966"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.930" endtime="20211113 01:23:35.966"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.929" endtime="20211113 01:23:35.966"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:35.971" level="INFO">Running command 'ozone sh bucket link 71044-source/bucket1 71044-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:23:43.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:23:43.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:23:35.969" endtime="20211113 01:23:43.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:23:43.500" level="INFO"/>
<status status="PASS" starttime="20211113 01:23:43.498" endtime="20211113 01:23:43.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:23:43.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:23:43.500" endtime="20211113 01:23:43.502"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.968" endtime="20211113 01:23:43.503"/>
</kw>
<msg timestamp="20211113 01:23:43.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:23:35.968" endtime="20211113 01:23:43.504"/>
</kw>
<status status="PASS" starttime="20211113 01:23:35.967" endtime="20211113 01:23:43.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:23:43.514" level="INFO">Running command 'ozone sh key put 71044-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:25:35.928" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:23:43.510" endtime="20211113 01:25:35.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:25:35.929" endtime="20211113 01:25:35.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:25:35.929" endtime="20211113 01:25:35.929"/>
</kw>
<status status="FAIL" starttime="20211113 01:23:43.508" endtime="20211113 01:25:35.930"/>
</kw>
<msg timestamp="20211113 01:25:35.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:23:43.507" endtime="20211113 01:25:35.930"/>
</kw>
<status status="FAIL" starttime="20211113 01:23:43.505" endtime="20211113 01:25:35.930"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211113 01:25:35.931" endtime="20211113 01:25:35.931"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211113 01:23:35.927" endtime="20211113 01:25:35.931">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:25:35.938" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:25:35.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:25:35.943" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:25:35.936" endtime="20211113 01:25:35.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:25:35.945" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:25:35.944" endtime="20211113 01:25:35.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:25:35.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:25:35.946" endtime="20211113 01:25:35.947"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.935" endtime="20211113 01:25:35.947"/>
</kw>
<msg timestamp="20211113 01:25:35.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:25:35.935" endtime="20211113 01:25:35.948"/>
</kw>
<msg timestamp="20211113 01:25:35.948" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:25:35.934" endtime="20211113 01:25:35.948"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:25:35.949" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:25:35.948" endtime="20211113 01:25:35.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:25:35.957" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:25:35.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:25:35.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:25:35.954" endtime="20211113 01:25:35.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:25:35.968" level="INFO"/>
<status status="PASS" starttime="20211113 01:25:35.967" endtime="20211113 01:25:35.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:25:35.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:25:35.969" endtime="20211113 01:25:35.970"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.953" endtime="20211113 01:25:35.970"/>
</kw>
<msg timestamp="20211113 01:25:35.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:25:35.952" endtime="20211113 01:25:35.970"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.951" endtime="20211113 01:25:35.971"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.950" endtime="20211113 01:25:35.971"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.934" endtime="20211113 01:25:35.971"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.933" endtime="20211113 01:25:35.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:25:35.976" level="INFO">Running command 'ozone sh bucket delete 71044-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:25:44.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:25:44.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:25:35.973" endtime="20211113 01:25:44.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:25:44.114" level="INFO"/>
<status status="PASS" starttime="20211113 01:25:44.114" endtime="20211113 01:25:44.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:25:44.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:25:44.115" endtime="20211113 01:25:44.115"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.972" endtime="20211113 01:25:44.116"/>
</kw>
<msg timestamp="20211113 01:25:44.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:25:35.972" endtime="20211113 01:25:44.116"/>
</kw>
<status status="PASS" starttime="20211113 01:25:35.971" endtime="20211113 01:25:44.116"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:25:44.121" level="INFO">Running command 'ozone sh bucket list 71044-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:25:52.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:25:52.871" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-1...</msg>
<status status="PASS" starttime="20211113 01:25:44.118" endtime="20211113 01:25:52.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:25:52.873" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:22:29.766Z",
  "modificationTime" : "2021-11-13T01:22:29.766Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:16:33.597Z",
  "modificationTime" : "2021-11-13T01:16:33.597Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:15:49.231Z",
  "modificationTime" : "2021-11-13T01:16:25.699Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:22:14.138Z",
  "modificationTime" : "2021-11-13T01:22:14.138Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:23:43.398Z",
  "modificationTime" : "2021-11-13T01:23:43.398Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:23:27.574Z",
  "modificationTime" : "2021-11-13T01:23:27.574Z",
  "sourceVolume" : "71044-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:23:12.711Z",
  "modificationTime" : "2021-11-13T01:23:12.711Z",
  "sourceVolume" : "71044-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:23:19.439Z",
  "modificationTime" : "2021-11-13T01:23:19.439Z",
  "sourceVolume" : "71044-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:15:33.617Z",
  "modificationTime" : "2021-11-13T01:16:18.252Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
}, {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-13T01:15:41.330Z",
  "modificationTime" : "2021-11-13T01:15:41.330Z",
  "sourceVolume" : "71044-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE"
} ]</msg>
<status status="PASS" starttime="20211113 01:25:52.871" endtime="20211113 01:25:52.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:25:52.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:25:52.874" endtime="20211113 01:25:52.875"/>
</kw>
<status status="PASS" starttime="20211113 01:25:44.118" endtime="20211113 01:25:52.875"/>
</kw>
<msg timestamp="20211113 01:25:52.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:25:44.118" endtime="20211113 01:25:52.876"/>
</kw>
<msg timestamp="20211113 01:25:52.877" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "71044-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-1...</msg>
<status status="PASS" starttime="20211113 01:25:44.117" endtime="20211113 01:25:52.877"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:25:52.878" endtime="20211113 01:25:52.878"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:25:52.883" level="INFO">Running command 'ozone sh key list 71044-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:01.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:01.687" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211113 01:25:52.880" endtime="20211113 01:26:01.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:01.689" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211113 01:26:01.688" endtime="20211113 01:26:01.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:01.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:01.690" endtime="20211113 01:26:01.691"/>
</kw>
<status status="PASS" starttime="20211113 01:25:52.880" endtime="20211113 01:26:01.692"/>
</kw>
<msg timestamp="20211113 01:26:01.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:25:52.879" endtime="20211113 01:26:01.692"/>
</kw>
<msg timestamp="20211113 01:26:01.693" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211113 01:25:52.879" endtime="20211113 01:26:01.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:26:01.693" endtime="20211113 01:26:01.694"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:25:35.932" endtime="20211113 01:26:01.695"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211113 01:11:43.999" endtime="20211113 01:26:01.699"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211113 01:26:01.737" level="INFO">${random} = 54876</msg>
<status status="PASS" starttime="20211113 01:26:01.736" endtime="20211113 01:26:01.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:26:01.737" level="INFO">${prefix} = 54876</msg>
<status status="PASS" starttime="20211113 01:26:01.737" endtime="20211113 01:26:01.737"/>
</kw>
<status status="PASS" starttime="20211113 01:26:01.736" endtime="20211113 01:26:01.738"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:01.745" level="INFO">Running command 'ozone sh volume info /54876-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:09.463" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:26:09.463" level="INFO">${output} = VOLUME_NOT_FOUND Volume 54876-rpcbasic is not found</msg>
<status status="PASS" starttime="20211113 01:26:01.742" endtime="20211113 01:26:09.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:09.464" level="INFO">VOLUME_NOT_FOUND Volume 54876-rpcbasic is not found</msg>
<status status="PASS" starttime="20211113 01:26:09.463" endtime="20211113 01:26:09.464"/>
</kw>
<msg timestamp="20211113 01:26:09.466" level="INFO">${result} = VOLUME_NOT_FOUND Volume 54876-rpcbasic is not found</msg>
<status status="PASS" starttime="20211113 01:26:01.741" endtime="20211113 01:26:09.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:26:09.466" endtime="20211113 01:26:09.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:09.475" level="INFO">Running command 'ozone sh volume create /54876-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:17.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:17.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:26:09.471" endtime="20211113 01:26:17.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:17.375" level="INFO"/>
<status status="PASS" starttime="20211113 01:26:17.374" endtime="20211113 01:26:17.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:17.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:17.375" endtime="20211113 01:26:17.376"/>
</kw>
<status status="PASS" starttime="20211113 01:26:09.470" endtime="20211113 01:26:17.376"/>
</kw>
<msg timestamp="20211113 01:26:17.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:09.469" endtime="20211113 01:26:17.377"/>
</kw>
<msg timestamp="20211113 01:26:17.377" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211113 01:26:09.468" endtime="20211113 01:26:17.377"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:26:17.377" endtime="20211113 01:26:17.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:17.383" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="54876-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:26.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:26.873" level="INFO">${output} = {
  "metadata": {},
  "name": "54876-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:26:17.380" endtime="20211113 01:26:26.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:26.875" level="INFO">{
  "metadata": {},
  "name": "54876-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:26:17.276Z",
  "modificationTime": "2021-11-13T01:26:17.276Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:26:26.874" endtime="20211113 01:26:26.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:26.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:26.875" endtime="20211113 01:26:26.876"/>
</kw>
<status status="PASS" starttime="20211113 01:26:17.379" endtime="20211113 01:26:26.876"/>
</kw>
<msg timestamp="20211113 01:26:26.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:17.379" endtime="20211113 01:26:26.877"/>
</kw>
<msg timestamp="20211113 01:26:26.877" level="INFO">${result} = {
  "metadata": {},
  "name": "54876-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:26:17.378" endtime="20211113 01:26:26.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:26:26.877" endtime="20211113 01:26:26.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:26.883" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="54876-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:35.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:35.598" level="INFO">${output} = {
  "metadata": {},
  "name": "54876-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:26:26.880" endtime="20211113 01:26:35.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:35.600" level="INFO">{
  "metadata": {},
  "name": "54876-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:26:17.276Z",
  "modificationTime": "2021-11-13T01:26:17.276Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:26:35.599" endtime="20211113 01:26:35.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:35.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:35.600" endtime="20211113 01:26:35.601"/>
</kw>
<status status="PASS" starttime="20211113 01:26:26.879" endtime="20211113 01:26:35.601"/>
</kw>
<msg timestamp="20211113 01:26:35.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:26.879" endtime="20211113 01:26:35.602"/>
</kw>
<msg timestamp="20211113 01:26:35.602" level="INFO">${result} = {
  "metadata": {},
  "name": "54876-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:26:26.878" endtime="20211113 01:26:35.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:26:35.602" endtime="20211113 01:26:35.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:35.607" level="INFO">Running command 'ozone sh volume setquota /54876-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:40.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:40.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:26:35.605" endtime="20211113 01:26:40.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:40.754" level="INFO"/>
<status status="PASS" starttime="20211113 01:26:40.752" endtime="20211113 01:26:40.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:40.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:40.755" endtime="20211113 01:26:40.757"/>
</kw>
<status status="PASS" starttime="20211113 01:26:35.604" endtime="20211113 01:26:40.757"/>
</kw>
<msg timestamp="20211113 01:26:40.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:35.604" endtime="20211113 01:26:40.758"/>
</kw>
<status status="PASS" starttime="20211113 01:26:35.603" endtime="20211113 01:26:40.760"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:40.769" level="INFO">Running command 'ozone sh volume info /54876-rpcbasic | jq -r '. | select(.name=="54876-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:48.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:48.622" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:26:40.765" endtime="20211113 01:26:48.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:48.625" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:26:48.624" endtime="20211113 01:26:48.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:48.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:48.625" endtime="20211113 01:26:48.626"/>
</kw>
<status status="PASS" starttime="20211113 01:26:40.764" endtime="20211113 01:26:48.627"/>
</kw>
<msg timestamp="20211113 01:26:48.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:40.763" endtime="20211113 01:26:48.627"/>
</kw>
<msg timestamp="20211113 01:26:48.628" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:26:40.760" endtime="20211113 01:26:48.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:26:48.628" endtime="20211113 01:26:48.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:48.635" level="INFO">Running command 'ozone sh bucket create /54876-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:26:57.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:26:57.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:26:48.632" endtime="20211113 01:26:57.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:26:57.683" level="INFO"/>
<status status="PASS" starttime="20211113 01:26:57.682" endtime="20211113 01:26:57.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:26:57.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:26:57.683" endtime="20211113 01:26:57.684"/>
</kw>
<status status="PASS" starttime="20211113 01:26:48.631" endtime="20211113 01:26:57.684"/>
</kw>
<msg timestamp="20211113 01:26:57.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:48.631" endtime="20211113 01:26:57.685"/>
</kw>
<status status="PASS" starttime="20211113 01:26:48.629" endtime="20211113 01:26:57.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:26:57.690" level="INFO">Running command 'ozone sh bucket info /54876-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:06.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:06.386" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211113 01:26:57.688" endtime="20211113 01:27:06.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:06.390" level="INFO">DISK</msg>
<status status="PASS" starttime="20211113 01:27:06.388" endtime="20211113 01:27:06.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:06.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:06.390" endtime="20211113 01:27:06.391"/>
</kw>
<status status="PASS" starttime="20211113 01:26:57.687" endtime="20211113 01:27:06.392"/>
</kw>
<msg timestamp="20211113 01:27:06.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:26:57.687" endtime="20211113 01:27:06.392"/>
</kw>
<msg timestamp="20211113 01:27:06.393" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211113 01:26:57.685" endtime="20211113 01:27:06.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:27:06.394" endtime="20211113 01:27:06.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:06.402" level="INFO">Running command 'ozone sh bucket info /54876-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:12.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:12.040" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:27:06.399" endtime="20211113 01:27:12.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:12.044" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:27:12.042" endtime="20211113 01:27:12.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:12.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:12.044" endtime="20211113 01:27:12.045"/>
</kw>
<status status="PASS" starttime="20211113 01:27:06.398" endtime="20211113 01:27:12.046"/>
</kw>
<msg timestamp="20211113 01:27:12.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:06.397" endtime="20211113 01:27:12.047"/>
</kw>
<msg timestamp="20211113 01:27:12.047" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:27:06.395" endtime="20211113 01:27:12.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:27:12.048" endtime="20211113 01:27:12.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:12.056" level="INFO">Running command 'ozone sh bucket info /54876-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:17.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:17.850" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211113 01:27:12.053" endtime="20211113 01:27:17.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:17.852" level="INFO">100</msg>
<status status="PASS" starttime="20211113 01:27:17.851" endtime="20211113 01:27:17.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:17.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:17.852" endtime="20211113 01:27:17.853"/>
</kw>
<status status="PASS" starttime="20211113 01:27:12.052" endtime="20211113 01:27:17.853"/>
</kw>
<msg timestamp="20211113 01:27:17.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:12.051" endtime="20211113 01:27:17.854"/>
</kw>
<msg timestamp="20211113 01:27:17.854" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211113 01:27:12.049" endtime="20211113 01:27:17.854"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:27:17.854" endtime="20211113 01:27:17.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:17.859" level="INFO">Running command 'ozone sh bucket setquota /54876-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:25.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:25.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:27:17.857" endtime="20211113 01:27:25.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:25.253" level="INFO"/>
<status status="PASS" starttime="20211113 01:27:25.251" endtime="20211113 01:27:25.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:25.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:25.253" endtime="20211113 01:27:25.254"/>
</kw>
<status status="PASS" starttime="20211113 01:27:17.856" endtime="20211113 01:27:25.254"/>
</kw>
<msg timestamp="20211113 01:27:25.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:17.856" endtime="20211113 01:27:25.255"/>
</kw>
<status status="PASS" starttime="20211113 01:27:17.855" endtime="20211113 01:27:25.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:25.263" level="INFO">Running command 'ozone sh bucket info /54876-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:32.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:32.424" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:27:25.259" endtime="20211113 01:27:32.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:32.425" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211113 01:27:32.425" endtime="20211113 01:27:32.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:32.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:32.426" endtime="20211113 01:27:32.426"/>
</kw>
<status status="PASS" starttime="20211113 01:27:25.258" endtime="20211113 01:27:32.427"/>
</kw>
<msg timestamp="20211113 01:27:32.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:25.257" endtime="20211113 01:27:32.427"/>
</kw>
<msg timestamp="20211113 01:27:32.427" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:27:25.255" endtime="20211113 01:27:32.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:27:32.428" endtime="20211113 01:27:32.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:32.433" level="INFO">Running command 'ozone sh bucket info /54876-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:40.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:40.293" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211113 01:27:32.431" endtime="20211113 01:27:40.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:40.296" level="INFO">1000</msg>
<status status="PASS" starttime="20211113 01:27:40.294" endtime="20211113 01:27:40.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:40.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:40.296" endtime="20211113 01:27:40.297"/>
</kw>
<status status="PASS" starttime="20211113 01:27:32.430" endtime="20211113 01:27:40.298"/>
</kw>
<msg timestamp="20211113 01:27:40.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:32.430" endtime="20211113 01:27:40.298"/>
</kw>
<msg timestamp="20211113 01:27:40.299" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211113 01:27:32.428" endtime="20211113 01:27:40.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:27:40.299" endtime="20211113 01:27:40.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:40.306" level="INFO">Running command 'ozone sh bucket list /54876-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:27:48.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:27:48.724" level="INFO">${output} = 54876-rpcbasic</msg>
<status status="PASS" starttime="20211113 01:27:40.303" endtime="20211113 01:27:48.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:27:48.727" level="INFO">54876-rpcbasic</msg>
<status status="PASS" starttime="20211113 01:27:48.726" endtime="20211113 01:27:48.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:27:48.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:27:48.728" endtime="20211113 01:27:48.729"/>
</kw>
<status status="PASS" starttime="20211113 01:27:40.303" endtime="20211113 01:27:48.730"/>
</kw>
<msg timestamp="20211113 01:27:48.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:40.302" endtime="20211113 01:27:48.731"/>
</kw>
<msg timestamp="20211113 01:27:48.731" level="INFO">${result} = 54876-rpcbasic</msg>
<status status="PASS" starttime="20211113 01:27:40.300" endtime="20211113 01:27:48.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:27:48.732" endtime="20211113 01:27:48.733"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:27:48.742" level="INFO">Running command 'ozone sh key put /54876-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:00.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:00.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:27:48.739" endtime="20211113 01:31:00.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:00.834" level="INFO"/>
<status status="PASS" starttime="20211113 01:31:00.833" endtime="20211113 01:31:00.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:00.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:00.834" endtime="20211113 01:31:00.835"/>
</kw>
<status status="PASS" starttime="20211113 01:27:48.738" endtime="20211113 01:31:00.835"/>
</kw>
<msg timestamp="20211113 01:31:00.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:27:48.737" endtime="20211113 01:31:00.835"/>
</kw>
<status status="PASS" starttime="20211113 01:27:48.736" endtime="20211113 01:31:00.836"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:00.840" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:00.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:00.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:31:00.838" endtime="20211113 01:31:00.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:00.846" level="INFO"/>
<status status="PASS" starttime="20211113 01:31:00.845" endtime="20211113 01:31:00.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:00.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:00.846" endtime="20211113 01:31:00.847"/>
</kw>
<status status="PASS" starttime="20211113 01:31:00.837" endtime="20211113 01:31:00.847"/>
</kw>
<msg timestamp="20211113 01:31:00.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:00.837" endtime="20211113 01:31:00.847"/>
</kw>
<status status="PASS" starttime="20211113 01:31:00.836" endtime="20211113 01:31:00.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:00.851" level="INFO">Running command 'ozone sh key get /54876-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:01.739" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:31:00.849" endtime="20211113 01:31:01.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.739" endtime="20211113 01:31:01.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.740" endtime="20211113 01:31:01.740"/>
</kw>
<status status="FAIL" starttime="20211113 01:31:00.849" endtime="20211113 01:31:01.740"/>
</kw>
<msg timestamp="20211113 01:31:01.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:31:00.848" endtime="20211113 01:31:01.741"/>
</kw>
<status status="FAIL" starttime="20211113 01:31:00.848" endtime="20211113 01:31:01.741"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.741" endtime="20211113 01:31:01.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.742" endtime="20211113 01:31:01.742"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.742" endtime="20211113 01:31:01.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.742" endtime="20211113 01:31:01.742"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.742" endtime="20211113 01:31:01.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.742" endtime="20211113 01:31:01.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.743" endtime="20211113 01:31:01.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.743" endtime="20211113 01:31:01.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.743" endtime="20211113 01:31:01.743"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.743" endtime="20211113 01:31:01.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.744" endtime="20211113 01:31:01.744"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.744" endtime="20211113 01:31:01.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.744" endtime="20211113 01:31:01.744"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.745" endtime="20211113 01:31:01.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.745" endtime="20211113 01:31:01.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.746" endtime="20211113 01:31:01.746"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.746" endtime="20211113 01:31:01.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.747" endtime="20211113 01:31:01.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.748" endtime="20211113 01:31:01.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.748" endtime="20211113 01:31:01.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.749" endtime="20211113 01:31:01.749"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.750" endtime="20211113 01:31:01.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.750" endtime="20211113 01:31:01.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.751" endtime="20211113 01:31:01.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.751" endtime="20211113 01:31:01.752"/>
</kw>
<status status="FAIL" starttime="20211113 01:27:48.734" endtime="20211113 01:31:01.752"/>
</kw>
<status status="FAIL" starttime="20211113 01:27:48.733" endtime="20211113 01:31:01.752"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.753" endtime="20211113 01:31:01.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.754" endtime="20211113 01:31:01.755"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.755" endtime="20211113 01:31:01.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.755" endtime="20211113 01:31:01.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.756" endtime="20211113 01:31:01.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.757" endtime="20211113 01:31:01.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.757" endtime="20211113 01:31:01.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.758" endtime="20211113 01:31:01.758"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.759" endtime="20211113 01:31:01.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.759" endtime="20211113 01:31:01.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.759" endtime="20211113 01:31:01.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.760" endtime="20211113 01:31:01.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.761" endtime="20211113 01:31:01.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.761" endtime="20211113 01:31:01.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.762" endtime="20211113 01:31:01.762"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.764" endtime="20211113 01:31:01.764"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.764" endtime="20211113 01:31:01.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.764" endtime="20211113 01:31:01.766"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.766" endtime="20211113 01:31:01.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.767" endtime="20211113 01:31:01.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.767" endtime="20211113 01:31:01.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.770" endtime="20211113 01:31:01.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.771" endtime="20211113 01:31:01.771"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:31:01.774" endtime="20211113 01:31:01.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.775" endtime="20211113 01:31:01.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:31:01.775" endtime="20211113 01:31:01.776"/>
</kw>
<status status="FAIL" starttime="20211113 01:26:01.739" endtime="20211113 01:31:01.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211113 01:26:01.738" endtime="20211113 01:31:01.780">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211113 01:26:01.706" endtime="20211113 01:31:01.782"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211113 01:31:01.809" level="INFO">${random} = 33776</msg>
<status status="PASS" starttime="20211113 01:31:01.808" endtime="20211113 01:31:01.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:31:01.814" level="INFO">${prefix} = 33776</msg>
<status status="PASS" starttime="20211113 01:31:01.809" endtime="20211113 01:31:01.814"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.808" endtime="20211113 01:31:01.814"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:01.828" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:01.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:01.842" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:31:01.819" endtime="20211113 01:31:01.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:01.843" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:31:01.843" endtime="20211113 01:31:01.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:01.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:01.844" endtime="20211113 01:31:01.845"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.819" endtime="20211113 01:31:01.845"/>
</kw>
<msg timestamp="20211113 01:31:01.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:01.817" endtime="20211113 01:31:01.845"/>
</kw>
<msg timestamp="20211113 01:31:01.845" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:31:01.816" endtime="20211113 01:31:01.846"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:31:01.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:31:01.846" endtime="20211113 01:31:01.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:01.867" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:01.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:01.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:31:01.850" endtime="20211113 01:31:01.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:01.919" level="INFO"/>
<status status="PASS" starttime="20211113 01:31:01.918" endtime="20211113 01:31:01.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:01.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:01.920" endtime="20211113 01:31:01.921"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.850" endtime="20211113 01:31:01.921"/>
</kw>
<msg timestamp="20211113 01:31:01.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:01.849" endtime="20211113 01:31:01.921"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.849" endtime="20211113 01:31:01.922"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.848" endtime="20211113 01:31:01.922"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.816" endtime="20211113 01:31:01.922"/>
</kw>
<status status="PASS" starttime="20211113 01:31:01.815" endtime="20211113 01:31:01.922"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:01.937" level="INFO">Running command 'ozone sh volume info o3://om:9862/33776-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:17.623" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:31:17.623" level="INFO">${output} = VOLUME_NOT_FOUND Volume 33776-rpcwoport is not found</msg>
<status status="PASS" starttime="20211113 01:31:01.927" endtime="20211113 01:31:17.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:17.625" level="INFO">VOLUME_NOT_FOUND Volume 33776-rpcwoport is not found</msg>
<status status="PASS" starttime="20211113 01:31:17.623" endtime="20211113 01:31:17.625"/>
</kw>
<msg timestamp="20211113 01:31:17.626" level="INFO">${result} = VOLUME_NOT_FOUND Volume 33776-rpcwoport is not found</msg>
<status status="PASS" starttime="20211113 01:31:01.924" endtime="20211113 01:31:17.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:31:17.626" endtime="20211113 01:31:17.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:17.646" level="INFO">Running command 'ozone sh volume create o3://om:9862/33776-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:26.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:26.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:31:17.633" endtime="20211113 01:31:26.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:26.920" level="INFO"/>
<status status="PASS" starttime="20211113 01:31:26.919" endtime="20211113 01:31:26.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:26.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:26.921" endtime="20211113 01:31:26.921"/>
</kw>
<status status="PASS" starttime="20211113 01:31:17.630" endtime="20211113 01:31:26.922"/>
</kw>
<msg timestamp="20211113 01:31:26.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:17.629" endtime="20211113 01:31:26.922"/>
</kw>
<msg timestamp="20211113 01:31:26.923" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211113 01:31:17.628" endtime="20211113 01:31:26.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:31:26.923" endtime="20211113 01:31:26.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:26.930" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="33776-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:33.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:33.226" level="INFO">${output} = {
  "metadata": {},
  "name": "33776-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211113 01:31:26.927" endtime="20211113 01:31:33.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:33.227" level="INFO">{
  "metadata": {},
  "name": "33776-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:31:26.614Z",
  "modificationTime": "2021-11-13T01:31:26.614Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:31:33.226" endtime="20211113 01:31:33.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:33.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:33.228" endtime="20211113 01:31:33.228"/>
</kw>
<status status="PASS" starttime="20211113 01:31:26.927" endtime="20211113 01:31:33.229"/>
</kw>
<msg timestamp="20211113 01:31:33.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:26.926" endtime="20211113 01:31:33.229"/>
</kw>
<msg timestamp="20211113 01:31:33.230" level="INFO">${result} = {
  "metadata": {},
  "name": "33776-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211113 01:31:26.924" endtime="20211113 01:31:33.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:31:33.230" endtime="20211113 01:31:33.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:33.236" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="33776-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:41.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:41.235" level="INFO">${output} = {
  "metadata": {},
  "name": "33776-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211113 01:31:33.234" endtime="20211113 01:31:41.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:41.237" level="INFO">{
  "metadata": {},
  "name": "33776-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:31:26.614Z",
  "modificationTime": "2021-11-13T01:31:26.614Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:31:41.236" endtime="20211113 01:31:41.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:41.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:41.237" endtime="20211113 01:31:41.238"/>
</kw>
<status status="PASS" starttime="20211113 01:31:33.233" endtime="20211113 01:31:41.238"/>
</kw>
<msg timestamp="20211113 01:31:41.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:33.233" endtime="20211113 01:31:41.238"/>
</kw>
<msg timestamp="20211113 01:31:41.239" level="INFO">${result} = {
  "metadata": {},
  "name": "33776-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211113 01:31:33.232" endtime="20211113 01:31:41.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:31:41.239" endtime="20211113 01:31:41.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:41.244" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/33776-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:47.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:47.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:31:41.242" endtime="20211113 01:31:47.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:47.212" level="INFO"/>
<status status="PASS" starttime="20211113 01:31:47.210" endtime="20211113 01:31:47.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:47.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:47.213" endtime="20211113 01:31:47.214"/>
</kw>
<status status="PASS" starttime="20211113 01:31:41.241" endtime="20211113 01:31:47.215"/>
</kw>
<msg timestamp="20211113 01:31:47.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:41.240" endtime="20211113 01:31:47.215"/>
</kw>
<status status="PASS" starttime="20211113 01:31:41.240" endtime="20211113 01:31:47.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:47.224" level="INFO">Running command 'ozone sh volume info o3://om:9862/33776-rpcwoport | jq -r '. | select(.name=="33776-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:31:55.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:31:55.770" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:31:47.221" endtime="20211113 01:31:55.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:31:55.771" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:31:55.770" endtime="20211113 01:31:55.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:31:55.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:31:55.771" endtime="20211113 01:31:55.772"/>
</kw>
<status status="PASS" starttime="20211113 01:31:47.220" endtime="20211113 01:31:55.772"/>
</kw>
<msg timestamp="20211113 01:31:55.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:47.219" endtime="20211113 01:31:55.773"/>
</kw>
<msg timestamp="20211113 01:31:55.773" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:31:47.216" endtime="20211113 01:31:55.773"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:31:55.773" endtime="20211113 01:31:55.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:31:55.781" level="INFO">Running command 'ozone sh bucket create o3://om:9862/33776-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:04.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:04.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:31:55.778" endtime="20211113 01:32:04.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:04.468" level="INFO"/>
<status status="PASS" starttime="20211113 01:32:04.466" endtime="20211113 01:32:04.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:04.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:04.468" endtime="20211113 01:32:04.470"/>
</kw>
<status status="PASS" starttime="20211113 01:31:55.777" endtime="20211113 01:32:04.470"/>
</kw>
<msg timestamp="20211113 01:32:04.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:31:55.776" endtime="20211113 01:32:04.471"/>
</kw>
<status status="PASS" starttime="20211113 01:31:55.774" endtime="20211113 01:32:04.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:04.478" level="INFO">Running command 'ozone sh bucket info o3://om:9862/33776-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:12.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:12.993" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211113 01:32:04.475" endtime="20211113 01:32:12.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:12.995" level="INFO">DISK</msg>
<status status="PASS" starttime="20211113 01:32:12.993" endtime="20211113 01:32:12.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:12.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:12.996" endtime="20211113 01:32:12.999"/>
</kw>
<status status="PASS" starttime="20211113 01:32:04.473" endtime="20211113 01:32:12.999"/>
</kw>
<msg timestamp="20211113 01:32:13.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:04.473" endtime="20211113 01:32:13.000"/>
</kw>
<msg timestamp="20211113 01:32:13.000" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211113 01:32:04.472" endtime="20211113 01:32:13.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:32:13.000" endtime="20211113 01:32:13.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:13.006" level="INFO">Running command 'ozone sh bucket info o3://om:9862/33776-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:21.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:21.032" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:32:13.003" endtime="20211113 01:32:21.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:21.033" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:32:21.033" endtime="20211113 01:32:21.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:21.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:21.034" endtime="20211113 01:32:21.034"/>
</kw>
<status status="PASS" starttime="20211113 01:32:13.003" endtime="20211113 01:32:21.035"/>
</kw>
<msg timestamp="20211113 01:32:21.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:13.002" endtime="20211113 01:32:21.035"/>
</kw>
<msg timestamp="20211113 01:32:21.036" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:32:13.001" endtime="20211113 01:32:21.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:32:21.036" endtime="20211113 01:32:21.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:21.042" level="INFO">Running command 'ozone sh bucket info o3://om:9862/33776-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:29.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:29.389" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211113 01:32:21.039" endtime="20211113 01:32:29.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:29.390" level="INFO">100</msg>
<status status="PASS" starttime="20211113 01:32:29.389" endtime="20211113 01:32:29.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:29.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:29.390" endtime="20211113 01:32:29.391"/>
</kw>
<status status="PASS" starttime="20211113 01:32:21.039" endtime="20211113 01:32:29.394"/>
</kw>
<msg timestamp="20211113 01:32:29.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:21.038" endtime="20211113 01:32:29.394"/>
</kw>
<msg timestamp="20211113 01:32:29.395" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211113 01:32:21.037" endtime="20211113 01:32:29.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:32:29.395" endtime="20211113 01:32:29.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:29.400" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/33776-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:37.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:37.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:32:29.398" endtime="20211113 01:32:37.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:37.031" level="INFO"/>
<status status="PASS" starttime="20211113 01:32:37.030" endtime="20211113 01:32:37.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:37.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:37.031" endtime="20211113 01:32:37.032"/>
</kw>
<status status="PASS" starttime="20211113 01:32:29.397" endtime="20211113 01:32:37.032"/>
</kw>
<msg timestamp="20211113 01:32:37.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:29.397" endtime="20211113 01:32:37.032"/>
</kw>
<status status="PASS" starttime="20211113 01:32:29.396" endtime="20211113 01:32:37.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:37.037" level="INFO">Running command 'ozone sh bucket info o3://om:9862/33776-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:41.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:41.930" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:32:37.035" endtime="20211113 01:32:41.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:41.931" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211113 01:32:41.931" endtime="20211113 01:32:41.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:41.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:41.932" endtime="20211113 01:32:41.933"/>
</kw>
<status status="PASS" starttime="20211113 01:32:37.034" endtime="20211113 01:32:41.933"/>
</kw>
<msg timestamp="20211113 01:32:41.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:37.034" endtime="20211113 01:32:41.934"/>
</kw>
<msg timestamp="20211113 01:32:41.934" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:32:37.033" endtime="20211113 01:32:41.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:32:41.934" endtime="20211113 01:32:41.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:41.939" level="INFO">Running command 'ozone sh bucket info o3://om:9862/33776-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:48.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:48.834" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211113 01:32:41.937" endtime="20211113 01:32:48.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:48.835" level="INFO">1000</msg>
<status status="PASS" starttime="20211113 01:32:48.834" endtime="20211113 01:32:48.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:48.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:48.836" endtime="20211113 01:32:48.837"/>
</kw>
<status status="PASS" starttime="20211113 01:32:41.936" endtime="20211113 01:32:48.838"/>
</kw>
<msg timestamp="20211113 01:32:48.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:41.936" endtime="20211113 01:32:48.838"/>
</kw>
<msg timestamp="20211113 01:32:48.839" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211113 01:32:41.935" endtime="20211113 01:32:48.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:32:48.840" endtime="20211113 01:32:48.840"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:48.848" level="INFO">Running command 'ozone sh bucket list o3://om:9862/33776-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:32:56.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:32:56.051" level="INFO">${output} = 33776-rpcwoport</msg>
<status status="PASS" starttime="20211113 01:32:48.845" endtime="20211113 01:32:56.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:32:56.053" level="INFO">33776-rpcwoport</msg>
<status status="PASS" starttime="20211113 01:32:56.052" endtime="20211113 01:32:56.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:32:56.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:32:56.053" endtime="20211113 01:32:56.054"/>
</kw>
<status status="PASS" starttime="20211113 01:32:48.843" endtime="20211113 01:32:56.054"/>
</kw>
<msg timestamp="20211113 01:32:56.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:32:48.842" endtime="20211113 01:32:56.054"/>
</kw>
<msg timestamp="20211113 01:32:56.055" level="INFO">${result} = 33776-rpcwoport</msg>
<status status="PASS" starttime="20211113 01:32:48.840" endtime="20211113 01:32:56.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:32:56.055" endtime="20211113 01:32:56.055"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:32:56.062" level="INFO">Running command 'ozone sh key put o3://om:9862/33776-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:01.815" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:32:56.059" endtime="20211113 01:36:01.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.816" endtime="20211113 01:36:01.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.817" endtime="20211113 01:36:01.817"/>
</kw>
<status status="FAIL" starttime="20211113 01:32:56.059" endtime="20211113 01:36:01.817"/>
</kw>
<msg timestamp="20211113 01:36:01.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:32:56.057" endtime="20211113 01:36:01.818"/>
</kw>
<status status="FAIL" starttime="20211113 01:32:56.056" endtime="20211113 01:36:01.818"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.818" endtime="20211113 01:36:01.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.819" endtime="20211113 01:36:01.819"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.819" endtime="20211113 01:36:01.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.819" endtime="20211113 01:36:01.819"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.819" endtime="20211113 01:36:01.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.820" endtime="20211113 01:36:01.820"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.820" endtime="20211113 01:36:01.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.820" endtime="20211113 01:36:01.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.820" endtime="20211113 01:36:01.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.820" endtime="20211113 01:36:01.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.821" endtime="20211113 01:36:01.821"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.821" endtime="20211113 01:36:01.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.821" endtime="20211113 01:36:01.821"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.821" endtime="20211113 01:36:01.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.822" endtime="20211113 01:36:01.822"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.822" endtime="20211113 01:36:01.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.822" endtime="20211113 01:36:01.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.822" endtime="20211113 01:36:01.822"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.823" endtime="20211113 01:36:01.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.823" endtime="20211113 01:36:01.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.823" endtime="20211113 01:36:01.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.823" endtime="20211113 01:36:01.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.823" endtime="20211113 01:36:01.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.824" endtime="20211113 01:36:01.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.824" endtime="20211113 01:36:01.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.824" endtime="20211113 01:36:01.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.825" endtime="20211113 01:36:01.825"/>
</kw>
<status status="FAIL" starttime="20211113 01:32:56.056" endtime="20211113 01:36:01.825"/>
</kw>
<status status="FAIL" starttime="20211113 01:32:56.055" endtime="20211113 01:36:01.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.825" endtime="20211113 01:36:01.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.825" endtime="20211113 01:36:01.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.826" endtime="20211113 01:36:01.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.826" endtime="20211113 01:36:01.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.826" endtime="20211113 01:36:01.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.827" endtime="20211113 01:36:01.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.827" endtime="20211113 01:36:01.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.828" endtime="20211113 01:36:01.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.828" endtime="20211113 01:36:01.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.829" endtime="20211113 01:36:01.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.829" endtime="20211113 01:36:01.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.830" endtime="20211113 01:36:01.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.830" endtime="20211113 01:36:01.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.830" endtime="20211113 01:36:01.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.831" endtime="20211113 01:36:01.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.831" endtime="20211113 01:36:01.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.831" endtime="20211113 01:36:01.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.832" endtime="20211113 01:36:01.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.833" endtime="20211113 01:36:01.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.833" endtime="20211113 01:36:01.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.834" endtime="20211113 01:36:01.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.834" endtime="20211113 01:36:01.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.834" endtime="20211113 01:36:01.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:36:01.835" endtime="20211113 01:36:01.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.835" endtime="20211113 01:36:01.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:36:01.835" endtime="20211113 01:36:01.835"/>
</kw>
<status status="FAIL" starttime="20211113 01:31:01.923" endtime="20211113 01:36:01.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211113 01:31:01.814" endtime="20211113 01:36:01.836">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:01.859" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:01.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:01.864" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:36:01.843" endtime="20211113 01:36:01.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:01.865" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:36:01.864" endtime="20211113 01:36:01.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:01.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:01.866" endtime="20211113 01:36:01.867"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.842" endtime="20211113 01:36:01.867"/>
</kw>
<msg timestamp="20211113 01:36:01.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:01.841" endtime="20211113 01:36:01.867"/>
</kw>
<msg timestamp="20211113 01:36:01.868" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:36:01.841" endtime="20211113 01:36:01.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:36:01.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:36:01.868" endtime="20211113 01:36:01.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:01.873" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:01.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:01.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:36:01.871" endtime="20211113 01:36:01.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:01.890" level="INFO"/>
<status status="PASS" starttime="20211113 01:36:01.889" endtime="20211113 01:36:01.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:01.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:01.890" endtime="20211113 01:36:01.891"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.871" endtime="20211113 01:36:01.891"/>
</kw>
<msg timestamp="20211113 01:36:01.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:01.870" endtime="20211113 01:36:01.895"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.869" endtime="20211113 01:36:01.895"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.869" endtime="20211113 01:36:01.895"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.840" endtime="20211113 01:36:01.896"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.839" endtime="20211113 01:36:01.896"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:01.901" level="INFO">Running command 'ozone sh volume create o3://om:9862/33776-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:10.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:10.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:36:01.899" endtime="20211113 01:36:10.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:10.283" level="INFO"/>
<status status="PASS" starttime="20211113 01:36:10.282" endtime="20211113 01:36:10.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:10.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:10.283" endtime="20211113 01:36:10.284"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.898" endtime="20211113 01:36:10.284"/>
</kw>
<msg timestamp="20211113 01:36:10.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:01.897" endtime="20211113 01:36:10.284"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.897" endtime="20211113 01:36:10.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:10.291" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/33776-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:16.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:16.459" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:36:10.286" endtime="20211113 01:36:16.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:16.461" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:36:16.460" endtime="20211113 01:36:16.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:16.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:16.461" endtime="20211113 01:36:16.462"/>
</kw>
<status status="PASS" starttime="20211113 01:36:10.286" endtime="20211113 01:36:16.462"/>
</kw>
<msg timestamp="20211113 01:36:16.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:10.286" endtime="20211113 01:36:16.463"/>
</kw>
<msg timestamp="20211113 01:36:16.464" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:36:10.285" endtime="20211113 01:36:16.464"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:36:16.465" endtime="20211113 01:36:16.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:16.474" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/33776-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:24.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:24.304" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211113 01:36:16.471" endtime="20211113 01:36:24.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:24.307" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211113 01:36:24.306" endtime="20211113 01:36:24.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:24.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:24.308" endtime="20211113 01:36:24.309"/>
</kw>
<status status="PASS" starttime="20211113 01:36:16.470" endtime="20211113 01:36:24.310"/>
</kw>
<msg timestamp="20211113 01:36:24.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:16.469" endtime="20211113 01:36:24.310"/>
</kw>
<msg timestamp="20211113 01:36:24.311" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211113 01:36:16.467" endtime="20211113 01:36:24.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:24.317" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/33776-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:33.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:33.115" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211113 01:36:24.314" endtime="20211113 01:36:33.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:33.118" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:36:33.116" endtime="20211113 01:36:33.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:33.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:33.118" endtime="20211113 01:36:33.120"/>
</kw>
<status status="PASS" starttime="20211113 01:36:24.313" endtime="20211113 01:36:33.120"/>
</kw>
<msg timestamp="20211113 01:36:33.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:24.313" endtime="20211113 01:36:33.121"/>
</kw>
<msg timestamp="20211113 01:36:33.121" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211113 01:36:24.311" endtime="20211113 01:36:33.121"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:36:33.122" endtime="20211113 01:36:33.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:33.130" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/33776-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:40.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:40.618" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:36:33.127" endtime="20211113 01:36:40.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:40.619" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:36:40.618" endtime="20211113 01:36:40.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:40.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:40.619" endtime="20211113 01:36:40.620"/>
</kw>
<status status="PASS" starttime="20211113 01:36:33.126" endtime="20211113 01:36:40.620"/>
</kw>
<msg timestamp="20211113 01:36:40.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:33.125" endtime="20211113 01:36:40.621"/>
</kw>
<msg timestamp="20211113 01:36:40.622" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:36:33.124" endtime="20211113 01:36:40.622"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:40.629" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/33776-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:48.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:48.899" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211113 01:36:40.626" endtime="20211113 01:36:48.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:48.901" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:36:48.900" endtime="20211113 01:36:48.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:48.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:48.902" endtime="20211113 01:36:48.904"/>
</kw>
<status status="PASS" starttime="20211113 01:36:40.625" endtime="20211113 01:36:48.904"/>
</kw>
<msg timestamp="20211113 01:36:48.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:40.624" endtime="20211113 01:36:48.905"/>
</kw>
<msg timestamp="20211113 01:36:48.905" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211113 01:36:40.622" endtime="20211113 01:36:48.905"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:36:48.905" endtime="20211113 01:36:48.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:48.914" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/33776-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:36:55.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:36:55.150" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:36:48.911" endtime="20211113 01:36:55.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:36:55.151" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:36:55.150" endtime="20211113 01:36:55.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:36:55.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:36:55.151" endtime="20211113 01:36:55.152"/>
</kw>
<status status="PASS" starttime="20211113 01:36:48.910" endtime="20211113 01:36:55.152"/>
</kw>
<msg timestamp="20211113 01:36:55.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:48.909" endtime="20211113 01:36:55.153"/>
</kw>
<msg timestamp="20211113 01:36:55.153" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:36:48.908" endtime="20211113 01:36:55.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:36:55.157" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/33776-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:00.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:00.853" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211113 01:36:55.155" endtime="20211113 01:37:00.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:00.856" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:37:00.854" endtime="20211113 01:37:00.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:00.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:00.856" endtime="20211113 01:37:00.858"/>
</kw>
<status status="PASS" starttime="20211113 01:36:55.154" endtime="20211113 01:37:00.859"/>
</kw>
<msg timestamp="20211113 01:37:00.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:36:55.154" endtime="20211113 01:37:00.859"/>
</kw>
<msg timestamp="20211113 01:37:00.860" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211113 01:36:55.153" endtime="20211113 01:37:00.860"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:00.860" endtime="20211113 01:37:00.862"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:00.862" endtime="20211113 01:37:00.864"/>
</kw>
<status status="PASS" starttime="20211113 01:36:01.896" endtime="20211113 01:37:00.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:36:01.837" endtime="20211113 01:37:00.865"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:00.878" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:00.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:00.883" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:37:00.874" endtime="20211113 01:37:00.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:00.886" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:37:00.884" endtime="20211113 01:37:00.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:00.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:00.886" endtime="20211113 01:37:00.887"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.873" endtime="20211113 01:37:00.888"/>
</kw>
<msg timestamp="20211113 01:37:00.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:00.872" endtime="20211113 01:37:00.888"/>
</kw>
<msg timestamp="20211113 01:37:00.889" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:37:00.872" endtime="20211113 01:37:00.889"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:37:00.891" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:37:00.889" endtime="20211113 01:37:00.891"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:00.899" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:00.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:00.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:37:00.896" endtime="20211113 01:37:00.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:00.935" level="INFO"/>
<status status="PASS" starttime="20211113 01:37:00.934" endtime="20211113 01:37:00.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:00.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:00.935" endtime="20211113 01:37:00.936"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.894" endtime="20211113 01:37:00.936"/>
</kw>
<msg timestamp="20211113 01:37:00.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:00.894" endtime="20211113 01:37:00.936"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.892" endtime="20211113 01:37:00.937"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.891" endtime="20211113 01:37:00.937"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.870" endtime="20211113 01:37:00.937"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.869" endtime="20211113 01:37:00.937"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:00.942" level="INFO">Running command 'ozone sh bucket create o3://om:9862/33776-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:06.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:06.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:37:00.940" endtime="20211113 01:37:06.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:06.974" level="INFO"/>
<status status="PASS" starttime="20211113 01:37:06.973" endtime="20211113 01:37:06.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:06.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:06.975" endtime="20211113 01:37:06.976"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.939" endtime="20211113 01:37:06.977"/>
</kw>
<msg timestamp="20211113 01:37:06.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:00.939" endtime="20211113 01:37:06.978"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.938" endtime="20211113 01:37:06.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:06.986" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/33776-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:14.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:14.539" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:37:06.983" endtime="20211113 01:37:14.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:14.540" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:37:14.539" endtime="20211113 01:37:14.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:14.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:14.540" endtime="20211113 01:37:14.541"/>
</kw>
<status status="PASS" starttime="20211113 01:37:06.981" endtime="20211113 01:37:14.542"/>
</kw>
<msg timestamp="20211113 01:37:14.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:06.980" endtime="20211113 01:37:14.542"/>
</kw>
<msg timestamp="20211113 01:37:14.542" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:37:06.979" endtime="20211113 01:37:14.542"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:14.542" endtime="20211113 01:37:14.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:14.547" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/33776-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:20.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:20.149" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211113 01:37:14.545" endtime="20211113 01:37:20.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:20.151" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211113 01:37:20.150" endtime="20211113 01:37:20.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:20.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:20.151" endtime="20211113 01:37:20.152"/>
</kw>
<status status="PASS" starttime="20211113 01:37:14.544" endtime="20211113 01:37:20.152"/>
</kw>
<msg timestamp="20211113 01:37:20.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:14.544" endtime="20211113 01:37:20.152"/>
</kw>
<msg timestamp="20211113 01:37:20.152" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211113 01:37:14.543" endtime="20211113 01:37:20.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:20.159" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/33776-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:28.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:28.272" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:37:20.156" endtime="20211113 01:37:28.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:28.273" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:37:28.273" endtime="20211113 01:37:28.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:28.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:28.274" endtime="20211113 01:37:28.274"/>
</kw>
<status status="PASS" starttime="20211113 01:37:20.155" endtime="20211113 01:37:28.275"/>
</kw>
<msg timestamp="20211113 01:37:28.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:20.154" endtime="20211113 01:37:28.275"/>
</kw>
<msg timestamp="20211113 01:37:28.275" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:37:20.153" endtime="20211113 01:37:28.275"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:28.275" endtime="20211113 01:37:28.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:28.283" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/33776-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:35.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:35.554" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:37:28.280" endtime="20211113 01:37:35.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:35.556" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:37:35.555" endtime="20211113 01:37:35.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:35.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:35.557" endtime="20211113 01:37:35.558"/>
</kw>
<status status="PASS" starttime="20211113 01:37:28.279" endtime="20211113 01:37:35.560"/>
</kw>
<msg timestamp="20211113 01:37:35.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:28.278" endtime="20211113 01:37:35.560"/>
</kw>
<msg timestamp="20211113 01:37:35.563" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:37:28.277" endtime="20211113 01:37:35.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:35.569" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/33776-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:41.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:41.676" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:37:35.566" endtime="20211113 01:37:41.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:41.678" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:37:41.677" endtime="20211113 01:37:41.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:41.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:41.679" endtime="20211113 01:37:41.680"/>
</kw>
<status status="PASS" starttime="20211113 01:37:35.565" endtime="20211113 01:37:41.680"/>
</kw>
<msg timestamp="20211113 01:37:41.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:35.565" endtime="20211113 01:37:41.681"/>
</kw>
<msg timestamp="20211113 01:37:41.681" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:37:35.563" endtime="20211113 01:37:41.681"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:41.682" endtime="20211113 01:37:41.683"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:41.690" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/33776-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:49.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:49.165" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:37:41.686" endtime="20211113 01:37:49.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:49.167" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:37:49.166" endtime="20211113 01:37:49.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:49.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:49.168" endtime="20211113 01:37:49.169"/>
</kw>
<status status="PASS" starttime="20211113 01:37:41.685" endtime="20211113 01:37:49.170"/>
</kw>
<msg timestamp="20211113 01:37:49.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:41.684" endtime="20211113 01:37:49.170"/>
</kw>
<msg timestamp="20211113 01:37:49.171" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:37:41.683" endtime="20211113 01:37:49.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:49.179" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/33776-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:55.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:55.544" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211113 01:37:49.176" endtime="20211113 01:37:55.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:55.545" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:37:55.544" endtime="20211113 01:37:55.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:55.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:55.545" endtime="20211113 01:37:55.547"/>
</kw>
<status status="PASS" starttime="20211113 01:37:49.175" endtime="20211113 01:37:55.547"/>
</kw>
<msg timestamp="20211113 01:37:55.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:49.174" endtime="20211113 01:37:55.548"/>
</kw>
<msg timestamp="20211113 01:37:55.549" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211113 01:37:49.172" endtime="20211113 01:37:55.549"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:55.549" endtime="20211113 01:37:55.550"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:37:55.550" endtime="20211113 01:37:55.551"/>
</kw>
<status status="PASS" starttime="20211113 01:37:00.937" endtime="20211113 01:37:55.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:37:00.868" endtime="20211113 01:37:55.553"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:55.565" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:55.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:55.570" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:37:55.561" endtime="20211113 01:37:55.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:55.573" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:37:55.571" endtime="20211113 01:37:55.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:55.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:55.573" endtime="20211113 01:37:55.575"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.560" endtime="20211113 01:37:55.576"/>
</kw>
<msg timestamp="20211113 01:37:55.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:55.559" endtime="20211113 01:37:55.577"/>
</kw>
<msg timestamp="20211113 01:37:55.577" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:37:55.558" endtime="20211113 01:37:55.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:37:55.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:37:55.577" endtime="20211113 01:37:55.579"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:55.583" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:37:55.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:37:55.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:37:55.581" endtime="20211113 01:37:55.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:37:55.598" level="INFO"/>
<status status="PASS" starttime="20211113 01:37:55.596" endtime="20211113 01:37:55.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:37:55.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:37:55.599" endtime="20211113 01:37:55.599"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.580" endtime="20211113 01:37:55.600"/>
</kw>
<msg timestamp="20211113 01:37:55.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:55.580" endtime="20211113 01:37:55.600"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.579" endtime="20211113 01:37:55.600"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.579" endtime="20211113 01:37:55.601"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.557" endtime="20211113 01:37:55.601"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.556" endtime="20211113 01:37:55.601"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:37:55.608" level="INFO">Running command 'ozone sh key put o3://om:9862/33776-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:08.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:08.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:37:55.606" endtime="20211113 01:41:08.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:08.708" level="INFO"/>
<status status="PASS" starttime="20211113 01:41:08.707" endtime="20211113 01:41:08.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:08.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:08.709" endtime="20211113 01:41:08.710"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.603" endtime="20211113 01:41:08.711"/>
</kw>
<msg timestamp="20211113 01:41:08.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:37:55.603" endtime="20211113 01:41:08.711"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.602" endtime="20211113 01:41:08.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:08.719" level="INFO">Running command 'ozone sh key getacl o3://om:9862/33776-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:17.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:17.523" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211113 01:41:08.716" endtime="20211113 01:41:17.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:17.526" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:41:17.525" endtime="20211113 01:41:17.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:17.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:17.527" endtime="20211113 01:41:17.528"/>
</kw>
<status status="PASS" starttime="20211113 01:41:08.715" endtime="20211113 01:41:17.529"/>
</kw>
<msg timestamp="20211113 01:41:17.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:08.714" endtime="20211113 01:41:17.530"/>
</kw>
<msg timestamp="20211113 01:41:17.530" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211113 01:41:08.712" endtime="20211113 01:41:17.530"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:41:17.531" endtime="20211113 01:41:17.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:17.540" level="INFO">Running command 'ozone sh key addacl o3://om:9862/33776-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:24.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:24.704" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:41:17.538" endtime="20211113 01:41:24.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:24.706" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:41:24.705" endtime="20211113 01:41:24.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:24.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:24.707" endtime="20211113 01:41:24.708"/>
</kw>
<status status="PASS" starttime="20211113 01:41:17.535" endtime="20211113 01:41:24.708"/>
</kw>
<msg timestamp="20211113 01:41:24.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:17.534" endtime="20211113 01:41:24.709"/>
</kw>
<msg timestamp="20211113 01:41:24.710" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211113 01:41:17.532" endtime="20211113 01:41:24.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:24.717" level="INFO">Running command 'ozone sh key getacl o3://om:9862/33776-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:32.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:32.146" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211113 01:41:24.713" endtime="20211113 01:41:32.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:32.148" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:41:32.147" endtime="20211113 01:41:32.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:32.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:32.149" endtime="20211113 01:41:32.151"/>
</kw>
<status status="PASS" starttime="20211113 01:41:24.712" endtime="20211113 01:41:32.151"/>
</kw>
<msg timestamp="20211113 01:41:32.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:24.711" endtime="20211113 01:41:32.152"/>
</kw>
<msg timestamp="20211113 01:41:32.152" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211113 01:41:24.710" endtime="20211113 01:41:32.152"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:41:32.153" endtime="20211113 01:41:32.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:32.159" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/33776-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:39.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:39.106" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:41:32.156" endtime="20211113 01:41:39.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:39.107" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:41:39.106" endtime="20211113 01:41:39.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:39.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:39.107" endtime="20211113 01:41:39.108"/>
</kw>
<status status="PASS" starttime="20211113 01:41:32.156" endtime="20211113 01:41:39.109"/>
</kw>
<msg timestamp="20211113 01:41:39.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:32.155" endtime="20211113 01:41:39.109"/>
</kw>
<msg timestamp="20211113 01:41:39.109" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211113 01:41:32.154" endtime="20211113 01:41:39.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:39.113" level="INFO">Running command 'ozone sh key getacl o3://om:9862/33776-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:45.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:45.298" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211113 01:41:39.111" endtime="20211113 01:41:45.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:45.300" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:41:45.299" endtime="20211113 01:41:45.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:45.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:45.300" endtime="20211113 01:41:45.300"/>
</kw>
<status status="PASS" starttime="20211113 01:41:39.111" endtime="20211113 01:41:45.301"/>
</kw>
<msg timestamp="20211113 01:41:45.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:39.110" endtime="20211113 01:41:45.301"/>
</kw>
<msg timestamp="20211113 01:41:45.302" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211113 01:41:39.109" endtime="20211113 01:41:45.302"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:41:45.302" endtime="20211113 01:41:45.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:45.309" level="INFO">Running command 'ozone sh key setacl o3://om:9862/33776-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:52.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:52.415" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:41:45.304" endtime="20211113 01:41:52.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:52.417" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:41:52.416" endtime="20211113 01:41:52.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:52.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:52.417" endtime="20211113 01:41:52.418"/>
</kw>
<status status="PASS" starttime="20211113 01:41:45.304" endtime="20211113 01:41:52.419"/>
</kw>
<msg timestamp="20211113 01:41:52.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:45.303" endtime="20211113 01:41:52.420"/>
</kw>
<msg timestamp="20211113 01:41:52.421" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:41:45.302" endtime="20211113 01:41:52.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:52.431" level="INFO">Running command 'ozone sh key getacl o3://om:9862/33776-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:58.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:58.494" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211113 01:41:52.426" endtime="20211113 01:41:58.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:58.496" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:41:58.495" endtime="20211113 01:41:58.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:58.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:58.497" endtime="20211113 01:41:58.497"/>
</kw>
<status status="PASS" starttime="20211113 01:41:52.424" endtime="20211113 01:41:58.498"/>
</kw>
<msg timestamp="20211113 01:41:58.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:52.424" endtime="20211113 01:41:58.498"/>
</kw>
<msg timestamp="20211113 01:41:58.498" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211113 01:41:52.422" endtime="20211113 01:41:58.498"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:41:58.499" endtime="20211113 01:41:58.499"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:41:58.499" endtime="20211113 01:41:58.500"/>
</kw>
<status status="PASS" starttime="20211113 01:37:55.601" endtime="20211113 01:41:58.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:37:55.554" endtime="20211113 01:41:58.501"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:58.508" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:58.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:58.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:41:58.506" endtime="20211113 01:41:58.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:58.513" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:41:58.512" endtime="20211113 01:41:58.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:58.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:58.513" endtime="20211113 01:41:58.514"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.505" endtime="20211113 01:41:58.514"/>
</kw>
<msg timestamp="20211113 01:41:58.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:58.505" endtime="20211113 01:41:58.515"/>
</kw>
<msg timestamp="20211113 01:41:58.515" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:41:58.504" endtime="20211113 01:41:58.515"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:41:58.516" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:41:58.515" endtime="20211113 01:41:58.516"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:58.520" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:41:58.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:41:58.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:41:58.518" endtime="20211113 01:41:58.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:41:58.541" level="INFO"/>
<status status="PASS" starttime="20211113 01:41:58.540" endtime="20211113 01:41:58.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:41:58.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:41:58.541" endtime="20211113 01:41:58.542"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.518" endtime="20211113 01:41:58.542"/>
</kw>
<msg timestamp="20211113 01:41:58.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:58.517" endtime="20211113 01:41:58.543"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.517" endtime="20211113 01:41:58.543"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.516" endtime="20211113 01:41:58.543"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.504" endtime="20211113 01:41:58.543"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.503" endtime="20211113 01:41:58.543"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:41:58.548" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:42:04.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:42:04.415" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211113 01:41:58.546" endtime="20211113 01:42:04.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:42:04.417" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211113 01:42:04.416" endtime="20211113 01:42:04.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:42:04.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:42:04.417" endtime="20211113 01:42:04.422"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.545" endtime="20211113 01:42:04.424"/>
</kw>
<msg timestamp="20211113 01:42:04.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:41:58.545" endtime="20211113 01:42:04.425"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.544" endtime="20211113 01:42:04.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:42:04.437" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:42:13.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:42:13.051" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211113 01:42:04.432" endtime="20211113 01:42:13.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:42:13.053" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:42:13.052" endtime="20211113 01:42:13.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:42:13.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:42:13.053" endtime="20211113 01:42:13.054"/>
</kw>
<status status="PASS" starttime="20211113 01:42:04.431" endtime="20211113 01:42:13.054"/>
</kw>
<msg timestamp="20211113 01:42:13.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:42:04.430" endtime="20211113 01:42:13.054"/>
</kw>
<msg timestamp="20211113 01:42:13.056" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211113 01:42:04.427" endtime="20211113 01:42:13.057"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:42:13.057" endtime="20211113 01:42:13.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:42:13.062" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:42:18.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:42:18.586" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211113 01:42:13.060" endtime="20211113 01:42:18.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:42:18.588" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211113 01:42:18.587" endtime="20211113 01:42:18.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:42:18.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:42:18.589" endtime="20211113 01:42:18.590"/>
</kw>
<status status="PASS" starttime="20211113 01:42:13.059" endtime="20211113 01:42:18.591"/>
</kw>
<msg timestamp="20211113 01:42:18.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:42:13.059" endtime="20211113 01:42:18.591"/>
</kw>
<msg timestamp="20211113 01:42:18.592" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211113 01:42:13.058" endtime="20211113 01:42:18.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:42:18.598" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:42:26.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:42:26.571" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211113 01:42:18.595" endtime="20211113 01:42:26.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:42:26.572" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:42:26.571" endtime="20211113 01:42:26.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:42:26.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:42:26.572" endtime="20211113 01:42:26.573"/>
</kw>
<status status="PASS" starttime="20211113 01:42:18.594" endtime="20211113 01:42:26.573"/>
</kw>
<msg timestamp="20211113 01:42:26.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:42:18.593" endtime="20211113 01:42:26.574"/>
</kw>
<msg timestamp="20211113 01:42:26.574" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211113 01:42:18.592" endtime="20211113 01:42:26.574"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:42:26.574" endtime="20211113 01:42:26.576"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:42:26.582" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:42:33.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:42:33.683" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:42:26.579" endtime="20211113 01:42:33.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:42:33.687" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:42:33.684" endtime="20211113 01:42:33.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:42:33.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:42:33.688" endtime="20211113 01:42:33.689"/>
</kw>
<status status="PASS" starttime="20211113 01:42:26.578" endtime="20211113 01:42:33.690"/>
</kw>
<msg timestamp="20211113 01:42:33.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:42:26.577" endtime="20211113 01:42:33.691"/>
</kw>
<msg timestamp="20211113 01:42:33.691" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211113 01:42:26.576" endtime="20211113 01:42:33.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:42:33.698" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:42:41.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:42:41.977" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211113 01:42:33.695" endtime="20211113 01:42:41.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:42:41.978" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:42:41.977" endtime="20211113 01:42:41.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:42:41.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:42:41.978" endtime="20211113 01:42:41.979"/>
</kw>
<status status="PASS" starttime="20211113 01:42:33.694" endtime="20211113 01:42:41.979"/>
</kw>
<msg timestamp="20211113 01:42:41.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:42:33.693" endtime="20211113 01:42:41.980"/>
</kw>
<msg timestamp="20211113 01:42:41.980" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211113 01:42:33.692" endtime="20211113 01:42:41.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:42:41.980" endtime="20211113 01:42:41.981"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:42:41.981" endtime="20211113 01:42:41.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:42:41.988" level="INFO">Running command 'ozone sh key put o3://om:9862/33776-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:45:51.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:45:51.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:42:41.984" endtime="20211113 01:45:51.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:45:51.727" level="INFO"/>
<status status="PASS" starttime="20211113 01:45:51.725" endtime="20211113 01:45:51.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:45:51.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:45:51.728" endtime="20211113 01:45:51.729"/>
</kw>
<status status="PASS" starttime="20211113 01:42:41.983" endtime="20211113 01:45:51.730"/>
</kw>
<msg timestamp="20211113 01:45:51.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:42:41.983" endtime="20211113 01:45:51.730"/>
</kw>
<status status="PASS" starttime="20211113 01:42:41.982" endtime="20211113 01:45:51.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:45:51.737" level="INFO">Running command 'ozone sh key getacl o3://om:9862/33776-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:45:59.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:45:59.887" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:45:51.735" endtime="20211113 01:45:59.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:45:59.889" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211113 01:45:59.887" endtime="20211113 01:45:59.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:45:59.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:45:59.889" endtime="20211113 01:45:59.891"/>
</kw>
<status status="PASS" starttime="20211113 01:45:51.733" endtime="20211113 01:45:59.892"/>
</kw>
<msg timestamp="20211113 01:45:59.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:45:51.733" endtime="20211113 01:45:59.892"/>
</kw>
<msg timestamp="20211113 01:45:59.893" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211113 01:45:51.731" endtime="20211113 01:45:59.894"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:45:59.894" endtime="20211113 01:45:59.896"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211113 01:45:59.896" endtime="20211113 01:45:59.897"/>
</kw>
<status status="PASS" starttime="20211113 01:41:58.543" endtime="20211113 01:45:59.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211113 01:41:58.502" endtime="20211113 01:45:59.898"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:45:59.912" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:45:59.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:45:59.918" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:45:59.907" endtime="20211113 01:45:59.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:45:59.919" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:45:59.919" endtime="20211113 01:45:59.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:45:59.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:45:59.920" endtime="20211113 01:45:59.921"/>
</kw>
<status status="PASS" starttime="20211113 01:45:59.906" endtime="20211113 01:45:59.922"/>
</kw>
<msg timestamp="20211113 01:45:59.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:45:59.905" endtime="20211113 01:45:59.922"/>
</kw>
<msg timestamp="20211113 01:45:59.923" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:45:59.903" endtime="20211113 01:45:59.923"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:45:59.925" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:45:59.924" endtime="20211113 01:45:59.925"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:45:59.934" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:45:59.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:45:59.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:45:59.930" endtime="20211113 01:45:59.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:45:59.958" level="INFO"/>
<status status="PASS" starttime="20211113 01:45:59.957" endtime="20211113 01:45:59.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:45:59.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:45:59.958" endtime="20211113 01:45:59.958"/>
</kw>
<status status="PASS" starttime="20211113 01:45:59.929" endtime="20211113 01:45:59.959"/>
</kw>
<msg timestamp="20211113 01:45:59.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:45:59.928" endtime="20211113 01:45:59.959"/>
</kw>
<status status="PASS" starttime="20211113 01:45:59.927" endtime="20211113 01:45:59.959"/>
</kw>
<status status="PASS" starttime="20211113 01:45:59.926" endtime="20211113 01:45:59.960"/>
</kw>
<status status="PASS" starttime="20211113 01:45:59.902" endtime="20211113 01:45:59.960"/>
</kw>
<status status="PASS" starttime="20211113 01:45:59.901" endtime="20211113 01:45:59.960"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:45:59.965" level="INFO">Running command 'ozone sh volume info o3:///33776-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:07.630" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:46:07.631" level="INFO">${output} = VOLUME_NOT_FOUND Volume 33776-rpcwport is not found</msg>
<status status="PASS" starttime="20211113 01:45:59.962" endtime="20211113 01:46:07.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:07.632" level="INFO">VOLUME_NOT_FOUND Volume 33776-rpcwport is not found</msg>
<status status="PASS" starttime="20211113 01:46:07.631" endtime="20211113 01:46:07.632"/>
</kw>
<msg timestamp="20211113 01:46:07.632" level="INFO">${result} = VOLUME_NOT_FOUND Volume 33776-rpcwport is not found</msg>
<status status="PASS" starttime="20211113 01:45:59.962" endtime="20211113 01:46:07.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:46:07.633" endtime="20211113 01:46:07.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:07.638" level="INFO">Running command 'ozone sh volume create o3:///33776-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:13.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:13.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:46:07.635" endtime="20211113 01:46:13.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:13.756" level="INFO"/>
<status status="PASS" starttime="20211113 01:46:13.754" endtime="20211113 01:46:13.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:13.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:13.757" endtime="20211113 01:46:13.759"/>
</kw>
<status status="PASS" starttime="20211113 01:46:07.635" endtime="20211113 01:46:13.760"/>
</kw>
<msg timestamp="20211113 01:46:13.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:07.634" endtime="20211113 01:46:13.760"/>
</kw>
<msg timestamp="20211113 01:46:13.761" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211113 01:46:07.633" endtime="20211113 01:46:13.761"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:46:13.761" endtime="20211113 01:46:13.762"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:13.775" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="33776-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:19.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:19.815" level="INFO">${output} = {
  "metadata": {},
  "name": "33776-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:46:13.766" endtime="20211113 01:46:19.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:19.816" level="INFO">{
  "metadata": {},
  "name": "33776-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:46:13.424Z",
  "modificationTime": "2021-11-13T01:46:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:46:19.815" endtime="20211113 01:46:19.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:19.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:19.817" endtime="20211113 01:46:19.818"/>
</kw>
<status status="PASS" starttime="20211113 01:46:13.765" endtime="20211113 01:46:19.818"/>
</kw>
<msg timestamp="20211113 01:46:19.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:13.765" endtime="20211113 01:46:19.819"/>
</kw>
<msg timestamp="20211113 01:46:19.819" level="INFO">${result} = {
  "metadata": {},
  "name": "33776-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:46:13.763" endtime="20211113 01:46:19.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:46:19.820" endtime="20211113 01:46:19.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:19.827" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="33776-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:28.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:28.363" level="INFO">${output} = {
  "metadata": {},
  "name": "33776-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:46:19.823" endtime="20211113 01:46:28.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:28.365" level="INFO">{
  "metadata": {},
  "name": "33776-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:46:13.424Z",
  "modificationTime": "2021-11-13T01:46:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:46:28.364" endtime="20211113 01:46:28.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:28.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:28.366" endtime="20211113 01:46:28.367"/>
</kw>
<status status="PASS" starttime="20211113 01:46:19.823" endtime="20211113 01:46:28.367"/>
</kw>
<msg timestamp="20211113 01:46:28.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:19.822" endtime="20211113 01:46:28.368"/>
</kw>
<msg timestamp="20211113 01:46:28.368" level="INFO">${result} = {
  "metadata": {},
  "name": "33776-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211113 01:46:19.821" endtime="20211113 01:46:28.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:46:28.368" endtime="20211113 01:46:28.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:28.376" level="INFO">Running command 'ozone sh volume setquota o3:///33776-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:36.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:36.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:46:28.373" endtime="20211113 01:46:36.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:36.474" level="INFO"/>
<status status="PASS" starttime="20211113 01:46:36.473" endtime="20211113 01:46:36.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:36.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:36.475" endtime="20211113 01:46:36.475"/>
</kw>
<status status="PASS" starttime="20211113 01:46:28.371" endtime="20211113 01:46:36.475"/>
</kw>
<msg timestamp="20211113 01:46:36.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:28.371" endtime="20211113 01:46:36.476"/>
</kw>
<status status="PASS" starttime="20211113 01:46:28.369" endtime="20211113 01:46:36.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:36.481" level="INFO">Running command 'ozone sh volume info o3:///33776-rpcwport | jq -r '. | select(.name=="33776-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:44.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:44.153" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:46:36.478" endtime="20211113 01:46:44.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:44.155" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:46:44.154" endtime="20211113 01:46:44.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:44.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:44.155" endtime="20211113 01:46:44.156"/>
</kw>
<status status="PASS" starttime="20211113 01:46:36.478" endtime="20211113 01:46:44.156"/>
</kw>
<msg timestamp="20211113 01:46:44.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:36.478" endtime="20211113 01:46:44.156"/>
</kw>
<msg timestamp="20211113 01:46:44.157" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:46:36.476" endtime="20211113 01:46:44.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:46:44.157" endtime="20211113 01:46:44.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:44.162" level="INFO">Running command 'ozone sh bucket create o3:///33776-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:52.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:52.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:46:44.160" endtime="20211113 01:46:52.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:52.149" level="INFO"/>
<status status="PASS" starttime="20211113 01:46:52.148" endtime="20211113 01:46:52.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:52.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:52.149" endtime="20211113 01:46:52.150"/>
</kw>
<status status="PASS" starttime="20211113 01:46:44.159" endtime="20211113 01:46:52.150"/>
</kw>
<msg timestamp="20211113 01:46:52.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:44.159" endtime="20211113 01:46:52.150"/>
</kw>
<status status="PASS" starttime="20211113 01:46:44.158" endtime="20211113 01:46:52.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:52.157" level="INFO">Running command 'ozone sh bucket info o3:///33776-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:46:59.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:46:59.628" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211113 01:46:52.154" endtime="20211113 01:46:59.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:46:59.631" level="INFO">DISK</msg>
<status status="PASS" starttime="20211113 01:46:59.629" endtime="20211113 01:46:59.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:46:59.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:46:59.631" endtime="20211113 01:46:59.632"/>
</kw>
<status status="PASS" starttime="20211113 01:46:52.153" endtime="20211113 01:46:59.632"/>
</kw>
<msg timestamp="20211113 01:46:59.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:52.152" endtime="20211113 01:46:59.632"/>
</kw>
<msg timestamp="20211113 01:46:59.633" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211113 01:46:52.151" endtime="20211113 01:46:59.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:46:59.633" endtime="20211113 01:46:59.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:46:59.655" level="INFO">Running command 'ozone sh bucket info o3:///33776-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:47:08.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:47:08.248" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:46:59.638" endtime="20211113 01:47:08.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:47:08.250" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:47:08.249" endtime="20211113 01:47:08.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:47:08.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:47:08.251" endtime="20211113 01:47:08.252"/>
</kw>
<status status="PASS" starttime="20211113 01:46:59.637" endtime="20211113 01:47:08.252"/>
</kw>
<msg timestamp="20211113 01:47:08.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:46:59.635" endtime="20211113 01:47:08.253"/>
</kw>
<msg timestamp="20211113 01:47:08.253" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:46:59.634" endtime="20211113 01:47:08.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:47:08.254" endtime="20211113 01:47:08.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:47:08.259" level="INFO">Running command 'ozone sh bucket info o3:///33776-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:47:16.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:47:16.234" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211113 01:47:08.257" endtime="20211113 01:47:16.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:47:16.237" level="INFO">100</msg>
<status status="PASS" starttime="20211113 01:47:16.235" endtime="20211113 01:47:16.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:47:16.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:47:16.237" endtime="20211113 01:47:16.239"/>
</kw>
<status status="PASS" starttime="20211113 01:47:08.256" endtime="20211113 01:47:16.240"/>
</kw>
<msg timestamp="20211113 01:47:16.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:47:08.256" endtime="20211113 01:47:16.240"/>
</kw>
<msg timestamp="20211113 01:47:16.241" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211113 01:47:08.255" endtime="20211113 01:47:16.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:47:16.242" endtime="20211113 01:47:16.243"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:47:16.249" level="INFO">Running command 'ozone sh bucket setquota o3:///33776-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:47:24.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:47:24.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:47:16.246" endtime="20211113 01:47:24.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:47:24.055" level="INFO"/>
<status status="PASS" starttime="20211113 01:47:24.054" endtime="20211113 01:47:24.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:47:24.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:47:24.055" endtime="20211113 01:47:24.056"/>
</kw>
<status status="PASS" starttime="20211113 01:47:16.245" endtime="20211113 01:47:24.056"/>
</kw>
<msg timestamp="20211113 01:47:24.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:47:16.244" endtime="20211113 01:47:24.057"/>
</kw>
<status status="PASS" starttime="20211113 01:47:16.243" endtime="20211113 01:47:24.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:47:24.067" level="INFO">Running command 'ozone sh bucket info o3:///33776-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:47:29.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:47:29.810" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:47:24.063" endtime="20211113 01:47:29.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:47:29.811" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211113 01:47:29.811" endtime="20211113 01:47:29.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:47:29.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:47:29.812" endtime="20211113 01:47:29.812"/>
</kw>
<status status="PASS" starttime="20211113 01:47:24.061" endtime="20211113 01:47:29.813"/>
</kw>
<msg timestamp="20211113 01:47:29.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:47:24.061" endtime="20211113 01:47:29.813"/>
</kw>
<msg timestamp="20211113 01:47:29.814" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:47:24.059" endtime="20211113 01:47:29.814"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:47:29.815" endtime="20211113 01:47:29.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:47:29.823" level="INFO">Running command 'ozone sh bucket info o3:///33776-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:47:38.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:47:38.134" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211113 01:47:29.820" endtime="20211113 01:47:38.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:47:38.135" level="INFO">1000</msg>
<status status="PASS" starttime="20211113 01:47:38.135" endtime="20211113 01:47:38.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:47:38.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:47:38.136" endtime="20211113 01:47:38.136"/>
</kw>
<status status="PASS" starttime="20211113 01:47:29.819" endtime="20211113 01:47:38.137"/>
</kw>
<msg timestamp="20211113 01:47:38.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:47:29.818" endtime="20211113 01:47:38.137"/>
</kw>
<msg timestamp="20211113 01:47:38.138" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211113 01:47:29.816" endtime="20211113 01:47:38.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:47:38.139" endtime="20211113 01:47:38.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:47:38.148" level="INFO">Running command 'ozone sh bucket list o3:///33776-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:47:46.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:47:46.803" level="INFO">${output} = 33776-rpcwport</msg>
<status status="PASS" starttime="20211113 01:47:38.145" endtime="20211113 01:47:46.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:47:46.804" level="INFO">33776-rpcwport</msg>
<status status="PASS" starttime="20211113 01:47:46.803" endtime="20211113 01:47:46.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:47:46.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:47:46.804" endtime="20211113 01:47:46.806"/>
</kw>
<status status="PASS" starttime="20211113 01:47:38.144" endtime="20211113 01:47:46.807"/>
</kw>
<msg timestamp="20211113 01:47:46.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:47:38.143" endtime="20211113 01:47:46.807"/>
</kw>
<msg timestamp="20211113 01:47:46.809" level="INFO">${result} = 33776-rpcwport</msg>
<status status="PASS" starttime="20211113 01:47:38.141" endtime="20211113 01:47:46.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:47:46.809" endtime="20211113 01:47:46.811"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:47:46.824" level="INFO">Running command 'ozone sh key put o3:///33776-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:50:56.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:50:56.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:47:46.819" endtime="20211113 01:50:56.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:50:56.722" level="INFO"/>
<status status="PASS" starttime="20211113 01:50:56.721" endtime="20211113 01:50:56.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:50:56.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:50:56.723" endtime="20211113 01:50:56.723"/>
</kw>
<status status="PASS" starttime="20211113 01:47:46.817" endtime="20211113 01:50:56.723"/>
</kw>
<msg timestamp="20211113 01:50:56.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:47:46.816" endtime="20211113 01:50:56.724"/>
</kw>
<status status="PASS" starttime="20211113 01:47:46.814" endtime="20211113 01:50:56.724"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:50:56.731" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:50:56.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:50:56.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:50:56.727" endtime="20211113 01:50:56.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:50:56.741" level="INFO"/>
<status status="PASS" starttime="20211113 01:50:56.739" endtime="20211113 01:50:56.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:50:56.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:50:56.742" endtime="20211113 01:50:56.743"/>
</kw>
<status status="PASS" starttime="20211113 01:50:56.725" endtime="20211113 01:50:56.743"/>
</kw>
<msg timestamp="20211113 01:50:56.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:50:56.725" endtime="20211113 01:50:56.744"/>
</kw>
<status status="PASS" starttime="20211113 01:50:56.724" endtime="20211113 01:50:56.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:50:56.751" level="INFO">Running command 'ozone sh key get o3:///33776-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:50:59.901" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:50:56.748" endtime="20211113 01:50:59.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.902" endtime="20211113 01:50:59.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.902" endtime="20211113 01:50:59.902"/>
</kw>
<status status="FAIL" starttime="20211113 01:50:56.747" endtime="20211113 01:50:59.903"/>
</kw>
<msg timestamp="20211113 01:50:59.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:50:56.746" endtime="20211113 01:50:59.903"/>
</kw>
<status status="FAIL" starttime="20211113 01:50:56.744" endtime="20211113 01:50:59.903"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.904" endtime="20211113 01:50:59.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.904" endtime="20211113 01:50:59.904"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.904" endtime="20211113 01:50:59.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.904" endtime="20211113 01:50:59.905"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.905" endtime="20211113 01:50:59.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.905" endtime="20211113 01:50:59.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.905" endtime="20211113 01:50:59.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.905" endtime="20211113 01:50:59.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.906" endtime="20211113 01:50:59.906"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.906" endtime="20211113 01:50:59.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.906" endtime="20211113 01:50:59.906"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.906" endtime="20211113 01:50:59.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.906" endtime="20211113 01:50:59.906"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.907" endtime="20211113 01:50:59.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.907" endtime="20211113 01:50:59.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.907" endtime="20211113 01:50:59.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.907" endtime="20211113 01:50:59.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.921" endtime="20211113 01:50:59.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.924" endtime="20211113 01:50:59.924"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.926" endtime="20211113 01:50:59.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.932" endtime="20211113 01:50:59.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.934" endtime="20211113 01:50:59.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.934" endtime="20211113 01:50:59.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.936" endtime="20211113 01:50:59.937"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.937" endtime="20211113 01:50:59.937"/>
</kw>
<status status="FAIL" starttime="20211113 01:47:46.812" endtime="20211113 01:50:59.940"/>
</kw>
<status status="FAIL" starttime="20211113 01:47:46.811" endtime="20211113 01:50:59.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.940" endtime="20211113 01:50:59.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.943" endtime="20211113 01:50:59.943"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.945" endtime="20211113 01:50:59.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.946" endtime="20211113 01:50:59.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.947" endtime="20211113 01:50:59.947"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.947" endtime="20211113 01:50:59.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.949" endtime="20211113 01:50:59.950"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.950" endtime="20211113 01:50:59.950"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.950" endtime="20211113 01:50:59.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.956" endtime="20211113 01:50:59.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.958" endtime="20211113 01:50:59.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.958" endtime="20211113 01:50:59.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.961" endtime="20211113 01:50:59.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.963" endtime="20211113 01:50:59.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.963" endtime="20211113 01:50:59.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.967" endtime="20211113 01:50:59.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.967" endtime="20211113 01:50:59.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.967" endtime="20211113 01:50:59.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.967" endtime="20211113 01:50:59.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.968" endtime="20211113 01:50:59.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.968" endtime="20211113 01:50:59.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.974" endtime="20211113 01:50:59.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.975" endtime="20211113 01:50:59.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:50:59.977" endtime="20211113 01:50:59.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.977" endtime="20211113 01:50:59.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:50:59.979" endtime="20211113 01:50:59.979"/>
</kw>
<status status="FAIL" starttime="20211113 01:45:59.960" endtime="20211113 01:50:59.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211113 01:45:59.899" endtime="20211113 01:50:59.984">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:00.031" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:00.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:00.049" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:51:00.024" endtime="20211113 01:51:00.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:00.050" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:51:00.049" endtime="20211113 01:51:00.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:00.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:00.050" endtime="20211113 01:51:00.051"/>
</kw>
<status status="PASS" starttime="20211113 01:51:00.004" endtime="20211113 01:51:00.052"/>
</kw>
<msg timestamp="20211113 01:51:00.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:00.004" endtime="20211113 01:51:00.052"/>
</kw>
<msg timestamp="20211113 01:51:00.052" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:51:00.003" endtime="20211113 01:51:00.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:51:00.053" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:51:00.053" endtime="20211113 01:51:00.054"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:00.081" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:00.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:00.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:51:00.056" endtime="20211113 01:51:00.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:00.136" level="INFO"/>
<status status="PASS" starttime="20211113 01:51:00.135" endtime="20211113 01:51:00.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:00.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:00.136" endtime="20211113 01:51:00.137"/>
</kw>
<status status="PASS" starttime="20211113 01:51:00.055" endtime="20211113 01:51:00.141"/>
</kw>
<msg timestamp="20211113 01:51:00.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:00.055" endtime="20211113 01:51:00.141"/>
</kw>
<status status="PASS" starttime="20211113 01:51:00.054" endtime="20211113 01:51:00.142"/>
</kw>
<status status="PASS" starttime="20211113 01:51:00.054" endtime="20211113 01:51:00.142"/>
</kw>
<status status="PASS" starttime="20211113 01:51:00.003" endtime="20211113 01:51:00.142"/>
</kw>
<status status="PASS" starttime="20211113 01:50:59.999" endtime="20211113 01:51:00.143"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:00.180" level="INFO">Running command 'ozone sh volume info /33776-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:16.001" level="INFO">${rc} = 255</msg>
<msg timestamp="20211113 01:51:16.001" level="INFO">${output} = VOLUME_NOT_FOUND Volume 33776-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211113 01:51:00.174" endtime="20211113 01:51:16.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:16.004" level="INFO">VOLUME_NOT_FOUND Volume 33776-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211113 01:51:16.003" endtime="20211113 01:51:16.004"/>
</kw>
<msg timestamp="20211113 01:51:16.005" level="INFO">${result} = VOLUME_NOT_FOUND Volume 33776-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211113 01:51:00.165" endtime="20211113 01:51:16.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:51:16.005" endtime="20211113 01:51:16.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:16.034" level="INFO">Running command 'ozone sh volume create /33776-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:24.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:24.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:51:16.015" endtime="20211113 01:51:24.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:24.040" level="INFO"/>
<status status="PASS" starttime="20211113 01:51:24.039" endtime="20211113 01:51:24.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:24.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:24.040" endtime="20211113 01:51:24.041"/>
</kw>
<status status="PASS" starttime="20211113 01:51:16.011" endtime="20211113 01:51:24.041"/>
</kw>
<msg timestamp="20211113 01:51:24.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:16.011" endtime="20211113 01:51:24.042"/>
</kw>
<msg timestamp="20211113 01:51:24.042" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211113 01:51:16.008" endtime="20211113 01:51:24.042"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:51:24.042" endtime="20211113 01:51:24.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:24.049" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="33776-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:32.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:32.148" level="INFO">${output} = {
  "metadata": {},
  "name": "33776-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211113 01:51:24.045" endtime="20211113 01:51:32.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:32.150" level="INFO">{
  "metadata": {},
  "name": "33776-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:51:23.885Z",
  "modificationTime": "2021-11-13T01:51:23.885Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:51:32.149" endtime="20211113 01:51:32.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:32.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:32.151" endtime="20211113 01:51:32.152"/>
</kw>
<status status="PASS" starttime="20211113 01:51:24.045" endtime="20211113 01:51:32.153"/>
</kw>
<msg timestamp="20211113 01:51:32.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:24.044" endtime="20211113 01:51:32.153"/>
</kw>
<msg timestamp="20211113 01:51:32.153" level="INFO">${result} = {
  "metadata": {},
  "name": "33776-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211113 01:51:24.043" endtime="20211113 01:51:32.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:51:32.154" endtime="20211113 01:51:32.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:32.160" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="33776-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:40.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:40.727" level="INFO">${output} = {
  "metadata": {},
  "name": "33776-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211113 01:51:32.157" endtime="20211113 01:51:40.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:40.729" level="INFO">{
  "metadata": {},
  "name": "33776-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-13T01:51:23.885Z",
  "modificationTime": "2021-11-13T01:51:23.885Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211113 01:51:40.728" endtime="20211113 01:51:40.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:40.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:40.730" endtime="20211113 01:51:40.731"/>
</kw>
<status status="PASS" starttime="20211113 01:51:32.156" endtime="20211113 01:51:40.732"/>
</kw>
<msg timestamp="20211113 01:51:40.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:32.156" endtime="20211113 01:51:40.732"/>
</kw>
<msg timestamp="20211113 01:51:40.733" level="INFO">${result} = {
  "metadata": {},
  "name": "33776-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211113 01:51:32.155" endtime="20211113 01:51:40.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211113 01:51:40.733" endtime="20211113 01:51:40.734"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:40.742" level="INFO">Running command 'ozone sh volume setquota /33776-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:49.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:49.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:51:40.738" endtime="20211113 01:51:49.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:49.055" level="INFO"/>
<status status="PASS" starttime="20211113 01:51:49.053" endtime="20211113 01:51:49.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:49.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:49.055" endtime="20211113 01:51:49.057"/>
</kw>
<status status="PASS" starttime="20211113 01:51:40.737" endtime="20211113 01:51:49.058"/>
</kw>
<msg timestamp="20211113 01:51:49.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:40.736" endtime="20211113 01:51:49.058"/>
</kw>
<status status="PASS" starttime="20211113 01:51:40.735" endtime="20211113 01:51:49.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:49.066" level="INFO">Running command 'ozone sh volume info /33776-rpcwoscheme | jq -r '. | select(.name=="33776-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:51:57.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:51:57.428" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:51:49.062" endtime="20211113 01:51:57.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:51:57.430" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:51:57.428" endtime="20211113 01:51:57.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:51:57.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:51:57.430" endtime="20211113 01:51:57.431"/>
</kw>
<status status="PASS" starttime="20211113 01:51:49.061" endtime="20211113 01:51:57.431"/>
</kw>
<msg timestamp="20211113 01:51:57.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:49.061" endtime="20211113 01:51:57.431"/>
</kw>
<msg timestamp="20211113 01:51:57.432" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:51:49.059" endtime="20211113 01:51:57.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:51:57.432" endtime="20211113 01:51:57.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:51:57.438" level="INFO">Running command 'ozone sh bucket create /33776-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:05.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:05.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:51:57.435" endtime="20211113 01:52:05.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:05.272" level="INFO"/>
<status status="PASS" starttime="20211113 01:52:05.269" endtime="20211113 01:52:05.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:05.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:05.273" endtime="20211113 01:52:05.274"/>
</kw>
<status status="PASS" starttime="20211113 01:51:57.434" endtime="20211113 01:52:05.274"/>
</kw>
<msg timestamp="20211113 01:52:05.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:51:57.434" endtime="20211113 01:52:05.275"/>
</kw>
<status status="PASS" starttime="20211113 01:51:57.433" endtime="20211113 01:52:05.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:05.281" level="INFO">Running command 'ozone sh bucket info /33776-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:13.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:13.259" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211113 01:52:05.277" endtime="20211113 01:52:13.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:13.260" level="INFO">DISK</msg>
<status status="PASS" starttime="20211113 01:52:13.259" endtime="20211113 01:52:13.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:13.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:13.261" endtime="20211113 01:52:13.261"/>
</kw>
<status status="PASS" starttime="20211113 01:52:05.276" endtime="20211113 01:52:13.262"/>
</kw>
<msg timestamp="20211113 01:52:13.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:05.276" endtime="20211113 01:52:13.262"/>
</kw>
<msg timestamp="20211113 01:52:13.262" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211113 01:52:05.275" endtime="20211113 01:52:13.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:52:13.263" endtime="20211113 01:52:13.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:13.269" level="INFO">Running command 'ozone sh bucket info /33776-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:18.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:18.782" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:52:13.266" endtime="20211113 01:52:18.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:18.784" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211113 01:52:18.783" endtime="20211113 01:52:18.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:18.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:18.784" endtime="20211113 01:52:18.785"/>
</kw>
<status status="PASS" starttime="20211113 01:52:13.265" endtime="20211113 01:52:18.785"/>
</kw>
<msg timestamp="20211113 01:52:18.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:13.265" endtime="20211113 01:52:18.785"/>
</kw>
<msg timestamp="20211113 01:52:18.786" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211113 01:52:13.263" endtime="20211113 01:52:18.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:52:18.786" endtime="20211113 01:52:18.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:18.791" level="INFO">Running command 'ozone sh bucket info /33776-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:26.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:26.701" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211113 01:52:18.789" endtime="20211113 01:52:26.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:26.704" level="INFO">100</msg>
<status status="PASS" starttime="20211113 01:52:26.702" endtime="20211113 01:52:26.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:26.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:26.705" endtime="20211113 01:52:26.707"/>
</kw>
<status status="PASS" starttime="20211113 01:52:18.788" endtime="20211113 01:52:26.708"/>
</kw>
<msg timestamp="20211113 01:52:26.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:18.788" endtime="20211113 01:52:26.709"/>
</kw>
<msg timestamp="20211113 01:52:26.710" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211113 01:52:18.787" endtime="20211113 01:52:26.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:52:26.710" endtime="20211113 01:52:26.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:26.718" level="INFO">Running command 'ozone sh bucket setquota /33776-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:34.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:34.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:52:26.714" endtime="20211113 01:52:34.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:34.276" level="INFO"/>
<status status="PASS" starttime="20211113 01:52:34.275" endtime="20211113 01:52:34.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:34.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:34.277" endtime="20211113 01:52:34.279"/>
</kw>
<status status="PASS" starttime="20211113 01:52:26.713" endtime="20211113 01:52:34.279"/>
</kw>
<msg timestamp="20211113 01:52:34.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:26.713" endtime="20211113 01:52:34.279"/>
</kw>
<status status="PASS" starttime="20211113 01:52:26.711" endtime="20211113 01:52:34.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:34.285" level="INFO">Running command 'ozone sh bucket info /33776-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:42.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:42.296" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:52:34.282" endtime="20211113 01:52:42.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:42.297" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211113 01:52:42.296" endtime="20211113 01:52:42.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:42.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:42.297" endtime="20211113 01:52:42.298"/>
</kw>
<status status="PASS" starttime="20211113 01:52:34.282" endtime="20211113 01:52:42.299"/>
</kw>
<msg timestamp="20211113 01:52:42.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:34.281" endtime="20211113 01:52:42.299"/>
</kw>
<msg timestamp="20211113 01:52:42.299" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211113 01:52:34.280" endtime="20211113 01:52:42.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:52:42.300" endtime="20211113 01:52:42.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:42.306" level="INFO">Running command 'ozone sh bucket info /33776-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:50.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:50.183" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211113 01:52:42.303" endtime="20211113 01:52:50.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:50.184" level="INFO">1000</msg>
<status status="PASS" starttime="20211113 01:52:50.183" endtime="20211113 01:52:50.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:50.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:50.184" endtime="20211113 01:52:50.185"/>
</kw>
<status status="PASS" starttime="20211113 01:52:42.302" endtime="20211113 01:52:50.185"/>
</kw>
<msg timestamp="20211113 01:52:50.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:42.301" endtime="20211113 01:52:50.186"/>
</kw>
<msg timestamp="20211113 01:52:50.186" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211113 01:52:42.300" endtime="20211113 01:52:50.186"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:52:50.186" endtime="20211113 01:52:50.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:50.192" level="INFO">Running command 'ozone sh bucket list /33776-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:52:57.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:52:57.057" level="INFO">${output} = 33776-rpcwoscheme</msg>
<status status="PASS" starttime="20211113 01:52:50.189" endtime="20211113 01:52:57.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:52:57.059" level="INFO">33776-rpcwoscheme</msg>
<status status="PASS" starttime="20211113 01:52:57.058" endtime="20211113 01:52:57.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:52:57.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:52:57.059" endtime="20211113 01:52:57.060"/>
</kw>
<status status="PASS" starttime="20211113 01:52:50.189" endtime="20211113 01:52:57.060"/>
</kw>
<msg timestamp="20211113 01:52:57.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:52:50.188" endtime="20211113 01:52:57.061"/>
</kw>
<msg timestamp="20211113 01:52:57.061" level="INFO">${result} = 33776-rpcwoscheme</msg>
<status status="PASS" starttime="20211113 01:52:50.187" endtime="20211113 01:52:57.061"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211113 01:52:57.061" endtime="20211113 01:52:57.062"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:52:57.070" level="INFO">Running command 'ozone sh key put /33776-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:55:59.994" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211113 01:52:57.067" endtime="20211113 01:55:59.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211113 01:55:59.995" endtime="20211113 01:55:59.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211113 01:55:59.996" endtime="20211113 01:55:59.996"/>
</kw>
<status status="FAIL" starttime="20211113 01:52:57.065" endtime="20211113 01:55:59.996"/>
</kw>
<msg timestamp="20211113 01:55:59.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211113 01:52:57.065" endtime="20211113 01:55:59.996"/>
</kw>
<status status="FAIL" starttime="20211113 01:52:57.064" endtime="20211113 01:55:59.997"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.997" endtime="20211113 01:55:59.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.997" endtime="20211113 01:55:59.998"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.998" endtime="20211113 01:55:59.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.998" endtime="20211113 01:55:59.998"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.998" endtime="20211113 01:55:59.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.998" endtime="20211113 01:55:59.998"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.999" endtime="20211113 01:55:59.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.999" endtime="20211113 01:55:59.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:55:59.999" endtime="20211113 01:55:59.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.999" endtime="20211113 01:55:59.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:55:59.999" endtime="20211113 01:55:59.999"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.000" endtime="20211113 01:56:00.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.000" endtime="20211113 01:56:00.000"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.000" endtime="20211113 01:56:00.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.000" endtime="20211113 01:56:00.000"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.000" endtime="20211113 01:56:00.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.001" endtime="20211113 01:56:00.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.001" endtime="20211113 01:56:00.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.001" endtime="20211113 01:56:00.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.002" endtime="20211113 01:56:00.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.002" endtime="20211113 01:56:00.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.002" endtime="20211113 01:56:00.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.003" endtime="20211113 01:56:00.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.003" endtime="20211113 01:56:00.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.003" endtime="20211113 01:56:00.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.004" endtime="20211113 01:56:00.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.004" endtime="20211113 01:56:00.004"/>
</kw>
<status status="FAIL" starttime="20211113 01:52:57.063" endtime="20211113 01:56:00.004"/>
</kw>
<status status="FAIL" starttime="20211113 01:52:57.063" endtime="20211113 01:56:00.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.004" endtime="20211113 01:56:00.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.005" endtime="20211113 01:56:00.005"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.005" endtime="20211113 01:56:00.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.005" endtime="20211113 01:56:00.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.005" endtime="20211113 01:56:00.005"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.006" endtime="20211113 01:56:00.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.006" endtime="20211113 01:56:00.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.006" endtime="20211113 01:56:00.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.006" endtime="20211113 01:56:00.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.006" endtime="20211113 01:56:00.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.007" endtime="20211113 01:56:00.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.007" endtime="20211113 01:56:00.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.007" endtime="20211113 01:56:00.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.007" endtime="20211113 01:56:00.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.008" endtime="20211113 01:56:00.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.008" endtime="20211113 01:56:00.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.009" endtime="20211113 01:56:00.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.009" endtime="20211113 01:56:00.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.009" endtime="20211113 01:56:00.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.010" endtime="20211113 01:56:00.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.010" endtime="20211113 01:56:00.010"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.011" endtime="20211113 01:56:00.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.011" endtime="20211113 01:56:00.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211113 01:56:00.011" endtime="20211113 01:56:00.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.011" endtime="20211113 01:56:00.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211113 01:56:00.012" endtime="20211113 01:56:00.012"/>
</kw>
<status status="FAIL" starttime="20211113 01:51:00.143" endtime="20211113 01:56:00.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211113 01:50:59.991" endtime="20211113 01:56:00.013">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211113 01:31:01.788" endtime="20211113 01:56:00.016"/>
</suite>
<status status="FAIL" starttime="20211113 01:06:21.173" endtime="20211113 01:56:00.024"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:15.952" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:15.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:15.957" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211113 01:06:15.948" endtime="20211113 01:06:15.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:15.958" level="INFO">scm</msg>
<status status="PASS" starttime="20211113 01:06:15.958" endtime="20211113 01:06:15.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:15.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:15.959" endtime="20211113 01:06:15.959"/>
</kw>
<status status="PASS" starttime="20211113 01:06:15.948" endtime="20211113 01:06:15.960"/>
</kw>
<msg timestamp="20211113 01:06:15.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:15.947" endtime="20211113 01:06:15.960"/>
</kw>
<msg timestamp="20211113 01:06:15.960" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211113 01:06:15.947" endtime="20211113 01:06:15.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211113 01:06:15.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211113 01:06:15.960" endtime="20211113 01:06:15.961"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211113 01:06:15.966" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211113 01:06:15.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20211113 01:06:15.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211113 01:06:15.964" endtime="20211113 01:06:15.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211113 01:06:15.975" level="INFO"/>
<status status="PASS" starttime="20211113 01:06:15.974" endtime="20211113 01:06:15.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211113 01:06:15.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211113 01:06:15.975" endtime="20211113 01:06:15.976"/>
</kw>
<status status="PASS" starttime="20211113 01:06:15.963" endtime="20211113 01:06:15.976"/>
</kw>
<msg timestamp="20211113 01:06:15.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211113 01:06:15.963" endtime="20211113 01:06:15.976"/>
</kw>
<status status="PASS" starttime="20211113 01:06:15.962" endtime="20211113 01:06:15.977"/>
</kw>
<status status="PASS" starttime="20211113 01:06:15.961" endtime="20211113 01:06:15.977"/>
</kw>
<status status="PASS" starttime="20211113 01:06:15.946" endtime="20211113 01:06:15.977"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211113 01:06:15.945" endtime="20211113 01:06:15.977"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211113 01:06:15.882" endtime="20211113 01:06:15.979"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2978948"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
