<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211130 11:01:06.486" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:41.557" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:41.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:41.561" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:12:41.554" endtime="20211130 10:12:41.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:41.562" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:12:41.561" endtime="20211130 10:12:41.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:41.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:41.562" endtime="20211130 10:12:41.563"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.554" endtime="20211130 10:12:41.563"/>
</kw>
<msg timestamp="20211130 10:12:41.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:41.553" endtime="20211130 10:12:41.563"/>
</kw>
<msg timestamp="20211130 10:12:41.563" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211130 10:12:41.553" endtime="20211130 10:12:41.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:41.567" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:41.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:41.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:12:41.565" endtime="20211130 10:12:41.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:41.575" level="INFO"/>
<status status="PASS" starttime="20211130 10:12:41.575" endtime="20211130 10:12:41.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:41.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:41.576" endtime="20211130 10:12:41.576"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.565" endtime="20211130 10:12:41.576"/>
</kw>
<msg timestamp="20211130 10:12:41.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:41.564" endtime="20211130 10:12:41.577"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.564" endtime="20211130 10:12:41.577"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.564" endtime="20211130 10:12:41.577"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.553" endtime="20211130 10:12:41.577"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.552" endtime="20211130 10:12:41.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:41.580" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:41.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:41.707" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211130 10:12:41.578" endtime="20211130 10:12:41.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:41.708" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 30 Nov 2021 10:12:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC6ZE0ccPz8tsUIzoqWquiQYTNVFYGQGTvo88cvEO7ZSdQl4jJG5cc6PHg+7lJqPmCj0FBiikopbb/zfaY+zor0FxX
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1638303161677&amp;s=F7ossmimAjCy6sQ2usTvtiTC7FW+55qm5eHlV2FtQkI="; Path=/; HttpOnly
Last-Modified: Tue, 30 Nov 2021 09:55:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211130 10:12:41.707" endtime="20211130 10:12:41.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:41.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:41.708" endtime="20211130 10:12:41.709"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.578" endtime="20211130 10:12:41.709"/>
</kw>
<msg timestamp="20211130 10:12:41.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:41.578" endtime="20211130 10:12:41.709"/>
</kw>
<msg timestamp="20211130 10:12:41.710" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211130 10:12:41.577" endtime="20211130 10:12:41.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:12:41.710" endtime="20211130 10:12:41.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:12:41.552" endtime="20211130 10:12:41.712"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:41.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:41.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:41.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:12:41.716" endtime="20211130 10:12:41.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:41.723" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:12:41.723" endtime="20211130 10:12:41.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:41.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:41.724" endtime="20211130 10:12:41.724"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.715" endtime="20211130 10:12:41.725"/>
</kw>
<msg timestamp="20211130 10:12:41.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:41.715" endtime="20211130 10:12:41.725"/>
</kw>
<msg timestamp="20211130 10:12:41.725" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:12:41.715" endtime="20211130 10:12:41.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:12:41.727" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:12:41.725" endtime="20211130 10:12:41.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:41.730" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:41.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:41.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:12:41.728" endtime="20211130 10:12:41.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:41.739" level="INFO"/>
<status status="PASS" starttime="20211130 10:12:41.738" endtime="20211130 10:12:41.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:41.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:41.739" endtime="20211130 10:12:41.740"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.728" endtime="20211130 10:12:41.740"/>
</kw>
<msg timestamp="20211130 10:12:41.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:41.728" endtime="20211130 10:12:41.740"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.727" endtime="20211130 10:12:41.740"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.727" endtime="20211130 10:12:41.740"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.714" endtime="20211130 10:12:41.740"/>
</kw>
<status status="PASS" starttime="20211130 10:12:41.714" endtime="20211130 10:12:41.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:41.744" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:41.713" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:12:41.742" endtime="20211130 10:17:41.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:17:41.714" endtime="20211130 10:17:41.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:17:41.714" endtime="20211130 10:17:41.714"/>
</kw>
<status status="FAIL" starttime="20211130 10:12:41.741" endtime="20211130 10:17:41.714"/>
</kw>
<msg timestamp="20211130 10:17:41.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:12:41.741" endtime="20211130 10:17:41.715"/>
</kw>
<status status="FAIL" starttime="20211130 10:12:41.741" endtime="20211130 10:17:41.715"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211130 10:17:41.715" endtime="20211130 10:17:41.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:17:41.715" endtime="20211130 10:17:41.716"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211130 10:12:41.712" endtime="20211130 10:17:41.716">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211130 10:12:41.529" endtime="20211130 10:17:41.717"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:41.732" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:44.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:17:44.254" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211130 10:17:41.727" endtime="20211130 10:17:44.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:44.255" level="INFO">om</msg>
<status status="PASS" starttime="20211130 10:17:44.254" endtime="20211130 10:17:44.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:44.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:44.255" endtime="20211130 10:17:44.256"/>
</kw>
<status status="PASS" starttime="20211130 10:17:41.727" endtime="20211130 10:17:44.257"/>
</kw>
<msg timestamp="20211130 10:17:44.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:17:41.727" endtime="20211130 10:17:44.258"/>
</kw>
<msg timestamp="20211130 10:17:44.258" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211130 10:17:41.726" endtime="20211130 10:17:44.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:44.259" endtime="20211130 10:17:44.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:44.268" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:46.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:17:46.584" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211130 10:17:44.264" endtime="20211130 10:17:46.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:46.586" level="INFO">om</msg>
<status status="PASS" starttime="20211130 10:17:46.585" endtime="20211130 10:17:46.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:46.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:46.586" endtime="20211130 10:17:46.588"/>
</kw>
<status status="PASS" starttime="20211130 10:17:44.262" endtime="20211130 10:17:46.588"/>
</kw>
<msg timestamp="20211130 10:17:46.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:17:44.261" endtime="20211130 10:17:46.589"/>
</kw>
<msg timestamp="20211130 10:17:46.589" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211130 10:17:44.260" endtime="20211130 10:17:46.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:46.589" endtime="20211130 10:17:46.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:17:41.725" endtime="20211130 10:17:46.590"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:46.597" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:49.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:17:49.192" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:17:46.595" endtime="20211130 10:17:49.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:49.193" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:17:49.192" endtime="20211130 10:17:49.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:49.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:49.193" endtime="20211130 10:17:49.194"/>
</kw>
<status status="PASS" starttime="20211130 10:17:46.594" endtime="20211130 10:17:49.194"/>
</kw>
<msg timestamp="20211130 10:17:49.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:17:46.594" endtime="20211130 10:17:49.194"/>
</kw>
<msg timestamp="20211130 10:17:49.195" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211130 10:17:46.593" endtime="20211130 10:17:49.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:49.195" endtime="20211130 10:17:49.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:49.198" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:51.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:17:51.787" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:17:49.196" endtime="20211130 10:17:51.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:51.788" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:17:51.788" endtime="20211130 10:17:51.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:51.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:51.788" endtime="20211130 10:17:51.789"/>
</kw>
<status status="PASS" starttime="20211130 10:17:49.196" endtime="20211130 10:17:51.789"/>
</kw>
<msg timestamp="20211130 10:17:51.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:17:49.196" endtime="20211130 10:17:51.790"/>
</kw>
<msg timestamp="20211130 10:17:51.790" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211130 10:17:49.195" endtime="20211130 10:17:51.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:51.790" endtime="20211130 10:17:51.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:17:46.592" endtime="20211130 10:17:51.791"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:51.798" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:54.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:17:54.077" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211130 10:17:51.795" endtime="20211130 10:17:54.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:54.078" level="INFO">om</msg>
<status status="PASS" starttime="20211130 10:17:54.077" endtime="20211130 10:17:54.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:54.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:54.078" endtime="20211130 10:17:54.079"/>
</kw>
<status status="PASS" starttime="20211130 10:17:51.794" endtime="20211130 10:17:54.079"/>
</kw>
<msg timestamp="20211130 10:17:54.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:17:51.794" endtime="20211130 10:17:54.079"/>
</kw>
<msg timestamp="20211130 10:17:54.079" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211130 10:17:51.793" endtime="20211130 10:17:54.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:54.079" endtime="20211130 10:17:54.080"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:54.080" endtime="20211130 10:17:54.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:54.084" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:56.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:17:56.542" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211130 10:17:54.082" endtime="20211130 10:17:56.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:56.543" level="INFO">om</msg>
<status status="PASS" starttime="20211130 10:17:56.542" endtime="20211130 10:17:56.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:56.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:56.543" endtime="20211130 10:17:56.544"/>
</kw>
<status status="PASS" starttime="20211130 10:17:54.081" endtime="20211130 10:17:56.544"/>
</kw>
<msg timestamp="20211130 10:17:56.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:17:54.081" endtime="20211130 10:17:56.544"/>
</kw>
<msg timestamp="20211130 10:17:56.544" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211130 10:17:54.080" endtime="20211130 10:17:56.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:56.545" endtime="20211130 10:17:56.545"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:56.545" endtime="20211130 10:17:56.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:17:51.792" endtime="20211130 10:17:56.546"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:56.550" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:17:58.612" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:17:58.612" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211130 10:17:56.548" endtime="20211130 10:17:58.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:17:58.614" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211130 10:17:58.613" endtime="20211130 10:17:58.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:17:58.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:17:58.614" endtime="20211130 10:17:58.614"/>
</kw>
<msg timestamp="20211130 10:17:58.615" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211130 10:17:56.547" endtime="20211130 10:17:58.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:17:58.615" endtime="20211130 10:17:58.615"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:17:58.618" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:18:00.842" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:18:00.842" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211130 10:17:58.616" endtime="20211130 10:18:00.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:18:00.843" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211130 10:18:00.843" endtime="20211130 10:18:00.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:18:00.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:18:00.844" endtime="20211130 10:18:00.844"/>
</kw>
<msg timestamp="20211130 10:18:00.844" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211130 10:17:58.615" endtime="20211130 10:18:00.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:18:00.845" endtime="20211130 10:18:00.845"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:17:56.546" endtime="20211130 10:18:00.846"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211130 10:17:41.719" endtime="20211130 10:18:00.848"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211130 10:18:00.866" level="INFO">${random} = 26222</msg>
<status status="PASS" starttime="20211130 10:18:00.866" endtime="20211130 10:18:00.866"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:18:00.868" level="INFO">${source} = 26222-source</msg>
<status status="PASS" starttime="20211130 10:18:00.866" endtime="20211130 10:18:00.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:18:00.870" level="INFO">${target} = 26222-target</msg>
<status status="PASS" starttime="20211130 10:18:00.868" endtime="20211130 10:18:00.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:18:00.873" level="INFO">Running command 'ozone sh volume create 26222-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:18:07.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:18:07.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:18:00.871" endtime="20211130 10:18:07.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:18:07.060" level="INFO"/>
<status status="PASS" starttime="20211130 10:18:07.059" endtime="20211130 10:18:07.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:18:07.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:18:07.060" endtime="20211130 10:18:07.063"/>
</kw>
<status status="PASS" starttime="20211130 10:18:00.871" endtime="20211130 10:18:07.063"/>
</kw>
<msg timestamp="20211130 10:18:07.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:18:00.870" endtime="20211130 10:18:07.063"/>
</kw>
<status status="PASS" starttime="20211130 10:18:00.870" endtime="20211130 10:18:07.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:18:07.071" level="INFO">Running command 'ozone sh volume create 26222-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:18:12.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:18:12.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:18:07.067" endtime="20211130 10:18:12.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:18:12.620" level="INFO"/>
<status status="PASS" starttime="20211130 10:18:12.620" endtime="20211130 10:18:12.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:18:12.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:18:12.621" endtime="20211130 10:18:12.621"/>
</kw>
<status status="PASS" starttime="20211130 10:18:07.067" endtime="20211130 10:18:12.621"/>
</kw>
<msg timestamp="20211130 10:18:12.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:18:07.067" endtime="20211130 10:18:12.622"/>
</kw>
<status status="PASS" starttime="20211130 10:18:07.066" endtime="20211130 10:18:12.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:18:12.627" level="INFO">Running command 'ozone sh bucket create 26222-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:18:19.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:18:19.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:18:12.625" endtime="20211130 10:18:19.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:18:19.345" level="INFO"/>
<status status="PASS" starttime="20211130 10:18:19.344" endtime="20211130 10:18:19.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:18:19.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:18:19.345" endtime="20211130 10:18:19.346"/>
</kw>
<status status="PASS" starttime="20211130 10:18:12.624" endtime="20211130 10:18:19.347"/>
</kw>
<msg timestamp="20211130 10:18:19.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:18:12.623" endtime="20211130 10:18:19.347"/>
</kw>
<status status="PASS" starttime="20211130 10:18:12.623" endtime="20211130 10:18:19.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:18:19.351" level="INFO">Running command 'ozone sh key put 26222-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:21:27.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:21:27.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:18:19.348" endtime="20211130 10:21:27.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:21:27.934" level="INFO"/>
<status status="PASS" starttime="20211130 10:21:27.934" endtime="20211130 10:21:27.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:21:27.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:21:27.935" endtime="20211130 10:21:27.935"/>
</kw>
<status status="PASS" starttime="20211130 10:18:19.348" endtime="20211130 10:21:27.935"/>
</kw>
<msg timestamp="20211130 10:21:27.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:18:19.348" endtime="20211130 10:21:27.935"/>
</kw>
<status status="PASS" starttime="20211130 10:18:19.347" endtime="20211130 10:21:27.936"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:21:27.940" level="INFO">Running command 'ozone sh bucket create 26222-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:21:34.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:21:34.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:21:27.937" endtime="20211130 10:21:34.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:21:34.728" level="INFO"/>
<status status="PASS" starttime="20211130 10:21:34.727" endtime="20211130 10:21:34.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:21:34.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:21:34.728" endtime="20211130 10:21:34.729"/>
</kw>
<status status="PASS" starttime="20211130 10:21:27.937" endtime="20211130 10:21:34.729"/>
</kw>
<msg timestamp="20211130 10:21:34.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:21:27.936" endtime="20211130 10:21:34.729"/>
</kw>
<status status="PASS" starttime="20211130 10:21:27.936" endtime="20211130 10:21:34.729"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:21:34.733" level="INFO">Running command 'ozone sh bucket link 26222-source/readable-bucket 26222-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:21:41.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:21:41.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:21:34.731" endtime="20211130 10:21:41.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:21:41.428" level="INFO"/>
<status status="PASS" starttime="20211130 10:21:41.427" endtime="20211130 10:21:41.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:21:41.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:21:41.428" endtime="20211130 10:21:41.429"/>
</kw>
<status status="PASS" starttime="20211130 10:21:34.730" endtime="20211130 10:21:41.430"/>
</kw>
<msg timestamp="20211130 10:21:41.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:21:34.730" endtime="20211130 10:21:41.430"/>
</kw>
<status status="PASS" starttime="20211130 10:21:34.729" endtime="20211130 10:21:41.430"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:21:41.437" level="INFO">Running command 'ozone sh bucket link 26222-source/readable-bucket 26222-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:21:47.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:21:47.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:21:41.433" endtime="20211130 10:21:47.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:21:47.709" level="INFO"/>
<status status="PASS" starttime="20211130 10:21:47.708" endtime="20211130 10:21:47.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:21:47.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:21:47.709" endtime="20211130 10:21:47.710"/>
</kw>
<status status="PASS" starttime="20211130 10:21:41.432" endtime="20211130 10:21:47.710"/>
</kw>
<msg timestamp="20211130 10:21:47.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:21:41.431" endtime="20211130 10:21:47.710"/>
</kw>
<status status="PASS" starttime="20211130 10:21:41.430" endtime="20211130 10:21:47.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:21:47.714" level="INFO">Running command 'ozone sh bucket link 26222-source/unreadable-bucket 26222-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:21:52.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:21:52.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:21:47.711" endtime="20211130 10:21:52.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:21:52.232" level="INFO"/>
<status status="PASS" starttime="20211130 10:21:52.232" endtime="20211130 10:21:52.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:21:52.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:21:52.233" endtime="20211130 10:21:52.233"/>
</kw>
<status status="PASS" starttime="20211130 10:21:47.711" endtime="20211130 10:21:52.233"/>
</kw>
<msg timestamp="20211130 10:21:52.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:21:47.711" endtime="20211130 10:21:52.234"/>
</kw>
<status status="PASS" starttime="20211130 10:21:47.710" endtime="20211130 10:21:52.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:21:52.239" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 26222-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:21:58.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:21:58.488" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:21:52.236" endtime="20211130 10:21:58.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:21:58.489" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:21:58.488" endtime="20211130 10:21:58.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:21:58.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:21:58.489" endtime="20211130 10:21:58.491"/>
</kw>
<status status="PASS" starttime="20211130 10:21:52.235" endtime="20211130 10:21:58.491"/>
</kw>
<msg timestamp="20211130 10:21:58.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:21:52.234" endtime="20211130 10:21:58.492"/>
</kw>
<status status="PASS" starttime="20211130 10:21:52.234" endtime="20211130 10:21:58.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:21:58.499" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 26222-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:04.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:04.399" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:21:58.496" endtime="20211130 10:22:04.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:04.400" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:04.400" endtime="20211130 10:22:04.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:04.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:04.401" endtime="20211130 10:22:04.401"/>
</kw>
<status status="PASS" starttime="20211130 10:21:58.495" endtime="20211130 10:22:04.401"/>
</kw>
<msg timestamp="20211130 10:22:04.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:21:58.494" endtime="20211130 10:22:04.402"/>
</kw>
<status status="PASS" starttime="20211130 10:21:58.493" endtime="20211130 10:22:04.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:04.409" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 26222-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:10.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:10.730" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:04.406" endtime="20211130 10:22:10.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:10.731" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:10.730" endtime="20211130 10:22:10.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:10.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:10.731" endtime="20211130 10:22:10.731"/>
</kw>
<status status="PASS" starttime="20211130 10:22:04.404" endtime="20211130 10:22:10.732"/>
</kw>
<msg timestamp="20211130 10:22:10.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:04.404" endtime="20211130 10:22:10.732"/>
</kw>
<status status="PASS" starttime="20211130 10:22:04.402" endtime="20211130 10:22:10.732"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:10.736" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 26222-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:17.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:17.411" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:10.734" endtime="20211130 10:22:17.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:17.413" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:17.413" endtime="20211130 10:22:17.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:17.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:17.414" endtime="20211130 10:22:17.414"/>
</kw>
<status status="PASS" starttime="20211130 10:22:10.733" endtime="20211130 10:22:17.414"/>
</kw>
<msg timestamp="20211130 10:22:17.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:10.733" endtime="20211130 10:22:17.415"/>
</kw>
<status status="PASS" starttime="20211130 10:22:10.732" endtime="20211130 10:22:17.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:17.421" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 26222-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:23.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:23.136" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:17.418" endtime="20211130 10:22:23.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:23.138" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:22:23.137" endtime="20211130 10:22:23.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:23.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:23.138" endtime="20211130 10:22:23.138"/>
</kw>
<status status="PASS" starttime="20211130 10:22:17.416" endtime="20211130 10:22:23.139"/>
</kw>
<msg timestamp="20211130 10:22:23.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:17.415" endtime="20211130 10:22:23.139"/>
</kw>
<status status="PASS" starttime="20211130 10:22:17.415" endtime="20211130 10:22:23.140"/>
</kw>
<status status="PASS" starttime="20211130 10:18:12.622" endtime="20211130 10:22:23.140"/>
</kw>
<status status="PASS" starttime="20211130 10:18:12.622" endtime="20211130 10:22:23.141"/>
</kw>
<status status="PASS" starttime="20211130 10:18:00.865" endtime="20211130 10:22:23.141"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:23.151" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:23.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:23.157" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:22:23.148" endtime="20211130 10:22:23.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:23.159" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:22:23.158" endtime="20211130 10:22:23.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:23.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:23.160" endtime="20211130 10:22:23.162"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.147" endtime="20211130 10:22:23.162"/>
</kw>
<msg timestamp="20211130 10:22:23.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:23.147" endtime="20211130 10:22:23.162"/>
</kw>
<msg timestamp="20211130 10:22:23.163" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:22:23.146" endtime="20211130 10:22:23.163"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:22:23.166" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:22:23.163" endtime="20211130 10:22:23.166"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:23.172" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:23.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:23.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:22:23.169" endtime="20211130 10:22:23.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:23.207" level="INFO"/>
<status status="PASS" starttime="20211130 10:22:23.206" endtime="20211130 10:22:23.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:23.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:23.207" endtime="20211130 10:22:23.207"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.168" endtime="20211130 10:22:23.208"/>
</kw>
<msg timestamp="20211130 10:22:23.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:23.168" endtime="20211130 10:22:23.208"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.167" endtime="20211130 10:22:23.208"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.166" endtime="20211130 10:22:23.208"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.145" endtime="20211130 10:22:23.208"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.144" endtime="20211130 10:22:23.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:23.212" level="INFO">Running command 'ozone sh bucket link 26222-source/no-such-bucket 26222-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:30.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:30.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:22:23.210" endtime="20211130 10:22:30.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:30.519" level="INFO"/>
<status status="PASS" starttime="20211130 10:22:30.519" endtime="20211130 10:22:30.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:30.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:30.520" endtime="20211130 10:22:30.520"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.209" endtime="20211130 10:22:30.520"/>
</kw>
<msg timestamp="20211130 10:22:30.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:23.209" endtime="20211130 10:22:30.521"/>
</kw>
<status status="PASS" starttime="20211130 10:22:23.208" endtime="20211130 10:22:30.521"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:30.525" level="INFO">Running command 'ozone sh key list 26222-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:36.585" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:22:36.586" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211130 10:22:30.522" endtime="20211130 10:22:36.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:36.587" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211130 10:22:36.586" endtime="20211130 10:22:36.587"/>
</kw>
<msg timestamp="20211130 10:22:36.588" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211130 10:22:30.521" endtime="20211130 10:22:36.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:22:36.588" endtime="20211130 10:22:36.588"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:22:23.142" endtime="20211130 10:22:36.589"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:36.599" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:36.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:36.604" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:22:36.596" endtime="20211130 10:22:36.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:36.605" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:22:36.604" endtime="20211130 10:22:36.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:36.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:36.606" endtime="20211130 10:22:36.606"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.595" endtime="20211130 10:22:36.607"/>
</kw>
<msg timestamp="20211130 10:22:36.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:36.594" endtime="20211130 10:22:36.607"/>
</kw>
<msg timestamp="20211130 10:22:36.607" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:22:36.594" endtime="20211130 10:22:36.607"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:22:36.608" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:22:36.607" endtime="20211130 10:22:36.608"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:36.613" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:36.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:36.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:22:36.610" endtime="20211130 10:22:36.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:36.623" level="INFO"/>
<status status="PASS" starttime="20211130 10:22:36.622" endtime="20211130 10:22:36.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:36.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:36.623" endtime="20211130 10:22:36.624"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.610" endtime="20211130 10:22:36.624"/>
</kw>
<msg timestamp="20211130 10:22:36.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:36.610" endtime="20211130 10:22:36.624"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.609" endtime="20211130 10:22:36.624"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.608" endtime="20211130 10:22:36.624"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.593" endtime="20211130 10:22:36.625"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.592" endtime="20211130 10:22:36.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:36.628" level="INFO">Running command 'ozone sh bucket link 26222-source/bucket1 26222-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:42.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:42.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:22:36.626" endtime="20211130 10:22:42.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:42.652" level="INFO"/>
<status status="PASS" starttime="20211130 10:22:42.650" endtime="20211130 10:22:42.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:42.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:42.652" endtime="20211130 10:22:42.653"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.626" endtime="20211130 10:22:42.654"/>
</kw>
<msg timestamp="20211130 10:22:42.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:36.625" endtime="20211130 10:22:42.654"/>
</kw>
<status status="PASS" starttime="20211130 10:22:36.625" endtime="20211130 10:22:42.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:42.661" level="INFO">Running command 'ozone sh bucket create 26222-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:22:48.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:22:48.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:22:42.658" endtime="20211130 10:22:48.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:22:48.487" level="INFO"/>
<status status="PASS" starttime="20211130 10:22:48.486" endtime="20211130 10:22:48.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:22:48.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:22:48.487" endtime="20211130 10:22:48.488"/>
</kw>
<status status="PASS" starttime="20211130 10:22:42.657" endtime="20211130 10:22:48.488"/>
</kw>
<msg timestamp="20211130 10:22:48.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:22:42.656" endtime="20211130 10:22:48.488"/>
</kw>
<status status="PASS" starttime="20211130 10:22:42.655" endtime="20211130 10:22:48.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:22:48.496" level="INFO">Running command 'ozone sh key put 26222-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:24:36.591" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:22:48.493" endtime="20211130 10:24:36.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:24:36.592" endtime="20211130 10:24:36.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:24:36.593" endtime="20211130 10:24:36.593"/>
</kw>
<status status="FAIL" starttime="20211130 10:22:48.490" endtime="20211130 10:24:36.593"/>
</kw>
<msg timestamp="20211130 10:24:36.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:22:48.489" endtime="20211130 10:24:36.593"/>
</kw>
<status status="FAIL" starttime="20211130 10:22:48.488" endtime="20211130 10:24:36.593"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211130 10:24:36.594" endtime="20211130 10:24:36.594"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211130 10:22:36.590" endtime="20211130 10:24:36.594">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:24:36.600" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:24:36.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:24:36.605" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:24:36.598" endtime="20211130 10:24:36.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:24:36.607" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:24:36.606" endtime="20211130 10:24:36.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:24:36.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:24:36.608" endtime="20211130 10:24:36.609"/>
</kw>
<status status="PASS" starttime="20211130 10:24:36.598" endtime="20211130 10:24:36.609"/>
</kw>
<msg timestamp="20211130 10:24:36.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:24:36.598" endtime="20211130 10:24:36.610"/>
</kw>
<msg timestamp="20211130 10:24:36.610" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:24:36.597" endtime="20211130 10:24:36.610"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:24:36.611" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:24:36.610" endtime="20211130 10:24:36.611"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:24:36.615" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:24:36.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:24:36.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:24:36.613" endtime="20211130 10:24:36.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:24:36.625" level="INFO"/>
<status status="PASS" starttime="20211130 10:24:36.624" endtime="20211130 10:24:36.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:24:36.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:24:36.626" endtime="20211130 10:24:36.627"/>
</kw>
<status status="PASS" starttime="20211130 10:24:36.612" endtime="20211130 10:24:36.627"/>
</kw>
<msg timestamp="20211130 10:24:36.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:24:36.612" endtime="20211130 10:24:36.628"/>
</kw>
<status status="PASS" starttime="20211130 10:24:36.611" endtime="20211130 10:24:36.628"/>
</kw>
<status status="PASS" starttime="20211130 10:24:36.611" endtime="20211130 10:24:36.628"/>
</kw>
<status status="PASS" starttime="20211130 10:24:36.597" endtime="20211130 10:24:36.628"/>
</kw>
<status status="PASS" starttime="20211130 10:24:36.596" endtime="20211130 10:24:36.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:24:36.633" level="INFO">Running command 'ozone sh key put 26222-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:36.596" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:24:36.631" endtime="20211130 10:26:36.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:26:36.598" endtime="20211130 10:26:36.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:26:36.598" endtime="20211130 10:26:36.598"/>
</kw>
<status status="FAIL" starttime="20211130 10:24:36.630" endtime="20211130 10:26:36.598"/>
</kw>
<msg timestamp="20211130 10:26:36.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:24:36.630" endtime="20211130 10:26:36.598"/>
</kw>
<status status="FAIL" starttime="20211130 10:24:36.629" endtime="20211130 10:26:36.599"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211130 10:26:36.599" endtime="20211130 10:26:36.599"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211130 10:24:36.595" endtime="20211130 10:26:36.599">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:36.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:36.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:36.610" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:26:36.604" endtime="20211130 10:26:36.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:36.611" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:26:36.610" endtime="20211130 10:26:36.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:36.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:36.611" endtime="20211130 10:26:36.611"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.603" endtime="20211130 10:26:36.611"/>
</kw>
<msg timestamp="20211130 10:26:36.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:36.603" endtime="20211130 10:26:36.612"/>
</kw>
<msg timestamp="20211130 10:26:36.612" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:26:36.602" endtime="20211130 10:26:36.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:26:36.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:26:36.612" endtime="20211130 10:26:36.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:36.617" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:36.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:36.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:26:36.615" endtime="20211130 10:26:36.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:36.626" level="INFO"/>
<status status="PASS" starttime="20211130 10:26:36.626" endtime="20211130 10:26:36.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:36.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:36.627" endtime="20211130 10:26:36.628"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.614" endtime="20211130 10:26:36.628"/>
</kw>
<msg timestamp="20211130 10:26:36.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:36.614" endtime="20211130 10:26:36.628"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.613" endtime="20211130 10:26:36.629"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.613" endtime="20211130 10:26:36.629"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.602" endtime="20211130 10:26:36.629"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.601" endtime="20211130 10:26:36.629"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:36.633" level="INFO">Running command 'ozone sh key list 26222-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:42.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:42.906" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211130 10:26:36.631" endtime="20211130 10:26:42.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:42.907" level="INFO">key1</msg>
<status status="PASS" starttime="20211130 10:26:42.907" endtime="20211130 10:26:42.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:42.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:42.908" endtime="20211130 10:26:42.909"/>
</kw>
<status status="PASS" starttime="20211130 10:26:36.630" endtime="20211130 10:26:42.909"/>
</kw>
<msg timestamp="20211130 10:26:42.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:36.630" endtime="20211130 10:26:42.909"/>
</kw>
<msg timestamp="20211130 10:26:42.909" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211130 10:26:36.629" endtime="20211130 10:26:42.909"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:42.913" level="INFO">Running command 'ozone sh key list 26222-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:49.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:49.639" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211130 10:26:42.911" endtime="20211130 10:26:49.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:49.641" level="INFO">key1</msg>
<status status="PASS" starttime="20211130 10:26:49.640" endtime="20211130 10:26:49.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:49.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:49.641" endtime="20211130 10:26:49.641"/>
</kw>
<status status="PASS" starttime="20211130 10:26:42.910" endtime="20211130 10:26:49.642"/>
</kw>
<msg timestamp="20211130 10:26:49.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:42.910" endtime="20211130 10:26:49.642"/>
</kw>
<msg timestamp="20211130 10:26:49.642" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211130 10:26:42.910" endtime="20211130 10:26:49.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:26:49.642" endtime="20211130 10:26:49.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:26:49.643" endtime="20211130 10:26:49.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211130 10:26:49.644" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211130 10:26:49.644" endtime="20211130 10:26:49.644"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211130 10:26:36.600" endtime="20211130 10:26:49.644">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:49.652" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:49.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:49.657" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:26:49.650" endtime="20211130 10:26:49.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:49.658" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:26:49.658" endtime="20211130 10:26:49.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:49.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:49.659" endtime="20211130 10:26:49.659"/>
</kw>
<status status="PASS" starttime="20211130 10:26:49.649" endtime="20211130 10:26:49.660"/>
</kw>
<msg timestamp="20211130 10:26:49.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:49.649" endtime="20211130 10:26:49.660"/>
</kw>
<msg timestamp="20211130 10:26:49.660" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:26:49.648" endtime="20211130 10:26:49.660"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:26:49.661" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:26:49.661" endtime="20211130 10:26:49.661"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:49.665" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:49.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:49.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:26:49.663" endtime="20211130 10:26:49.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:49.675" level="INFO"/>
<status status="PASS" starttime="20211130 10:26:49.674" endtime="20211130 10:26:49.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:49.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:49.675" endtime="20211130 10:26:49.675"/>
</kw>
<status status="PASS" starttime="20211130 10:26:49.663" endtime="20211130 10:26:49.676"/>
</kw>
<msg timestamp="20211130 10:26:49.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:49.662" endtime="20211130 10:26:49.676"/>
</kw>
<status status="PASS" starttime="20211130 10:26:49.662" endtime="20211130 10:26:49.676"/>
</kw>
<status status="PASS" starttime="20211130 10:26:49.661" endtime="20211130 10:26:49.676"/>
</kw>
<status status="PASS" starttime="20211130 10:26:49.648" endtime="20211130 10:26:49.676"/>
</kw>
<status status="PASS" starttime="20211130 10:26:49.647" endtime="20211130 10:26:49.677"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:49.680" level="INFO">Running command 'ozone sh key delete 26222-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:55.374" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:26:55.374" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211130 10:26:49.678" endtime="20211130 10:26:55.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:55.375" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211130 10:26:55.375" endtime="20211130 10:26:55.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:55.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211130 10:26:55.376" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211130 10:26:55.376" endtime="20211130 10:26:55.376"/>
</kw>
<status status="FAIL" starttime="20211130 10:26:49.678" endtime="20211130 10:26:55.377"/>
</kw>
<msg timestamp="20211130 10:26:55.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:26:49.677" endtime="20211130 10:26:55.377"/>
</kw>
<status status="FAIL" starttime="20211130 10:26:49.677" endtime="20211130 10:26:55.377"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211130 10:26:55.378" endtime="20211130 10:26:55.378"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:26:55.378" endtime="20211130 10:26:55.378"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211130 10:26:49.646" endtime="20211130 10:26:55.379">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:55.385" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:55.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:55.389" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:26:55.383" endtime="20211130 10:26:55.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:55.391" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:26:55.390" endtime="20211130 10:26:55.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:55.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:55.392" endtime="20211130 10:26:55.392"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.382" endtime="20211130 10:26:55.393"/>
</kw>
<msg timestamp="20211130 10:26:55.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:55.382" endtime="20211130 10:26:55.393"/>
</kw>
<msg timestamp="20211130 10:26:55.393" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:26:55.382" endtime="20211130 10:26:55.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:26:55.394" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:26:55.394" endtime="20211130 10:26:55.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:55.399" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:26:55.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:26:55.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:26:55.397" endtime="20211130 10:26:55.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:26:55.410" level="INFO"/>
<status status="PASS" starttime="20211130 10:26:55.409" endtime="20211130 10:26:55.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:26:55.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:26:55.410" endtime="20211130 10:26:55.411"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.396" endtime="20211130 10:26:55.411"/>
</kw>
<msg timestamp="20211130 10:26:55.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:55.396" endtime="20211130 10:26:55.412"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.395" endtime="20211130 10:26:55.412"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.395" endtime="20211130 10:26:55.412"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.381" endtime="20211130 10:26:55.412"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.380" endtime="20211130 10:26:55.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:26:55.419" level="INFO">Running command 'ozone sh bucket list 26222-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:01.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:01.927" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211130 10:26:55.416" endtime="20211130 10:27:01.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:01.930" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:22:30.243Z",
  "modificationTime" : "2021-11-30T10:22:30.243Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:21:51.997Z",
  "modificationTime" : "2021-11-30T10:22:23.029Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:22:42.391Z",
  "modificationTime" : "2021-11-30T10:22:42.391Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:21:41.352Z",
  "modificationTime" : "2021-11-30T10:22:17.260Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:21:47.459Z",
  "modificationTime" : "2021-11-30T10:21:47.459Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20211130 10:27:01.928" endtime="20211130 10:27:01.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:01.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:01.930" endtime="20211130 10:27:01.931"/>
</kw>
<status status="PASS" starttime="20211130 10:26:55.414" endtime="20211130 10:27:01.931"/>
</kw>
<msg timestamp="20211130 10:27:01.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:26:55.413" endtime="20211130 10:27:01.931"/>
</kw>
<msg timestamp="20211130 10:27:01.932" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211130 10:26:55.413" endtime="20211130 10:27:01.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:01.932" endtime="20211130 10:27:01.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:01.933" endtime="20211130 10:27:01.933"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:26:55.379" endtime="20211130 10:27:01.934"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:01.941" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:01.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:01.946" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:27:01.938" endtime="20211130 10:27:01.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:01.947" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:27:01.946" endtime="20211130 10:27:01.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:01.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:01.947" endtime="20211130 10:27:01.948"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.938" endtime="20211130 10:27:01.948"/>
</kw>
<msg timestamp="20211130 10:27:01.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:01.937" endtime="20211130 10:27:01.949"/>
</kw>
<msg timestamp="20211130 10:27:01.949" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:27:01.937" endtime="20211130 10:27:01.949"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:27:01.950" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:27:01.949" endtime="20211130 10:27:01.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:01.955" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:01.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:01.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:27:01.953" endtime="20211130 10:27:01.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:01.964" level="INFO"/>
<status status="PASS" starttime="20211130 10:27:01.964" endtime="20211130 10:27:01.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:01.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:01.964" endtime="20211130 10:27:01.965"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.952" endtime="20211130 10:27:01.965"/>
</kw>
<msg timestamp="20211130 10:27:01.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:01.951" endtime="20211130 10:27:01.966"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.951" endtime="20211130 10:27:01.966"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.950" endtime="20211130 10:27:01.966"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.936" endtime="20211130 10:27:01.966"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.935" endtime="20211130 10:27:01.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:01.970" level="INFO">Running command 'ozone sh bucket info 26222-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:08.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:08.754" level="INFO">${output} = {
  "volumeName" : "26222-target",
  "bucketName" : "link1",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-30T10:22:42.391Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211130 10:27:01.968" endtime="20211130 10:27:08.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:08.755" level="INFO">{
  "volumeName" : "26222-target",
  "bucketName" : "link1",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-30T10:22:42.391Z",
  "modificationTime" : "2021-11-30T10:22:42.391Z"
}</msg>
<status status="PASS" starttime="20211130 10:27:08.754" endtime="20211130 10:27:08.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:08.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:08.755" endtime="20211130 10:27:08.756"/>
</kw>
<status status="PASS" starttime="20211130 10:27:01.968" endtime="20211130 10:27:08.756"/>
</kw>
<msg timestamp="20211130 10:27:08.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:01.967" endtime="20211130 10:27:08.756"/>
</kw>
<msg timestamp="20211130 10:27:08.757" level="INFO">${result} = {
  "volumeName" : "26222-target",
  "bucketName" : "link1",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-11-30T10:22:42.391Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211130 10:27:01.967" endtime="20211130 10:27:08.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.757" endtime="20211130 10:27:08.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.758" endtime="20211130 10:27:08.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.758" endtime="20211130 10:27:08.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.759" endtime="20211130 10:27:08.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.759" endtime="20211130 10:27:08.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.760" endtime="20211130 10:27:08.760"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:27:08.760" endtime="20211130 10:27:08.761"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:27:01.934" endtime="20211130 10:27:08.761"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:08.768" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:08.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:08.771" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:27:08.765" endtime="20211130 10:27:08.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:08.772" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:27:08.771" endtime="20211130 10:27:08.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:08.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:08.772" endtime="20211130 10:27:08.773"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.764" endtime="20211130 10:27:08.773"/>
</kw>
<msg timestamp="20211130 10:27:08.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:08.764" endtime="20211130 10:27:08.773"/>
</kw>
<msg timestamp="20211130 10:27:08.774" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:27:08.764" endtime="20211130 10:27:08.774"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:27:08.774" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:27:08.774" endtime="20211130 10:27:08.774"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:08.778" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:08.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:08.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:27:08.776" endtime="20211130 10:27:08.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:08.788" level="INFO"/>
<status status="PASS" starttime="20211130 10:27:08.787" endtime="20211130 10:27:08.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:08.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:08.788" endtime="20211130 10:27:08.789"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.776" endtime="20211130 10:27:08.789"/>
</kw>
<msg timestamp="20211130 10:27:08.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:08.775" endtime="20211130 10:27:08.790"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.775" endtime="20211130 10:27:08.790"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.774" endtime="20211130 10:27:08.790"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.763" endtime="20211130 10:27:08.790"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.763" endtime="20211130 10:27:08.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:08.794" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 26222-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:16.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:16.194" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:27:08.792" endtime="20211130 10:27:16.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:16.195" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:27:16.194" endtime="20211130 10:27:16.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:16.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:16.195" endtime="20211130 10:27:16.196"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.791" endtime="20211130 10:27:16.196"/>
</kw>
<msg timestamp="20211130 10:27:16.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:08.791" endtime="20211130 10:27:16.196"/>
</kw>
<status status="PASS" starttime="20211130 10:27:08.790" endtime="20211130 10:27:16.196"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:16.204" level="INFO">Running command 'ozone sh bucket getacl 26222-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:22.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:22.659" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211130 10:27:16.201" endtime="20211130 10:27:22.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:22.662" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211130 10:27:22.660" endtime="20211130 10:27:22.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:22.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:22.663" endtime="20211130 10:27:22.664"/>
</kw>
<status status="PASS" starttime="20211130 10:27:16.200" endtime="20211130 10:27:22.665"/>
</kw>
<msg timestamp="20211130 10:27:22.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:16.199" endtime="20211130 10:27:22.665"/>
</kw>
<msg timestamp="20211130 10:27:22.666" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211130 10:27:16.197" endtime="20211130 10:27:22.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:27:22.666" endtime="20211130 10:27:22.667"/>
</kw>
<status status="PASS" starttime="20211130 10:27:16.196" endtime="20211130 10:27:22.668"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:22.679" level="INFO">Running command 'ozone sh bucket getacl 26222-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:29.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:29.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:27:22.674" endtime="20211130 10:27:29.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:29.666" level="INFO"/>
<status status="PASS" starttime="20211130 10:27:29.662" endtime="20211130 10:27:29.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:29.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:29.666" endtime="20211130 10:27:29.668"/>
</kw>
<status status="PASS" starttime="20211130 10:27:22.673" endtime="20211130 10:27:29.668"/>
</kw>
<msg timestamp="20211130 10:27:29.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:22.673" endtime="20211130 10:27:29.669"/>
</kw>
<msg timestamp="20211130 10:27:29.669" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211130 10:27:22.671" endtime="20211130 10:27:29.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:27:29.670" endtime="20211130 10:27:29.670"/>
</kw>
<status status="PASS" starttime="20211130 10:27:22.668" endtime="20211130 10:27:29.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:29.676" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 26222-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:35.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:35.582" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:27:29.674" endtime="20211130 10:27:35.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:35.584" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:27:35.583" endtime="20211130 10:27:35.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:35.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:35.584" endtime="20211130 10:27:35.584"/>
</kw>
<status status="PASS" starttime="20211130 10:27:29.672" endtime="20211130 10:27:35.585"/>
</kw>
<msg timestamp="20211130 10:27:35.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:29.672" endtime="20211130 10:27:35.585"/>
</kw>
<status status="PASS" starttime="20211130 10:27:29.671" endtime="20211130 10:27:35.585"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:35.591" level="INFO">Running command 'ozone sh bucket getacl 26222-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:41.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:41.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:27:35.588" endtime="20211130 10:27:41.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:41.952" level="INFO"/>
<status status="PASS" starttime="20211130 10:27:41.950" endtime="20211130 10:27:41.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:41.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:41.953" endtime="20211130 10:27:41.953"/>
</kw>
<status status="PASS" starttime="20211130 10:27:35.588" endtime="20211130 10:27:41.953"/>
</kw>
<msg timestamp="20211130 10:27:41.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:35.588" endtime="20211130 10:27:41.954"/>
</kw>
<msg timestamp="20211130 10:27:41.954" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211130 10:27:35.587" endtime="20211130 10:27:41.954"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:27:41.954" endtime="20211130 10:27:41.954"/>
</kw>
<status status="PASS" starttime="20211130 10:27:35.586" endtime="20211130 10:27:41.955"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:41.961" level="INFO">Running command 'ozone sh bucket getacl 26222-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:49.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:49.001" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211130 10:27:41.957" endtime="20211130 10:27:49.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:49.003" level="INFO">READ</msg>
<status status="PASS" starttime="20211130 10:27:49.002" endtime="20211130 10:27:49.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:49.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:49.004" endtime="20211130 10:27:49.005"/>
</kw>
<status status="PASS" starttime="20211130 10:27:41.957" endtime="20211130 10:27:49.006"/>
</kw>
<msg timestamp="20211130 10:27:49.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:41.956" endtime="20211130 10:27:49.006"/>
</kw>
<msg timestamp="20211130 10:27:49.007" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211130 10:27:41.955" endtime="20211130 10:27:49.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:27:49.007" endtime="20211130 10:27:49.008"/>
</kw>
<status status="PASS" starttime="20211130 10:27:41.955" endtime="20211130 10:27:49.008"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:27:08.762" endtime="20211130 10:27:49.009"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:49.018" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:49.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:49.022" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:27:49.015" endtime="20211130 10:27:49.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:49.024" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:27:49.023" endtime="20211130 10:27:49.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:49.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:49.024" endtime="20211130 10:27:49.025"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.014" endtime="20211130 10:27:49.026"/>
</kw>
<msg timestamp="20211130 10:27:49.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:49.014" endtime="20211130 10:27:49.026"/>
</kw>
<msg timestamp="20211130 10:27:49.027" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:27:49.013" endtime="20211130 10:27:49.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:27:49.028" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:27:49.027" endtime="20211130 10:27:49.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:49.034" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:49.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:49.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:27:49.031" endtime="20211130 10:27:49.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:49.079" level="INFO"/>
<status status="PASS" starttime="20211130 10:27:49.079" endtime="20211130 10:27:49.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:49.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:49.080" endtime="20211130 10:27:49.080"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.030" endtime="20211130 10:27:49.080"/>
</kw>
<msg timestamp="20211130 10:27:49.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:49.030" endtime="20211130 10:27:49.080"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.029" endtime="20211130 10:27:49.081"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.028" endtime="20211130 10:27:49.081"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.012" endtime="20211130 10:27:49.081"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.011" endtime="20211130 10:27:49.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:49.084" level="INFO">Running command 'ozone sh bucket link 26222-source/bucket2 26222-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:27:54.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:27:54.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:27:49.083" endtime="20211130 10:27:54.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:27:54.704" level="INFO"/>
<status status="PASS" starttime="20211130 10:27:54.703" endtime="20211130 10:27:54.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:27:54.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:27:54.704" endtime="20211130 10:27:54.706"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.082" endtime="20211130 10:27:54.706"/>
</kw>
<msg timestamp="20211130 10:27:54.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:27:49.082" endtime="20211130 10:27:54.706"/>
</kw>
<status status="PASS" starttime="20211130 10:27:49.081" endtime="20211130 10:27:54.706"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:27:54.709" level="INFO">Running command 'ozone sh bucket create 26222-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:00.567" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:28:00.567" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211130 10:27:54.707" endtime="20211130 10:28:00.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:00.569" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211130 10:28:00.568" endtime="20211130 10:28:00.569"/>
</kw>
<msg timestamp="20211130 10:28:00.569" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211130 10:27:54.707" endtime="20211130 10:28:00.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:00.569" endtime="20211130 10:28:00.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:00.574" level="INFO">Running command 'ozone sh bucket create 26222-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:07.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:07.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:00.572" endtime="20211130 10:28:07.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:07.262" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:07.259" endtime="20211130 10:28:07.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:07.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:07.262" endtime="20211130 10:28:07.263"/>
</kw>
<status status="PASS" starttime="20211130 10:28:00.571" endtime="20211130 10:28:07.263"/>
</kw>
<msg timestamp="20211130 10:28:07.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:00.571" endtime="20211130 10:28:07.263"/>
</kw>
<status status="PASS" starttime="20211130 10:28:00.570" endtime="20211130 10:28:07.264"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:07.271" level="INFO">Running command 'ozone sh bucket link 26222-source/bucket1 26222-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:14.186" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:28:14.187" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211130 10:28:07.264" endtime="20211130 10:28:14.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:14.190" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211130 10:28:14.188" endtime="20211130 10:28:14.190"/>
</kw>
<msg timestamp="20211130 10:28:14.191" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211130 10:28:07.264" endtime="20211130 10:28:14.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:14.191" endtime="20211130 10:28:14.192"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:27:49.009" endtime="20211130 10:28:14.193"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:14.202" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:14.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:14.208" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:14.199" endtime="20211130 10:28:14.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:14.211" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:14.209" endtime="20211130 10:28:14.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:14.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:14.211" endtime="20211130 10:28:14.212"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.199" endtime="20211130 10:28:14.213"/>
</kw>
<msg timestamp="20211130 10:28:14.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:14.198" endtime="20211130 10:28:14.214"/>
</kw>
<msg timestamp="20211130 10:28:14.214" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:14.197" endtime="20211130 10:28:14.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:14.215" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:14.214" endtime="20211130 10:28:14.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:14.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:14.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:14.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:14.219" endtime="20211130 10:28:14.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:14.234" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:14.233" endtime="20211130 10:28:14.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:14.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:14.235" endtime="20211130 10:28:14.235"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.218" endtime="20211130 10:28:14.236"/>
</kw>
<msg timestamp="20211130 10:28:14.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:14.217" endtime="20211130 10:28:14.236"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.216" endtime="20211130 10:28:14.236"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.215" endtime="20211130 10:28:14.237"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.196" endtime="20211130 10:28:14.237"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.195" endtime="20211130 10:28:14.237"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:14.243" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:14.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:14.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:14.240" endtime="20211130 10:28:14.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:14.250" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:14.249" endtime="20211130 10:28:14.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:14.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:14.250" endtime="20211130 10:28:14.251"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.239" endtime="20211130 10:28:14.251"/>
</kw>
<msg timestamp="20211130 10:28:14.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:14.239" endtime="20211130 10:28:14.251"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.238" endtime="20211130 10:28:14.251"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:14.256" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:14.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:14.261" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:14.254" endtime="20211130 10:28:14.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:14.262" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:14.262" endtime="20211130 10:28:14.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:14.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:14.263" endtime="20211130 10:28:14.263"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.253" endtime="20211130 10:28:14.264"/>
</kw>
<msg timestamp="20211130 10:28:14.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:14.252" endtime="20211130 10:28:14.264"/>
</kw>
<msg timestamp="20211130 10:28:14.264" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:14.252" endtime="20211130 10:28:14.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:14.265" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:14.265" endtime="20211130 10:28:14.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:14.271" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:14.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:14.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:14.267" endtime="20211130 10:28:14.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:14.283" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:14.282" endtime="20211130 10:28:14.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:14.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:14.283" endtime="20211130 10:28:14.284"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.267" endtime="20211130 10:28:14.285"/>
</kw>
<msg timestamp="20211130 10:28:14.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:14.266" endtime="20211130 10:28:14.285"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.266" endtime="20211130 10:28:14.285"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.265" endtime="20211130 10:28:14.285"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.252" endtime="20211130 10:28:14.286"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.251" endtime="20211130 10:28:14.286"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:14.289" level="INFO">Running command 'ozone sh key list 26222-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:21.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:21.451" level="INFO">${output} = [ {
  "volumeName" : "26222-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-30T10:18:23.885Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211130 10:28:14.287" endtime="20211130 10:28:21.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:21.452" level="INFO">[ {
  "volumeName" : "26222-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-30T10:18:23.885Z",
  "modificationTime" : "2021-11-30T10:21:27.197Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211130 10:28:21.451" endtime="20211130 10:28:21.452"/>
</kw>
<msg timestamp="20211130 10:28:21.452" level="INFO">${result} = [ {
  "volumeName" : "26222-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-11-30T10:18:23.885Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211130 10:28:14.286" endtime="20211130 10:28:21.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:21.453" endtime="20211130 10:28:21.453"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.238" endtime="20211130 10:28:21.453"/>
</kw>
<status status="PASS" starttime="20211130 10:28:14.237" endtime="20211130 10:28:21.453"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:28:14.194" endtime="20211130 10:28:21.453"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:21.461" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:21.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:21.463" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:21.457" endtime="20211130 10:28:21.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:21.464" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:21.464" endtime="20211130 10:28:21.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:21.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:21.465" endtime="20211130 10:28:21.465"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.457" endtime="20211130 10:28:21.465"/>
</kw>
<msg timestamp="20211130 10:28:21.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:21.456" endtime="20211130 10:28:21.466"/>
</kw>
<msg timestamp="20211130 10:28:21.466" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:21.456" endtime="20211130 10:28:21.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:21.466" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:21.466" endtime="20211130 10:28:21.466"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:21.472" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:21.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:21.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:21.470" endtime="20211130 10:28:21.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:21.480" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:21.480" endtime="20211130 10:28:21.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:21.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:21.480" endtime="20211130 10:28:21.481"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.469" endtime="20211130 10:28:21.481"/>
</kw>
<msg timestamp="20211130 10:28:21.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:21.468" endtime="20211130 10:28:21.482"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.467" endtime="20211130 10:28:21.482"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.467" endtime="20211130 10:28:21.482"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.456" endtime="20211130 10:28:21.482"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.455" endtime="20211130 10:28:21.482"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:21.488" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:21.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:21.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:21.485" endtime="20211130 10:28:21.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:21.492" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:21.491" endtime="20211130 10:28:21.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:21.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:21.492" endtime="20211130 10:28:21.493"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.484" endtime="20211130 10:28:21.493"/>
</kw>
<msg timestamp="20211130 10:28:21.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:21.484" endtime="20211130 10:28:21.493"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.483" endtime="20211130 10:28:21.494"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:21.498" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:21.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:21.502" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:21.496" endtime="20211130 10:28:21.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:21.503" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:21.502" endtime="20211130 10:28:21.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:21.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:21.503" endtime="20211130 10:28:21.503"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.495" endtime="20211130 10:28:21.504"/>
</kw>
<msg timestamp="20211130 10:28:21.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:21.495" endtime="20211130 10:28:21.504"/>
</kw>
<msg timestamp="20211130 10:28:21.504" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:21.495" endtime="20211130 10:28:21.504"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:21.505" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:21.504" endtime="20211130 10:28:21.505"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:21.509" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:21.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:21.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:21.507" endtime="20211130 10:28:21.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:21.517" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:21.516" endtime="20211130 10:28:21.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:21.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:21.517" endtime="20211130 10:28:21.518"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.507" endtime="20211130 10:28:21.518"/>
</kw>
<msg timestamp="20211130 10:28:21.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:21.506" endtime="20211130 10:28:21.518"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.506" endtime="20211130 10:28:21.518"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.505" endtime="20211130 10:28:21.518"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.494" endtime="20211130 10:28:21.519"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.494" endtime="20211130 10:28:21.519"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:21.521" level="INFO">Running command 'ozone sh key list 26222-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:27.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:28:27.120" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:26222-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211130 10:28:21.519" endtime="20211130 10:28:27.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:27.121" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:26222-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211130 10:28:27.120" endtime="20211130 10:28:27.121"/>
</kw>
<msg timestamp="20211130 10:28:27.122" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:26222-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211130 10:28:21.519" endtime="20211130 10:28:27.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:27.122" endtime="20211130 10:28:27.122"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.483" endtime="20211130 10:28:27.123"/>
</kw>
<status status="PASS" starttime="20211130 10:28:21.482" endtime="20211130 10:28:27.123"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:28:21.454" endtime="20211130 10:28:27.123"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:27.130" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:27.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:27.134" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:27.127" endtime="20211130 10:28:27.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:27.135" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:27.134" endtime="20211130 10:28:27.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:27.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:27.135" endtime="20211130 10:28:27.136"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.127" endtime="20211130 10:28:27.136"/>
</kw>
<msg timestamp="20211130 10:28:27.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:27.127" endtime="20211130 10:28:27.137"/>
</kw>
<msg timestamp="20211130 10:28:27.137" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:27.126" endtime="20211130 10:28:27.137"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:27.138" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:27.137" endtime="20211130 10:28:27.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:27.142" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:27.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:27.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:27.140" endtime="20211130 10:28:27.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:27.154" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:27.149" endtime="20211130 10:28:27.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:27.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:27.154" endtime="20211130 10:28:27.154"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.139" endtime="20211130 10:28:27.157"/>
</kw>
<msg timestamp="20211130 10:28:27.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:27.139" endtime="20211130 10:28:27.157"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.138" endtime="20211130 10:28:27.158"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.138" endtime="20211130 10:28:27.158"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.125" endtime="20211130 10:28:27.158"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.125" endtime="20211130 10:28:27.158"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:27.166" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:27.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:27.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:27.160" endtime="20211130 10:28:27.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:27.170" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:27.170" endtime="20211130 10:28:27.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:27.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:27.170" endtime="20211130 10:28:27.171"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.159" endtime="20211130 10:28:27.171"/>
</kw>
<msg timestamp="20211130 10:28:27.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:27.159" endtime="20211130 10:28:27.171"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.159" endtime="20211130 10:28:27.172"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:27.182" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:27.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:27.184" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:27.177" endtime="20211130 10:28:27.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:27.188" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:27.186" endtime="20211130 10:28:27.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:27.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:27.188" endtime="20211130 10:28:27.190"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.176" endtime="20211130 10:28:27.190"/>
</kw>
<msg timestamp="20211130 10:28:27.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:27.173" endtime="20211130 10:28:27.190"/>
</kw>
<msg timestamp="20211130 10:28:27.191" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:27.172" endtime="20211130 10:28:27.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:27.191" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:27.191" endtime="20211130 10:28:27.191"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:27.195" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:27.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:27.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:27.194" endtime="20211130 10:28:27.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:27.203" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:27.202" endtime="20211130 10:28:27.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:27.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:27.204" endtime="20211130 10:28:27.204"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.193" endtime="20211130 10:28:27.204"/>
</kw>
<msg timestamp="20211130 10:28:27.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:27.192" endtime="20211130 10:28:27.205"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.192" endtime="20211130 10:28:27.205"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.192" endtime="20211130 10:28:27.205"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.172" endtime="20211130 10:28:27.205"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.172" endtime="20211130 10:28:27.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:27.209" level="INFO">Running command 'ozone sh bucket info 26222-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:31.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:31.819" level="INFO">${output} = {
  "volumeName" : "26222-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-30T10:21:51.997Z...</msg>
<status status="PASS" starttime="20211130 10:28:27.207" endtime="20211130 10:28:31.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:31.821" level="INFO">{
  "volumeName" : "26222-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-30T10:21:51.997Z",
  "modificationTime" : "2021-11-30T10:22:23.029Z"
}</msg>
<status status="PASS" starttime="20211130 10:28:31.820" endtime="20211130 10:28:31.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:31.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:31.821" endtime="20211130 10:28:31.822"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.207" endtime="20211130 10:28:31.823"/>
</kw>
<msg timestamp="20211130 10:28:31.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:27.206" endtime="20211130 10:28:31.823"/>
</kw>
<msg timestamp="20211130 10:28:31.823" level="INFO">${result} = {
  "volumeName" : "26222-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-11-30T10:21:51.997Z...</msg>
<status status="PASS" starttime="20211130 10:28:27.205" endtime="20211130 10:28:31.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:31.824" endtime="20211130 10:28:31.824"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:31.824" endtime="20211130 10:28:31.825"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:31.828" level="INFO">Running command 'ozone sh key list 26222-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:38.441" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:28:38.441" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:26222-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211130 10:28:31.826" endtime="20211130 10:28:38.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:38.442" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:26222-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211130 10:28:38.441" endtime="20211130 10:28:38.442"/>
</kw>
<msg timestamp="20211130 10:28:38.443" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:26222-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211130 10:28:31.825" endtime="20211130 10:28:38.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:28:38.443" endtime="20211130 10:28:38.443"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.158" endtime="20211130 10:28:38.443"/>
</kw>
<status status="PASS" starttime="20211130 10:28:27.158" endtime="20211130 10:28:38.443"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:28:27.124" endtime="20211130 10:28:38.444"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:38.451" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:38.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:38.455" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:28:38.449" endtime="20211130 10:28:38.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:38.456" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:28:38.456" endtime="20211130 10:28:38.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:38.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:38.457" endtime="20211130 10:28:38.457"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.448" endtime="20211130 10:28:38.458"/>
</kw>
<msg timestamp="20211130 10:28:38.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:38.447" endtime="20211130 10:28:38.458"/>
</kw>
<msg timestamp="20211130 10:28:38.458" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:28:38.447" endtime="20211130 10:28:38.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:28:38.459" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:28:38.459" endtime="20211130 10:28:38.459"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:38.463" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:38.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:38.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:38.462" endtime="20211130 10:28:38.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:38.473" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:38.472" endtime="20211130 10:28:38.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:38.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:38.473" endtime="20211130 10:28:38.474"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.461" endtime="20211130 10:28:38.474"/>
</kw>
<msg timestamp="20211130 10:28:38.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:38.461" endtime="20211130 10:28:38.475"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.460" endtime="20211130 10:28:38.475"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.459" endtime="20211130 10:28:38.475"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.446" endtime="20211130 10:28:38.475"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.446" endtime="20211130 10:28:38.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:38.479" level="INFO">Running command 'ozone sh bucket link 26222-target/loop1 26222-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:44.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:44.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:38.478" endtime="20211130 10:28:44.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:44.081" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:44.080" endtime="20211130 10:28:44.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:44.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:44.082" endtime="20211130 10:28:44.083"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.477" endtime="20211130 10:28:44.083"/>
</kw>
<msg timestamp="20211130 10:28:44.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:38.476" endtime="20211130 10:28:44.084"/>
</kw>
<status status="PASS" starttime="20211130 10:28:38.476" endtime="20211130 10:28:44.084"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:44.089" level="INFO">Running command 'ozone sh bucket link 26222-target/loop2 26222-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:50.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:50.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:44.086" endtime="20211130 10:28:50.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:50.061" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:50.060" endtime="20211130 10:28:50.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:50.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:50.062" endtime="20211130 10:28:50.062"/>
</kw>
<status status="PASS" starttime="20211130 10:28:44.086" endtime="20211130 10:28:50.063"/>
</kw>
<msg timestamp="20211130 10:28:50.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:44.085" endtime="20211130 10:28:50.064"/>
</kw>
<status status="PASS" starttime="20211130 10:28:44.084" endtime="20211130 10:28:50.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:50.071" level="INFO">Running command 'ozone sh bucket link 26222-target/loop3 26222-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:28:56.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:28:56.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:28:50.067" endtime="20211130 10:28:56.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:28:56.225" level="INFO"/>
<status status="PASS" starttime="20211130 10:28:56.224" endtime="20211130 10:28:56.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:28:56.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:28:56.225" endtime="20211130 10:28:56.226"/>
</kw>
<status status="PASS" starttime="20211130 10:28:50.066" endtime="20211130 10:28:56.226"/>
</kw>
<msg timestamp="20211130 10:28:56.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:28:50.066" endtime="20211130 10:28:56.226"/>
</kw>
<status status="PASS" starttime="20211130 10:28:50.064" endtime="20211130 10:28:56.226"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:28:56.232" level="INFO">Running command 'ozone sh key list 26222-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:29:02.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:29:02.519" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 26222-target</msg>
<status status="PASS" starttime="20211130 10:28:56.227" endtime="20211130 10:29:02.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:29:02.521" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 26222-target</msg>
<status status="PASS" starttime="20211130 10:29:02.520" endtime="20211130 10:29:02.521"/>
</kw>
<msg timestamp="20211130 10:29:02.522" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 26222-target</msg>
<status status="PASS" starttime="20211130 10:28:56.227" endtime="20211130 10:29:02.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:29:02.522" endtime="20211130 10:29:02.523"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:28:38.445" endtime="20211130 10:29:02.523"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:29:02.530" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:29:02.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:29:02.535" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:29:02.528" endtime="20211130 10:29:02.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:29:02.537" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:29:02.536" endtime="20211130 10:29:02.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:29:02.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:29:02.537" endtime="20211130 10:29:02.539"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.527" endtime="20211130 10:29:02.539"/>
</kw>
<msg timestamp="20211130 10:29:02.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:29:02.527" endtime="20211130 10:29:02.540"/>
</kw>
<msg timestamp="20211130 10:29:02.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:29:02.526" endtime="20211130 10:29:02.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:29:02.541" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:29:02.540" endtime="20211130 10:29:02.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:29:02.545" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:29:02.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:29:02.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:29:02.543" endtime="20211130 10:29:02.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:29:02.555" level="INFO"/>
<status status="PASS" starttime="20211130 10:29:02.554" endtime="20211130 10:29:02.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:29:02.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:29:02.555" endtime="20211130 10:29:02.556"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.543" endtime="20211130 10:29:02.556"/>
</kw>
<msg timestamp="20211130 10:29:02.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:29:02.543" endtime="20211130 10:29:02.556"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.542" endtime="20211130 10:29:02.556"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.542" endtime="20211130 10:29:02.557"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.526" endtime="20211130 10:29:02.557"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.525" endtime="20211130 10:29:02.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:29:02.561" level="INFO">Running command 'ozone sh bucket link 26222-source/bucket1 26222-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:29:08.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:29:08.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:29:02.559" endtime="20211130 10:29:08.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:29:08.602" level="INFO"/>
<status status="PASS" starttime="20211130 10:29:08.601" endtime="20211130 10:29:08.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:29:08.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:29:08.602" endtime="20211130 10:29:08.603"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.558" endtime="20211130 10:29:08.604"/>
</kw>
<msg timestamp="20211130 10:29:08.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:29:02.558" endtime="20211130 10:29:08.604"/>
</kw>
<status status="PASS" starttime="20211130 10:29:02.557" endtime="20211130 10:29:08.604"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:29:08.609" level="INFO">Running command 'ozone sh key put 26222-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:02.524" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:29:08.606" endtime="20211130 10:31:02.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:31:02.525" endtime="20211130 10:31:02.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:31:02.525" endtime="20211130 10:31:02.525"/>
</kw>
<status status="FAIL" starttime="20211130 10:29:08.606" endtime="20211130 10:31:02.526"/>
</kw>
<msg timestamp="20211130 10:31:02.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:29:08.605" endtime="20211130 10:31:02.526"/>
</kw>
<status status="FAIL" starttime="20211130 10:29:08.605" endtime="20211130 10:31:02.526"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211130 10:31:02.527" endtime="20211130 10:31:02.527"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211130 10:29:02.523" endtime="20211130 10:31:02.527">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:02.533" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:02.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:02.537" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:31:02.531" endtime="20211130 10:31:02.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:02.538" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:31:02.537" endtime="20211130 10:31:02.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:02.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:02.538" endtime="20211130 10:31:02.539"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.530" endtime="20211130 10:31:02.539"/>
</kw>
<msg timestamp="20211130 10:31:02.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:02.530" endtime="20211130 10:31:02.539"/>
</kw>
<msg timestamp="20211130 10:31:02.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:31:02.530" endtime="20211130 10:31:02.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:31:02.541" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:31:02.540" endtime="20211130 10:31:02.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:02.545" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:02.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:02.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:31:02.543" endtime="20211130 10:31:02.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:02.556" level="INFO"/>
<status status="PASS" starttime="20211130 10:31:02.555" endtime="20211130 10:31:02.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:02.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:02.556" endtime="20211130 10:31:02.556"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.542" endtime="20211130 10:31:02.557"/>
</kw>
<msg timestamp="20211130 10:31:02.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:02.542" endtime="20211130 10:31:02.558"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.541" endtime="20211130 10:31:02.558"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.541" endtime="20211130 10:31:02.558"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.529" endtime="20211130 10:31:02.558"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.528" endtime="20211130 10:31:02.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:02.562" level="INFO">Running command 'ozone sh bucket delete 26222-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:09.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:09.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:31:02.560" endtime="20211130 10:31:09.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:09.683" level="INFO"/>
<status status="PASS" starttime="20211130 10:31:09.682" endtime="20211130 10:31:09.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:09.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:09.684" endtime="20211130 10:31:09.685"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.559" endtime="20211130 10:31:09.685"/>
</kw>
<msg timestamp="20211130 10:31:09.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:02.559" endtime="20211130 10:31:09.685"/>
</kw>
<status status="PASS" starttime="20211130 10:31:02.558" endtime="20211130 10:31:09.686"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:09.691" level="INFO">Running command 'ozone sh bucket list 26222-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:16.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:16.668" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-3...</msg>
<status status="PASS" starttime="20211130 10:31:09.688" endtime="20211130 10:31:16.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:16.669" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:28:07.119Z",
  "modificationTime" : "2021-11-30T10:28:07.119Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:22:30.243Z",
  "modificationTime" : "2021-11-30T10:22:30.243Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:21:51.997Z",
  "modificationTime" : "2021-11-30T10:22:23.029Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:27:54.606Z",
  "modificationTime" : "2021-11-30T10:27:54.606Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:29:08.393Z",
  "modificationTime" : "2021-11-30T10:29:08.393Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:28:56.107Z",
  "modificationTime" : "2021-11-30T10:28:56.107Z",
  "sourceVolume" : "26222-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:28:44.002Z",
  "modificationTime" : "2021-11-30T10:28:44.002Z",
  "sourceVolume" : "26222-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:28:49.943Z",
  "modificationTime" : "2021-11-30T10:28:49.943Z",
  "sourceVolume" : "26222-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:21:41.352Z",
  "modificationTime" : "2021-11-30T10:22:17.260Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-30T10:21:47.459Z",
  "modificationTime" : "2021-11-30T10:21:47.459Z",
  "sourceVolume" : "26222-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20211130 10:31:16.669" endtime="20211130 10:31:16.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:16.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:16.670" endtime="20211130 10:31:16.670"/>
</kw>
<status status="PASS" starttime="20211130 10:31:09.687" endtime="20211130 10:31:16.671"/>
</kw>
<msg timestamp="20211130 10:31:16.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:09.687" endtime="20211130 10:31:16.671"/>
</kw>
<msg timestamp="20211130 10:31:16.671" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "26222-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-11-3...</msg>
<status status="PASS" starttime="20211130 10:31:09.686" endtime="20211130 10:31:16.671"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:31:16.671" endtime="20211130 10:31:16.672"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:16.675" level="INFO">Running command 'ozone sh key list 26222-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:24.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:24.166" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211130 10:31:16.673" endtime="20211130 10:31:24.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:24.167" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211130 10:31:24.166" endtime="20211130 10:31:24.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:24.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:24.167" endtime="20211130 10:31:24.168"/>
</kw>
<status status="PASS" starttime="20211130 10:31:16.673" endtime="20211130 10:31:24.168"/>
</kw>
<msg timestamp="20211130 10:31:24.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:16.673" endtime="20211130 10:31:24.168"/>
</kw>
<msg timestamp="20211130 10:31:24.169" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211130 10:31:16.672" endtime="20211130 10:31:24.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:31:24.169" endtime="20211130 10:31:24.169"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:31:02.528" endtime="20211130 10:31:24.170"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211130 10:18:00.852" endtime="20211130 10:31:24.172"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211130 10:31:24.202" level="INFO">${random} = 48946</msg>
<status status="PASS" starttime="20211130 10:31:24.202" endtime="20211130 10:31:24.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:31:24.203" level="INFO">${prefix} = 48946</msg>
<status status="PASS" starttime="20211130 10:31:24.203" endtime="20211130 10:31:24.203"/>
</kw>
<status status="PASS" starttime="20211130 10:31:24.202" endtime="20211130 10:31:24.203"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:24.210" level="INFO">Running command 'ozone sh volume info /48946-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:30.494" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:31:30.494" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48946-rpcbasic is not found</msg>
<status status="PASS" starttime="20211130 10:31:24.207" endtime="20211130 10:31:30.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:30.496" level="INFO">VOLUME_NOT_FOUND Volume 48946-rpcbasic is not found</msg>
<status status="PASS" starttime="20211130 10:31:30.495" endtime="20211130 10:31:30.497"/>
</kw>
<msg timestamp="20211130 10:31:30.498" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48946-rpcbasic is not found</msg>
<status status="PASS" starttime="20211130 10:31:24.206" endtime="20211130 10:31:30.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:31:30.498" endtime="20211130 10:31:30.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:30.506" level="INFO">Running command 'ozone sh volume create /48946-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:36.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:36.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:31:30.503" endtime="20211130 10:31:36.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:36.364" level="INFO"/>
<status status="PASS" starttime="20211130 10:31:36.363" endtime="20211130 10:31:36.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:36.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:36.364" endtime="20211130 10:31:36.365"/>
</kw>
<status status="PASS" starttime="20211130 10:31:30.501" endtime="20211130 10:31:36.365"/>
</kw>
<msg timestamp="20211130 10:31:36.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:30.501" endtime="20211130 10:31:36.365"/>
</kw>
<msg timestamp="20211130 10:31:36.366" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211130 10:31:30.499" endtime="20211130 10:31:36.366"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:31:36.366" endtime="20211130 10:31:36.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:36.371" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="48946-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:43.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:43.186" level="INFO">${output} = {
  "metadata": {},
  "name": "48946-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:31:36.368" endtime="20211130 10:31:43.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:43.188" level="INFO">{
  "metadata": {},
  "name": "48946-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:31:36.264Z",
  "modificationTime": "2021-11-30T10:31:36.264Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:31:43.187" endtime="20211130 10:31:43.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:43.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:43.188" endtime="20211130 10:31:43.188"/>
</kw>
<status status="PASS" starttime="20211130 10:31:36.368" endtime="20211130 10:31:43.189"/>
</kw>
<msg timestamp="20211130 10:31:43.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:36.367" endtime="20211130 10:31:43.189"/>
</kw>
<msg timestamp="20211130 10:31:43.189" level="INFO">${result} = {
  "metadata": {},
  "name": "48946-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:31:36.366" endtime="20211130 10:31:43.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:31:43.189" endtime="20211130 10:31:43.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:43.193" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="48946-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:50.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:50.632" level="INFO">${output} = {
  "metadata": {},
  "name": "48946-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:31:43.191" endtime="20211130 10:31:50.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:50.633" level="INFO">{
  "metadata": {},
  "name": "48946-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:31:36.264Z",
  "modificationTime": "2021-11-30T10:31:36.264Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:31:50.632" endtime="20211130 10:31:50.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:50.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:50.636" endtime="20211130 10:31:50.636"/>
</kw>
<status status="PASS" starttime="20211130 10:31:43.191" endtime="20211130 10:31:50.637"/>
</kw>
<msg timestamp="20211130 10:31:50.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:43.190" endtime="20211130 10:31:50.637"/>
</kw>
<msg timestamp="20211130 10:31:50.637" level="INFO">${result} = {
  "metadata": {},
  "name": "48946-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:31:43.190" endtime="20211130 10:31:50.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:31:50.637" endtime="20211130 10:31:50.638"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:50.641" level="INFO">Running command 'ozone sh volume setquota /48946-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:31:56.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:31:56.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:31:50.639" endtime="20211130 10:31:56.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:31:56.820" level="INFO"/>
<status status="PASS" starttime="20211130 10:31:56.819" endtime="20211130 10:31:56.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:31:56.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:31:56.820" endtime="20211130 10:31:56.820"/>
</kw>
<status status="PASS" starttime="20211130 10:31:50.639" endtime="20211130 10:31:56.821"/>
</kw>
<msg timestamp="20211130 10:31:56.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:50.639" endtime="20211130 10:31:56.822"/>
</kw>
<status status="PASS" starttime="20211130 10:31:50.638" endtime="20211130 10:31:56.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:31:56.828" level="INFO">Running command 'ozone sh volume info /48946-rpcbasic | jq -r '. | select(.name=="48946-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:04.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:04.007" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:31:56.825" endtime="20211130 10:32:04.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:04.009" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:32:04.007" endtime="20211130 10:32:04.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:04.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:04.009" endtime="20211130 10:32:04.010"/>
</kw>
<status status="PASS" starttime="20211130 10:31:56.824" endtime="20211130 10:32:04.011"/>
</kw>
<msg timestamp="20211130 10:32:04.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:31:56.824" endtime="20211130 10:32:04.011"/>
</kw>
<msg timestamp="20211130 10:32:04.011" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:31:56.822" endtime="20211130 10:32:04.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:04.012" endtime="20211130 10:32:04.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:04.017" level="INFO">Running command 'ozone sh bucket create /48946-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:10.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:10.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:32:04.015" endtime="20211130 10:32:10.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:10.223" level="INFO"/>
<status status="PASS" starttime="20211130 10:32:10.222" endtime="20211130 10:32:10.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:10.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:10.223" endtime="20211130 10:32:10.224"/>
</kw>
<status status="PASS" starttime="20211130 10:32:04.014" endtime="20211130 10:32:10.224"/>
</kw>
<msg timestamp="20211130 10:32:10.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:04.013" endtime="20211130 10:32:10.224"/>
</kw>
<status status="PASS" starttime="20211130 10:32:04.012" endtime="20211130 10:32:10.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:10.229" level="INFO">Running command 'ozone sh bucket info /48946-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:15.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:15.685" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211130 10:32:10.227" endtime="20211130 10:32:15.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:15.686" level="INFO">DISK</msg>
<status status="PASS" starttime="20211130 10:32:15.686" endtime="20211130 10:32:15.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:15.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:15.687" endtime="20211130 10:32:15.687"/>
</kw>
<status status="PASS" starttime="20211130 10:32:10.226" endtime="20211130 10:32:15.688"/>
</kw>
<msg timestamp="20211130 10:32:15.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:10.226" endtime="20211130 10:32:15.688"/>
</kw>
<msg timestamp="20211130 10:32:15.688" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211130 10:32:10.225" endtime="20211130 10:32:15.688"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:15.688" endtime="20211130 10:32:15.689"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:15.694" level="INFO">Running command 'ozone sh bucket info /48946-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:23.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:23.070" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:32:15.691" endtime="20211130 10:32:23.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:23.072" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:32:23.071" endtime="20211130 10:32:23.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:23.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:23.072" endtime="20211130 10:32:23.073"/>
</kw>
<status status="PASS" starttime="20211130 10:32:15.690" endtime="20211130 10:32:23.074"/>
</kw>
<msg timestamp="20211130 10:32:23.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:15.690" endtime="20211130 10:32:23.074"/>
</kw>
<msg timestamp="20211130 10:32:23.074" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:32:15.689" endtime="20211130 10:32:23.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:23.074" endtime="20211130 10:32:23.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:23.085" level="INFO">Running command 'ozone sh bucket info /48946-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:29.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:29.605" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211130 10:32:23.080" endtime="20211130 10:32:29.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:29.606" level="INFO">100</msg>
<status status="PASS" starttime="20211130 10:32:29.605" endtime="20211130 10:32:29.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:29.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:29.606" endtime="20211130 10:32:29.607"/>
</kw>
<status status="PASS" starttime="20211130 10:32:23.079" endtime="20211130 10:32:29.607"/>
</kw>
<msg timestamp="20211130 10:32:29.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:23.079" endtime="20211130 10:32:29.607"/>
</kw>
<msg timestamp="20211130 10:32:29.608" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211130 10:32:23.075" endtime="20211130 10:32:29.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:29.608" endtime="20211130 10:32:29.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:29.615" level="INFO">Running command 'ozone sh bucket setquota /48946-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:36.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:36.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:32:29.611" endtime="20211130 10:32:36.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:36.135" level="INFO"/>
<status status="PASS" starttime="20211130 10:32:36.134" endtime="20211130 10:32:36.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:36.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:36.135" endtime="20211130 10:32:36.136"/>
</kw>
<status status="PASS" starttime="20211130 10:32:29.611" endtime="20211130 10:32:36.136"/>
</kw>
<msg timestamp="20211130 10:32:36.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:29.609" endtime="20211130 10:32:36.136"/>
</kw>
<status status="PASS" starttime="20211130 10:32:29.608" endtime="20211130 10:32:36.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:36.143" level="INFO">Running command 'ozone sh bucket info /48946-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:42.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:42.462" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:32:36.140" endtime="20211130 10:32:42.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:42.464" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211130 10:32:42.463" endtime="20211130 10:32:42.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:42.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:42.464" endtime="20211130 10:32:42.465"/>
</kw>
<status status="PASS" starttime="20211130 10:32:36.139" endtime="20211130 10:32:42.465"/>
</kw>
<msg timestamp="20211130 10:32:42.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:36.138" endtime="20211130 10:32:42.466"/>
</kw>
<msg timestamp="20211130 10:32:42.466" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:32:36.136" endtime="20211130 10:32:42.466"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:42.467" endtime="20211130 10:32:42.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:42.472" level="INFO">Running command 'ozone sh bucket info /48946-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:49.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:49.297" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211130 10:32:42.469" endtime="20211130 10:32:49.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:49.298" level="INFO">1000</msg>
<status status="PASS" starttime="20211130 10:32:49.298" endtime="20211130 10:32:49.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:49.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:49.299" endtime="20211130 10:32:49.300"/>
</kw>
<status status="PASS" starttime="20211130 10:32:42.469" endtime="20211130 10:32:49.300"/>
</kw>
<msg timestamp="20211130 10:32:49.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:42.468" endtime="20211130 10:32:49.301"/>
</kw>
<msg timestamp="20211130 10:32:49.301" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211130 10:32:42.467" endtime="20211130 10:32:49.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:49.302" endtime="20211130 10:32:49.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:49.311" level="INFO">Running command 'ozone sh bucket list /48946-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:32:55.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:32:55.856" level="INFO">${output} = 48946-rpcbasic</msg>
<status status="PASS" starttime="20211130 10:32:49.308" endtime="20211130 10:32:55.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:32:55.859" level="INFO">48946-rpcbasic</msg>
<status status="PASS" starttime="20211130 10:32:55.858" endtime="20211130 10:32:55.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:32:55.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:32:55.860" endtime="20211130 10:32:55.862"/>
</kw>
<status status="PASS" starttime="20211130 10:32:49.307" endtime="20211130 10:32:55.863"/>
</kw>
<msg timestamp="20211130 10:32:55.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:49.307" endtime="20211130 10:32:55.863"/>
</kw>
<msg timestamp="20211130 10:32:55.864" level="INFO">${result} = 48946-rpcbasic</msg>
<status status="PASS" starttime="20211130 10:32:49.303" endtime="20211130 10:32:55.864"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:32:55.864" endtime="20211130 10:32:55.865"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:32:55.873" level="INFO">Running command 'ozone sh key put /48946-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:05.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:05.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:32:55.871" endtime="20211130 10:36:05.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:05.936" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:05.935" endtime="20211130 10:36:05.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:05.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:05.937" endtime="20211130 10:36:05.939"/>
</kw>
<status status="PASS" starttime="20211130 10:32:55.870" endtime="20211130 10:36:05.939"/>
</kw>
<msg timestamp="20211130 10:36:05.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:32:55.870" endtime="20211130 10:36:05.940"/>
</kw>
<status status="PASS" starttime="20211130 10:32:55.869" endtime="20211130 10:36:05.940"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:05.946" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:05.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:05.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:36:05.943" endtime="20211130 10:36:05.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:05.952" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:05.951" endtime="20211130 10:36:05.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:05.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:05.953" endtime="20211130 10:36:05.954"/>
</kw>
<status status="PASS" starttime="20211130 10:36:05.942" endtime="20211130 10:36:05.954"/>
</kw>
<msg timestamp="20211130 10:36:05.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:05.941" endtime="20211130 10:36:05.955"/>
</kw>
<status status="PASS" starttime="20211130 10:36:05.940" endtime="20211130 10:36:05.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:05.961" level="INFO">Running command 'ozone sh key get /48946-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:14.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:14.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:36:05.958" endtime="20211130 10:36:14.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:14.304" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:14.304" endtime="20211130 10:36:14.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:14.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:14.305" endtime="20211130 10:36:14.305"/>
</kw>
<status status="PASS" starttime="20211130 10:36:05.957" endtime="20211130 10:36:14.306"/>
</kw>
<msg timestamp="20211130 10:36:14.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:05.957" endtime="20211130 10:36:14.306"/>
</kw>
<status status="PASS" starttime="20211130 10:36:05.956" endtime="20211130 10:36:14.306"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:14.309" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:14.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:14.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:36:14.307" endtime="20211130 10:36:14.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:14.314" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:14.313" endtime="20211130 10:36:14.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:14.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:14.314" endtime="20211130 10:36:14.315"/>
</kw>
<status status="PASS" starttime="20211130 10:36:14.307" endtime="20211130 10:36:14.315"/>
</kw>
<msg timestamp="20211130 10:36:14.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:14.307" endtime="20211130 10:36:14.315"/>
</kw>
<status status="PASS" starttime="20211130 10:36:14.306" endtime="20211130 10:36:14.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:14.319" level="INFO">Running command 'ozone sh key put -t RATIS /48946-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:24.205" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:36:14.317" endtime="20211130 10:36:24.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.206" endtime="20211130 10:36:24.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.206" endtime="20211130 10:36:24.206"/>
</kw>
<status status="FAIL" starttime="20211130 10:36:14.316" endtime="20211130 10:36:24.207"/>
</kw>
<msg timestamp="20211130 10:36:24.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:36:14.316" endtime="20211130 10:36:24.207"/>
</kw>
<status status="FAIL" starttime="20211130 10:36:14.315" endtime="20211130 10:36:24.207"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.207" endtime="20211130 10:36:24.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.207" endtime="20211130 10:36:24.207"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.208" endtime="20211130 10:36:24.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.208" endtime="20211130 10:36:24.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.208" endtime="20211130 10:36:24.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.208" endtime="20211130 10:36:24.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.208" endtime="20211130 10:36:24.208"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.208" endtime="20211130 10:36:24.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.209" endtime="20211130 10:36:24.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.210" endtime="20211130 10:36:24.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.210" endtime="20211130 10:36:24.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.210" endtime="20211130 10:36:24.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.210" endtime="20211130 10:36:24.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.210" endtime="20211130 10:36:24.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.213" endtime="20211130 10:36:24.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.213" endtime="20211130 10:36:24.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.213" endtime="20211130 10:36:24.213"/>
</kw>
<status status="FAIL" starttime="20211130 10:32:55.867" endtime="20211130 10:36:24.213"/>
</kw>
<status status="FAIL" starttime="20211130 10:32:55.866" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.214" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.214" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.214" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.214" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.214" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.214" endtime="20211130 10:36:24.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.215" endtime="20211130 10:36:24.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.216" endtime="20211130 10:36:24.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.217" endtime="20211130 10:36:24.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.217" endtime="20211130 10:36:24.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.217" endtime="20211130 10:36:24.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:36:24.217" endtime="20211130 10:36:24.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.217" endtime="20211130 10:36:24.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:36:24.217" endtime="20211130 10:36:24.217"/>
</kw>
<status status="FAIL" starttime="20211130 10:31:24.204" endtime="20211130 10:36:24.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211130 10:31:24.204" endtime="20211130 10:36:24.218">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211130 10:31:24.177" endtime="20211130 10:36:24.219"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211130 10:36:24.228" level="INFO">${random} = 38308</msg>
<status status="PASS" starttime="20211130 10:36:24.228" endtime="20211130 10:36:24.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:36:24.229" level="INFO">${prefix} = 38308</msg>
<status status="PASS" starttime="20211130 10:36:24.228" endtime="20211130 10:36:24.229"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.227" endtime="20211130 10:36:24.229"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:24.234" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:24.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:24.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:36:24.231" endtime="20211130 10:36:24.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:24.239" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:36:24.238" endtime="20211130 10:36:24.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:24.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:24.239" endtime="20211130 10:36:24.239"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.231" endtime="20211130 10:36:24.240"/>
</kw>
<msg timestamp="20211130 10:36:24.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:24.231" endtime="20211130 10:36:24.240"/>
</kw>
<msg timestamp="20211130 10:36:24.240" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:36:24.230" endtime="20211130 10:36:24.240"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:36:24.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:36:24.240" endtime="20211130 10:36:24.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:24.245" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:24.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:24.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:36:24.244" endtime="20211130 10:36:24.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:24.303" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:24.302" endtime="20211130 10:36:24.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:24.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:24.303" endtime="20211130 10:36:24.304"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.243" endtime="20211130 10:36:24.304"/>
</kw>
<msg timestamp="20211130 10:36:24.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:24.243" endtime="20211130 10:36:24.304"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.242" endtime="20211130 10:36:24.304"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.242" endtime="20211130 10:36:24.304"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.230" endtime="20211130 10:36:24.305"/>
</kw>
<status status="PASS" starttime="20211130 10:36:24.229" endtime="20211130 10:36:24.305"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:24.308" level="INFO">Running command 'ozone sh volume info o3://om:9862/38308-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:31.387" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:36:31.387" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38308-rpcwoport is not found</msg>
<status status="PASS" starttime="20211130 10:36:24.306" endtime="20211130 10:36:31.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:31.390" level="INFO">VOLUME_NOT_FOUND Volume 38308-rpcwoport is not found</msg>
<status status="PASS" starttime="20211130 10:36:31.388" endtime="20211130 10:36:31.390"/>
</kw>
<msg timestamp="20211130 10:36:31.390" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38308-rpcwoport is not found</msg>
<status status="PASS" starttime="20211130 10:36:24.305" endtime="20211130 10:36:31.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:36:31.390" endtime="20211130 10:36:31.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:31.398" level="INFO">Running command 'ozone sh volume create o3://om:9862/38308-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:37.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:37.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:36:31.394" endtime="20211130 10:36:37.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:37.251" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:37.250" endtime="20211130 10:36:37.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:37.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:37.251" endtime="20211130 10:36:37.251"/>
</kw>
<status status="PASS" starttime="20211130 10:36:31.393" endtime="20211130 10:36:37.252"/>
</kw>
<msg timestamp="20211130 10:36:37.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:31.393" endtime="20211130 10:36:37.252"/>
</kw>
<msg timestamp="20211130 10:36:37.252" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211130 10:36:31.392" endtime="20211130 10:36:37.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:36:37.252" endtime="20211130 10:36:37.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:37.256" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="38308-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:42.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:42.575" level="INFO">${output} = {
  "metadata": {},
  "name": "38308-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211130 10:36:37.254" endtime="20211130 10:36:42.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:42.577" level="INFO">{
  "metadata": {},
  "name": "38308-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:36:37.063Z",
  "modificationTime": "2021-11-30T10:36:37.063Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:36:42.576" endtime="20211130 10:36:42.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:42.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:42.578" endtime="20211130 10:36:42.579"/>
</kw>
<status status="PASS" starttime="20211130 10:36:37.254" endtime="20211130 10:36:42.579"/>
</kw>
<msg timestamp="20211130 10:36:42.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:37.254" endtime="20211130 10:36:42.580"/>
</kw>
<msg timestamp="20211130 10:36:42.580" level="INFO">${result} = {
  "metadata": {},
  "name": "38308-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211130 10:36:37.253" endtime="20211130 10:36:42.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:36:42.581" endtime="20211130 10:36:42.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:42.588" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="38308-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:49.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:49.355" level="INFO">${output} = {
  "metadata": {},
  "name": "38308-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211130 10:36:42.584" endtime="20211130 10:36:49.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:49.357" level="INFO">{
  "metadata": {},
  "name": "38308-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:36:37.063Z",
  "modificationTime": "2021-11-30T10:36:37.063Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:36:49.356" endtime="20211130 10:36:49.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:49.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:49.358" endtime="20211130 10:36:49.360"/>
</kw>
<status status="PASS" starttime="20211130 10:36:42.584" endtime="20211130 10:36:49.361"/>
</kw>
<msg timestamp="20211130 10:36:49.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:42.583" endtime="20211130 10:36:49.361"/>
</kw>
<msg timestamp="20211130 10:36:49.362" level="INFO">${result} = {
  "metadata": {},
  "name": "38308-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211130 10:36:42.582" endtime="20211130 10:36:49.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:36:49.362" endtime="20211130 10:36:49.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:49.369" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/38308-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:36:55.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:36:55.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:36:49.365" endtime="20211130 10:36:55.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:36:55.396" level="INFO"/>
<status status="PASS" starttime="20211130 10:36:55.395" endtime="20211130 10:36:55.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:36:55.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:36:55.396" endtime="20211130 10:36:55.397"/>
</kw>
<status status="PASS" starttime="20211130 10:36:49.365" endtime="20211130 10:36:55.398"/>
</kw>
<msg timestamp="20211130 10:36:55.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:49.364" endtime="20211130 10:36:55.398"/>
</kw>
<status status="PASS" starttime="20211130 10:36:49.363" endtime="20211130 10:36:55.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:36:55.404" level="INFO">Running command 'ozone sh volume info o3://om:9862/38308-rpcwoport | jq -r '. | select(.name=="38308-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:00.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:00.111" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:36:55.401" endtime="20211130 10:37:00.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:00.114" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:37:00.112" endtime="20211130 10:37:00.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:00.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:00.114" endtime="20211130 10:37:00.116"/>
</kw>
<status status="PASS" starttime="20211130 10:36:55.401" endtime="20211130 10:37:00.116"/>
</kw>
<msg timestamp="20211130 10:37:00.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:36:55.400" endtime="20211130 10:37:00.116"/>
</kw>
<msg timestamp="20211130 10:37:00.117" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:36:55.399" endtime="20211130 10:37:00.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:00.117" endtime="20211130 10:37:00.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:00.125" level="INFO">Running command 'ozone sh bucket create o3://om:9862/38308-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:06.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:06.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:37:00.122" endtime="20211130 10:37:06.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:06.478" level="INFO"/>
<status status="PASS" starttime="20211130 10:37:06.477" endtime="20211130 10:37:06.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:06.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:06.479" endtime="20211130 10:37:06.480"/>
</kw>
<status status="PASS" starttime="20211130 10:37:00.120" endtime="20211130 10:37:06.480"/>
</kw>
<msg timestamp="20211130 10:37:06.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:00.120" endtime="20211130 10:37:06.480"/>
</kw>
<status status="PASS" starttime="20211130 10:37:00.119" endtime="20211130 10:37:06.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:06.485" level="INFO">Running command 'ozone sh bucket info o3://om:9862/38308-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:13.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:13.161" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211130 10:37:06.483" endtime="20211130 10:37:13.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:13.163" level="INFO">DISK</msg>
<status status="PASS" starttime="20211130 10:37:13.162" endtime="20211130 10:37:13.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:13.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:13.163" endtime="20211130 10:37:13.164"/>
</kw>
<status status="PASS" starttime="20211130 10:37:06.482" endtime="20211130 10:37:13.164"/>
</kw>
<msg timestamp="20211130 10:37:13.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:06.482" endtime="20211130 10:37:13.165"/>
</kw>
<msg timestamp="20211130 10:37:13.165" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211130 10:37:06.481" endtime="20211130 10:37:13.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:13.165" endtime="20211130 10:37:13.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:13.170" level="INFO">Running command 'ozone sh bucket info o3://om:9862/38308-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:20.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:20.198" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:37:13.167" endtime="20211130 10:37:20.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:20.199" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:37:20.198" endtime="20211130 10:37:20.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:20.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:20.199" endtime="20211130 10:37:20.200"/>
</kw>
<status status="PASS" starttime="20211130 10:37:13.167" endtime="20211130 10:37:20.201"/>
</kw>
<msg timestamp="20211130 10:37:20.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:13.166" endtime="20211130 10:37:20.201"/>
</kw>
<msg timestamp="20211130 10:37:20.201" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:37:13.166" endtime="20211130 10:37:20.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:20.202" endtime="20211130 10:37:20.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:20.207" level="INFO">Running command 'ozone sh bucket info o3://om:9862/38308-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:26.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:26.843" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211130 10:37:20.205" endtime="20211130 10:37:26.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:26.846" level="INFO">100</msg>
<status status="PASS" starttime="20211130 10:37:26.844" endtime="20211130 10:37:26.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:26.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:26.847" endtime="20211130 10:37:26.848"/>
</kw>
<status status="PASS" starttime="20211130 10:37:20.204" endtime="20211130 10:37:26.848"/>
</kw>
<msg timestamp="20211130 10:37:26.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:20.204" endtime="20211130 10:37:26.848"/>
</kw>
<msg timestamp="20211130 10:37:26.849" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211130 10:37:20.202" endtime="20211130 10:37:26.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:26.849" endtime="20211130 10:37:26.850"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:26.856" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/38308-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:33.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:33.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:37:26.853" endtime="20211130 10:37:33.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:33.690" level="INFO"/>
<status status="PASS" starttime="20211130 10:37:33.689" endtime="20211130 10:37:33.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:33.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:33.690" endtime="20211130 10:37:33.690"/>
</kw>
<status status="PASS" starttime="20211130 10:37:26.852" endtime="20211130 10:37:33.691"/>
</kw>
<msg timestamp="20211130 10:37:33.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:26.852" endtime="20211130 10:37:33.691"/>
</kw>
<status status="PASS" starttime="20211130 10:37:26.851" endtime="20211130 10:37:33.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:33.697" level="INFO">Running command 'ozone sh bucket info o3://om:9862/38308-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:40.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:40.221" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:37:33.693" endtime="20211130 10:37:40.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:40.223" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211130 10:37:40.222" endtime="20211130 10:37:40.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:40.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:40.224" endtime="20211130 10:37:40.224"/>
</kw>
<status status="PASS" starttime="20211130 10:37:33.692" endtime="20211130 10:37:40.225"/>
</kw>
<msg timestamp="20211130 10:37:40.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:33.692" endtime="20211130 10:37:40.225"/>
</kw>
<msg timestamp="20211130 10:37:40.226" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:37:33.691" endtime="20211130 10:37:40.226"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:40.226" endtime="20211130 10:37:40.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:40.231" level="INFO">Running command 'ozone sh bucket info o3://om:9862/38308-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:46.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:46.336" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211130 10:37:40.229" endtime="20211130 10:37:46.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:46.338" level="INFO">1000</msg>
<status status="PASS" starttime="20211130 10:37:46.337" endtime="20211130 10:37:46.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:46.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:46.339" endtime="20211130 10:37:46.340"/>
</kw>
<status status="PASS" starttime="20211130 10:37:40.228" endtime="20211130 10:37:46.341"/>
</kw>
<msg timestamp="20211130 10:37:46.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:40.228" endtime="20211130 10:37:46.341"/>
</kw>
<msg timestamp="20211130 10:37:46.342" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211130 10:37:40.227" endtime="20211130 10:37:46.342"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:46.342" endtime="20211130 10:37:46.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:46.350" level="INFO">Running command 'ozone sh bucket list o3://om:9862/38308-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:37:53.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:37:53.069" level="INFO">${output} = 38308-rpcwoport</msg>
<status status="PASS" starttime="20211130 10:37:46.346" endtime="20211130 10:37:53.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:37:53.071" level="INFO">38308-rpcwoport</msg>
<status status="PASS" starttime="20211130 10:37:53.070" endtime="20211130 10:37:53.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:37:53.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:37:53.072" endtime="20211130 10:37:53.073"/>
</kw>
<status status="PASS" starttime="20211130 10:37:46.345" endtime="20211130 10:37:53.074"/>
</kw>
<msg timestamp="20211130 10:37:53.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:46.344" endtime="20211130 10:37:53.074"/>
</kw>
<msg timestamp="20211130 10:37:53.075" level="INFO">${result} = 38308-rpcwoport</msg>
<status status="PASS" starttime="20211130 10:37:46.343" endtime="20211130 10:37:53.075"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:37:53.075" endtime="20211130 10:37:53.076"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:37:53.106" level="INFO">Running command 'ozone sh key put o3://om:9862/38308-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:04.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:04.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:37:53.103" endtime="20211130 10:41:04.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:04.187" level="INFO"/>
<status status="PASS" starttime="20211130 10:41:04.186" endtime="20211130 10:41:04.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:04.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:04.187" endtime="20211130 10:41:04.188"/>
</kw>
<status status="PASS" starttime="20211130 10:37:53.079" endtime="20211130 10:41:04.189"/>
</kw>
<msg timestamp="20211130 10:41:04.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:37:53.079" endtime="20211130 10:41:04.189"/>
</kw>
<status status="PASS" starttime="20211130 10:37:53.078" endtime="20211130 10:41:04.190"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:04.195" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:04.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:04.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:41:04.192" endtime="20211130 10:41:04.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:04.200" level="INFO"/>
<status status="PASS" starttime="20211130 10:41:04.199" endtime="20211130 10:41:04.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:04.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:04.200" endtime="20211130 10:41:04.202"/>
</kw>
<status status="PASS" starttime="20211130 10:41:04.191" endtime="20211130 10:41:04.202"/>
</kw>
<msg timestamp="20211130 10:41:04.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:04.191" endtime="20211130 10:41:04.203"/>
</kw>
<status status="PASS" starttime="20211130 10:41:04.190" endtime="20211130 10:41:04.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:04.209" level="INFO">Running command 'ozone sh key get o3://om:9862/38308-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:13.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:13.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:41:04.206" endtime="20211130 10:41:13.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:13.930" level="INFO"/>
<status status="PASS" starttime="20211130 10:41:13.930" endtime="20211130 10:41:13.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:13.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:13.931" endtime="20211130 10:41:13.931"/>
</kw>
<status status="PASS" starttime="20211130 10:41:04.205" endtime="20211130 10:41:13.932"/>
</kw>
<msg timestamp="20211130 10:41:13.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:04.204" endtime="20211130 10:41:13.932"/>
</kw>
<status status="PASS" starttime="20211130 10:41:04.203" endtime="20211130 10:41:13.932"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:13.937" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:13.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:13.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:41:13.934" endtime="20211130 10:41:13.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:13.943" level="INFO"/>
<status status="PASS" starttime="20211130 10:41:13.942" endtime="20211130 10:41:13.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:13.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:13.944" endtime="20211130 10:41:13.945"/>
</kw>
<status status="PASS" starttime="20211130 10:41:13.933" endtime="20211130 10:41:13.946"/>
</kw>
<msg timestamp="20211130 10:41:13.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:13.933" endtime="20211130 10:41:13.946"/>
</kw>
<status status="PASS" starttime="20211130 10:41:13.932" endtime="20211130 10:41:13.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:13.950" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/38308-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:24.230" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:41:13.948" endtime="20211130 10:41:24.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.231" endtime="20211130 10:41:24.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.231" endtime="20211130 10:41:24.231"/>
</kw>
<status status="FAIL" starttime="20211130 10:41:13.947" endtime="20211130 10:41:24.231"/>
</kw>
<msg timestamp="20211130 10:41:24.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:41:13.947" endtime="20211130 10:41:24.231"/>
</kw>
<status status="FAIL" starttime="20211130 10:41:13.946" endtime="20211130 10:41:24.232"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.232" endtime="20211130 10:41:24.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.232" endtime="20211130 10:41:24.232"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.232" endtime="20211130 10:41:24.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.232" endtime="20211130 10:41:24.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.233" endtime="20211130 10:41:24.233"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.234" endtime="20211130 10:41:24.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.234" endtime="20211130 10:41:24.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.234" endtime="20211130 10:41:24.234"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.234" endtime="20211130 10:41:24.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.234" endtime="20211130 10:41:24.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.234" endtime="20211130 10:41:24.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.235" endtime="20211130 10:41:24.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.235" endtime="20211130 10:41:24.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.235" endtime="20211130 10:41:24.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.235" endtime="20211130 10:41:24.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.235" endtime="20211130 10:41:24.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.235" endtime="20211130 10:41:24.235"/>
</kw>
<status status="FAIL" starttime="20211130 10:37:53.076" endtime="20211130 10:41:24.236"/>
</kw>
<status status="FAIL" starttime="20211130 10:37:53.076" endtime="20211130 10:41:24.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.236" endtime="20211130 10:41:24.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.236" endtime="20211130 10:41:24.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.236" endtime="20211130 10:41:24.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.236" endtime="20211130 10:41:24.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.236" endtime="20211130 10:41:24.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.237" endtime="20211130 10:41:24.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.237" endtime="20211130 10:41:24.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.237" endtime="20211130 10:41:24.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.237" endtime="20211130 10:41:24.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.238" endtime="20211130 10:41:24.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.239" endtime="20211130 10:41:24.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:41:24.240" endtime="20211130 10:41:24.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.240" endtime="20211130 10:41:24.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:41:24.240" endtime="20211130 10:41:24.240"/>
</kw>
<status status="FAIL" starttime="20211130 10:36:24.305" endtime="20211130 10:41:24.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211130 10:36:24.229" endtime="20211130 10:41:24.240">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:24.249" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:24.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:24.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:41:24.246" endtime="20211130 10:41:24.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:24.255" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:41:24.254" endtime="20211130 10:41:24.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:24.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:24.256" endtime="20211130 10:41:24.257"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.246" endtime="20211130 10:41:24.257"/>
</kw>
<msg timestamp="20211130 10:41:24.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:24.245" endtime="20211130 10:41:24.258"/>
</kw>
<msg timestamp="20211130 10:41:24.258" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:41:24.245" endtime="20211130 10:41:24.258"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:41:24.259" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:41:24.258" endtime="20211130 10:41:24.259"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:24.264" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:24.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:24.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:41:24.262" endtime="20211130 10:41:24.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:24.300" level="INFO"/>
<status status="PASS" starttime="20211130 10:41:24.299" endtime="20211130 10:41:24.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:24.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:24.300" endtime="20211130 10:41:24.300"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.262" endtime="20211130 10:41:24.301"/>
</kw>
<msg timestamp="20211130 10:41:24.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:24.261" endtime="20211130 10:41:24.301"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.260" endtime="20211130 10:41:24.301"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.259" endtime="20211130 10:41:24.301"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.244" endtime="20211130 10:41:24.301"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.243" endtime="20211130 10:41:24.301"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:24.305" level="INFO">Running command 'ozone sh volume create o3://om:9862/38308-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:30.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:30.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:41:24.303" endtime="20211130 10:41:30.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:30.531" level="INFO"/>
<status status="PASS" starttime="20211130 10:41:30.530" endtime="20211130 10:41:30.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:30.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:30.531" endtime="20211130 10:41:30.533"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.303" endtime="20211130 10:41:30.533"/>
</kw>
<msg timestamp="20211130 10:41:30.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:24.303" endtime="20211130 10:41:30.534"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.302" endtime="20211130 10:41:30.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:30.541" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38308-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:36.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:36.761" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:41:30.537" endtime="20211130 10:41:36.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:36.764" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:41:36.762" endtime="20211130 10:41:36.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:36.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:36.765" endtime="20211130 10:41:36.766"/>
</kw>
<status status="PASS" starttime="20211130 10:41:30.536" endtime="20211130 10:41:36.766"/>
</kw>
<msg timestamp="20211130 10:41:36.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:30.536" endtime="20211130 10:41:36.767"/>
</kw>
<msg timestamp="20211130 10:41:36.767" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:41:30.534" endtime="20211130 10:41:36.767"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:41:36.768" endtime="20211130 10:41:36.769"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:36.775" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/38308-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:43.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:43.460" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211130 10:41:36.772" endtime="20211130 10:41:43.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:43.462" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211130 10:41:43.461" endtime="20211130 10:41:43.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:43.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:43.462" endtime="20211130 10:41:43.463"/>
</kw>
<status status="PASS" starttime="20211130 10:41:36.771" endtime="20211130 10:41:43.463"/>
</kw>
<msg timestamp="20211130 10:41:43.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:36.770" endtime="20211130 10:41:43.463"/>
</kw>
<msg timestamp="20211130 10:41:43.463" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211130 10:41:36.769" endtime="20211130 10:41:43.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:43.468" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38308-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:50.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:50.331" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211130 10:41:43.465" endtime="20211130 10:41:50.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:50.333" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:41:50.332" endtime="20211130 10:41:50.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:50.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:50.333" endtime="20211130 10:41:50.334"/>
</kw>
<status status="PASS" starttime="20211130 10:41:43.465" endtime="20211130 10:41:50.334"/>
</kw>
<msg timestamp="20211130 10:41:50.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:43.464" endtime="20211130 10:41:50.335"/>
</kw>
<msg timestamp="20211130 10:41:50.335" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211130 10:41:43.464" endtime="20211130 10:41:50.335"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:41:50.335" endtime="20211130 10:41:50.337"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:50.341" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/38308-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:41:57.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:41:57.181" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:41:50.338" endtime="20211130 10:41:57.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:41:57.182" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:41:57.181" endtime="20211130 10:41:57.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:41:57.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:41:57.182" endtime="20211130 10:41:57.183"/>
</kw>
<status status="PASS" starttime="20211130 10:41:50.338" endtime="20211130 10:41:57.183"/>
</kw>
<msg timestamp="20211130 10:41:57.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:50.337" endtime="20211130 10:41:57.183"/>
</kw>
<msg timestamp="20211130 10:41:57.183" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:41:50.337" endtime="20211130 10:41:57.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:41:57.188" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38308-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:03.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:03.889" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211130 10:41:57.185" endtime="20211130 10:42:03.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:03.891" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:42:03.890" endtime="20211130 10:42:03.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:03.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:03.892" endtime="20211130 10:42:03.893"/>
</kw>
<status status="PASS" starttime="20211130 10:41:57.185" endtime="20211130 10:42:03.893"/>
</kw>
<msg timestamp="20211130 10:42:03.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:41:57.184" endtime="20211130 10:42:03.893"/>
</kw>
<msg timestamp="20211130 10:42:03.893" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211130 10:41:57.184" endtime="20211130 10:42:03.893"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:42:03.894" endtime="20211130 10:42:03.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:03.899" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/38308-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:09.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:09.550" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:42:03.896" endtime="20211130 10:42:09.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:09.551" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:42:09.550" endtime="20211130 10:42:09.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:09.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:09.551" endtime="20211130 10:42:09.552"/>
</kw>
<status status="PASS" starttime="20211130 10:42:03.896" endtime="20211130 10:42:09.552"/>
</kw>
<msg timestamp="20211130 10:42:09.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:03.895" endtime="20211130 10:42:09.552"/>
</kw>
<msg timestamp="20211130 10:42:09.553" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:42:03.895" endtime="20211130 10:42:09.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:09.556" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38308-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:15.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:15.234" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211130 10:42:09.554" endtime="20211130 10:42:15.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:15.236" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:42:15.235" endtime="20211130 10:42:15.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:15.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:15.236" endtime="20211130 10:42:15.238"/>
</kw>
<status status="PASS" starttime="20211130 10:42:09.554" endtime="20211130 10:42:15.238"/>
</kw>
<msg timestamp="20211130 10:42:15.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:09.554" endtime="20211130 10:42:15.238"/>
</kw>
<msg timestamp="20211130 10:42:15.238" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211130 10:42:09.553" endtime="20211130 10:42:15.239"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:42:15.239" endtime="20211130 10:42:15.239"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:42:15.240" endtime="20211130 10:42:15.240"/>
</kw>
<status status="PASS" starttime="20211130 10:41:24.301" endtime="20211130 10:42:15.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:41:24.241" endtime="20211130 10:42:15.241"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:15.249" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:15.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:15.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:42:15.246" endtime="20211130 10:42:15.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:15.255" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:42:15.254" endtime="20211130 10:42:15.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:15.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:15.255" endtime="20211130 10:42:15.255"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.246" endtime="20211130 10:42:15.256"/>
</kw>
<msg timestamp="20211130 10:42:15.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:15.245" endtime="20211130 10:42:15.256"/>
</kw>
<msg timestamp="20211130 10:42:15.256" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:42:15.245" endtime="20211130 10:42:15.256"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:42:15.257" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:42:15.257" endtime="20211130 10:42:15.257"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:15.262" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:15.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:15.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:42:15.260" endtime="20211130 10:42:15.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:15.287" level="INFO"/>
<status status="PASS" starttime="20211130 10:42:15.286" endtime="20211130 10:42:15.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:15.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:15.287" endtime="20211130 10:42:15.288"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.259" endtime="20211130 10:42:15.288"/>
</kw>
<msg timestamp="20211130 10:42:15.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:15.259" endtime="20211130 10:42:15.288"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.258" endtime="20211130 10:42:15.288"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.257" endtime="20211130 10:42:15.289"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.244" endtime="20211130 10:42:15.289"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.244" endtime="20211130 10:42:15.289"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:15.293" level="INFO">Running command 'ozone sh bucket create o3://om:9862/38308-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:21.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:21.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:42:15.291" endtime="20211130 10:42:21.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:21.432" level="INFO"/>
<status status="PASS" starttime="20211130 10:42:21.431" endtime="20211130 10:42:21.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:21.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:21.433" endtime="20211130 10:42:21.434"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.290" endtime="20211130 10:42:21.435"/>
</kw>
<msg timestamp="20211130 10:42:21.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:15.290" endtime="20211130 10:42:21.435"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.290" endtime="20211130 10:42:21.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:21.442" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38308-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:26.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:26.190" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:42:21.439" endtime="20211130 10:42:26.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:26.192" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:42:26.191" endtime="20211130 10:42:26.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:26.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:26.193" endtime="20211130 10:42:26.194"/>
</kw>
<status status="PASS" starttime="20211130 10:42:21.438" endtime="20211130 10:42:26.195"/>
</kw>
<msg timestamp="20211130 10:42:26.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:21.438" endtime="20211130 10:42:26.195"/>
</kw>
<msg timestamp="20211130 10:42:26.196" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:42:21.436" endtime="20211130 10:42:26.196"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:42:26.196" endtime="20211130 10:42:26.197"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:26.203" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/38308-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:32.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:32.271" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211130 10:42:26.200" endtime="20211130 10:42:32.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:32.273" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211130 10:42:32.272" endtime="20211130 10:42:32.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:32.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:32.273" endtime="20211130 10:42:32.274"/>
</kw>
<status status="PASS" starttime="20211130 10:42:26.199" endtime="20211130 10:42:32.274"/>
</kw>
<msg timestamp="20211130 10:42:32.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:26.199" endtime="20211130 10:42:32.275"/>
</kw>
<msg timestamp="20211130 10:42:32.275" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211130 10:42:26.197" endtime="20211130 10:42:32.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:32.280" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38308-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:39.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:39.049" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:42:32.277" endtime="20211130 10:42:39.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:39.052" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:42:39.050" endtime="20211130 10:42:39.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:39.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:39.052" endtime="20211130 10:42:39.053"/>
</kw>
<status status="PASS" starttime="20211130 10:42:32.277" endtime="20211130 10:42:39.054"/>
</kw>
<msg timestamp="20211130 10:42:39.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:32.276" endtime="20211130 10:42:39.054"/>
</kw>
<msg timestamp="20211130 10:42:39.055" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:42:32.275" endtime="20211130 10:42:39.055"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:42:39.055" endtime="20211130 10:42:39.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:39.064" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/38308-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:45.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:45.049" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:42:39.061" endtime="20211130 10:42:45.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:45.050" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:42:45.050" endtime="20211130 10:42:45.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:45.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:45.051" endtime="20211130 10:42:45.051"/>
</kw>
<status status="PASS" starttime="20211130 10:42:39.059" endtime="20211130 10:42:45.051"/>
</kw>
<msg timestamp="20211130 10:42:45.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:39.059" endtime="20211130 10:42:45.052"/>
</kw>
<msg timestamp="20211130 10:42:45.052" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:42:39.057" endtime="20211130 10:42:45.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:45.057" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38308-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:51.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:51.707" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:42:45.053" endtime="20211130 10:42:51.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:51.708" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:42:51.707" endtime="20211130 10:42:51.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:51.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:51.708" endtime="20211130 10:42:51.709"/>
</kw>
<status status="PASS" starttime="20211130 10:42:45.053" endtime="20211130 10:42:51.709"/>
</kw>
<msg timestamp="20211130 10:42:51.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:45.053" endtime="20211130 10:42:51.710"/>
</kw>
<msg timestamp="20211130 10:42:51.710" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:42:45.052" endtime="20211130 10:42:51.710"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:42:51.710" endtime="20211130 10:42:51.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:51.716" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/38308-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:42:56.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:42:56.255" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:42:51.713" endtime="20211130 10:42:56.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:42:56.256" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:42:56.256" endtime="20211130 10:42:56.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:42:56.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:42:56.257" endtime="20211130 10:42:56.257"/>
</kw>
<status status="PASS" starttime="20211130 10:42:51.712" endtime="20211130 10:42:56.258"/>
</kw>
<msg timestamp="20211130 10:42:56.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:51.712" endtime="20211130 10:42:56.258"/>
</kw>
<msg timestamp="20211130 10:42:56.258" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:42:51.711" endtime="20211130 10:42:56.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:42:56.262" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38308-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:43:01.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:43:01.842" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211130 10:42:56.260" endtime="20211130 10:43:01.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:43:01.845" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:43:01.843" endtime="20211130 10:43:01.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:43:01.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:43:01.845" endtime="20211130 10:43:01.846"/>
</kw>
<status status="PASS" starttime="20211130 10:42:56.259" endtime="20211130 10:43:01.847"/>
</kw>
<msg timestamp="20211130 10:43:01.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:42:56.259" endtime="20211130 10:43:01.847"/>
</kw>
<msg timestamp="20211130 10:43:01.848" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211130 10:42:56.258" endtime="20211130 10:43:01.848"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:43:01.848" endtime="20211130 10:43:01.849"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:43:01.849" endtime="20211130 10:43:01.850"/>
</kw>
<status status="PASS" starttime="20211130 10:42:15.289" endtime="20211130 10:43:01.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:42:15.243" endtime="20211130 10:43:01.851"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:43:01.860" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:43:01.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:43:01.865" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:43:01.857" endtime="20211130 10:43:01.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:43:01.867" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:43:01.866" endtime="20211130 10:43:01.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:43:01.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:43:01.867" endtime="20211130 10:43:01.868"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.856" endtime="20211130 10:43:01.868"/>
</kw>
<msg timestamp="20211130 10:43:01.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:43:01.855" endtime="20211130 10:43:01.868"/>
</kw>
<msg timestamp="20211130 10:43:01.868" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:43:01.855" endtime="20211130 10:43:01.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:43:01.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:43:01.869" endtime="20211130 10:43:01.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:43:01.874" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:43:01.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:43:01.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:43:01.872" endtime="20211130 10:43:01.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:43:01.884" level="INFO"/>
<status status="PASS" starttime="20211130 10:43:01.883" endtime="20211130 10:43:01.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:43:01.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:43:01.884" endtime="20211130 10:43:01.886"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.871" endtime="20211130 10:43:01.886"/>
</kw>
<msg timestamp="20211130 10:43:01.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:43:01.871" endtime="20211130 10:43:01.886"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.870" endtime="20211130 10:43:01.887"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.870" endtime="20211130 10:43:01.887"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.854" endtime="20211130 10:43:01.887"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.853" endtime="20211130 10:43:01.887"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:43:01.892" level="INFO">Running command 'ozone sh key put o3://om:9862/38308-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:10.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:10.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:43:01.890" endtime="20211130 10:46:10.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:10.058" level="INFO"/>
<status status="PASS" starttime="20211130 10:46:10.056" endtime="20211130 10:46:10.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:10.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:10.059" endtime="20211130 10:46:10.060"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.889" endtime="20211130 10:46:10.061"/>
</kw>
<msg timestamp="20211130 10:46:10.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:43:01.889" endtime="20211130 10:46:10.061"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.888" endtime="20211130 10:46:10.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:10.068" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38308-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:17.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:17.361" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211130 10:46:10.065" endtime="20211130 10:46:17.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:17.362" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:46:17.361" endtime="20211130 10:46:17.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:17.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:17.362" endtime="20211130 10:46:17.363"/>
</kw>
<status status="PASS" starttime="20211130 10:46:10.064" endtime="20211130 10:46:17.363"/>
</kw>
<msg timestamp="20211130 10:46:17.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:10.063" endtime="20211130 10:46:17.363"/>
</kw>
<msg timestamp="20211130 10:46:17.363" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211130 10:46:10.062" endtime="20211130 10:46:17.363"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:46:17.364" endtime="20211130 10:46:17.364"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:17.369" level="INFO">Running command 'ozone sh key addacl o3://om:9862/38308-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:24.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:24.312" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:46:17.366" endtime="20211130 10:46:24.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:24.314" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:46:24.313" endtime="20211130 10:46:24.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:24.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:24.315" endtime="20211130 10:46:24.316"/>
</kw>
<status status="PASS" starttime="20211130 10:46:17.365" endtime="20211130 10:46:24.316"/>
</kw>
<msg timestamp="20211130 10:46:24.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:17.365" endtime="20211130 10:46:24.317"/>
</kw>
<msg timestamp="20211130 10:46:24.318" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211130 10:46:17.364" endtime="20211130 10:46:24.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:24.323" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38308-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:30.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:30.979" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211130 10:46:24.320" endtime="20211130 10:46:30.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:30.980" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:46:30.979" endtime="20211130 10:46:30.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:30.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:30.980" endtime="20211130 10:46:30.982"/>
</kw>
<status status="PASS" starttime="20211130 10:46:24.320" endtime="20211130 10:46:30.982"/>
</kw>
<msg timestamp="20211130 10:46:30.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:24.319" endtime="20211130 10:46:30.982"/>
</kw>
<msg timestamp="20211130 10:46:30.982" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211130 10:46:24.318" endtime="20211130 10:46:30.982"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:46:30.983" endtime="20211130 10:46:30.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:30.988" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/38308-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:36.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:36.767" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:46:30.986" endtime="20211130 10:46:36.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:36.770" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:46:36.769" endtime="20211130 10:46:36.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:36.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:36.770" endtime="20211130 10:46:36.771"/>
</kw>
<status status="PASS" starttime="20211130 10:46:30.985" endtime="20211130 10:46:36.772"/>
</kw>
<msg timestamp="20211130 10:46:36.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:30.985" endtime="20211130 10:46:36.772"/>
</kw>
<msg timestamp="20211130 10:46:36.773" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211130 10:46:30.984" endtime="20211130 10:46:36.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:36.779" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38308-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:43.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:43.700" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211130 10:46:36.776" endtime="20211130 10:46:43.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:43.701" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:46:43.701" endtime="20211130 10:46:43.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:43.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:43.702" endtime="20211130 10:46:43.702"/>
</kw>
<status status="PASS" starttime="20211130 10:46:36.775" endtime="20211130 10:46:43.702"/>
</kw>
<msg timestamp="20211130 10:46:43.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:36.775" endtime="20211130 10:46:43.703"/>
</kw>
<msg timestamp="20211130 10:46:43.703" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211130 10:46:36.773" endtime="20211130 10:46:43.703"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:46:43.703" endtime="20211130 10:46:43.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:43.709" level="INFO">Running command 'ozone sh key setacl o3://om:9862/38308-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:50.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:50.119" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:46:43.705" endtime="20211130 10:46:50.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:50.122" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:46:50.120" endtime="20211130 10:46:50.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:50.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:50.122" endtime="20211130 10:46:50.124"/>
</kw>
<status status="PASS" starttime="20211130 10:46:43.704" endtime="20211130 10:46:50.124"/>
</kw>
<msg timestamp="20211130 10:46:50.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:43.704" endtime="20211130 10:46:50.125"/>
</kw>
<msg timestamp="20211130 10:46:50.125" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:46:43.704" endtime="20211130 10:46:50.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:50.132" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38308-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:56.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:56.896" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211130 10:46:50.129" endtime="20211130 10:46:56.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:56.899" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:46:56.897" endtime="20211130 10:46:56.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:56.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:56.899" endtime="20211130 10:46:56.899"/>
</kw>
<status status="PASS" starttime="20211130 10:46:50.128" endtime="20211130 10:46:56.900"/>
</kw>
<msg timestamp="20211130 10:46:56.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:50.128" endtime="20211130 10:46:56.900"/>
</kw>
<msg timestamp="20211130 10:46:56.900" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211130 10:46:50.126" endtime="20211130 10:46:56.900"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:46:56.901" endtime="20211130 10:46:56.901"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:46:56.901" endtime="20211130 10:46:56.903"/>
</kw>
<status status="PASS" starttime="20211130 10:43:01.887" endtime="20211130 10:46:56.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:43:01.851" endtime="20211130 10:46:56.903"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:56.911" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:56.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:56.914" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:46:56.908" endtime="20211130 10:46:56.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:56.917" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:46:56.915" endtime="20211130 10:46:56.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:56.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:56.917" endtime="20211130 10:46:56.918"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.907" endtime="20211130 10:46:56.918"/>
</kw>
<msg timestamp="20211130 10:46:56.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:56.907" endtime="20211130 10:46:56.919"/>
</kw>
<msg timestamp="20211130 10:46:56.919" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:46:56.907" endtime="20211130 10:46:56.919"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:46:56.920" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:46:56.919" endtime="20211130 10:46:56.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:56.924" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:46:56.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:46:56.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:46:56.922" endtime="20211130 10:46:56.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:46:56.965" level="INFO"/>
<status status="PASS" starttime="20211130 10:46:56.965" endtime="20211130 10:46:56.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:46:56.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:46:56.966" endtime="20211130 10:46:56.966"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.922" endtime="20211130 10:46:56.966"/>
</kw>
<msg timestamp="20211130 10:46:56.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:56.921" endtime="20211130 10:46:56.967"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.920" endtime="20211130 10:46:56.967"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.920" endtime="20211130 10:46:56.967"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.906" endtime="20211130 10:46:56.967"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.905" endtime="20211130 10:46:56.967"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:46:56.972" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:47:03.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:47:03.526" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211130 10:46:56.969" endtime="20211130 10:47:03.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:47:03.527" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211130 10:47:03.526" endtime="20211130 10:47:03.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:47:03.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:47:03.528" endtime="20211130 10:47:03.529"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.969" endtime="20211130 10:47:03.530"/>
</kw>
<msg timestamp="20211130 10:47:03.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:46:56.968" endtime="20211130 10:47:03.530"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.968" endtime="20211130 10:47:03.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:47:03.539" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:47:10.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:47:10.006" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211130 10:47:03.535" endtime="20211130 10:47:10.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:47:10.007" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:47:10.007" endtime="20211130 10:47:10.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:47:10.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:47:10.008" endtime="20211130 10:47:10.008"/>
</kw>
<status status="PASS" starttime="20211130 10:47:03.534" endtime="20211130 10:47:10.008"/>
</kw>
<msg timestamp="20211130 10:47:10.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:47:03.533" endtime="20211130 10:47:10.009"/>
</kw>
<msg timestamp="20211130 10:47:10.009" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211130 10:47:03.531" endtime="20211130 10:47:10.009"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:47:10.009" endtime="20211130 10:47:10.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:47:10.015" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:47:16.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:47:16.257" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211130 10:47:10.012" endtime="20211130 10:47:16.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:47:16.258" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211130 10:47:16.257" endtime="20211130 10:47:16.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:47:16.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:47:16.258" endtime="20211130 10:47:16.259"/>
</kw>
<status status="PASS" starttime="20211130 10:47:10.011" endtime="20211130 10:47:16.260"/>
</kw>
<msg timestamp="20211130 10:47:16.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:47:10.011" endtime="20211130 10:47:16.260"/>
</kw>
<msg timestamp="20211130 10:47:16.261" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211130 10:47:10.010" endtime="20211130 10:47:16.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:47:16.269" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:47:22.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:47:22.653" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211130 10:47:16.265" endtime="20211130 10:47:22.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:47:22.655" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:47:22.653" endtime="20211130 10:47:22.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:47:22.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:47:22.655" endtime="20211130 10:47:22.656"/>
</kw>
<status status="PASS" starttime="20211130 10:47:16.264" endtime="20211130 10:47:22.656"/>
</kw>
<msg timestamp="20211130 10:47:22.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:47:16.263" endtime="20211130 10:47:22.656"/>
</kw>
<msg timestamp="20211130 10:47:22.657" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211130 10:47:16.261" endtime="20211130 10:47:22.657"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:47:22.657" endtime="20211130 10:47:22.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:47:22.665" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:47:28.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:47:28.445" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:47:22.662" endtime="20211130 10:47:28.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:47:28.449" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:47:28.446" endtime="20211130 10:47:28.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:47:28.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:47:28.449" endtime="20211130 10:47:28.450"/>
</kw>
<status status="PASS" starttime="20211130 10:47:22.660" endtime="20211130 10:47:28.450"/>
</kw>
<msg timestamp="20211130 10:47:28.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:47:22.660" endtime="20211130 10:47:28.450"/>
</kw>
<msg timestamp="20211130 10:47:28.451" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211130 10:47:22.659" endtime="20211130 10:47:28.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:47:28.455" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:47:34.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:47:34.701" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211130 10:47:28.452" endtime="20211130 10:47:34.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:47:34.702" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:47:34.702" endtime="20211130 10:47:34.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:47:34.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:47:34.703" endtime="20211130 10:47:34.703"/>
</kw>
<status status="PASS" starttime="20211130 10:47:28.452" endtime="20211130 10:47:34.703"/>
</kw>
<msg timestamp="20211130 10:47:34.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:47:28.452" endtime="20211130 10:47:34.704"/>
</kw>
<msg timestamp="20211130 10:47:34.704" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211130 10:47:28.451" endtime="20211130 10:47:34.704"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:47:34.704" endtime="20211130 10:47:34.705"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:47:34.705" endtime="20211130 10:47:34.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:47:34.713" level="INFO">Running command 'ozone sh key put o3://om:9862/38308-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:50:44.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:50:44.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:47:34.709" endtime="20211130 10:50:44.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:50:44.065" level="INFO"/>
<status status="PASS" starttime="20211130 10:50:44.064" endtime="20211130 10:50:44.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:50:44.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:50:44.065" endtime="20211130 10:50:44.066"/>
</kw>
<status status="PASS" starttime="20211130 10:47:34.708" endtime="20211130 10:50:44.066"/>
</kw>
<msg timestamp="20211130 10:50:44.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:47:34.707" endtime="20211130 10:50:44.066"/>
</kw>
<status status="PASS" starttime="20211130 10:47:34.706" endtime="20211130 10:50:44.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:50:44.071" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38308-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:50:49.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:50:49.361" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:50:44.069" endtime="20211130 10:50:49.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:50:49.362" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211130 10:50:49.362" endtime="20211130 10:50:49.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:50:49.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:50:49.363" endtime="20211130 10:50:49.363"/>
</kw>
<status status="PASS" starttime="20211130 10:50:44.068" endtime="20211130 10:50:49.363"/>
</kw>
<msg timestamp="20211130 10:50:49.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:50:44.068" endtime="20211130 10:50:49.364"/>
</kw>
<msg timestamp="20211130 10:50:49.364" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211130 10:50:44.067" endtime="20211130 10:50:49.364"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:50:49.364" endtime="20211130 10:50:49.365"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211130 10:50:49.365" endtime="20211130 10:50:49.366"/>
</kw>
<status status="PASS" starttime="20211130 10:46:56.967" endtime="20211130 10:50:49.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211130 10:46:56.904" endtime="20211130 10:50:49.366"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:50:49.376" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:50:49.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:50:49.380" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:50:49.372" endtime="20211130 10:50:49.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:50:49.383" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:50:49.382" endtime="20211130 10:50:49.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:50:49.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:50:49.383" endtime="20211130 10:50:49.384"/>
</kw>
<status status="PASS" starttime="20211130 10:50:49.371" endtime="20211130 10:50:49.385"/>
</kw>
<msg timestamp="20211130 10:50:49.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:50:49.370" endtime="20211130 10:50:49.385"/>
</kw>
<msg timestamp="20211130 10:50:49.385" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:50:49.370" endtime="20211130 10:50:49.385"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:50:49.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:50:49.386" endtime="20211130 10:50:49.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:50:49.392" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:50:49.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:50:49.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:50:49.390" endtime="20211130 10:50:49.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:50:49.415" level="INFO"/>
<status status="PASS" starttime="20211130 10:50:49.415" endtime="20211130 10:50:49.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:50:49.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:50:49.416" endtime="20211130 10:50:49.416"/>
</kw>
<status status="PASS" starttime="20211130 10:50:49.389" endtime="20211130 10:50:49.416"/>
</kw>
<msg timestamp="20211130 10:50:49.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:50:49.389" endtime="20211130 10:50:49.417"/>
</kw>
<status status="PASS" starttime="20211130 10:50:49.388" endtime="20211130 10:50:49.417"/>
</kw>
<status status="PASS" starttime="20211130 10:50:49.387" endtime="20211130 10:50:49.417"/>
</kw>
<status status="PASS" starttime="20211130 10:50:49.369" endtime="20211130 10:50:49.417"/>
</kw>
<status status="PASS" starttime="20211130 10:50:49.368" endtime="20211130 10:50:49.417"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:50:49.421" level="INFO">Running command 'ozone sh volume info o3:///38308-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:50:55.865" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:50:55.865" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38308-rpcwport is not found</msg>
<status status="PASS" starttime="20211130 10:50:49.419" endtime="20211130 10:50:55.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:50:55.866" level="INFO">VOLUME_NOT_FOUND Volume 38308-rpcwport is not found</msg>
<status status="PASS" starttime="20211130 10:50:55.865" endtime="20211130 10:50:55.866"/>
</kw>
<msg timestamp="20211130 10:50:55.866" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38308-rpcwport is not found</msg>
<status status="PASS" starttime="20211130 10:50:49.418" endtime="20211130 10:50:55.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:50:55.867" endtime="20211130 10:50:55.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:50:55.872" level="INFO">Running command 'ozone sh volume create o3:///38308-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:02.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:02.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:50:55.869" endtime="20211130 10:51:02.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:02.087" level="INFO"/>
<status status="PASS" starttime="20211130 10:51:02.085" endtime="20211130 10:51:02.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:02.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:02.087" endtime="20211130 10:51:02.088"/>
</kw>
<status status="PASS" starttime="20211130 10:50:55.868" endtime="20211130 10:51:02.089"/>
</kw>
<msg timestamp="20211130 10:51:02.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:50:55.868" endtime="20211130 10:51:02.089"/>
</kw>
<msg timestamp="20211130 10:51:02.090" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211130 10:50:55.867" endtime="20211130 10:51:02.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:51:02.090" endtime="20211130 10:51:02.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:02.097" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="38308-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:08.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:08.789" level="INFO">${output} = {
  "metadata": {},
  "name": "38308-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:51:02.094" endtime="20211130 10:51:08.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:08.791" level="INFO">{
  "metadata": {},
  "name": "38308-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:51:01.997Z",
  "modificationTime": "2021-11-30T10:51:01.997Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:51:08.790" endtime="20211130 10:51:08.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:08.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:08.791" endtime="20211130 10:51:08.792"/>
</kw>
<status status="PASS" starttime="20211130 10:51:02.093" endtime="20211130 10:51:08.792"/>
</kw>
<msg timestamp="20211130 10:51:08.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:02.093" endtime="20211130 10:51:08.792"/>
</kw>
<msg timestamp="20211130 10:51:08.793" level="INFO">${result} = {
  "metadata": {},
  "name": "38308-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:51:02.091" endtime="20211130 10:51:08.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:51:08.793" endtime="20211130 10:51:08.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:08.799" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="38308-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:15.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:15.710" level="INFO">${output} = {
  "metadata": {},
  "name": "38308-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:51:08.797" endtime="20211130 10:51:15.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:15.713" level="INFO">{
  "metadata": {},
  "name": "38308-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:51:01.997Z",
  "modificationTime": "2021-11-30T10:51:01.997Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:51:15.712" endtime="20211130 10:51:15.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:15.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:15.713" endtime="20211130 10:51:15.714"/>
</kw>
<status status="PASS" starttime="20211130 10:51:08.796" endtime="20211130 10:51:15.714"/>
</kw>
<msg timestamp="20211130 10:51:15.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:08.796" endtime="20211130 10:51:15.715"/>
</kw>
<msg timestamp="20211130 10:51:15.715" level="INFO">${result} = {
  "metadata": {},
  "name": "38308-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211130 10:51:08.794" endtime="20211130 10:51:15.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:51:15.715" endtime="20211130 10:51:15.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:15.722" level="INFO">Running command 'ozone sh volume setquota o3:///38308-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:22.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:22.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:51:15.718" endtime="20211130 10:51:22.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:22.143" level="INFO"/>
<status status="PASS" starttime="20211130 10:51:22.142" endtime="20211130 10:51:22.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:22.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:22.144" endtime="20211130 10:51:22.145"/>
</kw>
<status status="PASS" starttime="20211130 10:51:15.717" endtime="20211130 10:51:22.146"/>
</kw>
<msg timestamp="20211130 10:51:22.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:15.717" endtime="20211130 10:51:22.146"/>
</kw>
<status status="PASS" starttime="20211130 10:51:15.716" endtime="20211130 10:51:22.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:22.153" level="INFO">Running command 'ozone sh volume info o3:///38308-rpcwport | jq -r '. | select(.name=="38308-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:28.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:28.577" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:51:22.150" endtime="20211130 10:51:28.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:28.579" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:51:28.578" endtime="20211130 10:51:28.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:28.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:28.579" endtime="20211130 10:51:28.579"/>
</kw>
<status status="PASS" starttime="20211130 10:51:22.149" endtime="20211130 10:51:28.580"/>
</kw>
<msg timestamp="20211130 10:51:28.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:22.148" endtime="20211130 10:51:28.580"/>
</kw>
<msg timestamp="20211130 10:51:28.580" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:51:22.147" endtime="20211130 10:51:28.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:51:28.580" endtime="20211130 10:51:28.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:28.584" level="INFO">Running command 'ozone sh bucket create o3:///38308-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:35.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:35.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:51:28.582" endtime="20211130 10:51:35.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:35.179" level="INFO"/>
<status status="PASS" starttime="20211130 10:51:35.179" endtime="20211130 10:51:35.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:35.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:35.180" endtime="20211130 10:51:35.180"/>
</kw>
<status status="PASS" starttime="20211130 10:51:28.582" endtime="20211130 10:51:35.180"/>
</kw>
<msg timestamp="20211130 10:51:35.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:28.582" endtime="20211130 10:51:35.181"/>
</kw>
<status status="PASS" starttime="20211130 10:51:28.581" endtime="20211130 10:51:35.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:35.189" level="INFO">Running command 'ozone sh bucket info o3:///38308-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:41.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:41.794" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211130 10:51:35.186" endtime="20211130 10:51:41.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:41.795" level="INFO">DISK</msg>
<status status="PASS" starttime="20211130 10:51:41.794" endtime="20211130 10:51:41.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:41.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:41.795" endtime="20211130 10:51:41.796"/>
</kw>
<status status="PASS" starttime="20211130 10:51:35.185" endtime="20211130 10:51:41.796"/>
</kw>
<msg timestamp="20211130 10:51:41.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:35.182" endtime="20211130 10:51:41.797"/>
</kw>
<msg timestamp="20211130 10:51:41.797" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211130 10:51:35.181" endtime="20211130 10:51:41.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:51:41.797" endtime="20211130 10:51:41.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:41.801" level="INFO">Running command 'ozone sh bucket info o3:///38308-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:48.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:48.194" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:51:41.799" endtime="20211130 10:51:48.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:48.197" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:51:48.195" endtime="20211130 10:51:48.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:48.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:48.197" endtime="20211130 10:51:48.199"/>
</kw>
<status status="PASS" starttime="20211130 10:51:41.799" endtime="20211130 10:51:48.199"/>
</kw>
<msg timestamp="20211130 10:51:48.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:41.798" endtime="20211130 10:51:48.199"/>
</kw>
<msg timestamp="20211130 10:51:48.202" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:51:41.798" endtime="20211130 10:51:48.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:51:48.203" endtime="20211130 10:51:48.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:48.209" level="INFO">Running command 'ozone sh bucket info o3:///38308-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:54.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:54.492" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211130 10:51:48.206" endtime="20211130 10:51:54.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:54.494" level="INFO">100</msg>
<status status="PASS" starttime="20211130 10:51:54.493" endtime="20211130 10:51:54.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:54.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:54.494" endtime="20211130 10:51:54.495"/>
</kw>
<status status="PASS" starttime="20211130 10:51:48.204" endtime="20211130 10:51:54.495"/>
</kw>
<msg timestamp="20211130 10:51:54.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:48.204" endtime="20211130 10:51:54.495"/>
</kw>
<msg timestamp="20211130 10:51:54.496" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211130 10:51:48.203" endtime="20211130 10:51:54.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:51:54.496" endtime="20211130 10:51:54.496"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:54.500" level="INFO">Running command 'ozone sh bucket setquota o3:///38308-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:51:58.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:51:58.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:51:54.498" endtime="20211130 10:51:58.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:51:58.708" level="INFO"/>
<status status="PASS" starttime="20211130 10:51:58.707" endtime="20211130 10:51:58.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:51:58.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:51:58.708" endtime="20211130 10:51:58.709"/>
</kw>
<status status="PASS" starttime="20211130 10:51:54.497" endtime="20211130 10:51:58.712"/>
</kw>
<msg timestamp="20211130 10:51:58.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:54.497" endtime="20211130 10:51:58.712"/>
</kw>
<status status="PASS" starttime="20211130 10:51:54.496" endtime="20211130 10:51:58.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:51:58.720" level="INFO">Running command 'ozone sh bucket info o3:///38308-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:52:05.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:52:05.019" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:51:58.717" endtime="20211130 10:52:05.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:52:05.022" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211130 10:52:05.021" endtime="20211130 10:52:05.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:52:05.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:52:05.023" endtime="20211130 10:52:05.024"/>
</kw>
<status status="PASS" starttime="20211130 10:51:58.715" endtime="20211130 10:52:05.024"/>
</kw>
<msg timestamp="20211130 10:52:05.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:51:58.715" endtime="20211130 10:52:05.025"/>
</kw>
<msg timestamp="20211130 10:52:05.025" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:51:58.713" endtime="20211130 10:52:05.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:52:05.025" endtime="20211130 10:52:05.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:52:05.033" level="INFO">Running command 'ozone sh bucket info o3:///38308-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:52:12.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:52:12.073" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211130 10:52:05.030" endtime="20211130 10:52:12.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:52:12.075" level="INFO">1000</msg>
<status status="PASS" starttime="20211130 10:52:12.074" endtime="20211130 10:52:12.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:52:12.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:52:12.075" endtime="20211130 10:52:12.076"/>
</kw>
<status status="PASS" starttime="20211130 10:52:05.029" endtime="20211130 10:52:12.076"/>
</kw>
<msg timestamp="20211130 10:52:12.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:52:05.028" endtime="20211130 10:52:12.077"/>
</kw>
<msg timestamp="20211130 10:52:12.077" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211130 10:52:05.027" endtime="20211130 10:52:12.077"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:52:12.077" endtime="20211130 10:52:12.078"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:52:12.083" level="INFO">Running command 'ozone sh bucket list o3:///38308-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:52:19.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:52:19.082" level="INFO">${output} = 38308-rpcwport</msg>
<status status="PASS" starttime="20211130 10:52:12.081" endtime="20211130 10:52:19.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:52:19.083" level="INFO">38308-rpcwport</msg>
<status status="PASS" starttime="20211130 10:52:19.083" endtime="20211130 10:52:19.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:52:19.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:52:19.084" endtime="20211130 10:52:19.084"/>
</kw>
<status status="PASS" starttime="20211130 10:52:12.080" endtime="20211130 10:52:19.084"/>
</kw>
<msg timestamp="20211130 10:52:19.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:52:12.079" endtime="20211130 10:52:19.085"/>
</kw>
<msg timestamp="20211130 10:52:19.085" level="INFO">${result} = 38308-rpcwport</msg>
<status status="PASS" starttime="20211130 10:52:12.078" endtime="20211130 10:52:19.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:52:19.086" endtime="20211130 10:52:19.087"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:52:19.095" level="INFO">Running command 'ozone sh key put o3:///38308-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:29.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:55:29.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:52:19.092" endtime="20211130 10:55:29.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:29.016" level="INFO"/>
<status status="PASS" starttime="20211130 10:55:29.015" endtime="20211130 10:55:29.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:55:29.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:55:29.016" endtime="20211130 10:55:29.017"/>
</kw>
<status status="PASS" starttime="20211130 10:52:19.091" endtime="20211130 10:55:29.018"/>
</kw>
<msg timestamp="20211130 10:55:29.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:52:19.090" endtime="20211130 10:55:29.018"/>
</kw>
<status status="PASS" starttime="20211130 10:52:19.089" endtime="20211130 10:55:29.018"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:29.023" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:29.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:55:29.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:55:29.020" endtime="20211130 10:55:29.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:29.030" level="INFO"/>
<status status="PASS" starttime="20211130 10:55:29.028" endtime="20211130 10:55:29.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:55:29.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:55:29.030" endtime="20211130 10:55:29.031"/>
</kw>
<status status="PASS" starttime="20211130 10:55:29.019" endtime="20211130 10:55:29.031"/>
</kw>
<msg timestamp="20211130 10:55:29.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:55:29.019" endtime="20211130 10:55:29.031"/>
</kw>
<status status="PASS" starttime="20211130 10:55:29.018" endtime="20211130 10:55:29.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:29.036" level="INFO">Running command 'ozone sh key get o3:///38308-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:38.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:55:38.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:55:29.034" endtime="20211130 10:55:38.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:38.687" level="INFO"/>
<status status="PASS" starttime="20211130 10:55:38.686" endtime="20211130 10:55:38.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:55:38.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:55:38.687" endtime="20211130 10:55:38.688"/>
</kw>
<status status="PASS" starttime="20211130 10:55:29.033" endtime="20211130 10:55:38.688"/>
</kw>
<msg timestamp="20211130 10:55:38.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:55:29.033" endtime="20211130 10:55:38.688"/>
</kw>
<status status="PASS" starttime="20211130 10:55:29.032" endtime="20211130 10:55:38.689"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:38.692" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:38.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:55:38.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:55:38.690" endtime="20211130 10:55:38.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:38.696" level="INFO"/>
<status status="PASS" starttime="20211130 10:55:38.696" endtime="20211130 10:55:38.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:55:38.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:55:38.696" endtime="20211130 10:55:38.699"/>
</kw>
<status status="PASS" starttime="20211130 10:55:38.690" endtime="20211130 10:55:38.700"/>
</kw>
<msg timestamp="20211130 10:55:38.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:55:38.689" endtime="20211130 10:55:38.700"/>
</kw>
<status status="PASS" starttime="20211130 10:55:38.689" endtime="20211130 10:55:38.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:38.707" level="INFO">Running command 'ozone sh key put -t RATIS o3:///38308-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:49.368" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 10:55:38.702" endtime="20211130 10:55:49.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.368" endtime="20211130 10:55:49.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.369" endtime="20211130 10:55:49.369"/>
</kw>
<status status="FAIL" starttime="20211130 10:55:38.702" endtime="20211130 10:55:49.369"/>
</kw>
<msg timestamp="20211130 10:55:49.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 10:55:38.702" endtime="20211130 10:55:49.369"/>
</kw>
<status status="FAIL" starttime="20211130 10:55:38.701" endtime="20211130 10:55:49.370"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.370" endtime="20211130 10:55:49.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.370" endtime="20211130 10:55:49.370"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.370" endtime="20211130 10:55:49.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.371" endtime="20211130 10:55:49.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.371" endtime="20211130 10:55:49.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.371" endtime="20211130 10:55:49.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.371" endtime="20211130 10:55:49.371"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.372" endtime="20211130 10:55:49.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.372" endtime="20211130 10:55:49.372"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.372" endtime="20211130 10:55:49.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.372" endtime="20211130 10:55:49.372"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.372" endtime="20211130 10:55:49.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.373" endtime="20211130 10:55:49.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.373" endtime="20211130 10:55:49.373"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.373" endtime="20211130 10:55:49.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.373" endtime="20211130 10:55:49.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.373" endtime="20211130 10:55:49.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.374" endtime="20211130 10:55:49.374"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.374" endtime="20211130 10:55:49.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.375" endtime="20211130 10:55:49.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.375" endtime="20211130 10:55:49.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.376" endtime="20211130 10:55:49.376"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.376" endtime="20211130 10:55:49.376"/>
</kw>
<status status="FAIL" starttime="20211130 10:52:19.087" endtime="20211130 10:55:49.377"/>
</kw>
<status status="FAIL" starttime="20211130 10:52:19.087" endtime="20211130 10:55:49.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.378" endtime="20211130 10:55:49.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.378" endtime="20211130 10:55:49.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.378" endtime="20211130 10:55:49.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.379" endtime="20211130 10:55:49.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.379" endtime="20211130 10:55:49.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.380" endtime="20211130 10:55:49.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.380" endtime="20211130 10:55:49.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.382" endtime="20211130 10:55:49.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.382" endtime="20211130 10:55:49.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.382" endtime="20211130 10:55:49.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.383" endtime="20211130 10:55:49.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.384" endtime="20211130 10:55:49.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.384" endtime="20211130 10:55:49.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.385" endtime="20211130 10:55:49.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.385" endtime="20211130 10:55:49.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.385" endtime="20211130 10:55:49.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.385" endtime="20211130 10:55:49.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.386" endtime="20211130 10:55:49.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.387" endtime="20211130 10:55:49.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.387" endtime="20211130 10:55:49.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.388" endtime="20211130 10:55:49.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.388" endtime="20211130 10:55:49.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.388" endtime="20211130 10:55:49.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 10:55:49.389" endtime="20211130 10:55:49.389"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.389" endtime="20211130 10:55:49.389"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 10:55:49.390" endtime="20211130 10:55:49.390"/>
</kw>
<status status="FAIL" starttime="20211130 10:50:49.417" endtime="20211130 10:55:49.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211130 10:50:49.367" endtime="20211130 10:55:49.391">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:49.407" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:49.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:55:49.410" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:55:49.400" endtime="20211130 10:55:49.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:49.413" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:55:49.411" endtime="20211130 10:55:49.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:55:49.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:55:49.413" endtime="20211130 10:55:49.414"/>
</kw>
<status status="PASS" starttime="20211130 10:55:49.399" endtime="20211130 10:55:49.414"/>
</kw>
<msg timestamp="20211130 10:55:49.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:55:49.399" endtime="20211130 10:55:49.414"/>
</kw>
<msg timestamp="20211130 10:55:49.415" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:55:49.398" endtime="20211130 10:55:49.415"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:55:49.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:55:49.415" endtime="20211130 10:55:49.415"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:49.426" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:49.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:55:49.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:55:49.422" endtime="20211130 10:55:49.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:49.480" level="INFO"/>
<status status="PASS" starttime="20211130 10:55:49.480" endtime="20211130 10:55:49.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:55:49.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:55:49.481" endtime="20211130 10:55:49.482"/>
</kw>
<status status="PASS" starttime="20211130 10:55:49.417" endtime="20211130 10:55:49.482"/>
</kw>
<msg timestamp="20211130 10:55:49.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:55:49.416" endtime="20211130 10:55:49.482"/>
</kw>
<status status="PASS" starttime="20211130 10:55:49.416" endtime="20211130 10:55:49.482"/>
</kw>
<status status="PASS" starttime="20211130 10:55:49.415" endtime="20211130 10:55:49.483"/>
</kw>
<status status="PASS" starttime="20211130 10:55:49.396" endtime="20211130 10:55:49.483"/>
</kw>
<status status="PASS" starttime="20211130 10:55:49.395" endtime="20211130 10:55:49.483"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:49.496" level="INFO">Running command 'ozone sh volume info /38308-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:55:55.731" level="INFO">${rc} = 255</msg>
<msg timestamp="20211130 10:55:55.731" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38308-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211130 10:55:49.487" endtime="20211130 10:55:55.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:55:55.733" level="INFO">VOLUME_NOT_FOUND Volume 38308-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211130 10:55:55.732" endtime="20211130 10:55:55.733"/>
</kw>
<msg timestamp="20211130 10:55:55.734" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38308-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211130 10:55:49.486" endtime="20211130 10:55:55.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:55:55.734" endtime="20211130 10:55:55.734"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:55:55.739" level="INFO">Running command 'ozone sh volume create /38308-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:01.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:01.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:55:55.736" endtime="20211130 10:56:01.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:01.463" level="INFO"/>
<status status="PASS" starttime="20211130 10:56:01.462" endtime="20211130 10:56:01.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:01.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:01.463" endtime="20211130 10:56:01.464"/>
</kw>
<status status="PASS" starttime="20211130 10:55:55.735" endtime="20211130 10:56:01.464"/>
</kw>
<msg timestamp="20211130 10:56:01.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:55:55.735" endtime="20211130 10:56:01.464"/>
</kw>
<msg timestamp="20211130 10:56:01.465" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211130 10:55:55.734" endtime="20211130 10:56:01.465"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:56:01.465" endtime="20211130 10:56:01.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:01.474" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="38308-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:07.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:07.959" level="INFO">${output} = {
  "metadata": {},
  "name": "38308-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211130 10:56:01.469" endtime="20211130 10:56:07.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:07.961" level="INFO">{
  "metadata": {},
  "name": "38308-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:56:01.348Z",
  "modificationTime": "2021-11-30T10:56:01.348Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:56:07.960" endtime="20211130 10:56:07.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:07.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:07.961" endtime="20211130 10:56:07.962"/>
</kw>
<status status="PASS" starttime="20211130 10:56:01.468" endtime="20211130 10:56:07.962"/>
</kw>
<msg timestamp="20211130 10:56:07.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:01.468" endtime="20211130 10:56:07.963"/>
</kw>
<msg timestamp="20211130 10:56:07.963" level="INFO">${result} = {
  "metadata": {},
  "name": "38308-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211130 10:56:01.466" endtime="20211130 10:56:07.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:56:07.963" endtime="20211130 10:56:07.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:07.969" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="38308-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:15.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:15.177" level="INFO">${output} = {
  "metadata": {},
  "name": "38308-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211130 10:56:07.965" endtime="20211130 10:56:15.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:15.179" level="INFO">{
  "metadata": {},
  "name": "38308-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-11-30T10:56:01.348Z",
  "modificationTime": "2021-11-30T10:56:01.348Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211130 10:56:15.178" endtime="20211130 10:56:15.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:15.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:15.179" endtime="20211130 10:56:15.180"/>
</kw>
<status status="PASS" starttime="20211130 10:56:07.964" endtime="20211130 10:56:15.180"/>
</kw>
<msg timestamp="20211130 10:56:15.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:07.964" endtime="20211130 10:56:15.180"/>
</kw>
<msg timestamp="20211130 10:56:15.180" level="INFO">${result} = {
  "metadata": {},
  "name": "38308-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211130 10:56:07.963" endtime="20211130 10:56:15.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211130 10:56:15.181" endtime="20211130 10:56:15.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:15.187" level="INFO">Running command 'ozone sh volume setquota /38308-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:19.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:19.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:56:15.182" endtime="20211130 10:56:19.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:19.687" level="INFO"/>
<status status="PASS" starttime="20211130 10:56:19.686" endtime="20211130 10:56:19.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:19.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:19.688" endtime="20211130 10:56:19.689"/>
</kw>
<status status="PASS" starttime="20211130 10:56:15.182" endtime="20211130 10:56:19.689"/>
</kw>
<msg timestamp="20211130 10:56:19.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:15.182" endtime="20211130 10:56:19.689"/>
</kw>
<status status="PASS" starttime="20211130 10:56:15.181" endtime="20211130 10:56:19.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:19.695" level="INFO">Running command 'ozone sh volume info /38308-rpcwoscheme | jq -r '. | select(.name=="38308-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:26.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:26.736" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:56:19.692" endtime="20211130 10:56:26.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:26.739" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:56:26.737" endtime="20211130 10:56:26.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:26.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:26.739" endtime="20211130 10:56:26.740"/>
</kw>
<status status="PASS" starttime="20211130 10:56:19.692" endtime="20211130 10:56:26.740"/>
</kw>
<msg timestamp="20211130 10:56:26.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:19.691" endtime="20211130 10:56:26.740"/>
</kw>
<msg timestamp="20211130 10:56:26.741" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:56:19.690" endtime="20211130 10:56:26.741"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:56:26.741" endtime="20211130 10:56:26.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:26.746" level="INFO">Running command 'ozone sh bucket create /38308-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:34.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:34.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:56:26.743" endtime="20211130 10:56:34.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:34.184" level="INFO"/>
<status status="PASS" starttime="20211130 10:56:34.183" endtime="20211130 10:56:34.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:34.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:34.185" endtime="20211130 10:56:34.186"/>
</kw>
<status status="PASS" starttime="20211130 10:56:26.743" endtime="20211130 10:56:34.187"/>
</kw>
<msg timestamp="20211130 10:56:34.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:26.742" endtime="20211130 10:56:34.187"/>
</kw>
<status status="PASS" starttime="20211130 10:56:26.742" endtime="20211130 10:56:34.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:34.194" level="INFO">Running command 'ozone sh bucket info /38308-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:40.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:40.622" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211130 10:56:34.191" endtime="20211130 10:56:40.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:40.623" level="INFO">DISK</msg>
<status status="PASS" starttime="20211130 10:56:40.622" endtime="20211130 10:56:40.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:40.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:40.623" endtime="20211130 10:56:40.624"/>
</kw>
<status status="PASS" starttime="20211130 10:56:34.190" endtime="20211130 10:56:40.624"/>
</kw>
<msg timestamp="20211130 10:56:40.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:34.189" endtime="20211130 10:56:40.624"/>
</kw>
<msg timestamp="20211130 10:56:40.625" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211130 10:56:34.188" endtime="20211130 10:56:40.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:56:40.625" endtime="20211130 10:56:40.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:40.630" level="INFO">Running command 'ozone sh bucket info /38308-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:47.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:47.274" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:56:40.628" endtime="20211130 10:56:47.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:47.275" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211130 10:56:47.275" endtime="20211130 10:56:47.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:47.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:47.276" endtime="20211130 10:56:47.277"/>
</kw>
<status status="PASS" starttime="20211130 10:56:40.627" endtime="20211130 10:56:47.277"/>
</kw>
<msg timestamp="20211130 10:56:47.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:40.627" endtime="20211130 10:56:47.278"/>
</kw>
<msg timestamp="20211130 10:56:47.278" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211130 10:56:40.626" endtime="20211130 10:56:47.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:56:47.278" endtime="20211130 10:56:47.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:47.283" level="INFO">Running command 'ozone sh bucket info /38308-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:52.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:52.125" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211130 10:56:47.280" endtime="20211130 10:56:52.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:52.128" level="INFO">100</msg>
<status status="PASS" starttime="20211130 10:56:52.126" endtime="20211130 10:56:52.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:52.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:52.128" endtime="20211130 10:56:52.130"/>
</kw>
<status status="PASS" starttime="20211130 10:56:47.280" endtime="20211130 10:56:52.130"/>
</kw>
<msg timestamp="20211130 10:56:52.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:47.280" endtime="20211130 10:56:52.131"/>
</kw>
<msg timestamp="20211130 10:56:52.131" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211130 10:56:47.278" endtime="20211130 10:56:52.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:56:52.132" endtime="20211130 10:56:52.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:52.138" level="INFO">Running command 'ozone sh bucket setquota /38308-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:56:58.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:56:58.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:56:52.135" endtime="20211130 10:56:58.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:56:58.123" level="INFO"/>
<status status="PASS" starttime="20211130 10:56:58.122" endtime="20211130 10:56:58.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:56:58.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:56:58.123" endtime="20211130 10:56:58.124"/>
</kw>
<status status="PASS" starttime="20211130 10:56:52.135" endtime="20211130 10:56:58.124"/>
</kw>
<msg timestamp="20211130 10:56:58.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:52.134" endtime="20211130 10:56:58.125"/>
</kw>
<status status="PASS" starttime="20211130 10:56:52.132" endtime="20211130 10:56:58.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:56:58.131" level="INFO">Running command 'ozone sh bucket info /38308-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:57:05.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:57:05.320" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:56:58.128" endtime="20211130 10:57:05.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:57:05.322" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211130 10:57:05.321" endtime="20211130 10:57:05.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:57:05.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:57:05.323" endtime="20211130 10:57:05.324"/>
</kw>
<status status="PASS" starttime="20211130 10:56:58.128" endtime="20211130 10:57:05.324"/>
</kw>
<msg timestamp="20211130 10:57:05.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:56:58.127" endtime="20211130 10:57:05.325"/>
</kw>
<msg timestamp="20211130 10:57:05.325" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211130 10:56:58.125" endtime="20211130 10:57:05.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:57:05.325" endtime="20211130 10:57:05.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:57:05.332" level="INFO">Running command 'ozone sh bucket info /38308-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:57:12.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:57:12.379" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211130 10:57:05.329" endtime="20211130 10:57:12.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:57:12.380" level="INFO">1000</msg>
<status status="PASS" starttime="20211130 10:57:12.380" endtime="20211130 10:57:12.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:57:12.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:57:12.381" endtime="20211130 10:57:12.382"/>
</kw>
<status status="PASS" starttime="20211130 10:57:05.328" endtime="20211130 10:57:12.382"/>
</kw>
<msg timestamp="20211130 10:57:12.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:57:05.328" endtime="20211130 10:57:12.382"/>
</kw>
<msg timestamp="20211130 10:57:12.383" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211130 10:57:05.326" endtime="20211130 10:57:12.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:57:12.383" endtime="20211130 10:57:12.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:57:12.390" level="INFO">Running command 'ozone sh bucket list /38308-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:57:19.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:57:19.254" level="INFO">${output} = 38308-rpcwoscheme</msg>
<status status="PASS" starttime="20211130 10:57:12.387" endtime="20211130 10:57:19.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:57:19.256" level="INFO">38308-rpcwoscheme</msg>
<status status="PASS" starttime="20211130 10:57:19.255" endtime="20211130 10:57:19.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:57:19.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:57:19.256" endtime="20211130 10:57:19.258"/>
</kw>
<status status="PASS" starttime="20211130 10:57:12.386" endtime="20211130 10:57:19.260"/>
</kw>
<msg timestamp="20211130 10:57:19.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:57:12.385" endtime="20211130 10:57:19.260"/>
</kw>
<msg timestamp="20211130 10:57:19.260" level="INFO">${result} = 38308-rpcwoscheme</msg>
<status status="PASS" starttime="20211130 10:57:12.384" endtime="20211130 10:57:19.260"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211130 10:57:19.260" endtime="20211130 10:57:19.262"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:57:19.271" level="INFO">Running command 'ozone sh key put /38308-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 11:00:29.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 11:00:29.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:57:19.268" endtime="20211130 11:00:29.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 11:00:29.929" level="INFO"/>
<status status="PASS" starttime="20211130 11:00:29.927" endtime="20211130 11:00:29.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 11:00:29.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 11:00:29.929" endtime="20211130 11:00:29.930"/>
</kw>
<status status="PASS" starttime="20211130 10:57:19.267" endtime="20211130 11:00:29.931"/>
</kw>
<msg timestamp="20211130 11:00:29.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:57:19.267" endtime="20211130 11:00:29.932"/>
</kw>
<status status="PASS" starttime="20211130 10:57:19.264" endtime="20211130 11:00:29.932"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 11:00:29.939" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 11:00:29.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 11:00:29.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 11:00:29.935" endtime="20211130 11:00:29.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 11:00:29.943" level="INFO"/>
<status status="PASS" starttime="20211130 11:00:29.942" endtime="20211130 11:00:29.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 11:00:29.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 11:00:29.943" endtime="20211130 11:00:29.943"/>
</kw>
<status status="PASS" starttime="20211130 11:00:29.934" endtime="20211130 11:00:29.944"/>
</kw>
<msg timestamp="20211130 11:00:29.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 11:00:29.933" endtime="20211130 11:00:29.944"/>
</kw>
<status status="PASS" starttime="20211130 11:00:29.932" endtime="20211130 11:00:29.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 11:00:29.949" level="INFO">Running command 'ozone sh key get /38308-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 11:00:39.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 11:00:39.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 11:00:29.947" endtime="20211130 11:00:39.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 11:00:39.098" level="INFO"/>
<status status="PASS" starttime="20211130 11:00:39.097" endtime="20211130 11:00:39.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 11:00:39.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 11:00:39.098" endtime="20211130 11:00:39.099"/>
</kw>
<status status="PASS" starttime="20211130 11:00:29.946" endtime="20211130 11:00:39.099"/>
</kw>
<msg timestamp="20211130 11:00:39.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 11:00:29.945" endtime="20211130 11:00:39.099"/>
</kw>
<status status="PASS" starttime="20211130 11:00:29.944" endtime="20211130 11:00:39.100"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 11:00:39.104" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 11:00:39.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 11:00:39.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 11:00:39.102" endtime="20211130 11:00:39.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 11:00:39.109" level="INFO"/>
<status status="PASS" starttime="20211130 11:00:39.108" endtime="20211130 11:00:39.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 11:00:39.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 11:00:39.109" endtime="20211130 11:00:39.109"/>
</kw>
<status status="PASS" starttime="20211130 11:00:39.101" endtime="20211130 11:00:39.110"/>
</kw>
<msg timestamp="20211130 11:00:39.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 11:00:39.100" endtime="20211130 11:00:39.110"/>
</kw>
<status status="PASS" starttime="20211130 11:00:39.100" endtime="20211130 11:00:39.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 11:00:39.115" level="INFO">Running command 'ozone sh key put -t RATIS /38308-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 11:00:49.394" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211130 11:00:39.112" endtime="20211130 11:00:49.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.394" endtime="20211130 11:00:49.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.395" endtime="20211130 11:00:49.395"/>
</kw>
<status status="FAIL" starttime="20211130 11:00:39.111" endtime="20211130 11:00:49.395"/>
</kw>
<msg timestamp="20211130 11:00:49.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211130 11:00:39.111" endtime="20211130 11:00:49.395"/>
</kw>
<status status="FAIL" starttime="20211130 11:00:39.110" endtime="20211130 11:00:49.396"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.396" endtime="20211130 11:00:49.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.396" endtime="20211130 11:00:49.396"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.396" endtime="20211130 11:00:49.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.396" endtime="20211130 11:00:49.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.396" endtime="20211130 11:00:49.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.397" endtime="20211130 11:00:49.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.397" endtime="20211130 11:00:49.397"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.397" endtime="20211130 11:00:49.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.397" endtime="20211130 11:00:49.397"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.397" endtime="20211130 11:00:49.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.397" endtime="20211130 11:00:49.397"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.398" endtime="20211130 11:00:49.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.399" endtime="20211130 11:00:49.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.399" endtime="20211130 11:00:49.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.399" endtime="20211130 11:00:49.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.399" endtime="20211130 11:00:49.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.399" endtime="20211130 11:00:49.399"/>
</kw>
<status status="FAIL" starttime="20211130 10:57:19.263" endtime="20211130 11:00:49.400"/>
</kw>
<status status="FAIL" starttime="20211130 10:57:19.262" endtime="20211130 11:00:49.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.400" endtime="20211130 11:00:49.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.400" endtime="20211130 11:00:49.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.400" endtime="20211130 11:00:49.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.400" endtime="20211130 11:00:49.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.400" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.401" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.401" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.401" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.401" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.401" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.401" endtime="20211130 11:00:49.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.402" endtime="20211130 11:00:49.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.402" endtime="20211130 11:00:49.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.402" endtime="20211130 11:00:49.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.402" endtime="20211130 11:00:49.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.402" endtime="20211130 11:00:49.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.402" endtime="20211130 11:00:49.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211130 11:00:49.403" endtime="20211130 11:00:49.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.404" endtime="20211130 11:00:49.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211130 11:00:49.404" endtime="20211130 11:00:49.404"/>
</kw>
<status status="FAIL" starttime="20211130 10:55:49.483" endtime="20211130 11:00:49.404"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211130 10:55:49.393" endtime="20211130 11:00:49.404">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211130 10:36:24.220" endtime="20211130 11:00:49.406"/>
</suite>
<status status="FAIL" starttime="20211130 10:12:41.504" endtime="20211130 11:00:49.410"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:37.171" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:37.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:37.175" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211130 10:12:37.168" endtime="20211130 10:12:37.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:37.176" level="INFO">scm</msg>
<status status="PASS" starttime="20211130 10:12:37.175" endtime="20211130 10:12:37.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:37.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:37.176" endtime="20211130 10:12:37.177"/>
</kw>
<status status="PASS" starttime="20211130 10:12:37.167" endtime="20211130 10:12:37.178"/>
</kw>
<msg timestamp="20211130 10:12:37.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:37.167" endtime="20211130 10:12:37.178"/>
</kw>
<msg timestamp="20211130 10:12:37.179" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211130 10:12:37.167" endtime="20211130 10:12:37.179"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211130 10:12:37.179" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211130 10:12:37.179" endtime="20211130 10:12:37.179"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211130 10:12:37.183" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211130 10:12:37.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20211130 10:12:37.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211130 10:12:37.181" endtime="20211130 10:12:37.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211130 10:12:37.191" level="INFO"/>
<status status="PASS" starttime="20211130 10:12:37.191" endtime="20211130 10:12:37.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211130 10:12:37.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211130 10:12:37.191" endtime="20211130 10:12:37.192"/>
</kw>
<status status="PASS" starttime="20211130 10:12:37.181" endtime="20211130 10:12:37.192"/>
</kw>
<msg timestamp="20211130 10:12:37.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211130 10:12:37.180" endtime="20211130 10:12:37.192"/>
</kw>
<status status="PASS" starttime="20211130 10:12:37.180" endtime="20211130 10:12:37.193"/>
</kw>
<status status="PASS" starttime="20211130 10:12:37.180" endtime="20211130 10:12:37.193"/>
</kw>
<status status="PASS" starttime="20211130 10:12:37.166" endtime="20211130 10:12:37.193"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211130 10:12:37.165" endtime="20211130 10:12:37.193"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211130 10:12:37.122" endtime="20211130 10:12:37.194"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2887978"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
