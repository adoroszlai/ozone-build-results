<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211004 15:35:01.649" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:26:09.198" level="INFO">${random} = 61162</msg>
<status status="PASS" starttime="20211004 15:26:09.198" endtime="20211004 15:26:09.198"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:26:09.204" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-61162 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:26:13.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:26:13.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:26:09.200" endtime="20211004 15:26:13.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:26:13.452" level="INFO"/>
<status status="PASS" starttime="20211004 15:26:13.451" endtime="20211004 15:26:13.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:26:13.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:26:13.452" endtime="20211004 15:26:13.453"/>
</kw>
<status status="PASS" starttime="20211004 15:26:09.200" endtime="20211004 15:26:13.453"/>
</kw>
<msg timestamp="20211004 15:26:13.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:26:09.199" endtime="20211004 15:26:13.453"/>
</kw>
<msg timestamp="20211004 15:26:13.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:26:09.198" endtime="20211004 15:26:13.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:26:13.454" endtime="20211004 15:26:13.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:26:09.197" endtime="20211004 15:26:13.454"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:26:09.139" endtime="20211004 15:26:13.456"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:30:13.492" level="INFO">${random} = 79893</msg>
<status status="PASS" starttime="20211004 15:30:13.492" endtime="20211004 15:30:13.492"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:30:13.499" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-79893 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:30:18.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:30:18.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:13.495" endtime="20211004 15:30:18.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:30:18.017" level="INFO"/>
<status status="PASS" starttime="20211004 15:30:18.016" endtime="20211004 15:30:18.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:30:18.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:30:18.017" endtime="20211004 15:30:18.018"/>
</kw>
<status status="PASS" starttime="20211004 15:30:13.494" endtime="20211004 15:30:18.018"/>
</kw>
<msg timestamp="20211004 15:30:18.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:30:13.493" endtime="20211004 15:30:18.019"/>
</kw>
<msg timestamp="20211004 15:30:18.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:13.492" endtime="20211004 15:30:18.019"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:30:18.019" endtime="20211004 15:30:18.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:30:13.491" endtime="20211004 15:30:18.020"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:30:13.434" endtime="20211004 15:30:18.021"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:30:22.073" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:30:24.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:30:24.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:22.068" endtime="20211004 15:30:24.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:30:24.581" level="INFO"/>
<status status="PASS" starttime="20211004 15:30:24.580" endtime="20211004 15:30:24.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:30:24.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:30:24.581" endtime="20211004 15:30:24.581"/>
</kw>
<status status="PASS" starttime="20211004 15:30:22.067" endtime="20211004 15:30:24.582"/>
</kw>
<msg timestamp="20211004 15:30:24.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:30:22.067" endtime="20211004 15:30:24.582"/>
</kw>
<msg timestamp="20211004 15:30:24.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:22.065" endtime="20211004 15:30:24.583"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:30:24.583" endtime="20211004 15:30:24.585"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:30:24.594" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:30:27.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:30:27.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:24.587" endtime="20211004 15:30:27.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:30:27.151" level="INFO"/>
<status status="PASS" starttime="20211004 15:30:27.150" endtime="20211004 15:30:27.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:30:27.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:30:27.152" endtime="20211004 15:30:27.155"/>
</kw>
<status status="PASS" starttime="20211004 15:30:24.586" endtime="20211004 15:30:27.160"/>
</kw>
<msg timestamp="20211004 15:30:27.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:30:24.586" endtime="20211004 15:30:27.160"/>
</kw>
<msg timestamp="20211004 15:30:27.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:24.585" endtime="20211004 15:30:27.160"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:30:27.161" endtime="20211004 15:30:27.161"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:30:27.169" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:30:32.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:30:32.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:27.166" endtime="20211004 15:30:32.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:30:32.575" level="INFO"/>
<status status="PASS" starttime="20211004 15:30:32.575" endtime="20211004 15:30:32.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:30:32.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:30:32.576" endtime="20211004 15:30:32.576"/>
</kw>
<status status="PASS" starttime="20211004 15:30:27.166" endtime="20211004 15:30:32.576"/>
</kw>
<msg timestamp="20211004 15:30:32.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:30:27.165" endtime="20211004 15:30:32.577"/>
</kw>
<msg timestamp="20211004 15:30:32.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:27.164" endtime="20211004 15:30:32.577"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:30:32.577" endtime="20211004 15:30:32.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:30:22.064" endtime="20211004 15:30:32.578"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211004 15:30:22.009" endtime="20211004 15:30:32.579"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:30:36.732" level="INFO">${random} = 96793</msg>
<status status="PASS" starttime="20211004 15:30:36.732" endtime="20211004 15:30:36.732"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:30:36.738" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-96793 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:30:41.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:30:41.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:36.734" endtime="20211004 15:30:41.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:30:41.097" level="INFO"/>
<status status="PASS" starttime="20211004 15:30:41.096" endtime="20211004 15:30:41.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:30:41.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:30:41.098" endtime="20211004 15:30:41.098"/>
</kw>
<status status="PASS" starttime="20211004 15:30:36.734" endtime="20211004 15:30:41.099"/>
</kw>
<msg timestamp="20211004 15:30:41.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:30:36.733" endtime="20211004 15:30:41.099"/>
</kw>
<msg timestamp="20211004 15:30:41.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:36.732" endtime="20211004 15:30:41.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:30:41.099" endtime="20211004 15:30:41.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:30:36.731" endtime="20211004 15:30:41.100"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:30:36.667" endtime="20211004 15:30:41.101"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:30:04.607" level="INFO">${random} = 54971</msg>
<status status="PASS" starttime="20211004 15:30:04.607" endtime="20211004 15:30:04.607"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:30:04.613" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-54971 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:30:09.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:30:09.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:04.609" endtime="20211004 15:30:09.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:30:09.344" level="INFO"/>
<status status="PASS" starttime="20211004 15:30:09.343" endtime="20211004 15:30:09.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:30:09.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:30:09.344" endtime="20211004 15:30:09.345"/>
</kw>
<status status="PASS" starttime="20211004 15:30:04.609" endtime="20211004 15:30:09.345"/>
</kw>
<msg timestamp="20211004 15:30:09.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:30:04.608" endtime="20211004 15:30:09.346"/>
</kw>
<msg timestamp="20211004 15:30:09.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:30:04.607" endtime="20211004 15:30:09.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:30:09.346" endtime="20211004 15:30:09.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:30:04.606" endtime="20211004 15:30:09.347"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:30:04.552" endtime="20211004 15:30:09.348"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:25:53.380" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:25:55.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:25:55.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:25:53.376" endtime="20211004 15:25:55.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:25:55.758" level="INFO"/>
<status status="PASS" starttime="20211004 15:25:55.758" endtime="20211004 15:25:55.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:25:55.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:25:55.759" endtime="20211004 15:25:55.759"/>
</kw>
<status status="PASS" starttime="20211004 15:25:53.376" endtime="20211004 15:25:55.760"/>
</kw>
<msg timestamp="20211004 15:25:55.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:25:53.375" endtime="20211004 15:25:55.765"/>
</kw>
<msg timestamp="20211004 15:25:55.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:25:53.374" endtime="20211004 15:25:55.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:25:55.765" endtime="20211004 15:25:55.767"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:25:55.780" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:25:58.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:25:58.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:25:55.769" endtime="20211004 15:25:58.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:25:58.450" level="INFO"/>
<status status="PASS" starttime="20211004 15:25:58.449" endtime="20211004 15:25:58.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:25:58.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:25:58.450" endtime="20211004 15:25:58.451"/>
</kw>
<status status="PASS" starttime="20211004 15:25:55.768" endtime="20211004 15:25:58.452"/>
</kw>
<msg timestamp="20211004 15:25:58.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:25:55.768" endtime="20211004 15:25:58.453"/>
</kw>
<msg timestamp="20211004 15:25:58.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:25:55.767" endtime="20211004 15:25:58.453"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:25:58.453" endtime="20211004 15:25:58.454"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:25:58.462" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:26:05.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:26:05.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:25:58.459" endtime="20211004 15:26:05.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:26:05.106" level="INFO"/>
<status status="PASS" starttime="20211004 15:26:05.105" endtime="20211004 15:26:05.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:26:05.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:26:05.106" endtime="20211004 15:26:05.107"/>
</kw>
<status status="PASS" starttime="20211004 15:25:58.458" endtime="20211004 15:26:05.107"/>
</kw>
<msg timestamp="20211004 15:26:05.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:25:58.458" endtime="20211004 15:26:05.107"/>
</kw>
<msg timestamp="20211004 15:26:05.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211004 15:25:58.457" endtime="20211004 15:26:05.108"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:26:05.108" endtime="20211004 15:26:05.108"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:25:53.373" endtime="20211004 15:26:05.108"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211004 15:25:53.319" endtime="20211004 15:26:05.110"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:32.159" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211004 15:33:32.158" endtime="20211004 15:33:32.159"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:32.159" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:32.159" endtime="20211004 15:33:32.159"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:32.160" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:32.159" endtime="20211004 15:33:32.160"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:32.160" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:32.160" endtime="20211004 15:33:32.160"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:32.162" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:32.162" level="INFO">${version_file_contents} = #Mon Oct 04 15:32:13 UTC 2021
cTime=1633361088616
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
nodeType=SCM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd1
layoutVersion=2
</msg>
<status status="PASS" starttime="20211004 15:33:32.162" endtime="20211004 15:33:32.162"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:32.163" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211004 15:33:32.162" endtime="20211004 15:33:32.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:32.163" endtime="20211004 15:33:32.164"/>
</kw>
<status status="PASS" starttime="20211004 15:33:32.161" endtime="20211004 15:33:32.164"/>
</kw>
<status status="PASS" starttime="20211004 15:33:32.161" endtime="20211004 15:33:32.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:32.157" endtime="20211004 15:33:32.164"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:32.102" endtime="20211004 15:33:32.165"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:34:18.310" level="INFO">${random} = 02667</msg>
<status status="PASS" starttime="20211004 15:34:18.309" endtime="20211004 15:34:18.310"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:18.315" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-02667 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:22.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:22.947" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:18.312" endtime="20211004 15:34:22.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:22.949" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:22.948" endtime="20211004 15:34:22.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:22.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:22.949" endtime="20211004 15:34:22.949"/>
</kw>
<status status="PASS" starttime="20211004 15:34:18.311" endtime="20211004 15:34:22.950"/>
</kw>
<msg timestamp="20211004 15:34:22.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:18.311" endtime="20211004 15:34:22.950"/>
</kw>
<msg timestamp="20211004 15:34:22.950" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:18.310" endtime="20211004 15:34:22.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:22.950" endtime="20211004 15:34:22.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:34:18.308" endtime="20211004 15:34:22.951"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:34:18.255" endtime="20211004 15:34:22.953"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:26.994" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:29.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:29.959" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:26.990" endtime="20211004 15:34:29.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:29.961" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:29.960" endtime="20211004 15:34:29.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:29.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:29.961" endtime="20211004 15:34:29.962"/>
</kw>
<status status="PASS" starttime="20211004 15:34:26.989" endtime="20211004 15:34:29.962"/>
</kw>
<msg timestamp="20211004 15:34:29.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:26.989" endtime="20211004 15:34:29.963"/>
</kw>
<msg timestamp="20211004 15:34:29.963" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:26.988" endtime="20211004 15:34:29.963"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:29.963" endtime="20211004 15:34:29.963"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:29.968" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:32.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:32.707" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:29.965" endtime="20211004 15:34:32.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:32.710" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:32.709" endtime="20211004 15:34:32.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:32.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:32.710" endtime="20211004 15:34:32.711"/>
</kw>
<status status="PASS" starttime="20211004 15:34:29.965" endtime="20211004 15:34:32.711"/>
</kw>
<msg timestamp="20211004 15:34:32.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:29.964" endtime="20211004 15:34:32.711"/>
</kw>
<msg timestamp="20211004 15:34:32.712" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:29.964" endtime="20211004 15:34:32.712"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:32.712" endtime="20211004 15:34:32.712"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:32.717" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:38.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:38.182" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:32.714" endtime="20211004 15:34:38.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:38.184" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:38.183" endtime="20211004 15:34:38.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:38.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:38.185" endtime="20211004 15:34:38.186"/>
</kw>
<status status="PASS" starttime="20211004 15:34:32.713" endtime="20211004 15:34:38.187"/>
</kw>
<msg timestamp="20211004 15:34:38.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:32.713" endtime="20211004 15:34:38.187"/>
</kw>
<msg timestamp="20211004 15:34:38.188" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:32.712" endtime="20211004 15:34:38.188"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:38.189" endtime="20211004 15:34:38.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:34:26.988" endtime="20211004 15:34:38.189"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211004 15:34:26.934" endtime="20211004 15:34:38.191"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:34:42.340" level="INFO">${random} = 68492</msg>
<status status="PASS" starttime="20211004 15:34:42.340" endtime="20211004 15:34:42.340"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:42.347" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-68492 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:46.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:46.912" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:42.343" endtime="20211004 15:34:46.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:46.913" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:46.912" endtime="20211004 15:34:46.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:46.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:46.913" endtime="20211004 15:34:46.914"/>
</kw>
<status status="PASS" starttime="20211004 15:34:42.342" endtime="20211004 15:34:46.914"/>
</kw>
<msg timestamp="20211004 15:34:46.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:42.341" endtime="20211004 15:34:46.914"/>
</kw>
<msg timestamp="20211004 15:34:46.915" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:42.340" endtime="20211004 15:34:46.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:46.915" endtime="20211004 15:34:46.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:34:42.339" endtime="20211004 15:34:46.916"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:34:42.278" endtime="20211004 15:34:46.917"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:36.193" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211004 15:33:36.192" endtime="20211004 15:33:36.193"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:36.193" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:36.193" endtime="20211004 15:33:36.193"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:36.194" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:36.193" endtime="20211004 15:33:36.194"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:36.194" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:36.194" endtime="20211004 15:33:36.194"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:36.196" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:36.196" level="INFO">${version_file_contents} = #Mon Oct 04 15:32:35 UTC 2021
cTime=1633361200668
clusterID=435cedd2-24c7-47d5-bcd3-a0497da1e3ca
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211004 15:33:36.195" endtime="20211004 15:33:36.196"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:36.197" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211004 15:33:36.196" endtime="20211004 15:33:36.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:36.197" endtime="20211004 15:33:36.197"/>
</kw>
<status status="PASS" starttime="20211004 15:33:36.195" endtime="20211004 15:33:36.198"/>
</kw>
<status status="PASS" starttime="20211004 15:33:36.195" endtime="20211004 15:33:36.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:36.191" endtime="20211004 15:33:36.198"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:36.137" endtime="20211004 15:33:36.198"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:40.343" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211004 15:33:40.342" endtime="20211004 15:33:40.343"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:40.343" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:40.343" endtime="20211004 15:33:40.344"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:40.344" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:40.344" endtime="20211004 15:33:40.344"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:40.345" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:40.344" endtime="20211004 15:33:40.345"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:40.346" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:40.346" level="INFO">${version_file_contents} = #Mon Oct 04 15:32:16 UTC 2021
cTime=1633361202039
clusterID=13b5a4a4-50b2-495a-a313-b6d400921281
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211004 15:33:40.346" endtime="20211004 15:33:40.346"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:40.347" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211004 15:33:40.347" endtime="20211004 15:33:40.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:40.347" endtime="20211004 15:33:40.348"/>
</kw>
<status status="PASS" starttime="20211004 15:33:40.345" endtime="20211004 15:33:40.348"/>
</kw>
<status status="PASS" starttime="20211004 15:33:40.345" endtime="20211004 15:33:40.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:40.341" endtime="20211004 15:33:40.348"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:40.285" endtime="20211004 15:33:40.349"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:44.387" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211004 15:33:44.386" endtime="20211004 15:33:44.387"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:44.388" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:44.387" endtime="20211004 15:33:44.388"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:44.388" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:44.388" endtime="20211004 15:33:44.388"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:44.389" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:44.388" endtime="20211004 15:33:44.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:44.390" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:44.390" level="INFO">${version_file_contents} = #Mon Oct 04 15:32:25 UTC 2021
cTime=1633361203257
clusterID=7eae0302-d0e5-479a-98f0-34ad09d996ac
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211004 15:33:44.390" endtime="20211004 15:33:44.390"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:44.391" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211004 15:33:44.391" endtime="20211004 15:33:44.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:44.391" endtime="20211004 15:33:44.392"/>
</kw>
<status status="PASS" starttime="20211004 15:33:44.389" endtime="20211004 15:33:44.392"/>
</kw>
<status status="PASS" starttime="20211004 15:33:44.389" endtime="20211004 15:33:44.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:44.385" endtime="20211004 15:33:44.392"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:44.331" endtime="20211004 15:33:44.393"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:48.441" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211004 15:33:48.440" endtime="20211004 15:33:48.441"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:48.442" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:48.441" endtime="20211004 15:33:48.442"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:48.442" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:48.442" endtime="20211004 15:33:48.442"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:48.443" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:48.443" endtime="20211004 15:33:48.443"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:48.444" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:48.445" level="INFO">${version_file_contents} = #Mon Oct 04 15:25:13 UTC 2021
cTime=1633361086443
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
omUuid=6a41d4f9-96aa-4868-80a0-1cf689c3df7f
nodeType=OM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd...</msg>
<status status="PASS" starttime="20211004 15:33:48.444" endtime="20211004 15:33:48.445"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:48.445" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:33:48.445" endtime="20211004 15:33:48.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:48.445" endtime="20211004 15:33:48.446"/>
</kw>
<status status="PASS" starttime="20211004 15:33:48.444" endtime="20211004 15:33:48.446"/>
</kw>
<status status="PASS" starttime="20211004 15:33:48.443" endtime="20211004 15:33:48.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:48.439" endtime="20211004 15:33:48.446"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:48.383" endtime="20211004 15:33:48.447"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:52.518" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211004 15:33:52.517" endtime="20211004 15:33:52.518"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:52.519" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:52.518" endtime="20211004 15:33:52.519"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:52.519" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:52.519" endtime="20211004 15:33:52.520"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:52.520" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:52.520" endtime="20211004 15:33:52.520"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:52.522" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:52.522" level="INFO">${version_file_contents} = #Mon Oct 04 15:25:13 UTC 2021
cTime=1633361091111
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
omUuid=2292d616-be5d-489a-9309-b90e1e2d8b0c
nodeType=OM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd...</msg>
<status status="PASS" starttime="20211004 15:33:52.521" endtime="20211004 15:33:52.522"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:52.523" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:33:52.522" endtime="20211004 15:33:52.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:52.523" endtime="20211004 15:33:52.523"/>
</kw>
<status status="PASS" starttime="20211004 15:33:52.521" endtime="20211004 15:33:52.523"/>
</kw>
<status status="PASS" starttime="20211004 15:33:52.520" endtime="20211004 15:33:52.524"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:52.516" endtime="20211004 15:33:52.524"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:52.459" endtime="20211004 15:33:52.525"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:56.636" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211004 15:33:56.636" endtime="20211004 15:33:56.636"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:33:56.637" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:33:56.637" endtime="20211004 15:33:56.637"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:33:56.638" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:33:56.637" endtime="20211004 15:33:56.638"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:33:56.638" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211004 15:33:56.638" endtime="20211004 15:33:56.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:33:56.640" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:33:56.640" level="INFO">${version_file_contents} = #Mon Oct 04 15:25:13 UTC 2021
cTime=1633361091430
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
omUuid=5dc8f8b1-ec97-4771-b32d-817f191cc041
nodeType=OM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd...</msg>
<status status="PASS" starttime="20211004 15:33:56.639" endtime="20211004 15:33:56.640"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:33:56.641" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:33:56.640" endtime="20211004 15:33:56.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:33:56.641" endtime="20211004 15:33:56.641"/>
</kw>
<status status="PASS" starttime="20211004 15:33:56.639" endtime="20211004 15:33:56.641"/>
</kw>
<status status="PASS" starttime="20211004 15:33:56.638" endtime="20211004 15:33:56.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:56.635" endtime="20211004 15:33:56.642"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:33:56.578" endtime="20211004 15:33:56.642"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:34:00.686" level="INFO">${random} = 30112</msg>
<status status="PASS" starttime="20211004 15:34:00.685" endtime="20211004 15:34:00.686"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:00.692" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-30112 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:05.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:05.567" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:00.688" endtime="20211004 15:34:05.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:05.568" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:05.567" endtime="20211004 15:34:05.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:05.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:05.569" endtime="20211004 15:34:05.569"/>
</kw>
<status status="PASS" starttime="20211004 15:34:00.687" endtime="20211004 15:34:05.570"/>
</kw>
<msg timestamp="20211004 15:34:05.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:00.687" endtime="20211004 15:34:05.570"/>
</kw>
<msg timestamp="20211004 15:34:05.570" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:00.686" endtime="20211004 15:34:05.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:05.570" endtime="20211004 15:34:05.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:34:00.684" endtime="20211004 15:34:05.571"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:34:00.622" endtime="20211004 15:34:05.572"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:34:09.702" level="INFO">${random} = 66744</msg>
<status status="PASS" starttime="20211004 15:34:09.702" endtime="20211004 15:34:09.702"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:34:09.708" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-66744 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:34:14.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:34:14.235" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:09.704" endtime="20211004 15:34:14.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:34:14.237" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:14.236" endtime="20211004 15:34:14.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:34:14.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:34:14.237" endtime="20211004 15:34:14.238"/>
</kw>
<status status="PASS" starttime="20211004 15:34:09.704" endtime="20211004 15:34:14.238"/>
</kw>
<msg timestamp="20211004 15:34:14.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:34:09.703" endtime="20211004 15:34:14.238"/>
</kw>
<msg timestamp="20211004 15:34:14.239" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:34:09.702" endtime="20211004 15:34:14.239"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:34:14.239" endtime="20211004 15:34:14.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:34:09.701" endtime="20211004 15:34:14.239"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:34:09.642" endtime="20211004 15:34:14.241"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211004 15:32:06.207" endtime="20211004 15:32:06.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:32:06.213" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:33:24.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:33:24.586" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211004 15:32:06.210" endtime="20211004 15:33:24.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:33:24.588" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211004 15:33:24.587" endtime="20211004 15:33:24.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:33:24.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:33:24.588" endtime="20211004 15:33:24.588"/>
</kw>
<status status="PASS" starttime="20211004 15:32:06.209" endtime="20211004 15:33:24.589"/>
</kw>
<msg timestamp="20211004 15:33:24.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:32:06.209" endtime="20211004 15:33:24.589"/>
</kw>
<msg timestamp="20211004 15:33:24.589" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211004 15:32:06.208" endtime="20211004 15:33:24.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:33:24.590" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211004 15:33:24.590" endtime="20211004 15:33:24.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:32:06.207" endtime="20211004 15:33:24.590"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211004 15:33:24.592" endtime="20211004 15:33:24.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:33:24.597" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:33:28.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:33:28.043" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211004 15:33:24.595" endtime="20211004 15:33:28.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:33:28.044" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211004 15:33:28.043" endtime="20211004 15:33:28.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:33:28.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:33:28.044" endtime="20211004 15:33:28.045"/>
</kw>
<status status="PASS" starttime="20211004 15:33:24.594" endtime="20211004 15:33:28.045"/>
</kw>
<msg timestamp="20211004 15:33:28.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:33:24.593" endtime="20211004 15:33:28.048"/>
</kw>
<msg timestamp="20211004 15:33:28.048" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211004 15:33:24.593" endtime="20211004 15:33:28.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:33:28.049" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211004 15:33:28.049" endtime="20211004 15:33:28.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:33:24.591" endtime="20211004 15:33:28.049"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211004 15:32:06.152" endtime="20211004 15:33:28.055"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:45.735" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211004 15:27:45.734" endtime="20211004 15:27:45.735"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:45.736" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:27:45.735" endtime="20211004 15:27:45.736"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:27:45.736" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:27:45.736" endtime="20211004 15:27:45.736"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:27:45.737" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211004 15:27:45.737" endtime="20211004 15:27:45.737"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:27:45.738" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:27:45.739" level="INFO">${version_file_contents} = #Mon Oct 04 15:26:40 UTC 2021
cTime=1633361200668
clusterID=435cedd2-24c7-47d5-bcd3-a0497da1e3ca
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211004 15:27:45.738" endtime="20211004 15:27:45.739"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:27:45.740" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:27:45.739" endtime="20211004 15:27:45.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:27:45.740" endtime="20211004 15:27:45.740"/>
</kw>
<status status="PASS" starttime="20211004 15:27:45.738" endtime="20211004 15:27:45.740"/>
</kw>
<status status="PASS" starttime="20211004 15:27:45.737" endtime="20211004 15:27:45.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:27:45.733" endtime="20211004 15:27:45.741"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:27:45.674" endtime="20211004 15:27:45.742"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:49.869" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211004 15:27:49.868" endtime="20211004 15:27:49.869"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:49.869" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:27:49.869" endtime="20211004 15:27:49.869"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:27:49.870" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:27:49.870" endtime="20211004 15:27:49.870"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:27:49.871" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211004 15:27:49.870" endtime="20211004 15:27:49.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:27:49.872" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:27:49.872" level="INFO">${version_file_contents} = #Mon Oct 04 15:26:42 UTC 2021
cTime=1633361202039
clusterID=13b5a4a4-50b2-495a-a313-b6d400921281
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211004 15:27:49.872" endtime="20211004 15:27:49.872"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:27:49.873" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:27:49.872" endtime="20211004 15:27:49.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:27:49.873" endtime="20211004 15:27:49.873"/>
</kw>
<status status="PASS" starttime="20211004 15:27:49.871" endtime="20211004 15:27:49.874"/>
</kw>
<status status="PASS" starttime="20211004 15:27:49.871" endtime="20211004 15:27:49.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:27:49.867" endtime="20211004 15:27:49.874"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:27:49.813" endtime="20211004 15:27:49.875"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:54.038" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211004 15:27:54.037" endtime="20211004 15:27:54.038"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:54.039" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:27:54.038" endtime="20211004 15:27:54.039"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:27:54.039" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:27:54.039" endtime="20211004 15:27:54.039"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:27:54.040" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211004 15:27:54.040" endtime="20211004 15:27:54.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:27:54.041" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:27:54.042" level="INFO">${version_file_contents} = #Mon Oct 04 15:26:43 UTC 2021
cTime=1633361203257
clusterID=7eae0302-d0e5-479a-98f0-34ad09d996ac
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211004 15:27:54.041" endtime="20211004 15:27:54.042"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:27:54.042" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:27:54.042" endtime="20211004 15:27:54.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:27:54.042" endtime="20211004 15:27:54.043"/>
</kw>
<status status="PASS" starttime="20211004 15:27:54.041" endtime="20211004 15:27:54.043"/>
</kw>
<status status="PASS" starttime="20211004 15:27:54.040" endtime="20211004 15:27:54.043"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:27:54.036" endtime="20211004 15:27:54.043"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:27:53.981" endtime="20211004 15:27:54.044"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:58.139" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211004 15:27:58.138" endtime="20211004 15:27:58.139"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:58.140" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:27:58.139" endtime="20211004 15:27:58.140"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:27:58.141" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:27:58.140" endtime="20211004 15:27:58.141"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:27:58.143" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211004 15:27:58.141" endtime="20211004 15:27:58.143"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:27:58.144" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:27:58.144" level="INFO">${version_file_contents} = #Mon Oct 04 15:25:13 UTC 2021
cTime=1633361086443
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
omUuid=6a41d4f9-96aa-4868-80a0-1cf689c3df7f
nodeType=OM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd...</msg>
<status status="PASS" starttime="20211004 15:27:58.144" endtime="20211004 15:27:58.145"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:27:58.145" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:27:58.145" endtime="20211004 15:27:58.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:27:58.145" endtime="20211004 15:27:58.146"/>
</kw>
<status status="PASS" starttime="20211004 15:27:58.143" endtime="20211004 15:27:58.146"/>
</kw>
<status status="PASS" starttime="20211004 15:27:58.143" endtime="20211004 15:27:58.146"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:27:58.137" endtime="20211004 15:27:58.146"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:27:58.075" endtime="20211004 15:27:58.147"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:28:02.269" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211004 15:28:02.268" endtime="20211004 15:28:02.269"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:28:02.270" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:28:02.269" endtime="20211004 15:28:02.270"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:28:02.270" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:28:02.270" endtime="20211004 15:28:02.270"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:28:02.271" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211004 15:28:02.270" endtime="20211004 15:28:02.271"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:28:02.272" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:28:02.272" level="INFO">${version_file_contents} = #Mon Oct 04 15:25:13 UTC 2021
cTime=1633361091111
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
omUuid=2292d616-be5d-489a-9309-b90e1e2d8b0c
nodeType=OM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd...</msg>
<status status="PASS" starttime="20211004 15:28:02.272" endtime="20211004 15:28:02.272"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:28:02.273" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:28:02.273" endtime="20211004 15:28:02.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:02.274" endtime="20211004 15:28:02.274"/>
</kw>
<status status="PASS" starttime="20211004 15:28:02.271" endtime="20211004 15:28:02.274"/>
</kw>
<status status="PASS" starttime="20211004 15:28:02.271" endtime="20211004 15:28:02.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:28:02.267" endtime="20211004 15:28:02.275"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:28:02.213" endtime="20211004 15:28:02.275"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:28:06.346" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211004 15:28:06.345" endtime="20211004 15:28:06.346"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:28:06.347" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:28:06.347" endtime="20211004 15:28:06.347"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:28:06.350" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:28:06.347" endtime="20211004 15:28:06.350"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:28:06.351" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211004 15:28:06.350" endtime="20211004 15:28:06.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:28:06.352" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:28:06.353" level="INFO">${version_file_contents} = #Mon Oct 04 15:25:13 UTC 2021
cTime=1633361091430
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
omUuid=5dc8f8b1-ec97-4771-b32d-817f191cc041
nodeType=OM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd...</msg>
<status status="PASS" starttime="20211004 15:28:06.352" endtime="20211004 15:28:06.353"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:28:06.353" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:28:06.353" endtime="20211004 15:28:06.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:06.354" endtime="20211004 15:28:06.354"/>
</kw>
<status status="PASS" starttime="20211004 15:28:06.352" endtime="20211004 15:28:06.354"/>
</kw>
<status status="PASS" starttime="20211004 15:28:06.351" endtime="20211004 15:28:06.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:28:06.344" endtime="20211004 15:28:06.355"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:28:06.286" endtime="20211004 15:28:06.355"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:28:10.538" level="INFO">${random} = 27153</msg>
<status status="PASS" starttime="20211004 15:28:10.537" endtime="20211004 15:28:10.538"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:28:10.544" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-27153 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:28:15.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:28:15.353" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:10.540" endtime="20211004 15:28:15.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:28:15.354" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:15.353" endtime="20211004 15:28:15.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:28:15.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:28:15.354" endtime="20211004 15:28:15.355"/>
</kw>
<status status="PASS" starttime="20211004 15:28:10.539" endtime="20211004 15:28:15.355"/>
</kw>
<msg timestamp="20211004 15:28:15.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:28:10.539" endtime="20211004 15:28:15.355"/>
</kw>
<msg timestamp="20211004 15:28:15.356" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:10.538" endtime="20211004 15:28:15.356"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:15.356" endtime="20211004 15:28:15.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:28:10.536" endtime="20211004 15:28:15.357"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:28:10.482" endtime="20211004 15:28:15.358"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:28:19.396" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:28:22.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:28:22.364" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:19.393" endtime="20211004 15:28:22.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:28:22.366" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:22.365" endtime="20211004 15:28:22.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:28:22.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:28:22.366" endtime="20211004 15:28:22.367"/>
</kw>
<status status="PASS" starttime="20211004 15:28:19.392" endtime="20211004 15:28:22.367"/>
</kw>
<msg timestamp="20211004 15:28:22.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:28:19.392" endtime="20211004 15:28:22.367"/>
</kw>
<msg timestamp="20211004 15:28:22.368" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:19.391" endtime="20211004 15:28:22.368"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:22.368" endtime="20211004 15:28:22.370"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:28:22.379" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:28:25.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:28:25.329" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:22.377" endtime="20211004 15:28:25.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:28:25.331" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:25.330" endtime="20211004 15:28:25.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:28:25.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:28:25.331" endtime="20211004 15:28:25.332"/>
</kw>
<status status="PASS" starttime="20211004 15:28:22.376" endtime="20211004 15:28:25.332"/>
</kw>
<msg timestamp="20211004 15:28:25.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:28:22.371" endtime="20211004 15:28:25.333"/>
</kw>
<msg timestamp="20211004 15:28:25.333" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:22.370" endtime="20211004 15:28:25.333"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:25.333" endtime="20211004 15:28:25.333"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:28:25.347" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:28:30.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:28:30.954" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:25.335" endtime="20211004 15:28:30.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:28:30.955" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:30.954" endtime="20211004 15:28:30.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:28:30.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:28:30.955" endtime="20211004 15:28:30.956"/>
</kw>
<status status="PASS" starttime="20211004 15:28:25.335" endtime="20211004 15:28:30.956"/>
</kw>
<msg timestamp="20211004 15:28:30.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:28:25.334" endtime="20211004 15:28:30.957"/>
</kw>
<msg timestamp="20211004 15:28:30.957" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:25.334" endtime="20211004 15:28:30.957"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:30.957" endtime="20211004 15:28:30.957"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:28:19.390" endtime="20211004 15:28:30.958"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211004 15:28:19.331" endtime="20211004 15:28:30.959"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211004 15:28:34.963" level="INFO">${random} = 22365</msg>
<status status="PASS" starttime="20211004 15:28:34.963" endtime="20211004 15:28:34.963"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211004 15:28:34.970" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-22365 2&gt;&amp;1'.</msg>
<msg timestamp="20211004 15:28:39.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20211004 15:28:39.338" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:34.965" endtime="20211004 15:28:39.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211004 15:28:39.339" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:39.339" endtime="20211004 15:28:39.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211004 15:28:39.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211004 15:28:39.340" endtime="20211004 15:28:39.340"/>
</kw>
<status status="PASS" starttime="20211004 15:28:34.965" endtime="20211004 15:28:39.341"/>
</kw>
<msg timestamp="20211004 15:28:39.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211004 15:28:34.965" endtime="20211004 15:28:39.341"/>
</kw>
<msg timestamp="20211004 15:28:39.341" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211004 15:28:34.964" endtime="20211004 15:28:39.341"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:28:39.341" endtime="20211004 15:28:39.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:28:34.962" endtime="20211004 15:28:39.342"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211004 15:28:34.908" endtime="20211004 15:28:39.344"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:41.631" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211004 15:27:41.630" endtime="20211004 15:27:41.631"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211004 15:27:41.631" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211004 15:27:41.631" endtime="20211004 15:27:41.632"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211004 15:27:41.632" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211004 15:27:41.632" endtime="20211004 15:27:41.632"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211004 15:27:41.633" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211004 15:27:41.632" endtime="20211004 15:27:41.633"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211004 15:27:41.634" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211004 15:27:41.634" level="INFO">${version_file_contents} = #Mon Oct 04 15:24:48 UTC 2021
cTime=1633361088616
clusterID=CID-04a88067-f1ac-4b13-a3bd-45e8a2eb611c
nodeType=SCM
scmUuid=9c55647f-f232-48a9-b3b4-688bc0841dd1
layoutVersion=0
</msg>
<status status="PASS" starttime="20211004 15:27:41.634" endtime="20211004 15:27:41.634"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211004 15:27:41.635" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211004 15:27:41.635" endtime="20211004 15:27:41.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211004 15:27:41.635" endtime="20211004 15:27:41.636"/>
</kw>
<status status="PASS" starttime="20211004 15:27:41.633" endtime="20211004 15:27:41.636"/>
</kw>
<status status="PASS" starttime="20211004 15:27:41.633" endtime="20211004 15:27:41.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211004 15:27:41.629" endtime="20211004 15:27:41.636"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211004 15:27:41.573" endtime="20211004 15:27:41.637"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="174385"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
