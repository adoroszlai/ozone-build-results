<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211016 13:34:22.878" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:24:50.796" level="INFO">${random} = 75654</msg>
<status status="PASS" starttime="20211016 13:24:50.795" endtime="20211016 13:24:50.796"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:24:50.802" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-75654 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:24:55.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:24:55.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:50.799" endtime="20211016 13:24:55.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:24:55.065" level="INFO"/>
<status status="PASS" starttime="20211016 13:24:55.064" endtime="20211016 13:24:55.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:24:55.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:24:55.065" endtime="20211016 13:24:55.066"/>
</kw>
<status status="PASS" starttime="20211016 13:24:50.798" endtime="20211016 13:24:55.067"/>
</kw>
<msg timestamp="20211016 13:24:55.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:24:50.797" endtime="20211016 13:24:55.067"/>
</kw>
<msg timestamp="20211016 13:24:55.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:50.796" endtime="20211016 13:24:55.067"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:24:55.067" endtime="20211016 13:24:55.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:24:50.794" endtime="20211016 13:24:55.068"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:24:50.726" endtime="20211016 13:24:55.070"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:29:15.561" level="INFO">${random} = 80671</msg>
<status status="PASS" starttime="20211016 13:29:15.561" endtime="20211016 13:29:15.562"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:29:15.567" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-80671 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:29:19.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:29:19.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:15.563" endtime="20211016 13:29:19.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:29:19.659" level="INFO"/>
<status status="PASS" starttime="20211016 13:29:19.658" endtime="20211016 13:29:19.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:29:19.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:29:19.659" endtime="20211016 13:29:19.660"/>
</kw>
<status status="PASS" starttime="20211016 13:29:15.563" endtime="20211016 13:29:19.660"/>
</kw>
<msg timestamp="20211016 13:29:19.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:29:15.563" endtime="20211016 13:29:19.661"/>
</kw>
<msg timestamp="20211016 13:29:19.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:15.562" endtime="20211016 13:29:19.661"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:29:19.661" endtime="20211016 13:29:19.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:29:15.560" endtime="20211016 13:29:19.662"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:29:15.500" endtime="20211016 13:29:19.663"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:29:23.499" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:29:25.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:29:25.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:23.495" endtime="20211016 13:29:25.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:29:25.834" level="INFO"/>
<status status="PASS" starttime="20211016 13:29:25.833" endtime="20211016 13:29:25.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:29:25.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:29:25.835" endtime="20211016 13:29:25.836"/>
</kw>
<status status="PASS" starttime="20211016 13:29:23.495" endtime="20211016 13:29:25.836"/>
</kw>
<msg timestamp="20211016 13:29:25.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:29:23.495" endtime="20211016 13:29:25.836"/>
</kw>
<msg timestamp="20211016 13:29:25.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:23.494" endtime="20211016 13:29:25.837"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:29:25.837" endtime="20211016 13:29:25.837"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:29:25.848" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:29:28.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:29:28.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:25.839" endtime="20211016 13:29:28.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:29:28.214" level="INFO"/>
<status status="PASS" starttime="20211016 13:29:28.213" endtime="20211016 13:29:28.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:29:28.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:29:28.214" endtime="20211016 13:29:28.215"/>
</kw>
<status status="PASS" starttime="20211016 13:29:25.838" endtime="20211016 13:29:28.215"/>
</kw>
<msg timestamp="20211016 13:29:28.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:29:25.838" endtime="20211016 13:29:28.215"/>
</kw>
<msg timestamp="20211016 13:29:28.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:25.837" endtime="20211016 13:29:28.215"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:29:28.216" endtime="20211016 13:29:28.216"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:29:28.222" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:29:33.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:29:33.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:28.219" endtime="20211016 13:29:33.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:29:33.374" level="INFO"/>
<status status="PASS" starttime="20211016 13:29:33.373" endtime="20211016 13:29:33.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:29:33.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:29:33.374" endtime="20211016 13:29:33.375"/>
</kw>
<status status="PASS" starttime="20211016 13:29:28.219" endtime="20211016 13:29:33.376"/>
</kw>
<msg timestamp="20211016 13:29:33.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:29:28.217" endtime="20211016 13:29:33.377"/>
</kw>
<msg timestamp="20211016 13:29:33.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:28.216" endtime="20211016 13:29:33.377"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:29:33.377" endtime="20211016 13:29:33.378"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:29:23.493" endtime="20211016 13:29:33.378"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211016 13:29:23.430" endtime="20211016 13:29:33.381"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:29:37.145" level="INFO">${random} = 07881</msg>
<status status="PASS" starttime="20211016 13:29:37.144" endtime="20211016 13:29:37.145"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:29:37.152" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-07881 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:29:41.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:29:41.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:37.147" endtime="20211016 13:29:41.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:29:41.287" level="INFO"/>
<status status="PASS" starttime="20211016 13:29:41.286" endtime="20211016 13:29:41.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:29:41.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:29:41.287" endtime="20211016 13:29:41.289"/>
</kw>
<status status="PASS" starttime="20211016 13:29:37.147" endtime="20211016 13:29:41.289"/>
</kw>
<msg timestamp="20211016 13:29:41.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:29:37.146" endtime="20211016 13:29:41.290"/>
</kw>
<msg timestamp="20211016 13:29:41.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:37.145" endtime="20211016 13:29:41.290"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:29:41.290" endtime="20211016 13:29:41.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:29:37.143" endtime="20211016 13:29:41.291"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:29:37.083" endtime="20211016 13:29:41.292"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:29:07.352" level="INFO">${random} = 19749</msg>
<status status="PASS" starttime="20211016 13:29:07.351" endtime="20211016 13:29:07.352"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:29:07.358" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-19749 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:29:11.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:29:11.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:07.354" endtime="20211016 13:29:11.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:29:11.743" level="INFO"/>
<status status="PASS" starttime="20211016 13:29:11.742" endtime="20211016 13:29:11.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:29:11.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:29:11.743" endtime="20211016 13:29:11.744"/>
</kw>
<status status="PASS" starttime="20211016 13:29:07.353" endtime="20211016 13:29:11.744"/>
</kw>
<msg timestamp="20211016 13:29:11.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:29:07.353" endtime="20211016 13:29:11.744"/>
</kw>
<msg timestamp="20211016 13:29:11.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:29:07.352" endtime="20211016 13:29:11.745"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:29:11.745" endtime="20211016 13:29:11.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:29:07.350" endtime="20211016 13:29:11.746"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:29:07.282" endtime="20211016 13:29:11.747"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:24:35.557" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:24:38.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:24:38.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:35.553" endtime="20211016 13:24:38.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:24:38.059" level="INFO"/>
<status status="PASS" starttime="20211016 13:24:38.058" endtime="20211016 13:24:38.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:24:38.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:24:38.059" endtime="20211016 13:24:38.060"/>
</kw>
<status status="PASS" starttime="20211016 13:24:35.553" endtime="20211016 13:24:38.065"/>
</kw>
<msg timestamp="20211016 13:24:38.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:24:35.552" endtime="20211016 13:24:38.065"/>
</kw>
<msg timestamp="20211016 13:24:38.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:35.551" endtime="20211016 13:24:38.065"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:24:38.066" endtime="20211016 13:24:38.070"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:24:38.083" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:24:40.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:24:40.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:38.072" endtime="20211016 13:24:40.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:24:40.797" level="INFO"/>
<status status="PASS" starttime="20211016 13:24:40.795" endtime="20211016 13:24:40.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:24:40.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:24:40.797" endtime="20211016 13:24:40.798"/>
</kw>
<status status="PASS" starttime="20211016 13:24:38.072" endtime="20211016 13:24:40.798"/>
</kw>
<msg timestamp="20211016 13:24:40.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:24:38.071" endtime="20211016 13:24:40.798"/>
</kw>
<msg timestamp="20211016 13:24:40.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:38.070" endtime="20211016 13:24:40.799"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:24:40.799" endtime="20211016 13:24:40.800"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:24:40.807" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:24:46.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:24:46.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:40.801" endtime="20211016 13:24:46.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:24:46.772" level="INFO"/>
<status status="PASS" starttime="20211016 13:24:46.772" endtime="20211016 13:24:46.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:24:46.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:24:46.773" endtime="20211016 13:24:46.773"/>
</kw>
<status status="PASS" starttime="20211016 13:24:40.801" endtime="20211016 13:24:46.773"/>
</kw>
<msg timestamp="20211016 13:24:46.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:24:40.800" endtime="20211016 13:24:46.774"/>
</kw>
<msg timestamp="20211016 13:24:46.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 13:24:40.800" endtime="20211016 13:24:46.774"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:24:46.774" endtime="20211016 13:24:46.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:24:35.550" endtime="20211016 13:24:46.775"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211016 13:24:35.486" endtime="20211016 13:24:46.777"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:32:55.949" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211016 13:32:55.948" endtime="20211016 13:32:55.949"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:32:55.949" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:32:55.949" endtime="20211016 13:32:55.949"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:32:55.950" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:32:55.950" endtime="20211016 13:32:55.951"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:32:55.952" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211016 13:32:55.951" endtime="20211016 13:32:55.952"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:32:55.954" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:32:55.955" level="INFO">${version_file_contents} = #Sat Oct 16 13:31:32 UTC 2021
cTime=1634390612256
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
nodeType=SCM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81cc
layoutVersion=2
</msg>
<status status="PASS" starttime="20211016 13:32:55.954" endtime="20211016 13:32:55.955"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:32:55.956" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211016 13:32:55.955" endtime="20211016 13:32:55.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:32:55.956" endtime="20211016 13:32:55.957"/>
</kw>
<status status="PASS" starttime="20211016 13:32:55.953" endtime="20211016 13:32:55.957"/>
</kw>
<status status="PASS" starttime="20211016 13:32:55.952" endtime="20211016 13:32:55.957"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:32:55.947" endtime="20211016 13:32:55.958"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:32:55.881" endtime="20211016 13:32:55.959"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:33:39.448" level="INFO">${random} = 22145</msg>
<status status="PASS" starttime="20211016 13:33:39.447" endtime="20211016 13:33:39.448"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:33:39.454" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-22145 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:33:44.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:33:44.043" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:39.450" endtime="20211016 13:33:44.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:33:44.044" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:44.043" endtime="20211016 13:33:44.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:33:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:33:44.044" endtime="20211016 13:33:44.046"/>
</kw>
<status status="PASS" starttime="20211016 13:33:39.450" endtime="20211016 13:33:44.047"/>
</kw>
<msg timestamp="20211016 13:33:44.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:33:39.449" endtime="20211016 13:33:44.047"/>
</kw>
<msg timestamp="20211016 13:33:44.047" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:39.448" endtime="20211016 13:33:44.047"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:44.048" endtime="20211016 13:33:44.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:39.446" endtime="20211016 13:33:44.049"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:33:39.390" endtime="20211016 13:33:44.050"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:33:47.713" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:33:50.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:33:50.521" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:47.710" endtime="20211016 13:33:50.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:33:50.524" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:50.522" endtime="20211016 13:33:50.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:33:50.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:33:50.524" endtime="20211016 13:33:50.527"/>
</kw>
<status status="PASS" starttime="20211016 13:33:47.709" endtime="20211016 13:33:50.527"/>
</kw>
<msg timestamp="20211016 13:33:50.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:33:47.709" endtime="20211016 13:33:50.527"/>
</kw>
<msg timestamp="20211016 13:33:50.528" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:47.708" endtime="20211016 13:33:50.528"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:50.528" endtime="20211016 13:33:50.528"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:33:50.535" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:33:53.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:33:53.143" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:50.531" endtime="20211016 13:33:53.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:33:53.148" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:53.144" endtime="20211016 13:33:53.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:33:53.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:33:53.149" endtime="20211016 13:33:53.149"/>
</kw>
<status status="PASS" starttime="20211016 13:33:50.531" endtime="20211016 13:33:53.149"/>
</kw>
<msg timestamp="20211016 13:33:53.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:33:50.530" endtime="20211016 13:33:53.150"/>
</kw>
<msg timestamp="20211016 13:33:53.150" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:50.528" endtime="20211016 13:33:53.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:53.150" endtime="20211016 13:33:53.151"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:33:53.155" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:33:59.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:33:59.062" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:53.153" endtime="20211016 13:33:59.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:33:59.064" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:59.063" endtime="20211016 13:33:59.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:33:59.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:33:59.064" endtime="20211016 13:33:59.065"/>
</kw>
<status status="PASS" starttime="20211016 13:33:53.152" endtime="20211016 13:33:59.065"/>
</kw>
<msg timestamp="20211016 13:33:59.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:33:53.152" endtime="20211016 13:33:59.065"/>
</kw>
<msg timestamp="20211016 13:33:59.065" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:53.151" endtime="20211016 13:33:59.066"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:59.066" endtime="20211016 13:33:59.066"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:47.707" endtime="20211016 13:33:59.066"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211016 13:33:47.643" endtime="20211016 13:33:59.069"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:34:02.810" level="INFO">${random} = 81741</msg>
<status status="PASS" starttime="20211016 13:34:02.809" endtime="20211016 13:34:02.810"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:34:02.816" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-81741 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:34:08.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:34:08.189" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:34:02.812" endtime="20211016 13:34:08.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:34:08.190" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:34:08.189" endtime="20211016 13:34:08.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:34:08.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:34:08.190" endtime="20211016 13:34:08.191"/>
</kw>
<status status="PASS" starttime="20211016 13:34:02.811" endtime="20211016 13:34:08.191"/>
</kw>
<msg timestamp="20211016 13:34:08.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:34:02.811" endtime="20211016 13:34:08.191"/>
</kw>
<msg timestamp="20211016 13:34:08.192" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:34:02.810" endtime="20211016 13:34:08.192"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:34:08.192" endtime="20211016 13:34:08.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:34:02.808" endtime="20211016 13:34:08.192"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:34:02.753" endtime="20211016 13:34:08.203"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:32:59.962" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211016 13:32:59.961" endtime="20211016 13:32:59.962"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:32:59.963" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:32:59.963" endtime="20211016 13:32:59.963"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:32:59.964" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:32:59.963" endtime="20211016 13:32:59.964"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:32:59.965" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211016 13:32:59.964" endtime="20211016 13:32:59.965"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:32:59.966" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:32:59.966" level="INFO">${version_file_contents} = #Sat Oct 16 13:31:42 UTC 2021
cTime=1634390723779
clusterID=3ee659a2-7d13-4b26-8458-3bc189da15d2
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211016 13:32:59.966" endtime="20211016 13:32:59.966"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:32:59.967" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211016 13:32:59.967" endtime="20211016 13:32:59.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:32:59.967" endtime="20211016 13:32:59.968"/>
</kw>
<status status="PASS" starttime="20211016 13:32:59.965" endtime="20211016 13:32:59.968"/>
</kw>
<status status="PASS" starttime="20211016 13:32:59.965" endtime="20211016 13:32:59.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:32:59.961" endtime="20211016 13:32:59.968"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:32:59.901" endtime="20211016 13:32:59.969"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:03.773" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211016 13:33:03.772" endtime="20211016 13:33:03.773"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:03.774" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:33:03.773" endtime="20211016 13:33:03.774"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:33:03.774" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:33:03.774" endtime="20211016 13:33:03.774"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:33:03.775" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211016 13:33:03.774" endtime="20211016 13:33:03.775"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:33:03.777" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:33:03.777" level="INFO">${version_file_contents} = #Sat Oct 16 13:31:34 UTC 2021
cTime=1634390737820
clusterID=235dd98b-4f39-482c-a5be-3c364dacea7e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211016 13:33:03.776" endtime="20211016 13:33:03.777"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:33:03.778" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211016 13:33:03.777" endtime="20211016 13:33:03.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:03.778" endtime="20211016 13:33:03.779"/>
</kw>
<status status="PASS" starttime="20211016 13:33:03.776" endtime="20211016 13:33:03.779"/>
</kw>
<status status="PASS" starttime="20211016 13:33:03.775" endtime="20211016 13:33:03.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:03.771" endtime="20211016 13:33:03.779"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:33:03.714" endtime="20211016 13:33:03.780"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:07.532" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211016 13:33:07.532" endtime="20211016 13:33:07.533"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:07.533" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:33:07.533" endtime="20211016 13:33:07.533"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:33:07.534" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:33:07.534" endtime="20211016 13:33:07.534"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:33:07.535" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211016 13:33:07.534" endtime="20211016 13:33:07.535"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:33:07.536" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:33:07.537" level="INFO">${version_file_contents} = #Sat Oct 16 13:31:52 UTC 2021
cTime=1634390737860
clusterID=58e83c6c-87f9-41e3-bc03-6cead5eca5ba
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211016 13:33:07.536" endtime="20211016 13:33:07.537"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:33:07.538" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211016 13:33:07.537" endtime="20211016 13:33:07.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:07.538" endtime="20211016 13:33:07.538"/>
</kw>
<status status="PASS" starttime="20211016 13:33:07.535" endtime="20211016 13:33:07.539"/>
</kw>
<status status="PASS" starttime="20211016 13:33:07.535" endtime="20211016 13:33:07.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:07.531" endtime="20211016 13:33:07.539"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:33:07.473" endtime="20211016 13:33:07.540"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:11.381" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211016 13:33:11.380" endtime="20211016 13:33:11.381"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:11.382" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:33:11.382" endtime="20211016 13:33:11.382"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:33:11.383" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:33:11.382" endtime="20211016 13:33:11.383"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:33:11.384" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211016 13:33:11.384" endtime="20211016 13:33:11.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:33:11.386" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:33:11.386" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:57 UTC 2021
cTime=1634390613318
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
omUuid=09b1219b-5fe3-44a8-aeb3-7f710cc9953e
nodeType=OM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81c...</msg>
<status status="PASS" starttime="20211016 13:33:11.385" endtime="20211016 13:33:11.386"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:33:11.387" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:33:11.386" endtime="20211016 13:33:11.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:11.387" endtime="20211016 13:33:11.387"/>
</kw>
<status status="PASS" starttime="20211016 13:33:11.385" endtime="20211016 13:33:11.387"/>
</kw>
<status status="PASS" starttime="20211016 13:33:11.384" endtime="20211016 13:33:11.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:11.380" endtime="20211016 13:33:11.388"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:33:11.315" endtime="20211016 13:33:11.388"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:15.436" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211016 13:33:15.435" endtime="20211016 13:33:15.436"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:15.436" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:33:15.436" endtime="20211016 13:33:15.436"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:33:15.437" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:33:15.437" endtime="20211016 13:33:15.437"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:33:15.438" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211016 13:33:15.437" endtime="20211016 13:33:15.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:33:15.440" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:33:15.440" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:57 UTC 2021
cTime=1634390617270
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
omUuid=d2bea319-daf4-4659-b4a3-19f23f198a03
nodeType=OM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81c...</msg>
<status status="PASS" starttime="20211016 13:33:15.439" endtime="20211016 13:33:15.440"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:33:15.442" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:33:15.440" endtime="20211016 13:33:15.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:15.443" endtime="20211016 13:33:15.444"/>
</kw>
<status status="PASS" starttime="20211016 13:33:15.438" endtime="20211016 13:33:15.444"/>
</kw>
<status status="PASS" starttime="20211016 13:33:15.438" endtime="20211016 13:33:15.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:15.434" endtime="20211016 13:33:15.444"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:33:15.371" endtime="20211016 13:33:15.446"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:19.384" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211016 13:33:19.383" endtime="20211016 13:33:19.384"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:33:19.384" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:33:19.384" endtime="20211016 13:33:19.385"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:33:19.385" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:33:19.385" endtime="20211016 13:33:19.385"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:33:19.386" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211016 13:33:19.386" endtime="20211016 13:33:19.386"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:33:19.388" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:33:19.388" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:57 UTC 2021
cTime=1634390615371
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
omUuid=4480dde9-a85c-4b44-9fd2-a86443adfa5f
nodeType=OM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81c...</msg>
<status status="PASS" starttime="20211016 13:33:19.387" endtime="20211016 13:33:19.388"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:33:19.389" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:33:19.388" endtime="20211016 13:33:19.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:19.389" endtime="20211016 13:33:19.389"/>
</kw>
<status status="PASS" starttime="20211016 13:33:19.387" endtime="20211016 13:33:19.389"/>
</kw>
<status status="PASS" starttime="20211016 13:33:19.386" endtime="20211016 13:33:19.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:19.382" endtime="20211016 13:33:19.390"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:33:19.320" endtime="20211016 13:33:19.391"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:33:23.157" level="INFO">${random} = 79410</msg>
<status status="PASS" starttime="20211016 13:33:23.157" endtime="20211016 13:33:23.158"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:33:23.167" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-79410 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:33:27.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:33:27.615" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:23.161" endtime="20211016 13:33:27.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:33:27.617" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:27.616" endtime="20211016 13:33:27.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:33:27.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:33:27.617" endtime="20211016 13:33:27.618"/>
</kw>
<status status="PASS" starttime="20211016 13:33:23.160" endtime="20211016 13:33:27.618"/>
</kw>
<msg timestamp="20211016 13:33:27.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:33:23.159" endtime="20211016 13:33:27.618"/>
</kw>
<msg timestamp="20211016 13:33:27.619" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:23.158" endtime="20211016 13:33:27.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:27.619" endtime="20211016 13:33:27.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:23.155" endtime="20211016 13:33:27.620"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:33:23.090" endtime="20211016 13:33:27.621"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:33:31.285" level="INFO">${random} = 48025</msg>
<status status="PASS" starttime="20211016 13:33:31.283" endtime="20211016 13:33:31.286"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:33:31.296" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-48025 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:33:35.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:33:35.597" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:31.290" endtime="20211016 13:33:35.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:33:35.599" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:35.598" endtime="20211016 13:33:35.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:33:35.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:33:35.599" endtime="20211016 13:33:35.600"/>
</kw>
<status status="PASS" starttime="20211016 13:33:31.289" endtime="20211016 13:33:35.600"/>
</kw>
<msg timestamp="20211016 13:33:35.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:33:31.289" endtime="20211016 13:33:35.600"/>
</kw>
<msg timestamp="20211016 13:33:35.601" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:33:31.286" endtime="20211016 13:33:35.601"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:33:35.601" endtime="20211016 13:33:35.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:33:31.282" endtime="20211016 13:33:35.602"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:33:31.218" endtime="20211016 13:33:35.603"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211016 13:31:24.978" endtime="20211016 13:31:24.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:31:24.983" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:32:48.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:32:48.444" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211016 13:31:24.980" endtime="20211016 13:32:48.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:32:48.445" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211016 13:32:48.445" endtime="20211016 13:32:48.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:32:48.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:32:48.446" endtime="20211016 13:32:48.447"/>
</kw>
<status status="PASS" starttime="20211016 13:31:24.980" endtime="20211016 13:32:48.447"/>
</kw>
<msg timestamp="20211016 13:32:48.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:31:24.979" endtime="20211016 13:32:48.447"/>
</kw>
<msg timestamp="20211016 13:32:48.447" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211016 13:31:24.979" endtime="20211016 13:32:48.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:32:48.448" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211016 13:32:48.448" endtime="20211016 13:32:48.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:31:24.977" endtime="20211016 13:32:48.448"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211016 13:32:48.450" endtime="20211016 13:32:48.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:32:48.455" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:32:51.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:32:51.977" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211016 13:32:48.453" endtime="20211016 13:32:51.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:32:51.978" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211016 13:32:51.977" endtime="20211016 13:32:51.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:32:51.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:32:51.978" endtime="20211016 13:32:51.979"/>
</kw>
<status status="PASS" starttime="20211016 13:32:48.452" endtime="20211016 13:32:51.979"/>
</kw>
<msg timestamp="20211016 13:32:51.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:32:48.451" endtime="20211016 13:32:51.980"/>
</kw>
<msg timestamp="20211016 13:32:51.980" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211016 13:32:48.451" endtime="20211016 13:32:51.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:32:51.991" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211016 13:32:51.980" endtime="20211016 13:32:51.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:32:48.449" endtime="20211016 13:32:51.991"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211016 13:31:24.920" endtime="20211016 13:32:51.994"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:39.491" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211016 13:26:39.491" endtime="20211016 13:26:39.492"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:39.492" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:39.492" endtime="20211016 13:26:39.492"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:39.493" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:39.493" endtime="20211016 13:26:39.493"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:39.494" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:39.493" endtime="20211016 13:26:39.494"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:39.496" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:39.496" level="INFO">${version_file_contents} = #Sat Oct 16 13:25:23 UTC 2021
cTime=1634390723779
clusterID=3ee659a2-7d13-4b26-8458-3bc189da15d2
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211016 13:26:39.495" endtime="20211016 13:26:39.496"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:39.497" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:39.496" endtime="20211016 13:26:39.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:39.497" endtime="20211016 13:26:39.498"/>
</kw>
<status status="PASS" starttime="20211016 13:26:39.495" endtime="20211016 13:26:39.498"/>
</kw>
<status status="PASS" starttime="20211016 13:26:39.494" endtime="20211016 13:26:39.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:39.489" endtime="20211016 13:26:39.498"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:39.420" endtime="20211016 13:26:39.499"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:43.220" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211016 13:26:43.219" endtime="20211016 13:26:43.220"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:43.220" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:43.220" endtime="20211016 13:26:43.220"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:43.221" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:43.220" endtime="20211016 13:26:43.221"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:43.222" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:43.221" endtime="20211016 13:26:43.222"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:43.223" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:43.224" level="INFO">${version_file_contents} = #Sat Oct 16 13:25:37 UTC 2021
cTime=1634390737820
clusterID=235dd98b-4f39-482c-a5be-3c364dacea7e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211016 13:26:43.223" endtime="20211016 13:26:43.224"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:43.224" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:43.224" endtime="20211016 13:26:43.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:43.225" endtime="20211016 13:26:43.225"/>
</kw>
<status status="PASS" starttime="20211016 13:26:43.222" endtime="20211016 13:26:43.225"/>
</kw>
<status status="PASS" starttime="20211016 13:26:43.222" endtime="20211016 13:26:43.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:43.218" endtime="20211016 13:26:43.225"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:43.152" endtime="20211016 13:26:43.226"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:46.948" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211016 13:26:46.947" endtime="20211016 13:26:46.948"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:46.949" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:46.948" endtime="20211016 13:26:46.949"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:46.949" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:46.949" endtime="20211016 13:26:46.949"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:46.950" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:46.950" endtime="20211016 13:26:46.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:46.951" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:46.951" level="INFO">${version_file_contents} = #Sat Oct 16 13:25:37 UTC 2021
cTime=1634390737860
clusterID=58e83c6c-87f9-41e3-bc03-6cead5eca5ba
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211016 13:26:46.951" endtime="20211016 13:26:46.951"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:46.952" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:46.952" endtime="20211016 13:26:46.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:46.952" endtime="20211016 13:26:46.953"/>
</kw>
<status status="PASS" starttime="20211016 13:26:46.950" endtime="20211016 13:26:46.953"/>
</kw>
<status status="PASS" starttime="20211016 13:26:46.950" endtime="20211016 13:26:46.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:46.946" endtime="20211016 13:26:46.953"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:46.882" endtime="20211016 13:26:46.954"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:50.635" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211016 13:26:50.634" endtime="20211016 13:26:50.635"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:50.636" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:50.636" endtime="20211016 13:26:50.636"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:50.637" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:50.637" endtime="20211016 13:26:50.637"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:50.638" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:50.637" endtime="20211016 13:26:50.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:50.639" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:50.640" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:57 UTC 2021
cTime=1634390613318
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
omUuid=09b1219b-5fe3-44a8-aeb3-7f710cc9953e
nodeType=OM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81c...</msg>
<status status="PASS" starttime="20211016 13:26:50.639" endtime="20211016 13:26:50.640"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:50.641" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:50.640" endtime="20211016 13:26:50.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:50.641" endtime="20211016 13:26:50.641"/>
</kw>
<status status="PASS" starttime="20211016 13:26:50.639" endtime="20211016 13:26:50.641"/>
</kw>
<status status="PASS" starttime="20211016 13:26:50.638" endtime="20211016 13:26:50.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:50.633" endtime="20211016 13:26:50.642"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:50.569" endtime="20211016 13:26:50.643"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:54.717" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211016 13:26:54.716" endtime="20211016 13:26:54.717"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:54.718" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:54.717" endtime="20211016 13:26:54.718"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:54.719" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:54.718" endtime="20211016 13:26:54.719"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:54.719" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:54.719" endtime="20211016 13:26:54.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:54.721" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:54.721" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:57 UTC 2021
cTime=1634390617270
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
omUuid=d2bea319-daf4-4659-b4a3-19f23f198a03
nodeType=OM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81c...</msg>
<status status="PASS" starttime="20211016 13:26:54.721" endtime="20211016 13:26:54.721"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:54.722" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:54.722" endtime="20211016 13:26:54.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:54.722" endtime="20211016 13:26:54.723"/>
</kw>
<status status="PASS" starttime="20211016 13:26:54.720" endtime="20211016 13:26:54.723"/>
</kw>
<status status="PASS" starttime="20211016 13:26:54.720" endtime="20211016 13:26:54.723"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:54.715" endtime="20211016 13:26:54.723"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:54.644" endtime="20211016 13:26:54.727"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:58.679" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211016 13:26:58.678" endtime="20211016 13:26:58.679"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:58.679" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:58.679" endtime="20211016 13:26:58.680"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:58.680" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:58.680" endtime="20211016 13:26:58.680"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:58.681" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:58.680" endtime="20211016 13:26:58.681"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:58.682" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:58.683" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:57 UTC 2021
cTime=1634390615371
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
omUuid=4480dde9-a85c-4b44-9fd2-a86443adfa5f
nodeType=OM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81c...</msg>
<status status="PASS" starttime="20211016 13:26:58.682" endtime="20211016 13:26:58.683"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:58.683" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:58.683" endtime="20211016 13:26:58.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:58.684" endtime="20211016 13:26:58.684"/>
</kw>
<status status="PASS" starttime="20211016 13:26:58.682" endtime="20211016 13:26:58.684"/>
</kw>
<status status="PASS" starttime="20211016 13:26:58.681" endtime="20211016 13:26:58.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:58.677" endtime="20211016 13:26:58.684"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:58.611" endtime="20211016 13:26:58.685"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:27:02.458" level="INFO">${random} = 87179</msg>
<status status="PASS" starttime="20211016 13:27:02.458" endtime="20211016 13:27:02.458"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:27:02.464" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-87179 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:27:07.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:27:07.199" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:02.460" endtime="20211016 13:27:07.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:27:07.201" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:07.200" endtime="20211016 13:27:07.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:27:07.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:27:07.201" endtime="20211016 13:27:07.202"/>
</kw>
<status status="PASS" starttime="20211016 13:27:02.460" endtime="20211016 13:27:07.202"/>
</kw>
<msg timestamp="20211016 13:27:07.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:27:02.459" endtime="20211016 13:27:07.203"/>
</kw>
<msg timestamp="20211016 13:27:07.203" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:02.459" endtime="20211016 13:27:07.203"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:27:07.203" endtime="20211016 13:27:07.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:27:02.457" endtime="20211016 13:27:07.204"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:27:02.393" endtime="20211016 13:27:07.205"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:27:10.981" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:27:14.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:27:14.396" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:10.976" endtime="20211016 13:27:14.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:27:14.397" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:14.396" endtime="20211016 13:27:14.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:27:14.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:27:14.397" endtime="20211016 13:27:14.398"/>
</kw>
<status status="PASS" starttime="20211016 13:27:10.976" endtime="20211016 13:27:14.399"/>
</kw>
<msg timestamp="20211016 13:27:14.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:27:10.975" endtime="20211016 13:27:14.399"/>
</kw>
<msg timestamp="20211016 13:27:14.400" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:10.974" endtime="20211016 13:27:14.400"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:27:14.400" endtime="20211016 13:27:14.400"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:27:14.419" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:27:17.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:27:17.229" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:14.403" endtime="20211016 13:27:17.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:27:17.231" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:17.230" endtime="20211016 13:27:17.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:27:17.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:27:17.231" endtime="20211016 13:27:17.232"/>
</kw>
<status status="PASS" starttime="20211016 13:27:14.402" endtime="20211016 13:27:17.232"/>
</kw>
<msg timestamp="20211016 13:27:17.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:27:14.401" endtime="20211016 13:27:17.232"/>
</kw>
<msg timestamp="20211016 13:27:17.233" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:14.401" endtime="20211016 13:27:17.233"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:27:17.233" endtime="20211016 13:27:17.233"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:27:17.239" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:27:22.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:27:22.594" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:17.235" endtime="20211016 13:27:22.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:27:22.595" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:22.594" endtime="20211016 13:27:22.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:27:22.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:27:22.595" endtime="20211016 13:27:22.595"/>
</kw>
<status status="PASS" starttime="20211016 13:27:17.235" endtime="20211016 13:27:22.596"/>
</kw>
<msg timestamp="20211016 13:27:22.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:27:17.234" endtime="20211016 13:27:22.596"/>
</kw>
<msg timestamp="20211016 13:27:22.596" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:17.234" endtime="20211016 13:27:22.597"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:27:22.597" endtime="20211016 13:27:22.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:27:10.973" endtime="20211016 13:27:22.598"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211016 13:27:10.901" endtime="20211016 13:27:22.599"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 13:27:26.301" level="INFO">${random} = 77156</msg>
<status status="PASS" starttime="20211016 13:27:26.300" endtime="20211016 13:27:26.301"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 13:27:26.308" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-77156 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 13:27:30.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 13:27:30.712" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:26.303" endtime="20211016 13:27:30.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 13:27:30.713" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:30.712" endtime="20211016 13:27:30.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 13:27:30.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 13:27:30.713" endtime="20211016 13:27:30.714"/>
</kw>
<status status="PASS" starttime="20211016 13:27:26.303" endtime="20211016 13:27:30.715"/>
</kw>
<msg timestamp="20211016 13:27:30.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 13:27:26.302" endtime="20211016 13:27:30.715"/>
</kw>
<msg timestamp="20211016 13:27:30.715" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211016 13:27:26.301" endtime="20211016 13:27:30.715"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:27:30.715" endtime="20211016 13:27:30.716"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:27:26.299" endtime="20211016 13:27:30.716"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211016 13:27:26.234" endtime="20211016 13:27:30.718"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:35.678" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211016 13:26:35.677" endtime="20211016 13:26:35.678"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211016 13:26:35.678" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211016 13:26:35.678" endtime="20211016 13:26:35.678"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211016 13:26:35.679" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211016 13:26:35.679" endtime="20211016 13:26:35.679"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211016 13:26:35.680" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211016 13:26:35.679" endtime="20211016 13:26:35.680"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211016 13:26:35.681" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211016 13:26:35.681" level="INFO">${version_file_contents} = #Sat Oct 16 13:23:32 UTC 2021
cTime=1634390612256
clusterID=CID-790527f6-6793-4e29-9cd3-ff733dd55f83
nodeType=SCM
scmUuid=ada2800f-eee8-40ab-b9d5-73c6ed1c81cc
layoutVersion=0
</msg>
<status status="PASS" starttime="20211016 13:26:35.681" endtime="20211016 13:26:35.681"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211016 13:26:35.682" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211016 13:26:35.681" endtime="20211016 13:26:35.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 13:26:35.682" endtime="20211016 13:26:35.683"/>
</kw>
<status status="PASS" starttime="20211016 13:26:35.680" endtime="20211016 13:26:35.683"/>
</kw>
<status status="PASS" starttime="20211016 13:26:35.680" endtime="20211016 13:26:35.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 13:26:35.676" endtime="20211016 13:26:35.683"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211016 13:26:35.604" endtime="20211016 13:26:35.684"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="177977"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
